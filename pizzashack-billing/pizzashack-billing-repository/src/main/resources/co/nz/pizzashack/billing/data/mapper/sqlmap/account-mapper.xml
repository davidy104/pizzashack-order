<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="co.nz.pizzashack.billing.data.mapper.AccountMapper">

	<resultMap id="accountResultMap" type="account">
		<id property="accountId" column="ACCOUNT_ID" />
		<result property="accountNo" column="ACCOUNT_NO" />
		<result property="securityNo" column="SECURITY_NO" />
		<result property="balance" column="BALANCE" />
		<result property="accountType" column="ACCOUNT_TYPE" />
		<result property="createTime" column="CREATE_TIME" />
		<result property="expireDate" column="EXPIRE_DATE" />

		<collection property="histories" ofType="accountTransaction">
			<id property="accountTransId" column="ACCOUNT_TRANS_ID" />
			<result property="accountTransNo" column="ACCOUNT_TRANS_NO" />
			<result property="transType" column="TRANS_TYPE" />
			<result property="transAmount" column="TRANS_AMT" />
			<result property="createTime" column="CREATE_TIME" />
		</collection>
	</resultMap>

	<insert id="saveAccount" parameterType="account">
		<selectKey keyProperty="accountId" resultType="long" order="BEFORE">
			select ACCOUNT_SEQ.nextval from dual
		</selectKey>
		insert into
		T_ACCOUNT(ACCOUNT_ID,ACCOUNT_NO,SECURITY_NO,BALANCE,ACCOUNT_TYPE,CREATE_TIME,EXPIRE_DATE)
		values
		(#{accountId},#{accountNo},#{securityNo},#{balance},#{accountType},#{createTime},#{expireDate})
	</insert>

	<update id="updateAccount" parameterType="account">
		update T_ACCOUNT
		<set>
			<if test="expireDate != null">EXPIRE_DATE=#{expireDate},</if>
			<if test="balance != null">BALANCE=#{balance},</if>
			<if test="accountType != null">ACCOUNT_TYPE=#{accountType},</if>
		</set>
		where ACCOUNT_ID = #{accountId}
	</update>

	<delete id="deleteAccount" parameterType="long">
		delete from T_ACCOUNT
		where
		ACCOUNT_ID = #{accountId}
	</delete>

	<select id="getAccountById" parameterType="long" resultMap="accountResultMap">
		SELECT * FROM T_ACCOUNT
		where
		ACCOUNT_ID = #{accountId}
	</select>

	<select id="getAssociatedAccountTransactions" parameterType="hashmap"
		resultMap="accountResultMap">
		SELECT
		a.*,
		b.ACCOUNT_TRANS_ID,
		b.ACCOUNT_TRANS_NO,
		b.TRANS_TYPE,
		b.TRANS_AMT,
		b.CREATE_TIME
		FROM T_ACCOUNT a left join
		T_ACCOUNT_TRANSACTION b on a.ACCOUNT_ID = b.ACCOUNT_ID
		<where>
			<include refid="searchConditions" />
		</where>
	</select>


	<select id="getAccounts" parameterType="hashmap" resultMap="accountResultMap">
		SELECT * FROM T_ACCOUNT
		<where>
			<include refid="searchConditions" />
		</where>
	</select>


	<sql id="searchConditions">
		<if test="accountId != null and accountId != '' ">
			ACCOUNT_ID = #{accountId}
		</if>

		<if test="accountNo != null and accountNo != '' ">
			AND ACCOUNT_NO = #{accountNo}
		</if>

		<if test="securityNo != null and securityNo != '' ">
			AND SECURITY_NO = #{securityNo}
		</if>

		<if test="accountType != null">
			AND ACCOUNT_TYPE = #{accountType}
		</if>

		<if test="expireDate != null">
			AND EXPIRE_DATE = #{expireDate}
		</if>
	</sql>


</mapper>

Script started on Mon 03 Feb 2014 07:50:37 NZDT
]0;david@david: ~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-webdavid@david:~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web$ mvn test
[INFO] Scanning for projects...
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building pizzashack-distributor-web Maven Webapp 1.0.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ pizzashack-distributor-web ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 32 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ pizzashack-distributor-web ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ pizzashack-distributor-web ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ pizzashack-distributor-web ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] --- maven-surefire-plugin:2.5:test (default-test) @ pizzashack-distributor-web ---
[INFO] Surefire report directory: /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running co.nz.pizzashack.test.OrderProcessTest
2014-02-03 07:50:44,381 [main           ] INFO  GenericWebApplicationContext   - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@5d51981a: startup date [Mon Feb 03 07:50:44 NZDT 2014]; root of context hierarchy
2014-02-03 07:50:44,437 [main           ] INFO  ClassPathBeanDefinitionScanner - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2014-02-03 07:50:45,866 [main           ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [META-INF/cxf/cxf.xml]
2014-02-03 07:50:46,100 [main           ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [META-INF/cxf/cxf-extension-soap.xml]
2014-02-03 07:50:46,126 [main           ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [META-INF/cxf/cxf-servlet.xml]
2014-02-03 07:50:46,147 [main           ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [activitiAppContext.xml]
2014-02-03 07:50:46,373 [main           ] INFO  PropertyPlaceholderConfigurer  - Loading properties file from class path resource [activiti.properties]
2014-02-03 07:50:46,455 [main           ] INFO  redAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2014-02-03 07:50:46,502 [main           ] INFO  GenericWebApplicationContext   - Bean 'infrastructureContextConfiguration' of type [class co.nz.pizzashack.config.InfrastructureContextConfiguration$$EnhancerByCGLIB$$fef3303b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:46,531 [main           ] INFO  MLog                           - MLog clients using log4j logging.
2014-02-03 07:50:46,582 [main           ] INFO  C3P0Registry                   - Initializing c3p0-0.9.1.2 [built 21-May-2007 15:04:56; debug? true; trace: 10]
2014-02-03 07:50:46,625 [main           ] INFO  GenericWebApplicationContext   - Bean 'dataSource' of type [class com.mchange.v2.c3p0.ComboPooledDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:46,712 [main           ] INFO  tainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default'
2014-02-03 07:50:46,798 [main           ] INFO  Version                        - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2014-02-03 07:50:46,802 [main           ] INFO  Version                        - HHH000412: Hibernate Core {4.1.4.Final}
2014-02-03 07:50:46,803 [main           ] INFO  Environment                    - HHH000206: hibernate.properties not found
2014-02-03 07:50:46,804 [main           ] INFO  Environment                    - HHH000021: Bytecode provider name : javassist
2014-02-03 07:50:46,819 [main           ] INFO  Ejb3Configuration              - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2014-02-03 07:50:47,065 [main           ] INFO  ConnectionProviderInitiator    - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2014-02-03 07:50:47,111 [main           ] INFO  AbstractPoolBackedDataSource   - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge1508z1vomu1g4v86ld|60074234, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.h2.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge1508z1vomu1g4v86ld|60074234, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:h2:mem:pizzashackdistributor;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 600, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 2, numHelperThreads -> 3, numThreadsAwaitingCheckoutDefaultUser -> 0, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2014-02-03 07:50:47,243 [main           ] INFO  Dialect                        - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2014-02-03 07:50:47,250 [main           ] INFO  LobCreatorBuilder              - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2014-02-03 07:50:47,257 [main           ] INFO  TransactionFactoryInitiator    - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2014-02-03 07:50:47,260 [main           ] INFO  ASTQueryTranslatorFactory      - HHH000397: Using ASTQueryTranslatorFactory
2014-02-03 07:50:47,284 [main           ] INFO  Version                        - Hibernate Validator 4.2.0.Final
2014-02-03 07:50:47,502 [main           ] INFO  SchemaExport                   - HHH000227: Running hbm2ddl schema export
Hibernate: 
    alter table t_activity_discount_rate 
        drop constraint FKA400C193698FCC4
2014-02-03 07:50:47,513 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_activity_discount_rate drop constraint FKA400C193698FCC4
2014-02-03 07:50:47,513 [main           ] ERROR SchemaExport                   - Table "T_ACTIVITY_DISCOUNT_RATE" not found; SQL statement:

    alter table t_activity_discount_rate 
        drop constraint FKA400C193698FCC4 [42102-160]
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE11193A98D65
2014-02-03 07:50:47,514 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_dept_staff drop constraint FKBC8AE11193A98D65
2014-02-03 07:50:47,514 [main           ] ERROR SchemaExport                   - Table "T_DEPT_STAFF" not found; SQL statement:

    alter table t_dept_staff 
        drop constraint FKBC8AE11193A98D65 [42102-160]
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE111A27DDA4A
2014-02-03 07:50:47,515 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_dept_staff drop constraint FKBC8AE111A27DDA4A
2014-02-03 07:50:47,515 [main           ] ERROR SchemaExport                   - Table "T_DEPT_STAFF" not found; SQL statement:

    alter table t_dept_staff 
        drop constraint FKBC8AE111A27DDA4A [42102-160]
Hibernate: 
    alter table t_order 
        drop constraint FKA0C0C3C3E11F4FCB
2014-02-03 07:50:47,516 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order drop constraint FKA0C0C3C3E11F4FCB
2014-02-03 07:50:47,516 [main           ] ERROR SchemaExport                   - Table "T_ORDER" not found; SQL statement:

    alter table t_order 
        drop constraint FKA0C0C3C3E11F4FCB [42102-160]
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB0883698FCC4
2014-02-03 07:50:47,517 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_pizzashack drop constraint FKE8ACB0883698FCC4
2014-02-03 07:50:47,517 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PIZZASHACK" not found; SQL statement:

    alter table t_order_pizzashack 
        drop constraint FKE8ACB0883698FCC4 [42102-160]
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB088BBCB676E
2014-02-03 07:50:47,518 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_pizzashack drop constraint FKE8ACB088BBCB676E
2014-02-03 07:50:47,518 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PIZZASHACK" not found; SQL statement:

    alter table t_order_pizzashack 
        drop constraint FKE8ACB088BBCB676E [42102-160]
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F33E99148D
2014-02-03 07:50:47,518 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_process drop constraint FK6B8B15F33E99148D
2014-02-03 07:50:47,518 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PROCESS" not found; SQL statement:

    alter table t_order_process 
        drop constraint FK6B8B15F33E99148D [42102-160]
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F3BBCB676E
2014-02-03 07:50:47,519 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_process drop constraint FK6B8B15F3BBCB676E
2014-02-03 07:50:47,519 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PROCESS" not found; SQL statement:

    alter table t_order_process 
        drop constraint FK6B8B15F3BBCB676E [42102-160]
Hibernate: 
    alter table t_order_request_history 
        drop constraint FK5A6B268BBCB676E
2014-02-03 07:50:47,520 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_request_history drop constraint FK5A6B268BBCB676E
2014-02-03 07:50:47,520 [main           ] ERROR SchemaExport                   - Table "T_ORDER_REQUEST_HISTORY" not found; SQL statement:

    alter table t_order_request_history 
        drop constraint FK5A6B268BBCB676E [42102-160]
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CA6130105
2014-02-03 07:50:47,521 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_review_record drop constraint FKFB7A439CA6130105
2014-02-03 07:50:47,521 [main           ] ERROR SchemaExport                   - Table "T_ORDER_REVIEW_RECORD" not found; SQL statement:

    alter table t_order_review_record 
        drop constraint FKFB7A439CA6130105 [42102-160]
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CBBCB676E
2014-02-03 07:50:47,522 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_review_record drop constraint FKFB7A439CBBCB676E
2014-02-03 07:50:47,522 [main           ] ERROR SchemaExport                   - Table "T_ORDER_REVIEW_RECORD" not found; SQL statement:

    alter table t_order_review_record 
        drop constraint FKFB7A439CBBCB676E [42102-160]
Hibernate: 
    alter table t_staff 
        drop constraint FKA0F9FF552DC32C06
2014-02-03 07:50:47,523 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_staff drop constraint FKA0F9FF552DC32C06
2014-02-03 07:50:47,523 [main           ] ERROR SchemaExport                   - Table "T_STAFF" not found; SQL statement:

    alter table t_staff 
        drop constraint FKA0F9FF552DC32C06 [42102-160]
Hibernate: 
    drop table t_activity_discount_rate if exists
Hibernate: 
    drop table t_customer if exists
Hibernate: 
    drop table t_dept if exists
Hibernate: 
    drop table t_dept_staff if exists
Hibernate: 
    drop table t_order if exists
Hibernate: 
    drop table t_order_pizzashack if exists
Hibernate: 
    drop table t_order_process if exists
Hibernate: 
    drop table t_order_request_history if exists
Hibernate: 
    drop table t_order_review_record if exists
Hibernate: 
    drop table t_pizzashack if exists
Hibernate: 
    drop table t_staff if exists
Hibernate: 
    drop table t_user if exists
Hibernate: 
    drop table t_workflow if exists
Hibernate: 
    create table t_activity_discount_rate (
        activity_rate_id bigint generated by default as identity,
        code varchar(255),
        description varchar(255),
        effective_time timestamp,
        expire_time timestamp,
        rate decimal(19,2),
        pizzashack_id bigint,
        primary key (activity_rate_id)
    )
Hibernate: 
    create table t_customer (
        cust_id bigint generated by default as identity,
        address varchar(255),
        credits integer,
        customer_name varchar(255),
        email varchar(255),
        primary key (cust_id)
    )
Hibernate: 
    create table t_dept (
        dept_id bigint generated by default as identity,
        create_date date,
        dept_name varchar(255),
        primary key (dept_id)
    )
Hibernate: 
    create table t_dept_staff (
        staff_dept_id bigint generated by default as identity,
        join_date date,
        dept_id bigint,
        staff_id bigint,
        primary key (staff_dept_id)
    )
Hibernate: 
    create table t_order (
        order_id bigint generated by default as identity,
        deliver_time timestamp,
        order_no varchar(255),
        order_time timestamp,
        payment_remarks varchar(255),
        payment_status integer,
        quantity integer,
        ship_address varchar(255),
        status integer,
        total_price decimal(19,2),
        cust_id bigint,
        primary key (order_id)
    )
Hibernate: 
    create table t_order_pizzashack (
        order_pizza_id bigint generated by default as identity,
        qty integer,
        total_price decimal(19,2),
        order_id bigint,
        pizzashack_id bigint,
        primary key (order_pizza_id)
    )
Hibernate: 
    create table t_order_process (
        order_process_id bigint generated by default as identity,
        active_process_definition_id varchar(255),
        active_process_instance_id varchar(255),
        complete_time time,
        create_time time,
        execution_id varchar(255),
        main_process_definition_id varchar(255),
        main_process_instance_id varchar(255),
        operator_id bigint,
        order_id bigint,
        primary key (order_process_id)
    )
Hibernate: 
    create table t_order_request_history (
        message_id varchar(255) generated by default as identity,
        created_at time,
        processor_name varchar(255),
        order_id bigint,
        primary key (message_id)
    )
Hibernate: 
    create table t_order_review_record (
        review_record_id bigint generated by default as identity,
        content varchar(255),
        create_time time,
        review_status integer,
        order_id bigint,
        reviewer_id bigint,
        primary key (review_record_id)
    )
Hibernate: 
    create table t_pizzashack (
        pizzashack_id bigint generated by default as identity,
        description varchar(255),
        icon varchar(255),
        name varchar(255),
        price decimal(19,2),
        primary key (pizzashack_id)
    )
Hibernate: 
    create table t_staff (
        staff_id bigint generated by default as identity,
        create_date date,
        email varchar(255),
        first_name varchar(255),
        identity varchar(255),
        last_name varchar(255),
        level integer,
        role integer,
        user_id bigint,
        primary key (staff_id)
    )
Hibernate: 
    create table t_user (
        user_id bigint generated by default as identity,
        create_time time,
        password varchar(255),
        user_name varchar(255),
        primary key (user_id)
    )
Hibernate: 
    create table t_workflow (
        workflow_id bigint generated by default as identity,
        category varchar(255),
        create_time time,
        deploy_id varchar(255),
        workflow_name varchar(255),
        process_definition_id varchar(255),
        process_definition_key varchar(255),
        primary key (workflow_id)
    )
Hibernate: 
    alter table t_activity_discount_rate 
        add constraint FKA400C193698FCC4 
        foreign key (pizzashack_id) 
        references t_pizzashack
Hibernate: 
    alter table t_dept_staff 
        add constraint FKBC8AE11193A98D65 
        foreign key (dept_id) 
        references t_dept
Hibernate: 
    alter table t_dept_staff 
        add constraint FKBC8AE111A27DDA4A 
        foreign key (staff_id) 
        references t_staff
Hibernate: 
    alter table t_order 
        add constraint FKA0C0C3C3E11F4FCB 
        foreign key (cust_id) 
        references t_customer
Hibernate: 
    alter table t_order_pizzashack 
        add constraint FKE8ACB0883698FCC4 
        foreign key (pizzashack_id) 
        references t_pizzashack
Hibernate: 
    alter table t_order_pizzashack 
        add constraint FKE8ACB088BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_process 
        add constraint FK6B8B15F33E99148D 
        foreign key (operator_id) 
        references t_user
Hibernate: 
    alter table t_order_process 
        add constraint FK6B8B15F3BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_request_history 
        add constraint FK5A6B268BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_review_record 
        add constraint FKFB7A439CA6130105 
        foreign key (reviewer_id) 
        references t_staff
Hibernate: 
    alter table t_order_review_record 
        add constraint FKFB7A439CBBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_staff 
        add constraint FKA0F9FF552DC32C06 
        foreign key (user_id) 
        references t_user
2014-02-03 07:50:47,557 [main           ] INFO  SchemaExport                   - HHH000230: Schema export complete
2014-02-03 07:50:47,591 [main           ] INFO  GenericWebApplicationContext   - Bean 'entityManagerFactory' of type [class org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,626 [main           ] INFO  GenericWebApplicationContext   - Bean 'entityManagerFactory' of type [class com.sun.proxy.$Proxy44] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,832 [main           ] INFO  GenericWebApplicationContext   - Bean 'cxf' of type [class org.apache.cxf.bus.spring.SpringBus] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,836 [main           ] WARN  OldSpringSupport               - Import of META-INF/cxf/cxf-extension-soap.xml has been deprecated and is unnecessary.
2014-02-03 07:50:47,841 [main           ] INFO  GenericWebApplicationContext   - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerByCGLIB$$813a6ae2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,852 [main           ] INFO  GenericWebApplicationContext   - Bean 'transactionAttributeSource' of type [class org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,859 [main           ] INFO  GenericWebApplicationContext   - Bean 'transactionInterceptor' of type [class org.springframework.transaction.interceptor.TransactionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,864 [main           ] INFO  GenericWebApplicationContext   - Bean 'org.springframework.transaction.config.internalTransactionAdvisor' of type [class org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,873 [main           ] INFO  GenericWebApplicationContext   - Bean 'transactionManager' of type [class org.springframework.orm.jpa.JpaTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,874 [main           ] INFO  GenericWebApplicationContext   - Bean 'camelJdbcIdempotentConfig' of type [class co.nz.pizzashack.config.CamelJdbcIdempotentConfig$$EnhancerByCGLIB$$65c41669] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,890 [main           ] INFO  GenericWebApplicationContext   - Bean 'sqlComponent' of type [class org.apache.camel.component.sql.SqlComponent] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,895 [main           ] INFO  GenericWebApplicationContext   - Bean 'camelCxfConfig' of type [class co.nz.pizzashack.config.CamelCxfConfig$$EnhancerByCGLIB$$8fcc2d8e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,925 [main           ] INFO  GenericWebApplicationContext   - Bean 'billingInboundEndpoint' of type [class org.apache.camel.component.cxf.CxfEndpoint] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,950 [main           ] INFO  GenericWebApplicationContext   - Bean 'billingVariableTransformer' of type [class co.nz.pizzashack.integration.mapping.BillingVariableTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:48,158 [main           ] INFO  GenericWebApplicationContext   - Bean 'billingFormatTransformer' of type [class co.nz.pizzashack.integration.mapping.BillingFormatTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:48,160 [main           ] INFO  GenericWebApplicationContext   - Bean 'billingResponseMergeProcessor' of type [class co.nz.pizzashack.integration.mapping.BillingResponseMergeProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:48,163 [main           ] INFO  GenericWebApplicationContext   - Bean 'sleepBean' of type [class co.nz.pizzashack.integration.utils.SleepBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:48,163 [main           ] INFO  GenericWebApplicationContext   - Bean 'billingProcessRoute' of type [class co.nz.pizzashack.integration.route.BillingProcessRoute] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:48,272 [main           ] INFO  GenericWebApplicationContext   - Bean 'org.activiti.engine.impl.rules.RulesDeployer#39a83e27' of type [class org.activiti.engine.impl.rules.RulesDeployer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:48,274 [main           ] INFO  GenericWebApplicationContext   - Bean 'processEngineConfiguration' of type [class org.activiti.spring.SpringProcessEngineConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:48,277 [main           ] INFO  GenericWebApplicationContext   - Bean 'processEngine' of type [class org.activiti.spring.ProcessEngineFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,330 [main           ] INFO  DbSqlSession                   - performing create on engine with resource org/activiti/db/create/activiti.h2.create.engine.sql
2014-02-03 07:50:49,349 [main           ] INFO  DbSqlSession                   - performing create on history with resource org/activiti/db/create/activiti.h2.create.history.sql
2014-02-03 07:50:49,354 [main           ] INFO  DbSqlSession                   - performing create on identity with resource org/activiti/db/create/activiti.h2.create.identity.sql
2014-02-03 07:50:49,357 [main           ] INFO  ProcessEngineImpl              - ProcessEngine default created
2014-02-03 07:50:49,358 [main           ] INFO  GenericWebApplicationContext   - Bean 'processEngine' of type [class org.activiti.engine.impl.ProcessEngineImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,363 [main           ] INFO  GenericWebApplicationContext   - Bean 'runtimeService' of type [class org.activiti.engine.impl.RuntimeServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,368 [main           ] INFO  GenericWebApplicationContext   - Bean 'taskService' of type [class org.activiti.engine.impl.TaskServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,371 [main           ] INFO  GenericWebApplicationContext   - Bean 'historyService' of type [class org.activiti.engine.impl.HistoryServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,376 [main           ] INFO  GenericWebApplicationContext   - Bean 'repositoryService' of type [class org.activiti.engine.impl.RepositoryServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,379 [main           ] INFO  GenericWebApplicationContext   - Bean 'managementService' of type [class org.activiti.engine.impl.ManagementServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,382 [main           ] INFO  GenericWebApplicationContext   - Bean 'identityService' of type [class org.activiti.engine.impl.IdentityServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,383 [main           ] INFO  GenericWebApplicationContext   - Bean 'activitiFacade' of type [class co.nz.pizzashack.wf.ActivitiFacade] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,387 [main           ] INFO  GenericWebApplicationContext   - Bean 'userConverter' of type [class co.nz.pizzashack.data.converter.UserConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,402 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,402 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,405 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,414 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#1' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,470 [main           ] INFO  GenericWebApplicationContext   - Bean 'workflowRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,508 [main           ] INFO  GenericWebApplicationContext   - Bean 'workflowRepository' of type [class com.sun.proxy.$Proxy55] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,512 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#2' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,512 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#2' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,513 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#2' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,513 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#3' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,522 [main           ] INFO  GenericWebApplicationContext   - Bean 'pizzashackRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,534 [main           ] INFO  GenericWebApplicationContext   - Bean 'pizzashackRepository' of type [class com.sun.proxy.$Proxy58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,536 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#4' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,536 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#4' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,537 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#4' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,537 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#5' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,545 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderProcessRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,551 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderProcessRepository' of type [class com.sun.proxy.$Proxy59] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,553 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#6' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,553 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#6' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,553 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#6' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,554 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#7' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,562 [main           ] INFO  GenericWebApplicationContext   - Bean 'userRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,566 [main           ] INFO  GenericWebApplicationContext   - Bean 'userRepository' of type [class com.sun.proxy.$Proxy60] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,568 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#8' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,568 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#8' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,569 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#8' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,569 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#9' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,577 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,581 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderRepository' of type [class com.sun.proxy.$Proxy61] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,608 [main           ] INFO  GenericWebApplicationContext   - Bean 'customerConverter' of type [class co.nz.pizzashack.data.converter.CustomerConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,613 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderDetailConverter' of type [class co.nz.pizzashack.data.converter.OrderDetailConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,613 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderConverter' of type [class co.nz.pizzashack.data.converter.OrderConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,614 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderProcessConverter' of type [class co.nz.pizzashack.data.converter.OrderProcessConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,618 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#10' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,618 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#10' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,619 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#10' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,619 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#11' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,627 [main           ] INFO  GenericWebApplicationContext   - Bean 'departmentRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,632 [main           ] INFO  GenericWebApplicationContext   - Bean 'departmentRepository' of type [class com.sun.proxy.$Proxy62] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,633 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderProcessAccessor' of type [class co.nz.pizzashack.ds.OrderProcessAccessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,638 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderReviewRecordConverter' of type [class co.nz.pizzashack.data.converter.OrderReviewRecordConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,639 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#12' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,639 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#12' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,639 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#12' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,640 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#13' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,647 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderReviewRecordRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,652 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderReviewRecordRepository' of type [class com.sun.proxy.$Proxy63] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,654 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#14' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,655 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#14' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,655 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#14' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,656 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#15' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,663 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderPizzashackRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,667 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderPizzashackRepository' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,670 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#16' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,670 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#16' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,670 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#16' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,670 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#17' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,677 [main           ] INFO  GenericWebApplicationContext   - Bean 'customerRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,681 [main           ] INFO  GenericWebApplicationContext   - Bean 'customerRepository' of type [class com.sun.proxy.$Proxy65] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,682 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderProcessDSImpl' of type [class co.nz.pizzashack.ds.OrderProcessDSImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,688 [main           ] INFO  GenericWebApplicationContext   - Bean 'billingInboundProcessor' of type [class co.nz.pizzashack.integration.processor.BillingInboundProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,689 [main           ] INFO  GenericWebApplicationContext   - Bean 'billingInboundWsRoute' of type [class co.nz.pizzashack.integration.route.BillingInboundWsRoute] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,707 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderJdbcMessageIdRepository' of type [class org.apache.camel.processor.idempotent.jdbc.JdbcMessageIdRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,713 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderProcessFormatTransformer' of type [class co.nz.pizzashack.integration.mapping.OrderProcessFormatTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,721 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#18' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,721 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#18' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,721 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#18' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,722 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#19' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,728 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderRequestHistoryRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,732 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderRequestHistoryRepository' of type [class com.sun.proxy.$Proxy70] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,734 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderRequestProcessor' of type [class co.nz.pizzashack.integration.processor.OrderRequestProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,736 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderDuplicatedReqProcessor' of type [class co.nz.pizzashack.integration.processor.OrderDuplicatedReqProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,737 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderProcessRoute' of type [class co.nz.pizzashack.integration.route.OrderProcessRoute] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,784 [main           ] INFO  GenericWebApplicationContext   - Bean 'activeMQConnectionFactory' of type [class org.apache.activemq.ActiveMQConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,945 [main           ] INFO  GenericWebApplicationContext   - Bean 'pooledConnectionFactory' of type [class org.apache.activemq.pool.PooledConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,965 [main           ] INFO  GenericWebApplicationContext   - Bean 'jmsTransactionManager' of type [class org.springframework.jms.connection.JmsTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,976 [main           ] INFO  GenericWebApplicationContext   - Bean 'jmsComponent' of type [class org.apache.camel.component.jms.JmsComponent] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,981 [main           ] INFO  GenericWebApplicationContext   - Bean 'camelSpringConfig' of type [class co.nz.pizzashack.config.CamelSpringConfig$$EnhancerByCGLIB$$cf4c2422] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:50,018 [main           ] INFO  DefaultListableBeanFactory     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@126e4ecd: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,applicationConfiguration,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,viewConfiguration,webMvcContextConfiguration,logoutController,loginController,indexController,userController,adminIndexController,departmentController,orderController,orderQueryController,staffController,billingProcessRespTransformer,billingProcessReqTransformer,orderProcessFormatTransformer,billingVariableTransformer,billingResponseMergeProcessor,billingFormatTransformer,billingInboundProcessor,orderDuplicatedReqProcessor,orderRequestProcessor,billingProcessRoute,billingInboundWsRoute,orderProcessRoute,sleepBean,pizzashackAPIImpl,camelSpringConfig,camelJdbcIdempotentConfig,camelCxfConfig,orderProcessDSImpl,customerDSImpl,workflowDSImpl,pizzashackDSImpl,userDSImpl,orderProcessAccessor,orderProcessQueryDSImpl,staffDSImpl,orderDSImpl,departmentDSImpl,initialDataConfig,pizzashackCaculator,emailExecutionListener,endExecutionListener,caculationMergeExecutionListener,orderMainTransitionExecutionListener,toManualReviewExecutionListener,outOfBillingProcessExecutionListener,outOfCoreProcessExecutionListener,billingRespExecutionListener,customerConverter,orderProcessConverter,staffConverter,userConverter,departmentConverter,workflowConverter,orderReviewRecordConverter,orderConverter,activityDiscountRateConverter,orderDetailConverter,pizzashackDataInitialConfiguration,pizzashackItemBuilder,infrastructureContextConfiguration,activitiFacade,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0,org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0,customerRepository,orderRequestHistoryRepository,workflowRepository,orderRepository,pizzashackRepository,orderProcessRepository,activityDiscountRateRepository,departmentRepository,orderPizzashackRepository,staffDepartmentRepository,staffRepository,userRepository,orderReviewRecordRepository,viewResolver,messageSource,org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration,requestMappingHandlerMapping,mvcContentNegotiationManager,viewControllerHandlerMapping,beanNameHandlerMapping,resourceHandlerMapping,defaultServletHandlerMapping,requestMappingHandlerAdapter,mvcConversionService,mvcValidator,httpRequestHandlerAdapter,simpleControllerHandlerAdapter,handlerExceptionResolver,sessionAttributeProcessor,localeChangeInterceptor,localeResolver,simpleMappingExceptionResolver,multipartResolver,activeMQConnectionFactory,pooledConnectionFactory,jmsComponent,jmsTransactionManager,camelBeanPostProcessor,camelContext,custThreadPoolProfile,sqlComponent,orderJdbcMessageIdRepository,billingInboundEndpoint,loggingOutInterceptor,cxf,org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor,org.apache.cxf.bus.spring.Jsr250BeanPostProcessor,org.apache.cxf.bus.spring.BusExtensionPostProcessor,org.apache.cxf.binding.soap.SoapBindingFactory,org.apache.cxf.binding.soap.SoapTransportFactory,org.apache.cxf.binding.soap.customEditorConfigurer,setupWorkflowData,setupData,org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration,org.springframework.transaction.config.internalTransactionAdvisor,transactionAttributeSource,transactionInterceptor,dataSource,transactionManager,entityManagerFactory,placeholderConfig,processEngineConfiguration,processEngine,repositoryService,runtimeService,taskService,historyService,managementService,identityService]; root of factory hierarchy
2014-02-03 07:50:50,321 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/logout],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LogoutController.logout(javax.servlet.http.HttpSession)
2014-02-03 07:50:50,322 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/login],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LoginController.handleLogin(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws co.nz.pizzashack.AuthenticationException
2014-02-03 07:50:50,322 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/login],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LoginController.showLoginPage(org.springframework.ui.Model)
2014-02-03 07:50:50,322 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/index],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.IndexController.index(org.springframework.ui.Model,co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-02-03 07:50:50,324 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/createUser],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public co.nz.pizzashack.data.dto.UserDto co.nz.pizzashack.controller.UserController.createUser(co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-02-03 07:50:50,324 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/{userId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.deleteUser(java.lang.Long) throws java.lang.Exception
2014-02-03 07:50:50,324 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,324 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/{userId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,324 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/update/{userId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,325 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/check/{userName}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.checkUser(java.lang.String) throws java.lang.Exception
2014-02-03 07:50:50,325 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,325 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/search],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.search(co.nz.pizzashack.data.dto.UserDto,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,325 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.create(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 07:50:50,325 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.update(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 07:50:50,326 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/adminIndex],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.AdminIndexController.index(org.springframework.ui.Model,co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-02-03 07:50:50,327 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,327 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/{deptId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,327 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/update/{deptId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,328 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/selectdepts],methods=[GET],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.util.Set<co.nz.pizzashack.data.dto.DepartmentDto> co.nz.pizzashack.controller.DepartmentController.select() throws java.lang.Exception
2014-02-03 07:50:50,328 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,328 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/{deptId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.delete(java.lang.Long) throws java.lang.Exception
2014-02-03 07:50:50,328 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/search],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.search(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,328 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.create(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 07:50:50,329 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.update(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 07:50:50,329 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/{orderProcessId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.showOrderProcess(java.lang.Long,org.springframework.ui.Model,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-02-03 07:50:50,329 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/claimReview/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.claimReviewTask(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-02-03 07:50:50,330 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/review],methods=[POST],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.reviewOrder(co.nz.pizzashack.data.dto.OrderReviewRecordDto,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-02-03 07:50:50,330 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderQuery/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderQueryController.show(java.lang.String,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,330 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderQuery/showHistory/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.util.Set<co.nz.pizzashack.data.dto.ProcessActivityDto> co.nz.pizzashack.controller.OrderQueryController.showHistory(java.lang.String) throws java.lang.Exception
2014-02-03 07:50:50,331 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderQuery/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderQueryController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,332 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,332 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/{staffId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,332 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/update/{staffId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,332 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,332 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/{staffId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.delete(java.lang.Long) throws java.lang.Exception
2014-02-03 07:50:50,332 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.create(co.nz.pizzashack.data.dto.StaffDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 07:50:50,333 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.update(co.nz.pizzashack.data.dto.StaffDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 07:50:50,365 [main           ] INFO  SimpleUrlHandlerMapping        - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2014-02-03 07:50:50,368 [main           ] INFO  SimpleUrlHandlerMapping        - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler]
2014-02-03 07:50:50,838 [main           ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) is starting
2014-02-03 07:50:50,839 [main           ] INFO  ManagedManagementStrategy      - JMX is enabled
2014-02-03 07:50:50,930 [main           ] INFO  DefaultTypeConverter           - Loaded 194 type converters
Hibernate: 
    SELECT
        1 
    FROM
        T_ORDER_REQUEST_HISTORY 
    WHERE
        1 = 0
2014-02-03 07:50:51,204 [main           ] INFO  SpringCamelContext             - StreamCaching is not in use. If using streams then its recommended to enable stream caching. See more details at http://camel.apache.org/stream-caching.html
2014-02-03 07:50:51,431 [main           ] INFO  BusApplicationContext          - Refreshing org.apache.cxf.bus.spring.BusApplicationContext@74e5d63d: startup date [Mon Feb 03 07:50:51 NZDT 2014]; parent: org.springframework.web.context.support.GenericWebApplicationContext@5d51981a
2014-02-03 07:50:51,455 [main           ] INFO  DefaultListableBeanFactory     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2cac4d10: defining beans []; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@126e4ecd
2014-02-03 07:50:51,467 [main           ] INFO  ReflectionServiceFactoryBean   - Creating Service {http://ws.integration.pizzashack.nz.co/}BillingProcessWebServicesService from class co.nz.pizzashack.integration.ws.BillingProcessWebServices
2014-02-03 07:50:51,824 [main           ] INFO  ServerImpl                     - Setting the server's publish address to be /billingWs
2014-02-03 07:50:51,845 [main           ] INFO  SpringCamelContext             - Route: activitiBillingProcess started and consuming from: Endpoint[activiti://orderBillingProcess:billingIntegration?copyVariablesToBodyAsMap=true]
2014-02-03 07:50:51,846 [main           ] INFO  SpringCamelContext             - Route: direct:billingIntegration started and consuming from: Endpoint[direct://billingIntegration]
2014-02-03 07:50:51,847 [main           ] INFO  SpringCamelContext             - Route: direct:receiveBillingQueue started and consuming from: Endpoint[direct://receiveBillingQueue]
2014-02-03 07:50:51,848 [main           ] INFO  SpringCamelContext             - Route: route1 started and consuming from: Endpoint[direct://doBillingIntegration]
2014-02-03 07:50:51,856 [main           ] INFO  SpringCamelContext             - Route: orderProcessRoute started and consuming from: Endpoint[jms://queue:pizzashackOrderInbound]
2014-02-03 07:50:51,857 [main           ] INFO  SpringCamelContext             - Route: direct:orderDuplicatedProcess started and consuming from: Endpoint[direct://orderDuplicatedProcess]
2014-02-03 07:50:51,859 [main           ] INFO  SpringCamelContext             - Route: direct:orderRegularProcess started and consuming from: Endpoint[direct://orderRegularProcess]
2014-02-03 07:50:51,861 [main           ] INFO  SpringCamelContext             - Route: cxf:bean:billingInboundEndpoint started and consuming from: Endpoint[cxf://bean:billingInboundEndpoint]
2014-02-03 07:50:51,869 [main           ] INFO  SpringCamelContext             - Total 8 routes, of which 8 is started.
2014-02-03 07:50:51,870 [main           ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) started in 1.032 seconds
2014-02-03 07:50:51,884 [main           ] INFO  WorkflowInitialDataSetup       - initialize start:{}
2014-02-03 07:50:51,891 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 07:50:51,891 [main           ] INFO  UserDSImpl                     - usernamedavid
2014-02-03 07:50:51,892 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 07:50:52,077 [main           ] INFO  UserDSImpl                     - userId:1 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 07:50:52,158 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@3c8f706e[userId=1,username=david,password=MTIzNDU2,createTime=Mon Feb 03 07:50:52 NZDT 2014]
2014-02-03 07:50:52,203 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-02 06:50:52)
2014-02-03 07:50:52,204 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-02 06:50:52)
2014-02-03 07:50:52,206 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 07:50:52,206 [main           ] INFO  UserDSImpl                     - usernamebrad
2014-02-03 07:50:52,206 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 07:50:52,209 [main           ] INFO  UserDSImpl                     - userId:2 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 07:50:52,211 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@5eb59e97[userId=2,username=brad,password=MTIzNDU2,createTime=Mon Feb 03 07:50:52 NZDT 2014]
2014-02-03 07:50:52,211 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-02 06:50:52)
2014-02-03 07:50:52,211 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-02 06:50:52)
2014-02-03 07:50:52,212 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 07:50:52,212 [main           ] INFO  UserDSImpl                     - usernamejohn
2014-02-03 07:50:52,212 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 07:50:52,215 [main           ] INFO  UserDSImpl                     - userId:3 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 07:50:52,217 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@13e7ba33[userId=3,username=john,password=MTIzNDU2,createTime=Mon Feb 03 07:50:52 NZDT 2014]
2014-02-03 07:50:52,218 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-02 06:50:52)
2014-02-03 07:50:52,218 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-02 06:50:52)
2014-02-03 07:50:52,218 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 07:50:52,218 [main           ] INFO  UserDSImpl                     - usernamegeneral
2014-02-03 07:50:52,218 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 07:50:52,221 [main           ] INFO  UserDSImpl                     - userId:4 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 07:50:52,223 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@7dc03fd8[userId=4,username=general,password=MTIzNDU2,createTime=Mon Feb 03 07:50:52 NZDT 2014]
2014-02-03 07:50:52,224 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:2014-02-02 06:50:52)
2014-02-03 07:50:52,224 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:2014-02-02 06:50:52)
2014-02-03 07:50:52,235 [main           ] INFO  DepartmentDSImpl               - createDepartment start:co.nz.pizzashack.data.dto.DepartmentDto(deptId:null, deptName:Order manager, createDate:null) 
Hibernate: 
    select
        department0_.dept_id as dept1_8_,
        department0_.create_date as create2_8_,
        department0_.dept_name as dept3_8_ 
    from
        t_dept department0_ 
    where
        department0_.dept_name=? limit ?
2014-02-03 07:50:52,241 [main           ] INFO  DepartmentConverter            - toModel start:{} co.nz.pizzashack.data.dto.DepartmentDto(deptId:null, deptName:Order manager, createDate:null)
2014-02-03 07:50:52,246 [main           ] INFO  DepartmentConverter            - toModel end:{} co.nz.pizzashack.data.model.DepartmentModel@1efa4cb3[deptId=<null>,deptName=Order manager,createDate=<null>,staffDepartments=<null>]
Hibernate: 
    insert 
    into
        t_dept
        (dept_id, create_date, dept_name) 
    values
        (null, ?, ?)
Hibernate: 
    insert 
    into
        ACT_ID_GROUP
        (ID_, REV_, NAME_, TYPE_)     
    values
        (       ?,       1,        ?,       ?     )
2014-02-03 07:50:52,255 [main           ] INFO  DepartmentConverter            - toDto start:{} co.nz.pizzashack.data.model.DepartmentModel@1efa4cb3[deptId=1,deptName=Order manager,createDate=Mon Feb 03 07:50:52 NZDT 2014,staffDepartments=<null>]
2014-02-03 07:50:52,257 [main           ] INFO  DepartmentConverter            - toDto end:{} co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02)
2014-02-03 07:50:52,257 [main           ] INFO  DepartmentDSImpl               - createDepartment end:co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02) 
2014-02-03 07:50:52,258 [main           ] INFO  WorkflowInitialDataSetup       - department:co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02) 
2014-02-03 07:50:52,279 [main           ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:null, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-02 06:50:52)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-02-03 07:50:52,285 [main           ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:null, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-02 06:50:52))
2014-02-03 07:50:52,304 [main           ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@5e4cc024[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@daabda[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-02-03 07:50:52,355 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@5e4cc024[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@daabda[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=Mon Feb 03 07:50:52 NZDT 2014] 
2014-02-03 07:50:52,355 [main           ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = ?
Hibernate: 
    update
        ACT_GE_PROPERTY      
    SET
        REV_ = ?,
        VALUE_ = ?      
    where
        NAME_ = ?       
        and REV_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-02-03 07:50:52,375 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-02-03 07:50:52,384 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@5e4cc024[staffId=1,individual=co.nz.pizzashack.data.model.IndividualModel@daabda[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=Mon Feb 03 07:50:52 NZDT 2014]
2014-02-03 07:50:52,392 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:1, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-02-03 07:50:52,393 [main           ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:1, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-02-03 07:50:52,396 [main           ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:null, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-02 06:50:52)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-02-03 07:50:52,399 [main           ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:null, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-02 06:50:52))
2014-02-03 07:50:52,399 [main           ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@5ae125e0[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@737dc3bc[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-02-03 07:50:52,409 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@5ae125e0[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@737dc3bc[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=Mon Feb 03 07:50:52 NZDT 2014] 
2014-02-03 07:50:52,409 [main           ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-02-03 07:50:52,414 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-02-03 07:50:52,418 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@5ae125e0[staffId=2,individual=co.nz.pizzashack.data.model.IndividualModel@737dc3bc[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=Mon Feb 03 07:50:52 NZDT 2014]
2014-02-03 07:50:52,420 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:2, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-02-03 07:50:52,420 [main           ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:2, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-02-03 07:50:52,421 [main           ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:null, departments:null, role:manager, level:junior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-02 06:50:52)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-02-03 07:50:52,424 [main           ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:null, departments:null, role:manager, level:junior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-02 06:50:52))
2014-02-03 07:50:52,424 [main           ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@433c1fa0[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@204063dc[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-02-03 07:50:52,430 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@433c1fa0[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@204063dc[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=Mon Feb 03 07:50:52 NZDT 2014] 
2014-02-03 07:50:52,430 [main           ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-02-03 07:50:52,435 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-02-03 07:50:52,438 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@433c1fa0[staffId=3,individual=co.nz.pizzashack.data.model.IndividualModel@204063dc[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=Mon Feb 03 07:50:52 NZDT 2014]
2014-02-03 07:50:52,439 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:3, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:null, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-02-03 07:50:52,439 [main           ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:3, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:null, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-02-03 07:50:52,440 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-02-03 07:50:52,448 [main           ] INFO  BpmnDeployer                   - Processing resource bpmn/OrderBillingProcess.bpmn20.xml
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 117: Having multiple <family> in <alias> isn't supported and may not work as expected
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-02-03 07:50:53,086 [main           ] INFO  RulesDeployer                  - Processing resource bpmn/OrderBillingProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:50:53,098 [main           ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderBillingProcess:1:7]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-02-03 07:50:53,103 [main           ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@531dfd87[wfId=1,name=orderBillingProcess,deployId=4,processDefinitionKey=orderBillingProcess,processDefinitionId=orderBillingProcess:1:7,createTime=Mon Feb 03 07:50:52 NZDT 2014]
2014-02-03 07:50:53,114 [main           ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-02-02 06:50:52)
2014-02-03 07:50:53,114 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-02-02 06:50:52)
2014-02-03 07:50:53,115 [main           ] INFO  WorkflowInitialDataSetup       - deploy billing process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-02-02 06:50:52) 
2014-02-03 07:50:53,115 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-02-03 07:50:53,117 [main           ] INFO  BpmnDeployer                   - Processing resource bpmn/OrdercoreProcess.bpmn20.xml
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-02-03 07:50:53,256 [main           ] INFO  RulesDeployer                  - Processing resource bpmn/OrdercoreProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:50:53,263 [main           ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderCoreProcess:1:11]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-02-03 07:50:53,264 [main           ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@76a410c6[wfId=2,name=orderCoreProcess,deployId=8,processDefinitionKey=orderCoreProcess,processDefinitionId=orderCoreProcess:1:11,createTime=Mon Feb 03 07:50:53 NZDT 2014]
2014-02-03 07:50:53,264 [main           ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-02-02 06:50:53)
2014-02-03 07:50:53,265 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-02-02 06:50:53)
2014-02-03 07:50:53,265 [main           ] INFO  WorkflowInitialDataSetup       - deploy core process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-02-02 06:50:53) 
2014-02-03 07:50:53,265 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-02-03 07:50:53,267 [main           ] INFO  BpmnDeployer                   - Processing resource bpmn/OrderlocalProcess.bpmn20.xml
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-02-03 07:50:53,466 [main           ] INFO  RulesDeployer                  - Processing resource bpmn/OrderlocalProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:50:53,476 [main           ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderlocalProcess:1:15]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-02-03 07:50:53,478 [main           ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@180ee49d[wfId=3,name=orderlocalProcess,deployId=12,processDefinitionKey=orderlocalProcess,processDefinitionId=orderlocalProcess:1:15,createTime=Mon Feb 03 07:50:53 NZDT 2014]
2014-02-03 07:50:53,478 [main           ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 06:50:53)
2014-02-03 07:50:53,478 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 06:50:53)
2014-02-03 07:50:53,479 [main           ] INFO  WorkflowInitialDataSetup       - deploy local main process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 06:50:53) 
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
2014-02-03 07:50:53,526 [main           ] INFO  StaffDSImpl                    - getStaffsByName start:David
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.first_name=? 
        and staffmodel0_.last_name=?
2014-02-03 07:50:53,538 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@54d8248e[staffId=1,individual=co.nz.pizzashack.data.model.IndividualModel@485144ce[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=2014-02-03]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:50:53,548 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@78bf5692[userId=1,username=david,password=MTIzNDU2,createTime=07:50:52]
2014-02-03 07:50:53,553 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:1969-12-31 07:50:52)
Hibernate: 
    select
        staffdepar0_.staff_id as staff4_12_1_,
        staffdepar0_.staff_dept_id as staff1_1_,
        staffdepar0_.staff_dept_id as staff1_1_0_,
        staffdepar0_.join_date as join2_1_0_,
        staffdepar0_.dept_id as dept3_1_0_,
        staffdepar0_.staff_id as staff4_1_0_ 
    from
        t_dept_staff staffdepar0_ 
    where
        staffdepar0_.staff_id=?
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        staffdepar0_.dept_id as dept3_8_1_,
        staffdepar0_.staff_dept_id as staff1_1_,
        staffdepar0_.staff_dept_id as staff1_1_0_,
        staffdepar0_.join_date as join2_1_0_,
        staffdepar0_.dept_id as dept3_1_0_,
        staffdepar0_.staff_id as staff4_1_0_ 
    from
        t_dept_staff staffdepar0_ 
    where
        staffdepar0_.dept_id=?
2014-02-03 07:50:53,574 [main           ] INFO  DepartmentConverter            - toDto start:{} co.nz.pizzashack.data.model.DepartmentModel@7b5dc3af[deptId=1,deptName=Order manager,createDate=2014-02-03,staffDepartments=[co.nz.pizzashack.data.model.StaffDepartmentModel@29dd2d9e[staffDeptId=1,joinDate=2014-02-03], co.nz.pizzashack.data.model.StaffDepartmentModel@5d61b8d5[staffDeptId=2,joinDate=2014-02-03], co.nz.pizzashack.data.model.StaffDepartmentModel@16d712fd[staffDeptId=3,joinDate=2014-02-03]]]
2014-02-03 07:50:53,578 [main           ] INFO  DepartmentConverter            - toDto end:{} co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02)
2014-02-03 07:50:53,587 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:1, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:2014-02-02, departments:[co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02)], role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:1969-12-31 07:50:52))
2014-02-03 07:50:53,588 [main           ] INFO  StaffDSImpl                    - getStaffsByName end:{}
2014-02-03 07:50:53,589 [main           ] INFO  StaffDSImpl                    - getStaffsByName start:Brad
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.first_name=? 
        and staffmodel0_.last_name=?
2014-02-03 07:50:53,591 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@691b3a73[staffId=2,individual=co.nz.pizzashack.data.model.IndividualModel@16b8fbd8[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=2014-02-03]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:50:53,593 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@440ff6a3[userId=2,username=brad,password=MTIzNDU2,createTime=07:50:52]
2014-02-03 07:50:53,594 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:1969-12-31 07:50:52)
Hibernate: 
    select
        staffdepar0_.staff_id as staff4_12_1_,
        staffdepar0_.staff_dept_id as staff1_1_,
        staffdepar0_.staff_dept_id as staff1_1_0_,
        staffdepar0_.join_date as join2_1_0_,
        staffdepar0_.dept_id as dept3_1_0_,
        staffdepar0_.staff_id as staff4_1_0_ 
    from
        t_dept_staff staffdepar0_ 
    where
        staffdepar0_.staff_id=?
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        staffdepar0_.dept_id as dept3_8_1_,
        staffdepar0_.staff_dept_id as staff1_1_,
        staffdepar0_.staff_dept_id as staff1_1_0_,
        staffdepar0_.join_date as join2_1_0_,
        staffdepar0_.dept_id as dept3_1_0_,
        staffdepar0_.staff_id as staff4_1_0_ 
    from
        t_dept_staff staffdepar0_ 
    where
        staffdepar0_.dept_id=?
2014-02-03 07:50:53,599 [main           ] INFO  DepartmentConverter            - toDto start:{} co.nz.pizzashack.data.model.DepartmentModel@7bbf88b7[deptId=1,deptName=Order manager,createDate=2014-02-03,staffDepartments=[co.nz.pizzashack.data.model.StaffDepartmentModel@20ff2c0f[staffDeptId=1,joinDate=2014-02-03], co.nz.pizzashack.data.model.StaffDepartmentModel@3db1c910[staffDeptId=2,joinDate=2014-02-03], co.nz.pizzashack.data.model.StaffDepartmentModel@50a59db5[staffDeptId=3,joinDate=2014-02-03]]]
2014-02-03 07:50:53,599 [main           ] INFO  DepartmentConverter            - toDto end:{} co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02)
2014-02-03 07:50:53,599 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:2, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:2014-02-02, departments:[co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02)], role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:1969-12-31 07:50:52))
2014-02-03 07:50:53,599 [main           ] INFO  StaffDSImpl                    - getStaffsByName end:{}
2014-02-03 07:50:53,600 [main           ] INFO  UserDSImpl                     - getUserByName start:general
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
2014-02-03 07:50:53,602 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@4f8374de[userId=4,username=general,password=MTIzNDU2,createTime=07:50:52]
2014-02-03 07:50:53,602 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)
2014-02-03 07:50:53,602 [main           ] INFO  UserDSImpl                     - getUserByName end:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)
2014-02-03 07:50:53,603 [main           ] INFO  OrderProcessTest               - department:co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02) 
2014-02-03 07:50:53,603 [main           ] INFO  OrderProcessDSImpl             - startOrderProcess start:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.process_definition_key=? 
        and workflowmo0_.category=? limit ?
Hibernate: 
    insert 
    into
        t_order
        (order_id, cust_id, deliver_time, order_no, order_time, payment_remarks, payment_status, quantity, ship_address, status, total_price) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:50:53,617 [main           ] INFO  ActivitiFacade                 - startProcessInstance start:{}
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
2014-02-03 07:50:53,635 [main           ] INFO  ActivitiFacade                 - startProcessInstance end:{}
Hibernate: 
    insert 
    into
        t_order_process
        (order_process_id, active_process_definition_id, active_process_instance_id, complete_time, create_time, execution_id, main_process_definition_id, main_process_instance_id, operator_id, order_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2014-02-03 07:50:53,641 [main           ] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@147fc87f[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=Mon Feb 03 07:50:53 NZDT 2014,completeTime=<null>]
2014-02-03 07:50:53,661 [main           ] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@48212cab[orderId=1,orderNo=e7c2107e-165f-4062-aa63-eb787563eba2,quantity=<null>,status=0,paymentStatus=0,deliverTime=<null>,totalPrice=<null>,orderTime=Mon Feb 03 07:50:53 NZDT 2014]
2014-02-03 07:50:53,669 [main           ] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null)
2014-02-03 07:50:53,670 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@1fd9600d[userId=4,username=general,password=MTIzNDU2,createTime=07:50:52]
2014-02-03 07:50:53,670 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)
2014-02-03 07:50:53,677 [main           ] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 06:50:53, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52))
2014-02-03 07:50:53,678 [main           ] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 06:50:53, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
2014-02-03 07:50:53,689 [main           ] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 07:50:53,689 [main           ] INFO  ActivitiFacade                 - executionId: 16, processDefinitionId: orderlocalProcess:1:15
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 07:50:53,714 [main           ] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:50:53,721 [main           ] INFO  OrderProcessAccessor           - assign operator[4] to task[Data entry]
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    insert 
    into
        ACT_RU_IDENTITYLINK
        (ID_, REV_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_, PROC_DEF_ID_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_IDENTITYLINK
        (ID_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_)     
    values
        (?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_TASK      
    SET
        REV_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        PRIORITY_ = ?,
        CREATE_TIME_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        DELEGATION_ = ?,
        EXECUTION_ID_ = ?,
        PROC_DEF_ID_ = ?,
        DESCRIPTION_ = ?,
        DUE_DATE_ = ?,
        SUSPENSION_STATE_ = ?      
    where
        ID_= ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
2014-02-03 07:50:53,742 [main           ] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 06:50:53, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
2014-02-03 07:50:53,743 [main           ] INFO  OrderProcessDSImpl             - startOrderProcess end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 06:50:53, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52))
2014-02-03 07:50:53,745 [main           ] INFO  OrderProcessTest               - after start instance:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 06:50:53, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
2014-02-03 07:50:53,750 [main           ] INFO  OrderProcessTest               - order pazza type size:2 
2014-02-03 07:50:53,750 [main           ] INFO  OrderProcessDSImpl             - dataEntry start:e7c2107e-165f-4062-aa63-eb787563eba2
2014-02-03 07:50:53,750 [main           ] INFO  OrderProcessDSImpl             - getOrderProcessByOrderNo start************************************
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 07:50:53,759 [main           ] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@87d93f3[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=07:50:53,completeTime=<null>] 
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_,
        customermo0_.address as address2_,
        customermo0_.credits as credits2_,
        customermo0_.customer_name as customer4_2_,
        customermo0_.email as email2_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.email=? limit ?
2014-02-03 07:50:53,764 [main           ] INFO  CustomerConverter              - toModel start:{} co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:david, customerEmail:david.yuan124@gmail.com, level:null)
2014-02-03 07:50:53,768 [main           ] INFO  CustomerConverter              - toModel end:{} co.nz.pizzashack.data.model.CustomerModel@1a44875f[custId=<null>,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
Hibernate: 
    insert 
    into
        t_customer
        (cust_id, address, credits, customer_name, email) 
    values
        (null, ?, ?, ?, ?)
2014-02-03 07:50:53,771 [main           ] INFO  OrderProcessDSImpl             - orderDetailsSet size:2 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
2014-02-03 07:50:53,778 [main           ] INFO  OrderProcessDSImpl             - added orderPizzashackModel:co.nz.pizzashack.data.model.OrderPizzashackModel@6c3129d6[orderPizzashackId=<null>,totalPrice=0,qty=4] 
Hibernate: 
    insert 
    into
        t_order_pizzashack
        (order_pizza_id, order_id, pizzashack_id, qty, total_price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
2014-02-03 07:50:53,785 [main           ] INFO  OrderProcessDSImpl             - added orderPizzashackModel:co.nz.pizzashack.data.model.OrderPizzashackModel@36a2c086[orderPizzashackId=<null>,totalPrice=0,qty=10] 
Hibernate: 
    insert 
    into
        t_order_pizzashack
        (order_pizza_id, order_id, pizzashack_id, qty, total_price) 
    values
        (null, ?, ?, ?, ?)
2014-02-03 07:50:53,786 [main           ] INFO  OrderProcessDSImpl             - after add detailsDto, size in model:2 
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        E.BUSINESS_KEY_ = ?                                                                                 
        and RES.PROC_DEF_ID_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                    
        and RES.ASSIGNEE_ = ?                                                                        
        and E.BUSINESS_KEY_ = ?
2014-02-03 07:50:53,791 [main           ] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@87d93f3[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=07:50:53,completeTime=<null>]
2014-02-03 07:50:53,795 [main           ] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@682ae058[orderId=1,orderNo=e7c2107e-165f-4062-aa63-eb787563eba2,quantity=14,status=0,paymentStatus=0,deliverTime=<null>,totalPrice=0,orderTime=2014-02-03 07:50:53.609]
2014-02-03 07:50:53,798 [main           ] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@1a44875f[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 07:50:53,804 [main           ] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-02-03 07:50:53,808 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@6c3129d6[orderPizzashackId=1,totalPrice=0,qty=4]
2014-02-03 07:50:53,815 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0)
2014-02-03 07:50:53,815 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@36a2c086[orderPizzashackId=2,totalPrice=0,qty=10]
2014-02-03 07:50:53,815 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)
2014-02-03 07:50:53,816 [main           ] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:14, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:50:53,817 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@71be9f1[userId=4,username=general,password=MTIzNDU2,createTime=07:50:52]
2014-02-03 07:50:53,818 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)
2014-02-03 07:50:53,818 [main           ] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:14, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:50:53, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52))
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        PARENT_TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE 
    where
        TASK_ID_ =     ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
2014-02-03 07:50:53,843 [main           ] INFO  ainTransitionExecutionListener - orderMainUserTaskExecutionListener start:{} 
2014-02-03 07:50:53,844 [main           ] INFO  ainTransitionExecutionListener - nextActivity id:orderCoreCallactivity
2014-02-03 07:50:53,844 [main           ] INFO  ainTransitionExecutionListener - nextActivity name:Core process
2014-02-03 07:50:53,844 [main           ] INFO  ainTransitionExecutionListener - nextActivity type:callActivity
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
start calculate: co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:14, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:50:53, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52))
2014-02-03 07:50:54,050 [main           ] INFO  PizzashackCaculator            - caculate start:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:14, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null) 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 07:50:54,056 [main           ] INFO  PizzashackCaculator            - caculate end:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null) 
after calculation: co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null)
2014-02-03 07:50:54,057 [main           ] INFO  culationMergeExecutionListener - CaculationMergeExecutionListener start
2014-02-03 07:50:54,057 [main           ] INFO  culationMergeExecutionListener - after calculation, orderProcess:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:50:53, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
2014-02-03 07:50:54,058 [main           ] INFO  OrderProcessAccessor           - merge calculation result
2014-02-03 07:50:54,058 [main           ] INFO  OrderProcessAccessor           - total price:390.00 
2014-02-03 07:50:54,058 [main           ] INFO  OrderProcessAccessor           - qty:14 
2014-02-03 07:50:54,058 [main           ] INFO  OrderProcessAccessor           - orderDetailsSet.size():2
2014-02-03 07:50:54,058 [main           ] INFO  culationMergeExecutionListener - CaculationMergeExecutionListener end
total qty: 14
after autoreview: 2
reviewTransBean: co.nz.pizzashack.data.dto.OrderReviewRecordDto(reviewRecordId:null, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, content:order number is more than 10 but less than 30, reviewResult:pending, createTime:2014-02-02 06:50:54, reviewer:null)
2014-02-03 07:50:54,113 [main           ] INFO  oManualReviewExecutionListener - ToManualReviewExecutionListener start:{} 
2014-02-03 07:50:54,113 [main           ] INFO  oManualReviewExecutionListener - eventName:take 
2014-02-03 07:50:54,113 [main           ] INFO  oManualReviewExecutionListener - activitiProcessDefinitionId:orderCoreProcess:1:11
2014-02-03 07:50:54,113 [main           ] INFO  oManualReviewExecutionListener - activitiProcesssInstanceId:30
2014-02-03 07:50:54,113 [main           ] INFO  oManualReviewExecutionListener - get orderReviewRecord:co.nz.pizzashack.data.dto.OrderReviewRecordDto(reviewRecordId:null, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, content:order number is more than 10 but less than 30, reviewResult:pending, createTime:2014-02-02 06:50:54, reviewer:null) 
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_IDENTITYLINK
        (ID_, REV_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_, PROC_DEF_ID_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_IDENTITYLINK
        (ID_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_)     
    values
        (?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_EXECUTION 
    set
        REV_ = ?,
        BUSINESS_KEY_ = ?,
        PROC_DEF_ID_ = ?,
        ACT_ID_ = ?,
        IS_ACTIVE_ = ?,
        IS_CONCURRENT_ = ?,
        IS_SCOPE_ = ?,
        IS_EVENT_SCOPE_ = ?,
        PARENT_ID_ = ?,
        SUPER_EXEC_ = ?,
        SUSPENSION_STATE_ = ?,
        CACHED_ENT_STATE_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_TASK 
    where
        ID_ = ? 
        and REV_ = ?
2014-02-03 07:50:54,150 [main           ] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-02-03 07:50:54,159 [main           ] INFO  OrderProcessAccessor           - get OrderProcessDto from flow:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
2014-02-03 07:50:54,159 [main           ] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 07:50:54,159 [main           ] INFO  ActivitiFacade                 - executionId: 30, processDefinitionId: orderCoreProcess:1:11
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 07:50:54,163 [main           ] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:50:54,166 [main           ] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo start:{}
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 07:50:54,167 [main           ] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo end:{}
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
2014-02-03 07:50:54,168 [main           ] INFO  OrderProcessAccessor           - after merge orderProcessModel:co.nz.pizzashack.data.model.OrderProcessModel@87d93f3[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=07:50:53,completeTime=<null>] 
2014-02-03 07:50:54,169 [main           ] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
2014-02-03 07:50:54,170 [main           ] INFO  OrderProcessDSImpl             - dataEntry end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52))
Hibernate: 
    update
        t_order_process 
    set
        active_process_definition_id=?,
        active_process_instance_id=?,
        complete_time=?,
        create_time=?,
        execution_id=?,
        main_process_definition_id=?,
        main_process_instance_id=?,
        operator_id=?,
        order_id=? 
    where
        order_process_id=?
Hibernate: 
    update
        t_order 
    set
        cust_id=?,
        deliver_time=?,
        order_no=?,
        order_time=?,
        payment_remarks=?,
        payment_status=?,
        quantity=?,
        ship_address=?,
        status=?,
        total_price=? 
    where
        order_id=?
Hibernate: 
    update
        t_order_pizzashack 
    set
        order_id=?,
        pizzashack_id=?,
        qty=?,
        total_price=? 
    where
        order_pizza_id=?
Hibernate: 
    update
        t_order_pizzashack 
    set
        order_id=?,
        pizzashack_id=?,
        qty=?,
        total_price=? 
    where
        order_pizza_id=?
2014-02-03 07:50:54,180 [main           ] INFO  OrderProcessTest               - **************************after dataentry:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
2014-02-03 07:50:54,181 [main           ] INFO  OrderProcessQueryDSImpl        - getOrderProcessDtoById start:1 
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_0_,
        orderproce0_.active_process_definition_id as active2_10_0_,
        orderproce0_.active_process_instance_id as active3_10_0_,
        orderproce0_.complete_time as complete4_10_0_,
        orderproce0_.create_time as create5_10_0_,
        orderproce0_.execution_id as execution6_10_0_,
        orderproce0_.main_process_definition_id as main7_10_0_,
        orderproce0_.main_process_instance_id as main8_10_0_,
        orderproce0_.operator_id as operator9_10_0_,
        orderproce0_.order_id as order10_10_0_ 
    from
        t_order_process orderproce0_ 
    where
        orderproce0_.order_process_id=?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 07:50:54,183 [main           ] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@344b14bd[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=07:50:53,completeTime=<null>]
2014-02-03 07:50:54,184 [main           ] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@1d011fbb[orderId=1,orderNo=e7c2107e-165f-4062-aa63-eb787563eba2,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 07:50:53.609]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 07:50:54,191 [main           ] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@44d630aa[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 07:50:54,191 [main           ] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 07:50:54,192 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@531ea33b[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:50:54,196 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 07:50:54,196 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@6ea11f[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:50:54,198 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 07:50:54,198 [main           ] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:50:54,199 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@397a0709[userId=4,username=general,password=MTIzNDU2,createTime=07:50:52]
2014-02-03 07:50:54,200 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)
2014-02-03 07:50:54,200 [main           ] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52))
2014-02-03 07:50:54,200 [main           ] INFO  OrderProcessQueryDSImpl        - buildPendingActivity start:{}
2014-02-03 07:50:54,200 [main           ] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 07:50:54,200 [main           ] INFO  ActivitiFacade                 - executionId: 30, processDefinitionId: orderCoreProcess:1:11
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:50:54,206 [main           ] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo start:{}
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 07:50:54,208 [main           ] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo end:{}
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
2014-02-03 07:50:54,209 [main           ] INFO  OrderProcessQueryDSImpl        - buildPendingActivity end:{}
2014-02-03 07:50:54,210 [main           ] INFO  OrderProcessQueryDSImpl        - getOrderProcessDtoById end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:null), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
2014-02-03 07:50:54,210 [main           ] INFO  OrderProcessTest               - -------------------------------ProcessActivityDto:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:null)
2014-02-03 07:50:54,211 [main           ] INFO  OrderDSImpl                    - getOrderByOrderNo start:e7c2107e-165f-4062-aa63-eb787563eba2 
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_,
        ordermodel0_.cust_id as cust11_4_,
        ordermodel0_.deliver_time as deliver2_4_,
        ordermodel0_.order_no as order3_4_,
        ordermodel0_.order_time as order4_4_,
        ordermodel0_.payment_remarks as payment5_4_,
        ordermodel0_.payment_status as payment6_4_,
        ordermodel0_.quantity as quantity4_,
        ordermodel0_.ship_address as ship8_4_,
        ordermodel0_.status as status4_,
        ordermodel0_.total_price as total10_4_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_no=? limit ?
2014-02-03 07:50:54,216 [main           ] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@463c76f[orderId=1,orderNo=e7c2107e-165f-4062-aa63-eb787563eba2,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 07:50:53.609]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 07:50:54,217 [main           ] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@1048abfb[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 07:50:54,218 [main           ] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 07:50:54,219 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@36e8db37[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:50:54,220 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 07:50:54,221 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@7190140a[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:50:54,222 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 07:50:54,222 [main           ] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null)
2014-02-03 07:50:54,222 [main           ] INFO  OrderDSImpl                    - getOrderByOrderNo end:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null) 
2014-02-03 07:50:54,223 [main           ] INFO  OrderProcessTest               - after dataentry latest order from db:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null) 
2014-02-03 07:50:54,223 [main           ] INFO  OrderProcessDSImpl             - claimOrderReviewTask start:e7c2107e-165f-4062-aa63-eb787563eba2
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 07:50:54,226 [main           ] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@7d8f4292[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=07:50:53,completeTime=<null>] 
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        E.BUSINESS_KEY_ = ?                                                                                 
        and RES.PROC_DEF_ID_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:50:54,229 [main           ] INFO  OrderProcessDSImpl             - taskId:57
2014-02-03 07:50:54,229 [main           ] INFO  OrderProcessDSImpl             - taskName:Manual underwriting
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                    
        and RES.ASSIGNEE_ = ?                                                                        
        and E.BUSINESS_KEY_ = ?
Hibernate: 
    select
        g.*     
    from
        ACT_ID_GROUP g,
        ACT_ID_MEMBERSHIP membership     
    where
        g.ID_ = membership.GROUP_ID_       
        and membership.USER_ID_ = ?
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                   
    inner join
        ACT_RU_IDENTITYLINK I 
            on I.TASK_ID_ = RES.ID_                                 
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                                                                                                                                                              
        and RES.ASSIGNEE_ is null         
        and I.TYPE_ = 'candidate'         
        and          (
            I.USER_ID_ = ?                                             
            or                                   I.GROUP_ID_ IN             (
                ?             
            )                    
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    insert 
    into
        ACT_RU_IDENTITYLINK
        (ID_, REV_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_, PROC_DEF_ID_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_IDENTITYLINK
        (ID_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_)     
    values
        (?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_COMMENT
        (ID_, TYPE_, TIME_, USER_ID_, TASK_ID_, PROC_INST_ID_, ACTION_, MESSAGE_, FULL_MSG_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_TASK      
    SET
        REV_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        PRIORITY_ = ?,
        CREATE_TIME_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        DELEGATION_ = ?,
        EXECUTION_ID_ = ?,
        PROC_DEF_ID_ = ?,
        DESCRIPTION_ = ?,
        DUE_DATE_ = ?,
        SUSPENSION_STATE_ = ?      
    where
        ID_= ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
2014-02-03 07:50:54,250 [main           ] INFO  OrderProcessDSImpl             - claimOrderReviewTask end:{}
2014-02-03 07:50:54,251 [main           ] INFO  OrderProcessTest               - after david claim task:{} 
2014-02-03 07:50:54,251 [main           ] INFO  OrderProcessQueryDSImpl        - getOrderProcessDtoById start:1 
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_0_,
        orderproce0_.active_process_definition_id as active2_10_0_,
        orderproce0_.active_process_instance_id as active3_10_0_,
        orderproce0_.complete_time as complete4_10_0_,
        orderproce0_.create_time as create5_10_0_,
        orderproce0_.execution_id as execution6_10_0_,
        orderproce0_.main_process_definition_id as main7_10_0_,
        orderproce0_.main_process_instance_id as main8_10_0_,
        orderproce0_.operator_id as operator9_10_0_,
        orderproce0_.order_id as order10_10_0_ 
    from
        t_order_process orderproce0_ 
    where
        orderproce0_.order_process_id=?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 07:50:54,253 [main           ] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@2a2b4348[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=07:50:53,completeTime=<null>]
2014-02-03 07:50:54,254 [main           ] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@163690a7[orderId=1,orderNo=e7c2107e-165f-4062-aa63-eb787563eba2,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 07:50:53.609]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 07:50:54,255 [main           ] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@696b4f5e[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 07:50:54,255 [main           ] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 07:50:54,257 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@7c7e6992[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:50:54,258 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 07:50:54,258 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@b8508c8[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:50:54,258 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 07:50:54,259 [main           ] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:50:54,259 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@34fea8be[userId=4,username=general,password=MTIzNDU2,createTime=07:50:52]
2014-02-03 07:50:54,260 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)
2014-02-03 07:50:54,260 [main           ] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52))
2014-02-03 07:50:54,260 [main           ] INFO  OrderProcessQueryDSImpl        - buildPendingActivity start:{}
2014-02-03 07:50:54,260 [main           ] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 07:50:54,260 [main           ] INFO  ActivitiFacade                 - executionId: 30, processDefinitionId: orderCoreProcess:1:11
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:50:54,267 [main           ] INFO  OrderProcessQueryDSImpl        - buildPendingActivity end:{}
2014-02-03 07:50:54,268 [main           ] INFO  OrderProcessQueryDSImpl        - getOrderProcessDtoById end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:david, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:null), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
2014-02-03 07:50:54,268 [main           ] INFO  OrderProcessTest               - -------------------------------ProcessActivityDto:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:david, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:null)
2014-02-03 07:50:54,269 [main           ] INFO  OrderProcessDSImpl             - manualOrderReview start:co.nz.pizzashack.data.dto.OrderReviewRecordDto(reviewRecordId:null, orderNo:null, content:review passed, reviewResult:accept, createTime:null, reviewer:co.nz.pizzashack.data.dto.StaffDto(staffId:1, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:2014-02-02, departments:[co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02)], role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:1969-12-31 07:50:52))) 
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 07:50:54,271 [main           ] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@5decee06[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=07:50:53,completeTime=<null>] 
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:50:54,271 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@71d6e165[userId=4,username=general,password=MTIzNDU2,createTime=07:50:52]
2014-02-03 07:50:54,272 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)
2014-02-03 07:50:54,272 [main           ] INFO  OrderProcessDSImpl             - doManualOrderReview start:{} 
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        E.BUSINESS_KEY_ = ?                                                                                 
        and RES.PROC_DEF_ID_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                    
        and RES.ASSIGNEE_ = ?                                                                        
        and E.BUSINESS_KEY_ = ?
2014-02-03 07:50:54,275 [main           ] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@5decee06[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=07:50:53,completeTime=<null>]
2014-02-03 07:50:54,276 [main           ] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@7a79584a[orderId=1,orderNo=e7c2107e-165f-4062-aa63-eb787563eba2,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 07:50:53.609]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 07:50:54,277 [main           ] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@3e92885f[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 07:50:54,277 [main           ] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 07:50:54,278 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@4e1176c6[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:50:54,278 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 07:50:54,278 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@5c8ce934[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:50:54,279 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 07:50:54,279 [main           ] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null)
2014-02-03 07:50:54,279 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@71d6e165[userId=4,username=general,password=MTIzNDU2,createTime=07:50:52]
2014-02-03 07:50:54,280 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)
2014-02-03 07:50:54,280 [main           ] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52))
2014-02-03 07:50:54,280 [main           ] INFO  OrderProcessDSImpl             - before manual review flow:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52))
2014-02-03 07:50:54,280 [main           ] INFO  OrderProcessDSImpl             - reviewResult:accept 
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        PARENT_TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE 
    where
        TASK_ID_ =     ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_PROCINST 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RU_JOB J     
    where
        J.EXECUTION_ID_ = ?
Hibernate: 
    select
        *      
    from
        ACT_RU_EVENT_SUBSCR     
    where
        (
            EXECUTION_ID_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
2014-02-03 07:50:54,308 [main           ] INFO  OfCoreProcessExecutionListener - after core process, orderProcess:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-02-03 07:50:54,311 [main           ] INFO  ainTransitionExecutionListener - orderMainUserTaskExecutionListener start:{} 
2014-02-03 07:50:54,311 [main           ] INFO  ainTransitionExecutionListener - nextActivity id:billingEntry
2014-02-03 07:50:54,311 [main           ] INFO  ainTransitionExecutionListener - nextActivity name:Billing fill in
2014-02-03 07:50:54,311 [main           ] INFO  ainTransitionExecutionListener - nextActivity type:userTask
2014-02-03 07:50:54,311 [main           ] INFO  ainTransitionExecutionListener - order status:pendingOnBilling 
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    update
        ACT_HI_PROCINST 
    set
        PROC_DEF_ID_ = ?,
        BUSINESS_KEY_ = ?,
        START_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        END_ACT_ID_ = ?,
        DELETE_REASON_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_VARINST 
    set
        REV_ = ?,
        BYTEARRAY_ID_ = ?,
        DOUBLE_ = ?,
        LONG_ = ?,
        TEXT_ = ?,
        TEXT2_ = ?,
        VAR_TYPE_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_EXECUTION 
    set
        REV_ = ?,
        BUSINESS_KEY_ = ?,
        PROC_DEF_ID_ = ?,
        ACT_ID_ = ?,
        IS_ACTIVE_ = ?,
        IS_CONCURRENT_ = ?,
        IS_SCOPE_ = ?,
        IS_EVENT_SCOPE_ = ?,
        PARENT_ID_ = ?,
        SUPER_EXEC_ = ?,
        SUSPENSION_STATE_ = ?,
        CACHED_ENT_STATE_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_IDENTITYLINK 
    where
        ID_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_TASK 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_IDENTITYLINK 
    where
        ID_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ? 
        and REV_ = ?
2014-02-03 07:50:54,337 [main           ] INFO  OrderProcessDSImpl             - doManualOrderReview end:{} 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:50:54,339 [main           ] INFO  OrderProcessDSImpl             - process pending, build pending Activity:{} 
2014-02-03 07:50:54,339 [main           ] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:50:53, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-02-03 07:50:54,344 [main           ] INFO  OrderProcessAccessor           - get OrderProcessDto from flow:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:50:53, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
2014-02-03 07:50:54,344 [main           ] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 07:50:54,344 [main           ] INFO  ActivitiFacade                 - executionId: 16, processDefinitionId: orderlocalProcess:1:15
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 07:50:54,348 [main           ] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:50:54,350 [main           ] INFO  OrderProcessAccessor           - assign operator[4] to task[Billing fill in]
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_TASK      
    SET
        REV_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        PRIORITY_ = ?,
        CREATE_TIME_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        DELEGATION_ = ?,
        EXECUTION_ID_ = ?,
        PROC_DEF_ID_ = ?,
        DESCRIPTION_ = ?,
        DUE_DATE_ = ?,
        SUSPENSION_STATE_ = ?      
    where
        ID_= ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
2014-02-03 07:50:54,358 [main           ] INFO  OrderProcessAccessor           - after merge orderProcessModel:co.nz.pizzashack.data.model.OrderProcessModel@5decee06[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=07:50:53,completeTime=<null>] 
2014-02-03 07:50:54,359 [main           ] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:50:53, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
2014-02-03 07:50:54,361 [main           ] INFO  OrderProcessDSImpl             - manualOrderReview end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:50:53, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
Hibernate: 
    update
        t_order_process 
    set
        active_process_definition_id=?,
        active_process_instance_id=?,
        complete_time=?,
        create_time=?,
        execution_id=?,
        main_process_definition_id=?,
        main_process_instance_id=?,
        operator_id=?,
        order_id=? 
    where
        order_process_id=?
Hibernate: 
    update
        t_order 
    set
        cust_id=?,
        deliver_time=?,
        order_no=?,
        order_time=?,
        payment_remarks=?,
        payment_status=?,
        quantity=?,
        ship_address=?,
        status=?,
        total_price=? 
    where
        order_id=?
2014-02-03 07:50:54,363 [main           ] INFO  OrderProcessTest               - after manul underwriting pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]) 
2014-02-03 07:50:54,364 [main           ] INFO  OrderDSImpl                    - getOrderByOrderNo start:e7c2107e-165f-4062-aa63-eb787563eba2 
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_,
        ordermodel0_.cust_id as cust11_4_,
        ordermodel0_.deliver_time as deliver2_4_,
        ordermodel0_.order_no as order3_4_,
        ordermodel0_.order_time as order4_4_,
        ordermodel0_.payment_remarks as payment5_4_,
        ordermodel0_.payment_status as payment6_4_,
        ordermodel0_.quantity as quantity4_,
        ordermodel0_.ship_address as ship8_4_,
        ordermodel0_.status as status4_,
        ordermodel0_.total_price as total10_4_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_no=? limit ?
2014-02-03 07:50:54,365 [main           ] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@653f93de[orderId=1,orderNo=e7c2107e-165f-4062-aa63-eb787563eba2,quantity=14,status=5,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 07:50:53.609]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 07:50:54,366 [main           ] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@4f996743[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 07:50:54,366 [main           ] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 07:50:54,367 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@3bc69f88[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:50:54,367 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 07:50:54,367 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@6d13b860[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:50:54,368 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 07:50:54,368 [main           ] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:50:53, deliverTime:null)
2014-02-03 07:50:54,368 [main           ] INFO  OrderDSImpl                    - getOrderByOrderNo end:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:50:53, deliverTime:null) 
2014-02-03 07:50:54,369 [main           ] INFO  OrderProcessTest               - ********************after review:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:50:53, deliverTime:null) 
Tests run: 4, Failures: 0, Errors: 0, Skipped: 3, Time elapsed: 10.341 sec

Results :

Tests run: 4, Failures: 0, Errors: 0, Skipped: 3

2014-02-03 07:50:54,422 [Thread-8       ] INFO  GenericWebApplicationContext   - Closing org.springframework.web.context.support.GenericWebApplicationContext@5d51981a: startup date [Mon Feb 03 07:50:44 NZDT 2014]; root of context hierarchy
2014-02-03 07:50:54,423 [Thread-8       ] INFO  BusApplicationContext          - Closing org.apache.cxf.bus.spring.BusApplicationContext@74e5d63d: startup date [Mon Feb 03 07:50:51 NZDT 2014]; parent: org.springframework.web.context.support.GenericWebApplicationContext@5d51981a
2014-02-03 07:50:54,423 [Thread-8       ] INFO  DefaultListableBeanFactory     - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2cac4d10: defining beans []; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@126e4ecd
2014-02-03 07:50:54,424 [Thread-8       ] INFO  DefaultListableBeanFactory     - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@126e4ecd: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,applicationConfiguration,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,viewConfiguration,webMvcContextConfiguration,logoutController,loginController,indexController,userController,adminIndexController,departmentController,orderController,orderQueryController,staffController,billingProcessRespTransformer,billingProcessReqTransformer,orderProcessFormatTransformer,billingVariableTransformer,billingResponseMergeProcessor,billingFormatTransformer,billingInboundProcessor,orderDuplicatedReqProcessor,orderRequestProcessor,billingProcessRoute,billingInboundWsRoute,orderProcessRoute,sleepBean,pizzashackAPIImpl,camelSpringConfig,camelJdbcIdempotentConfig,camelCxfConfig,orderProcessDSImpl,customerDSImpl,workflowDSImpl,pizzashackDSImpl,userDSImpl,orderProcessAccessor,orderProcessQueryDSImpl,staffDSImpl,orderDSImpl,departmentDSImpl,initialDataConfig,pizzashackCaculator,emailExecutionListener,endExecutionListener,caculationMergeExecutionListener,orderMainTransitionExecutionListener,toManualReviewExecutionListener,outOfBillingProcessExecutionListener,outOfCoreProcessExecutionListener,billingRespExecutionListener,customerConverter,orderProcessConverter,staffConverter,userConverter,departmentConverter,workflowConverter,orderReviewRecordConverter,orderConverter,activityDiscountRateConverter,orderDetailConverter,pizzashackDataInitialConfiguration,pizzashackItemBuilder,infrastructureContextConfiguration,activitiFacade,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0,org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0,customerRepository,orderRequestHistoryRepository,workflowRepository,orderRepository,pizzashackRepository,orderProcessRepository,activityDiscountRateRepository,departmentRepository,orderPizzashackRepository,staffDepartmentRepository,staffRepository,userRepository,orderReviewRecordRepository,viewResolver,messageSource,org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration,requestMappingHandlerMapping,mvcContentNegotiationManager,viewControllerHandlerMapping,beanNameHandlerMapping,resourceHandlerMapping,defaultServletHandlerMapping,requestMappingHandlerAdapter,mvcConversionService,mvcValidator,httpRequestHandlerAdapter,simpleControllerHandlerAdapter,handlerExceptionResolver,sessionAttributeProcessor,localeChangeInterceptor,localeResolver,simpleMappingExceptionResolver,multipartResolver,activeMQConnectionFactory,pooledConnectionFactory,jmsComponent,jmsTransactionManager,camelBeanPostProcessor,camelContext,custThreadPoolProfile,sqlComponent,orderJdbcMessageIdRepository,billingInboundEndpoint,loggingOutInterceptor,cxf,org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor,org.apache.cxf.bus.spring.Jsr250BeanPostProcessor,org.apache.cxf.bus.spring.BusExtensionPostProcessor,org.apache.cxf.binding.soap.SoapBindingFactory,org.apache.cxf.binding.soap.SoapTransportFactory,org.apache.cxf.binding.soap.customEditorConfigurer,setupWorkflowData,setupData,org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration,org.springframework.transaction.config.internalTransactionAdvisor,transactionAttributeSource,transactionInterceptor,dataSource,transactionManager,entityManagerFactory,placeholderConfig,processEngineConfiguration,processEngine,repositoryService,runtimeService,taskService,historyService,managementService,identityService]; root of factory hierarchy
2014-02-03 07:50:54,424 [Thread-8       ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) is shutting down
2014-02-03 07:50:54,425 [Thread-8       ] INFO  DefaultShutdownStrategy        - Starting to graceful shutdown 8 routes (timeout 300 seconds)
2014-02-03 07:50:54,429 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: cxf:bean:billingInboundEndpoint shutdown complete, was consuming from: Endpoint[cxf://bean:billingInboundEndpoint]
2014-02-03 07:50:54,429 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:orderRegularProcess shutdown complete, was consuming from: Endpoint[direct://orderRegularProcess]
2014-02-03 07:50:54,429 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:orderDuplicatedProcess shutdown complete, was consuming from: Endpoint[direct://orderDuplicatedProcess]
2014-02-03 07:50:54,913 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: orderProcessRoute shutdown complete, was consuming from: Endpoint[jms://queue:pizzashackOrderInbound]
2014-02-03 07:50:54,913 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: route1 shutdown complete, was consuming from: Endpoint[direct://doBillingIntegration]
2014-02-03 07:50:54,913 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:receiveBillingQueue shutdown complete, was consuming from: Endpoint[direct://receiveBillingQueue]
2014-02-03 07:50:54,913 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:billingIntegration shutdown complete, was consuming from: Endpoint[direct://billingIntegration]
2014-02-03 07:50:54,914 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: activitiBillingProcess shutdown complete, was consuming from: Endpoint[activiti://orderBillingProcess:billingIntegration?copyVariablesToBodyAsMap=true]
2014-02-03 07:50:54,914 [Thread-8       ] INFO  DefaultShutdownStrategy        - Graceful shutdown of 8 routes completed in 0 seconds
2014-02-03 07:50:54,916 [Thread-8       ] INFO  CxfEndpoint                    - shutdown the bus ... org.apache.cxf.bus.spring.SpringBus@18554581
2014-02-03 07:50:54,933 [Thread-8       ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) uptime 4.096 seconds
2014-02-03 07:50:54,934 [Thread-8       ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) is shutdown in 0.509 seconds
2014-02-03 07:50:54,955 [Thread-8       ] INFO  tainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2014-02-03 07:50:54,956 [Thread-8       ] INFO  SchemaExport                   - HHH000227: Running hbm2ddl schema export
Hibernate: 
    alter table t_activity_discount_rate 
        drop constraint FKA400C193698FCC4
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE11193A98D65
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE111A27DDA4A
Hibernate: 
    alter table t_order 
        drop constraint FKA0C0C3C3E11F4FCB
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB0883698FCC4
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB088BBCB676E
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F33E99148D
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F3BBCB676E
Hibernate: 
    alter table t_order_request_history 
        drop constraint FK5A6B268BBCB676E
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CA6130105
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CBBCB676E
Hibernate: 
    alter table t_staff 
        drop constraint FKA0F9FF552DC32C06
Hibernate: 
    drop table t_activity_discount_rate if exists
Hibernate: 
    drop table t_customer if exists
Hibernate: 
    drop table t_dept if exists
Hibernate: 
    drop table t_dept_staff if exists
Hibernate: 
    drop table t_order if exists
Hibernate: 
    drop table t_order_pizzashack if exists
Hibernate: 
    drop table t_order_process if exists
Hibernate: 
    drop table t_order_request_history if exists
Hibernate: 
    drop table t_order_review_record if exists
Hibernate: 
    drop table t_pizzashack if exists
Hibernate: 
    drop table t_staff if exists
Hibernate: 
    drop table t_user if exists
Hibernate: 
    drop table t_workflow if exists
2014-02-03 07:50:54,971 [Thread-8       ] INFO  SchemaExport                   - HHH000230: Schema export complete
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 14.325s
[INFO] Finished at: Mon Feb 03 07:50:55 NZDT 2014
[INFO] Final Memory: 24M/620M
[INFO] ------------------------------------------------------------------------
]0;david@david: ~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-webdavid@david:~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web$ cd ..[K[K[K[K[K[K]0;david@david: ~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-webdavid@david:~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web$ clear
[H[2J]0;david@david: ~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-webdavid@david:~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web$ mvn jetty:run
[INFO] Scanning for projects...
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building pizzashack-distributor-web Maven Webapp 1.0.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] >>> jetty-maven-plugin:8.1.5.v20120716:run (default-cli) @ pizzashack-distributor-web >>>
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ pizzashack-distributor-web ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 32 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ pizzashack-distributor-web ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ pizzashack-distributor-web ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ pizzashack-distributor-web ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] <<< jetty-maven-plugin:8.1.5.v20120716:run (default-cli) @ pizzashack-distributor-web <<<
[INFO] 
[INFO] --- jetty-maven-plugin:8.1.5.v20120716:run (default-cli) @ pizzashack-distributor-web ---
[INFO] Configuring Jetty for project: pizzashack-distributor-web Maven Webapp
[INFO] webAppSourceDirectory /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp does not exist. Defaulting to /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp
[INFO] Reload Mechanic: automatic
[INFO] Classes = /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/target/classes
[INFO] Context path = /
[INFO] Tmp directory = /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/target/tmp
[INFO] Web defaults = org/eclipse/jetty/webapp/webdefault.xml
[INFO] Web overrides =  none
[INFO] web.xml file = null
[INFO] Webapp directory = /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp
2014-02-03 07:56:28.390:INFO:oejs.Server:jetty-8.1.5.v20120716
2014-02-03 07:56:30.821:INFO:oejpw.PlusConfiguration:No Transaction manager found - if your webapp requires one, please configure one.
2014-02-03 07:57:02.613:INFO:/:Spring WebApplicationInitializers detected on classpath: [co.nz.pizzashack.config.PizzashackDistributorWebInitializer@4aad69da]
2014-02-03 07:57:02.969:INFO:oejsh.ContextHandler:started o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
2014-02-03 07:57:02.969:INFO:oejsh.ContextHandler:started o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
2014-02-03 07:57:02.969:INFO:oejsh.ContextHandler:started o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
2014-02-03 07:57:02.969:INFO:/:Initializing Spring root WebApplicationContext
2014-02-03 07:57:02,970 [main           ] INFO  ContextLoader                  - Root WebApplicationContext: initialization started
2014-02-03 07:57:02,972 [main           ] INFO  ionConfigWebApplicationContext - Refreshing Root WebApplicationContext: startup date [Mon Feb 03 07:57:02 NZDT 2014]; root of context hierarchy
2014-02-03 07:57:03,027 [main           ] INFO  ClassPathBeanDefinitionScanner - JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2014-02-03 07:57:03,027 [main           ] INFO  ClassPathBeanDefinitionScanner - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2014-02-03 07:57:03,028 [main           ] INFO  ionConfigWebApplicationContext - Registering annotated classes: [class co.nz.pizzashack.config.ApplicationConfiguration,class co.nz.pizzashack.config.WebMvcContextConfiguration]
2014-02-03 07:57:03,076 [main           ] INFO  ClassPathBeanDefinitionScanner - JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2014-02-03 07:57:03,076 [main           ] INFO  ClassPathBeanDefinitionScanner - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2014-02-03 07:57:04,143 [main           ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [META-INF/cxf/cxf.xml]
2014-02-03 07:57:04,354 [main           ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [META-INF/cxf/cxf-extension-soap.xml]
2014-02-03 07:57:04,378 [main           ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [META-INF/cxf/cxf-servlet.xml]
2014-02-03 07:57:04,396 [main           ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [activitiAppContext.xml]
2014-02-03 07:57:04,569 [main           ] INFO  PropertyPlaceholderConfigurer  - Loading properties file from class path resource [activiti.properties]
2014-02-03 07:57:04,613 [main           ] INFO  redAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2014-02-03 07:57:04,663 [main           ] INFO  ionConfigWebApplicationContext - Bean 'infrastructureContextConfiguration' of type [class co.nz.pizzashack.config.InfrastructureContextConfiguration$$EnhancerByCGLIB$$a488bd7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:04,688 [main           ] INFO  MLog                           - MLog clients using log4j logging.
2014-02-03 07:57:04,742 [main           ] INFO  C3P0Registry                   - Initializing c3p0-0.9.1.2 [built 21-May-2007 15:04:56; debug? true; trace: 10]
2014-02-03 07:57:04,784 [main           ] INFO  ionConfigWebApplicationContext - Bean 'dataSource' of type [class com.mchange.v2.c3p0.ComboPooledDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:04,867 [main           ] INFO  tainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default'
2014-02-03 07:57:04,947 [main           ] INFO  Version                        - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2014-02-03 07:57:04,953 [main           ] INFO  Version                        - HHH000412: Hibernate Core {4.1.4.Final}
2014-02-03 07:57:04,955 [main           ] INFO  Environment                    - HHH000206: hibernate.properties not found
2014-02-03 07:57:04,956 [main           ] INFO  Environment                    - HHH000021: Bytecode provider name : javassist
2014-02-03 07:57:04,970 [main           ] INFO  Ejb3Configuration              - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2014-02-03 07:57:05,211 [main           ] INFO  ConnectionProviderInitiator    - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2014-02-03 07:57:05,261 [main           ] INFO  AbstractPoolBackedDataSource   - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge1508z1vouxtu188xa3o|2fc1d591, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.h2.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge1508z1vouxtu188xa3o|2fc1d591, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:h2:mem:pizzashackdistributor;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 600, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 2, numHelperThreads -> 3, numThreadsAwaitingCheckoutDefaultUser -> 0, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2014-02-03 07:57:05,408 [main           ] INFO  Dialect                        - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2014-02-03 07:57:05,414 [main           ] INFO  LobCreatorBuilder              - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2014-02-03 07:57:05,423 [main           ] INFO  TransactionFactoryInitiator    - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2014-02-03 07:57:05,426 [main           ] INFO  ASTQueryTranslatorFactory      - HHH000397: Using ASTQueryTranslatorFactory
2014-02-03 07:57:05,450 [main           ] INFO  Version                        - Hibernate Validator 4.2.0.Final
2014-02-03 07:57:05,662 [main           ] INFO  SchemaExport                   - HHH000227: Running hbm2ddl schema export
Hibernate: 
    alter table t_activity_discount_rate 
        drop constraint FKA400C193698FCC4
2014-02-03 07:57:05,672 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_activity_discount_rate drop constraint FKA400C193698FCC4
2014-02-03 07:57:05,672 [main           ] ERROR SchemaExport                   - Table "T_ACTIVITY_DISCOUNT_RATE" not found; SQL statement:

    alter table t_activity_discount_rate 
        drop constraint FKA400C193698FCC4 [42102-160]
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE11193A98D65
2014-02-03 07:57:05,673 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_dept_staff drop constraint FKBC8AE11193A98D65
2014-02-03 07:57:05,673 [main           ] ERROR SchemaExport                   - Table "T_DEPT_STAFF" not found; SQL statement:

    alter table t_dept_staff 
        drop constraint FKBC8AE11193A98D65 [42102-160]
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE111A27DDA4A
2014-02-03 07:57:05,674 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_dept_staff drop constraint FKBC8AE111A27DDA4A
2014-02-03 07:57:05,674 [main           ] ERROR SchemaExport                   - Table "T_DEPT_STAFF" not found; SQL statement:

    alter table t_dept_staff 
        drop constraint FKBC8AE111A27DDA4A [42102-160]
Hibernate: 
    alter table t_order 
        drop constraint FKA0C0C3C3E11F4FCB
2014-02-03 07:57:05,675 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order drop constraint FKA0C0C3C3E11F4FCB
2014-02-03 07:57:05,675 [main           ] ERROR SchemaExport                   - Table "T_ORDER" not found; SQL statement:

    alter table t_order 
        drop constraint FKA0C0C3C3E11F4FCB [42102-160]
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB0883698FCC4
2014-02-03 07:57:05,676 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_pizzashack drop constraint FKE8ACB0883698FCC4
2014-02-03 07:57:05,676 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PIZZASHACK" not found; SQL statement:

    alter table t_order_pizzashack 
        drop constraint FKE8ACB0883698FCC4 [42102-160]
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB088BBCB676E
2014-02-03 07:57:05,677 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_pizzashack drop constraint FKE8ACB088BBCB676E
2014-02-03 07:57:05,677 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PIZZASHACK" not found; SQL statement:

    alter table t_order_pizzashack 
        drop constraint FKE8ACB088BBCB676E [42102-160]
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F33E99148D
2014-02-03 07:57:05,677 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_process drop constraint FK6B8B15F33E99148D
2014-02-03 07:57:05,677 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PROCESS" not found; SQL statement:

    alter table t_order_process 
        drop constraint FK6B8B15F33E99148D [42102-160]
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F3BBCB676E
2014-02-03 07:57:05,678 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_process drop constraint FK6B8B15F3BBCB676E
2014-02-03 07:57:05,678 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PROCESS" not found; SQL statement:

    alter table t_order_process 
        drop constraint FK6B8B15F3BBCB676E [42102-160]
Hibernate: 
    alter table t_order_request_history 
        drop constraint FK5A6B268BBCB676E
2014-02-03 07:57:05,679 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_request_history drop constraint FK5A6B268BBCB676E
2014-02-03 07:57:05,679 [main           ] ERROR SchemaExport                   - Table "T_ORDER_REQUEST_HISTORY" not found; SQL statement:

    alter table t_order_request_history 
        drop constraint FK5A6B268BBCB676E [42102-160]
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CA6130105
2014-02-03 07:57:05,680 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_review_record drop constraint FKFB7A439CA6130105
2014-02-03 07:57:05,680 [main           ] ERROR SchemaExport                   - Table "T_ORDER_REVIEW_RECORD" not found; SQL statement:

    alter table t_order_review_record 
        drop constraint FKFB7A439CA6130105 [42102-160]
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CBBCB676E
2014-02-03 07:57:05,681 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_review_record drop constraint FKFB7A439CBBCB676E
2014-02-03 07:57:05,681 [main           ] ERROR SchemaExport                   - Table "T_ORDER_REVIEW_RECORD" not found; SQL statement:

    alter table t_order_review_record 
        drop constraint FKFB7A439CBBCB676E [42102-160]
Hibernate: 
    alter table t_staff 
        drop constraint FKA0F9FF552DC32C06
2014-02-03 07:57:05,682 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_staff drop constraint FKA0F9FF552DC32C06
2014-02-03 07:57:05,682 [main           ] ERROR SchemaExport                   - Table "T_STAFF" not found; SQL statement:

    alter table t_staff 
        drop constraint FKA0F9FF552DC32C06 [42102-160]
Hibernate: 
    drop table t_activity_discount_rate if exists
Hibernate: 
    drop table t_customer if exists
Hibernate: 
    drop table t_dept if exists
Hibernate: 
    drop table t_dept_staff if exists
Hibernate: 
    drop table t_order if exists
Hibernate: 
    drop table t_order_pizzashack if exists
Hibernate: 
    drop table t_order_process if exists
Hibernate: 
    drop table t_order_request_history if exists
Hibernate: 
    drop table t_order_review_record if exists
Hibernate: 
    drop table t_pizzashack if exists
Hibernate: 
    drop table t_staff if exists
Hibernate: 
    drop table t_user if exists
Hibernate: 
    drop table t_workflow if exists
Hibernate: 
    create table t_activity_discount_rate (
        activity_rate_id bigint generated by default as identity,
        code varchar(255),
        description varchar(255),
        effective_time timestamp,
        expire_time timestamp,
        rate decimal(19,2),
        pizzashack_id bigint,
        primary key (activity_rate_id)
    )
Hibernate: 
    create table t_customer (
        cust_id bigint generated by default as identity,
        address varchar(255),
        credits integer,
        customer_name varchar(255),
        email varchar(255),
        primary key (cust_id)
    )
Hibernate: 
    create table t_dept (
        dept_id bigint generated by default as identity,
        create_date date,
        dept_name varchar(255),
        primary key (dept_id)
    )
Hibernate: 
    create table t_dept_staff (
        staff_dept_id bigint generated by default as identity,
        join_date date,
        dept_id bigint,
        staff_id bigint,
        primary key (staff_dept_id)
    )
Hibernate: 
    create table t_order (
        order_id bigint generated by default as identity,
        deliver_time timestamp,
        order_no varchar(255),
        order_time timestamp,
        payment_remarks varchar(255),
        payment_status integer,
        quantity integer,
        ship_address varchar(255),
        status integer,
        total_price decimal(19,2),
        cust_id bigint,
        primary key (order_id)
    )
Hibernate: 
    create table t_order_pizzashack (
        order_pizza_id bigint generated by default as identity,
        qty integer,
        total_price decimal(19,2),
        order_id bigint,
        pizzashack_id bigint,
        primary key (order_pizza_id)
    )
Hibernate: 
    create table t_order_process (
        order_process_id bigint generated by default as identity,
        active_process_definition_id varchar(255),
        active_process_instance_id varchar(255),
        complete_time time,
        create_time time,
        execution_id varchar(255),
        main_process_definition_id varchar(255),
        main_process_instance_id varchar(255),
        operator_id bigint,
        order_id bigint,
        primary key (order_process_id)
    )
Hibernate: 
    create table t_order_request_history (
        message_id varchar(255) generated by default as identity,
        created_at time,
        processor_name varchar(255),
        order_id bigint,
        primary key (message_id)
    )
Hibernate: 
    create table t_order_review_record (
        review_record_id bigint generated by default as identity,
        content varchar(255),
        create_time time,
        review_status integer,
        order_id bigint,
        reviewer_id bigint,
        primary key (review_record_id)
    )
Hibernate: 
    create table t_pizzashack (
        pizzashack_id bigint generated by default as identity,
        description varchar(255),
        icon varchar(255),
        name varchar(255),
        price decimal(19,2),
        primary key (pizzashack_id)
    )
Hibernate: 
    create table t_staff (
        staff_id bigint generated by default as identity,
        create_date date,
        email varchar(255),
        first_name varchar(255),
        identity varchar(255),
        last_name varchar(255),
        level integer,
        role integer,
        user_id bigint,
        primary key (staff_id)
    )
Hibernate: 
    create table t_user (
        user_id bigint generated by default as identity,
        create_time time,
        password varchar(255),
        user_name varchar(255),
        primary key (user_id)
    )
Hibernate: 
    create table t_workflow (
        workflow_id bigint generated by default as identity,
        category varchar(255),
        create_time time,
        deploy_id varchar(255),
        workflow_name varchar(255),
        process_definition_id varchar(255),
        process_definition_key varchar(255),
        primary key (workflow_id)
    )
Hibernate: 
    alter table t_activity_discount_rate 
        add constraint FKA400C193698FCC4 
        foreign key (pizzashack_id) 
        references t_pizzashack
Hibernate: 
    alter table t_dept_staff 
        add constraint FKBC8AE11193A98D65 
        foreign key (dept_id) 
        references t_dept
Hibernate: 
    alter table t_dept_staff 
        add constraint FKBC8AE111A27DDA4A 
        foreign key (staff_id) 
        references t_staff
Hibernate: 
    alter table t_order 
        add constraint FKA0C0C3C3E11F4FCB 
        foreign key (cust_id) 
        references t_customer
Hibernate: 
    alter table t_order_pizzashack 
        add constraint FKE8ACB0883698FCC4 
        foreign key (pizzashack_id) 
        references t_pizzashack
Hibernate: 
    alter table t_order_pizzashack 
        add constraint FKE8ACB088BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_process 
        add constraint FK6B8B15F33E99148D 
        foreign key (operator_id) 
        references t_user
Hibernate: 
    alter table t_order_process 
        add constraint FK6B8B15F3BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_request_history 
        add constraint FK5A6B268BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_review_record 
        add constraint FKFB7A439CA6130105 
        foreign key (reviewer_id) 
        references t_staff
Hibernate: 
    alter table t_order_review_record 
        add constraint FKFB7A439CBBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_staff 
        add constraint FKA0F9FF552DC32C06 
        foreign key (user_id) 
        references t_user
2014-02-03 07:57:05,715 [main           ] INFO  SchemaExport                   - HHH000230: Schema export complete
2014-02-03 07:57:05,756 [main           ] INFO  ionConfigWebApplicationContext - Bean 'entityManagerFactory' of type [class org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:05,789 [main           ] INFO  ionConfigWebApplicationContext - Bean 'entityManagerFactory' of type [class com.sun.proxy.$Proxy56] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:05,986 [main           ] INFO  ionConfigWebApplicationContext - Bean 'cxf' of type [class org.apache.cxf.bus.spring.SpringBus] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:05,990 [main           ] WARN  OldSpringSupport               - Import of META-INF/cxf/cxf-extension-soap.xml has been deprecated and is unnecessary.
2014-02-03 07:57:05,996 [main           ] INFO  ionConfigWebApplicationContext - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerByCGLIB$$8c8fc67e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:06,010 [main           ] INFO  ionConfigWebApplicationContext - Bean 'transactionAttributeSource' of type [class org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:06,018 [main           ] INFO  ionConfigWebApplicationContext - Bean 'transactionInterceptor' of type [class org.springframework.transaction.interceptor.TransactionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:06,024 [main           ] INFO  ionConfigWebApplicationContext - Bean 'org.springframework.transaction.config.internalTransactionAdvisor' of type [class org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:06,034 [main           ] INFO  ionConfigWebApplicationContext - Bean 'transactionManager' of type [class org.springframework.orm.jpa.JpaTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:06,035 [main           ] INFO  ionConfigWebApplicationContext - Bean 'camelJdbcIdempotentConfig' of type [class co.nz.pizzashack.config.CamelJdbcIdempotentConfig$$EnhancerByCGLIB$$71197205] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:06,052 [main           ] INFO  ionConfigWebApplicationContext - Bean 'sqlComponent' of type [class org.apache.camel.component.sql.SqlComponent] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:06,058 [main           ] INFO  ionConfigWebApplicationContext - Bean 'camelCxfConfig' of type [class co.nz.pizzashack.config.CamelCxfConfig$$EnhancerByCGLIB$$9b21892a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:06,085 [main           ] INFO  ionConfigWebApplicationContext - Bean 'billingInboundEndpoint' of type [class org.apache.camel.component.cxf.CxfEndpoint] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:06,109 [main           ] INFO  ionConfigWebApplicationContext - Bean 'billingVariableTransformer' of type [class co.nz.pizzashack.integration.mapping.BillingVariableTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:06,291 [main           ] INFO  ionConfigWebApplicationContext - Bean 'billingFormatTransformer' of type [class co.nz.pizzashack.integration.mapping.BillingFormatTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:06,295 [main           ] INFO  ionConfigWebApplicationContext - Bean 'billingResponseMergeProcessor' of type [class co.nz.pizzashack.integration.mapping.BillingResponseMergeProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:06,298 [main           ] INFO  ionConfigWebApplicationContext - Bean 'sleepBean' of type [class co.nz.pizzashack.integration.utils.SleepBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:06,298 [main           ] INFO  ionConfigWebApplicationContext - Bean 'billingProcessRoute' of type [class co.nz.pizzashack.integration.route.BillingProcessRoute] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:06,389 [main           ] INFO  ionConfigWebApplicationContext - Bean 'org.activiti.engine.impl.rules.RulesDeployer#55404273' of type [class org.activiti.engine.impl.rules.RulesDeployer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:06,390 [main           ] INFO  ionConfigWebApplicationContext - Bean 'processEngineConfiguration' of type [class org.activiti.spring.SpringProcessEngineConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:06,394 [main           ] INFO  ionConfigWebApplicationContext - Bean 'processEngine' of type [class org.activiti.spring.ProcessEngineFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,349 [main           ] INFO  DbSqlSession                   - performing create on engine with resource org/activiti/db/create/activiti.h2.create.engine.sql
2014-02-03 07:57:07,367 [main           ] INFO  DbSqlSession                   - performing create on history with resource org/activiti/db/create/activiti.h2.create.history.sql
2014-02-03 07:57:07,373 [main           ] INFO  DbSqlSession                   - performing create on identity with resource org/activiti/db/create/activiti.h2.create.identity.sql
2014-02-03 07:57:07,376 [main           ] INFO  ProcessEngineImpl              - ProcessEngine default created
2014-02-03 07:57:07,377 [main           ] INFO  ionConfigWebApplicationContext - Bean 'processEngine' of type [class org.activiti.engine.impl.ProcessEngineImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,383 [main           ] INFO  ionConfigWebApplicationContext - Bean 'runtimeService' of type [class org.activiti.engine.impl.RuntimeServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,390 [main           ] INFO  ionConfigWebApplicationContext - Bean 'taskService' of type [class org.activiti.engine.impl.TaskServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,395 [main           ] INFO  ionConfigWebApplicationContext - Bean 'historyService' of type [class org.activiti.engine.impl.HistoryServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,401 [main           ] INFO  ionConfigWebApplicationContext - Bean 'repositoryService' of type [class org.activiti.engine.impl.RepositoryServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,407 [main           ] INFO  ionConfigWebApplicationContext - Bean 'managementService' of type [class org.activiti.engine.impl.ManagementServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,413 [main           ] INFO  ionConfigWebApplicationContext - Bean 'identityService' of type [class org.activiti.engine.impl.IdentityServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,414 [main           ] INFO  ionConfigWebApplicationContext - Bean 'activitiFacade' of type [class co.nz.pizzashack.wf.ActivitiFacade] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,419 [main           ] INFO  ionConfigWebApplicationContext - Bean 'userConverter' of type [class co.nz.pizzashack.data.converter.UserConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,437 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,438 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,441 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,453 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#1' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,511 [main           ] INFO  ionConfigWebApplicationContext - Bean 'workflowRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,544 [main           ] INFO  ionConfigWebApplicationContext - Bean 'workflowRepository' of type [class com.sun.proxy.$Proxy65] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,548 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#2' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,548 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#2' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,548 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#2' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,548 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#3' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,557 [main           ] INFO  ionConfigWebApplicationContext - Bean 'pizzashackRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,567 [main           ] INFO  ionConfigWebApplicationContext - Bean 'pizzashackRepository' of type [class com.sun.proxy.$Proxy68] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,570 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#4' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,570 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#4' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,570 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#4' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,570 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#5' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,579 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,585 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessRepository' of type [class com.sun.proxy.$Proxy69] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,587 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#6' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,587 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#6' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,587 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#6' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,587 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#7' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,597 [main           ] INFO  ionConfigWebApplicationContext - Bean 'userRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,601 [main           ] INFO  ionConfigWebApplicationContext - Bean 'userRepository' of type [class com.sun.proxy.$Proxy70] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,603 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#8' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,603 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#8' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,603 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#8' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,604 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#9' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,613 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,617 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderRepository' of type [class com.sun.proxy.$Proxy71] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,649 [main           ] INFO  ionConfigWebApplicationContext - Bean 'customerConverter' of type [class co.nz.pizzashack.data.converter.CustomerConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,656 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderDetailConverter' of type [class co.nz.pizzashack.data.converter.OrderDetailConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,656 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderConverter' of type [class co.nz.pizzashack.data.converter.OrderConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,657 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessConverter' of type [class co.nz.pizzashack.data.converter.OrderProcessConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,662 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#10' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,662 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#10' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,662 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#10' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,662 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#11' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,671 [main           ] INFO  ionConfigWebApplicationContext - Bean 'departmentRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,675 [main           ] INFO  ionConfigWebApplicationContext - Bean 'departmentRepository' of type [class com.sun.proxy.$Proxy72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,676 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessAccessor' of type [class co.nz.pizzashack.ds.OrderProcessAccessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,682 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderReviewRecordConverter' of type [class co.nz.pizzashack.data.converter.OrderReviewRecordConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,683 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#12' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,683 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#12' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,684 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#12' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,684 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#13' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,692 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderReviewRecordRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,697 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderReviewRecordRepository' of type [class com.sun.proxy.$Proxy73] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,699 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#14' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,699 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#14' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,699 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#14' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,700 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#15' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,708 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderPizzashackRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,712 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderPizzashackRepository' of type [class com.sun.proxy.$Proxy74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,714 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#16' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,714 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#16' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,714 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#16' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,715 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#17' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,722 [main           ] INFO  ionConfigWebApplicationContext - Bean 'customerRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,726 [main           ] INFO  ionConfigWebApplicationContext - Bean 'customerRepository' of type [class com.sun.proxy.$Proxy75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,727 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessDSImpl' of type [class co.nz.pizzashack.ds.OrderProcessDSImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,733 [main           ] INFO  ionConfigWebApplicationContext - Bean 'billingInboundProcessor' of type [class co.nz.pizzashack.integration.processor.BillingInboundProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,733 [main           ] INFO  ionConfigWebApplicationContext - Bean 'billingInboundWsRoute' of type [class co.nz.pizzashack.integration.route.BillingInboundWsRoute] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,755 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderJdbcMessageIdRepository' of type [class org.apache.camel.processor.idempotent.jdbc.JdbcMessageIdRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,763 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessFormatTransformer' of type [class co.nz.pizzashack.integration.mapping.OrderProcessFormatTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,772 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#18' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,772 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#18' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,772 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#18' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,773 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#19' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,780 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderRequestHistoryRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,784 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderRequestHistoryRepository' of type [class com.sun.proxy.$Proxy80] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,786 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderRequestProcessor' of type [class co.nz.pizzashack.integration.processor.OrderRequestProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,789 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderDuplicatedReqProcessor' of type [class co.nz.pizzashack.integration.processor.OrderDuplicatedReqProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,789 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessRoute' of type [class co.nz.pizzashack.integration.route.OrderProcessRoute] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,837 [main           ] INFO  ionConfigWebApplicationContext - Bean 'activeMQConnectionFactory' of type [class org.apache.activemq.ActiveMQConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:07,986 [main           ] INFO  ionConfigWebApplicationContext - Bean 'pooledConnectionFactory' of type [class org.apache.activemq.pool.PooledConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:08,010 [main           ] INFO  ionConfigWebApplicationContext - Bean 'jmsTransactionManager' of type [class org.springframework.jms.connection.JmsTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:08,022 [main           ] INFO  ionConfigWebApplicationContext - Bean 'jmsComponent' of type [class org.apache.camel.component.jms.JmsComponent] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:08,027 [main           ] INFO  ionConfigWebApplicationContext - Bean 'camelSpringConfig' of type [class co.nz.pizzashack.config.CamelSpringConfig$$EnhancerByCGLIB$$daa17fbe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:57:08,066 [main           ] INFO  DefaultListableBeanFactory     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6a41ad35: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,applicationConfiguration,webMvcContextConfiguration,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,viewConfiguration,logoutController,loginController,indexController,userController,adminIndexController,departmentController,orderController,orderQueryController,staffController,billingProcessRespTransformer,billingProcessReqTransformer,orderProcessFormatTransformer,billingVariableTransformer,billingResponseMergeProcessor,billingFormatTransformer,billingInboundProcessor,orderDuplicatedReqProcessor,orderRequestProcessor,billingProcessRoute,billingInboundWsRoute,orderProcessRoute,sleepBean,pizzashackAPIImpl,camelSpringConfig,camelJdbcIdempotentConfig,camelCxfConfig,orderProcessDSImpl,customerDSImpl,workflowDSImpl,pizzashackDSImpl,userDSImpl,orderProcessAccessor,orderProcessQueryDSImpl,staffDSImpl,orderDSImpl,departmentDSImpl,initialDataConfig,pizzashackCaculator,emailExecutionListener,endExecutionListener,caculationMergeExecutionListener,orderMainTransitionExecutionListener,toManualReviewExecutionListener,outOfBillingProcessExecutionListener,outOfCoreProcessExecutionListener,billingRespExecutionListener,customerConverter,orderProcessConverter,staffConverter,userConverter,departmentConverter,workflowConverter,orderReviewRecordConverter,orderConverter,activityDiscountRateConverter,orderDetailConverter,pizzashackDataInitialConfiguration,pizzashackItemBuilder,infrastructureContextConfiguration,activitiFacade,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0,org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0,staffDepartmentRepository,orderProcessRepository,orderRepository,workflowRepository,userRepository,pizzashackRepository,staffRepository,orderRequestHistoryRepository,departmentRepository,activityDiscountRateRepository,orderPizzashackRepository,customerRepository,orderReviewRecordRepository,viewResolver,messageSource,activeMQConnectionFactory,pooledConnectionFactory,jmsComponent,jmsTransactionManager,camelBeanPostProcessor,camelContext,custThreadPoolProfile,sqlComponent,orderJdbcMessageIdRepository,billingInboundEndpoint,loggingOutInterceptor,cxf,org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor,org.apache.cxf.bus.spring.Jsr250BeanPostProcessor,org.apache.cxf.bus.spring.BusExtensionPostProcessor,org.apache.cxf.binding.soap.SoapBindingFactory,org.apache.cxf.binding.soap.SoapTransportFactory,org.apache.cxf.binding.soap.customEditorConfigurer,setupWorkflowData,setupData,org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration,org.springframework.transaction.config.internalTransactionAdvisor,transactionAttributeSource,transactionInterceptor,dataSource,transactionManager,entityManagerFactory,placeholderConfig,processEngineConfiguration,processEngine,repositoryService,runtimeService,taskService,historyService,managementService,identityService,org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration,mvcConversionService,mvcValidator,httpRequestHandlerAdapter,simpleControllerHandlerAdapter,requestMappingHandlerMapping,mvcContentNegotiationManager,viewControllerHandlerMapping,beanNameHandlerMapping,resourceHandlerMapping,defaultServletHandlerMapping,requestMappingHandlerAdapter,handlerExceptionResolver,localeResolver,simpleMappingExceptionResolver,multipartResolver,localeChangeInterceptor,sessionAttributeProcessor]; root of factory hierarchy
2014-02-03 07:57:08,505 [main           ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) is starting
2014-02-03 07:57:08,506 [main           ] INFO  ManagedManagementStrategy      - JMX is enabled
2014-02-03 07:57:08,598 [main           ] INFO  DefaultTypeConverter           - Loaded 194 type converters
Hibernate: 
    SELECT
        1 
    FROM
        T_ORDER_REQUEST_HISTORY 
    WHERE
        1 = 0
2014-02-03 07:57:08,971 [main           ] INFO  SpringCamelContext             - StreamCaching is not in use. If using streams then its recommended to enable stream caching. See more details at http://camel.apache.org/stream-caching.html
2014-02-03 07:57:09,353 [main           ] INFO  BusApplicationContext          - Refreshing org.apache.cxf.bus.spring.BusApplicationContext@67cbb02a: startup date [Mon Feb 03 07:57:09 NZDT 2014]; parent: Root WebApplicationContext
2014-02-03 07:57:09,374 [main           ] INFO  DefaultListableBeanFactory     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@33bb2a52: defining beans []; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@6a41ad35
2014-02-03 07:57:09,386 [main           ] INFO  ReflectionServiceFactoryBean   - Creating Service {http://ws.integration.pizzashack.nz.co/}BillingProcessWebServicesService from class co.nz.pizzashack.integration.ws.BillingProcessWebServices
2014-02-03 07:57:09,754 [main           ] INFO  ServerImpl                     - Setting the server's publish address to be /billingWs
2014-02-03 07:57:09,777 [main           ] INFO  SpringCamelContext             - Route: activitiBillingProcess started and consuming from: Endpoint[activiti://orderBillingProcess:billingIntegration?copyVariablesToBodyAsMap=true]
2014-02-03 07:57:09,779 [main           ] INFO  SpringCamelContext             - Route: direct:billingIntegration started and consuming from: Endpoint[direct://billingIntegration]
2014-02-03 07:57:09,781 [main           ] INFO  SpringCamelContext             - Route: direct:receiveBillingQueue started and consuming from: Endpoint[direct://receiveBillingQueue]
2014-02-03 07:57:09,783 [main           ] INFO  SpringCamelContext             - Route: route1 started and consuming from: Endpoint[direct://doBillingIntegration]
2014-02-03 07:57:09,796 [main           ] INFO  SpringCamelContext             - Route: orderProcessRoute started and consuming from: Endpoint[jms://queue:pizzashackOrderInbound]
2014-02-03 07:57:09,798 [main           ] INFO  SpringCamelContext             - Route: direct:orderDuplicatedProcess started and consuming from: Endpoint[direct://orderDuplicatedProcess]
2014-02-03 07:57:09,800 [main           ] INFO  SpringCamelContext             - Route: direct:orderRegularProcess started and consuming from: Endpoint[direct://orderRegularProcess]
2014-02-03 07:57:09,803 [main           ] INFO  SpringCamelContext             - Route: cxf:bean:billingInboundEndpoint started and consuming from: Endpoint[cxf://bean:billingInboundEndpoint]
2014-02-03 07:57:09,825 [main           ] INFO  SpringCamelContext             - Total 8 routes, of which 8 is started.
2014-02-03 07:57:09,828 [main           ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) started in 1.321 seconds
2014-02-03 07:57:09,854 [main           ] INFO  WorkflowInitialDataSetup       - initialize start:{}
2014-02-03 07:57:09,859 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 07:57:09,859 [main           ] INFO  UserDSImpl                     - usernamedavid
2014-02-03 07:57:09,859 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 07:57:10,060 [main           ] INFO  UserDSImpl                     - userId:1 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 07:57:10,113 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@652f7ab5[userId=1,username=david,password=MTIzNDU2,createTime=Mon Feb 03 07:57:10 NZDT 2014]
2014-02-03 07:57:10,167 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-02 06:57:10)
2014-02-03 07:57:10,167 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-02 06:57:10)
2014-02-03 07:57:10,170 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 07:57:10,170 [main           ] INFO  UserDSImpl                     - usernamebrad
2014-02-03 07:57:10,170 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 07:57:10,173 [main           ] INFO  UserDSImpl                     - userId:2 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 07:57:10,175 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@e99b464[userId=2,username=brad,password=MTIzNDU2,createTime=Mon Feb 03 07:57:10 NZDT 2014]
2014-02-03 07:57:10,175 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-02 06:57:10)
2014-02-03 07:57:10,175 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-02 06:57:10)
2014-02-03 07:57:10,176 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 07:57:10,176 [main           ] INFO  UserDSImpl                     - usernamejohn
2014-02-03 07:57:10,176 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 07:57:10,179 [main           ] INFO  UserDSImpl                     - userId:3 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 07:57:10,180 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@4f518af7[userId=3,username=john,password=MTIzNDU2,createTime=Mon Feb 03 07:57:10 NZDT 2014]
2014-02-03 07:57:10,181 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-02 06:57:10)
2014-02-03 07:57:10,181 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-02 06:57:10)
2014-02-03 07:57:10,181 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 07:57:10,181 [main           ] INFO  UserDSImpl                     - usernamegeneral
2014-02-03 07:57:10,181 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 07:57:10,184 [main           ] INFO  UserDSImpl                     - userId:4 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 07:57:10,186 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@19b14ca2[userId=4,username=general,password=MTIzNDU2,createTime=Mon Feb 03 07:57:10 NZDT 2014]
2014-02-03 07:57:10,187 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:2014-02-02 06:57:10)
2014-02-03 07:57:10,187 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:2014-02-02 06:57:10)
2014-02-03 07:57:10,200 [main           ] INFO  DepartmentDSImpl               - createDepartment start:co.nz.pizzashack.data.dto.DepartmentDto(deptId:null, deptName:Order manager, createDate:null) 
Hibernate: 
    select
        department0_.dept_id as dept1_8_,
        department0_.create_date as create2_8_,
        department0_.dept_name as dept3_8_ 
    from
        t_dept department0_ 
    where
        department0_.dept_name=? limit ?
2014-02-03 07:57:10,207 [main           ] INFO  DepartmentConverter            - toModel start:{} co.nz.pizzashack.data.dto.DepartmentDto(deptId:null, deptName:Order manager, createDate:null)
2014-02-03 07:57:10,212 [main           ] INFO  DepartmentConverter            - toModel end:{} co.nz.pizzashack.data.model.DepartmentModel@688e1882[deptId=<null>,deptName=Order manager,createDate=<null>,staffDepartments=<null>]
Hibernate: 
    insert 
    into
        t_dept
        (dept_id, create_date, dept_name) 
    values
        (null, ?, ?)
Hibernate: 
    insert 
    into
        ACT_ID_GROUP
        (ID_, REV_, NAME_, TYPE_)     
    values
        (       ?,       1,        ?,       ?     )
2014-02-03 07:57:10,220 [main           ] INFO  DepartmentConverter            - toDto start:{} co.nz.pizzashack.data.model.DepartmentModel@688e1882[deptId=1,deptName=Order manager,createDate=Mon Feb 03 07:57:10 NZDT 2014,staffDepartments=<null>]
2014-02-03 07:57:10,221 [main           ] INFO  DepartmentConverter            - toDto end:{} co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02)
2014-02-03 07:57:10,221 [main           ] INFO  DepartmentDSImpl               - createDepartment end:co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02) 
2014-02-03 07:57:10,222 [main           ] INFO  WorkflowInitialDataSetup       - department:co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02) 
2014-02-03 07:57:10,245 [main           ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:null, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-02 06:57:10)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-02-03 07:57:10,252 [main           ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:null, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-02 06:57:10))
2014-02-03 07:57:10,273 [main           ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@741430bc[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@598bc22d[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-02-03 07:57:10,321 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@741430bc[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@598bc22d[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=Mon Feb 03 07:57:10 NZDT 2014] 
2014-02-03 07:57:10,321 [main           ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = ?
Hibernate: 
    update
        ACT_GE_PROPERTY      
    SET
        REV_ = ?,
        VALUE_ = ?      
    where
        NAME_ = ?       
        and REV_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-02-03 07:57:10,341 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-02-03 07:57:10,349 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@741430bc[staffId=1,individual=co.nz.pizzashack.data.model.IndividualModel@598bc22d[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=Mon Feb 03 07:57:10 NZDT 2014]
2014-02-03 07:57:10,357 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:1, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-02-03 07:57:10,357 [main           ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:1, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-02-03 07:57:10,361 [main           ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:null, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-02 06:57:10)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-02-03 07:57:10,363 [main           ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:null, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-02 06:57:10))
2014-02-03 07:57:10,364 [main           ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@4b22d9d0[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@5d0a0d39[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-02-03 07:57:10,373 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@4b22d9d0[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@5d0a0d39[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=Mon Feb 03 07:57:10 NZDT 2014] 
2014-02-03 07:57:10,373 [main           ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-02-03 07:57:10,377 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-02-03 07:57:10,380 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@4b22d9d0[staffId=2,individual=co.nz.pizzashack.data.model.IndividualModel@5d0a0d39[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=Mon Feb 03 07:57:10 NZDT 2014]
2014-02-03 07:57:10,381 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:2, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-02-03 07:57:10,381 [main           ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:2, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-02-03 07:57:10,382 [main           ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:null, departments:null, role:manager, level:junior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-02 06:57:10)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-02-03 07:57:10,384 [main           ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:null, departments:null, role:manager, level:junior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-02 06:57:10))
2014-02-03 07:57:10,385 [main           ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@6410bddd[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@7212b7e[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-02-03 07:57:10,391 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@6410bddd[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@7212b7e[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=Mon Feb 03 07:57:10 NZDT 2014] 
2014-02-03 07:57:10,391 [main           ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-02-03 07:57:10,396 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-02-03 07:57:10,399 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@6410bddd[staffId=3,individual=co.nz.pizzashack.data.model.IndividualModel@7212b7e[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=Mon Feb 03 07:57:10 NZDT 2014]
2014-02-03 07:57:10,400 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:3, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:null, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-02-03 07:57:10,400 [main           ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:3, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:null, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-02-03 07:57:10,401 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-02-03 07:57:10,411 [main           ] INFO  BpmnDeployer                   - Processing resource bpmn/OrderBillingProcess.bpmn20.xml
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 117: Having multiple <family> in <alias> isn't supported and may not work as expected
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-02-03 07:57:11,013 [main           ] INFO  RulesDeployer                  - Processing resource bpmn/OrderBillingProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:57:11,026 [main           ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderBillingProcess:1:7]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-02-03 07:57:11,034 [main           ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@44b522f2[wfId=1,name=orderBillingProcess,deployId=4,processDefinitionKey=orderBillingProcess,processDefinitionId=orderBillingProcess:1:7,createTime=Mon Feb 03 07:57:10 NZDT 2014]
2014-02-03 07:57:11,051 [main           ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-02-02 06:57:10)
2014-02-03 07:57:11,052 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-02-02 06:57:10)
2014-02-03 07:57:11,053 [main           ] INFO  WorkflowInitialDataSetup       - deploy billing process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-02-02 06:57:10) 
2014-02-03 07:57:11,054 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-02-03 07:57:11,057 [main           ] INFO  BpmnDeployer                   - Processing resource bpmn/OrdercoreProcess.bpmn20.xml
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-02-03 07:57:11,227 [main           ] INFO  RulesDeployer                  - Processing resource bpmn/OrdercoreProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:57:11,234 [main           ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderCoreProcess:1:11]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-02-03 07:57:11,236 [main           ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@654d994a[wfId=2,name=orderCoreProcess,deployId=8,processDefinitionKey=orderCoreProcess,processDefinitionId=orderCoreProcess:1:11,createTime=Mon Feb 03 07:57:11 NZDT 2014]
2014-02-03 07:57:11,237 [main           ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-02-02 06:57:11)
2014-02-03 07:57:11,237 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-02-02 06:57:11)
2014-02-03 07:57:11,237 [main           ] INFO  WorkflowInitialDataSetup       - deploy core process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-02-02 06:57:11) 
2014-02-03 07:57:11,238 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-02-03 07:57:11,240 [main           ] INFO  BpmnDeployer                   - Processing resource bpmn/OrderlocalProcess.bpmn20.xml
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-02-03 07:57:11,494 [main           ] INFO  RulesDeployer                  - Processing resource bpmn/OrderlocalProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:57:11,505 [main           ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderlocalProcess:1:15]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-02-03 07:57:11,507 [main           ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@4408dc9e[wfId=3,name=orderlocalProcess,deployId=12,processDefinitionKey=orderlocalProcess,processDefinitionId=orderlocalProcess:1:15,createTime=Mon Feb 03 07:57:11 NZDT 2014]
2014-02-03 07:57:11,507 [main           ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 06:57:11)
2014-02-03 07:57:11,507 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 06:57:11)
2014-02-03 07:57:11,508 [main           ] INFO  WorkflowInitialDataSetup       - deploy local main process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 06:57:11) 
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
2014-02-03 07:57:11,655 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/logout],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LogoutController.logout(javax.servlet.http.HttpSession)
2014-02-03 07:57:11,656 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/login],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LoginController.showLoginPage(org.springframework.ui.Model)
2014-02-03 07:57:11,656 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/login],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LoginController.handleLogin(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws co.nz.pizzashack.AuthenticationException
2014-02-03 07:57:11,657 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/index],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.IndexController.index(org.springframework.ui.Model,co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-02-03 07:57:11,659 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:57:11,659 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/update/{userId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:57:11,659 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/{userId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.deleteUser(java.lang.Long) throws java.lang.Exception
2014-02-03 07:57:11,659 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/check/{userName}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.checkUser(java.lang.String) throws java.lang.Exception
2014-02-03 07:57:11,660 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/{userId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:57:11,660 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/createUser],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public co.nz.pizzashack.data.dto.UserDto co.nz.pizzashack.controller.UserController.createUser(co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-02-03 07:57:11,660 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:57:11,660 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/search],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.search(co.nz.pizzashack.data.dto.UserDto,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:57:11,660 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.create(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 07:57:11,661 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.update(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 07:57:11,661 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/adminIndex],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.AdminIndexController.index(org.springframework.ui.Model,co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-02-03 07:57:11,663 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:57:11,663 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/update/{deptId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:57:11,663 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/{deptId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:57:11,664 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/selectdepts],methods=[GET],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.util.Set<co.nz.pizzashack.data.dto.DepartmentDto> co.nz.pizzashack.controller.DepartmentController.select() throws java.lang.Exception
2014-02-03 07:57:11,664 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:57:11,664 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/{deptId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.delete(java.lang.Long) throws java.lang.Exception
2014-02-03 07:57:11,664 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/search],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.search(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:57:11,664 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.create(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 07:57:11,664 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.update(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 07:57:11,665 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/review],methods=[POST],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.reviewOrder(co.nz.pizzashack.data.dto.OrderReviewRecordDto,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-02-03 07:57:11,665 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/{orderProcessId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.showOrderProcess(java.lang.Long,org.springframework.ui.Model,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-02-03 07:57:11,666 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/claimReview/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.claimReviewTask(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-02-03 07:57:11,666 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderQuery/showHistory/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.util.Set<co.nz.pizzashack.data.dto.ProcessActivityDto> co.nz.pizzashack.controller.OrderQueryController.showHistory(java.lang.String) throws java.lang.Exception
2014-02-03 07:57:11,667 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderQuery/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderQueryController.show(java.lang.String,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:57:11,667 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderQuery/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderQueryController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:57:11,668 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:57:11,668 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/update/{staffId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:57:11,669 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/{staffId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:57:11,669 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:57:11,669 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/{staffId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.delete(java.lang.Long) throws java.lang.Exception
2014-02-03 07:57:11,669 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.create(co.nz.pizzashack.data.dto.StaffDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 07:57:11,669 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.update(co.nz.pizzashack.data.dto.StaffDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 07:57:11,710 [main           ] INFO  SimpleUrlHandlerMapping        - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2014-02-03 07:57:11,713 [main           ] INFO  SimpleUrlHandlerMapping        - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler]
2014-02-03 07:57:12,096 [main           ] INFO  ContextLoader                  - Root WebApplicationContext: initialization completed in 9126 ms
2014-02-03 07:57:12.096:INFO:oejsh.ContextHandler:started o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
Feb 03, 2014 7:57:12 AM com.sun.jersey.api.core.PackagesResourceConfig init
INFO: Scanning for root resource and provider classes in the packages:
  co.nz.pizzashack.integration.api
Feb 03, 2014 7:57:12 AM com.sun.jersey.api.core.ScanningResourceConfig logClasses
INFO: Root resource classes found:
  class co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl
Feb 03, 2014 7:57:12 AM com.sun.jersey.api.core.ScanningResourceConfig init
INFO: No provider classes found.
Feb 03, 2014 7:57:12 AM com.sun.jersey.spi.spring.container.servlet.SpringServlet getContext
INFO: Using default applicationContext
Feb 03, 2014 7:57:12 AM com.sun.jersey.spi.spring.container.SpringComponentProviderFactory registerSpringBeans
INFO: Registering Spring bean, pizzashackAPIImpl, of type co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl as a root resource class
Feb 03, 2014 7:57:12 AM com.sun.jersey.server.impl.application.WebApplicationImpl _initiate
INFO: Initiating Jersey application, version 'Jersey: 1.17.1 02/28/2013 12:47 PM'
Feb 03, 2014 7:57:12 AM com.sun.jersey.spi.inject.Errors processErrorMessages
WARNING: The following warnings have been detected with resource and/or provider classes:
  WARNING: A HTTP GET method, public javax.ws.rs.core.Response co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl.getOrderProcessByOrderNo(java.lang.String), should not consume any entity.
Feb 03, 2014 7:57:12 AM com.sun.jersey.spi.spring.container.servlet.SpringServlet getContext
INFO: Using default applicationContext
Feb 03, 2014 7:57:12 AM com.sun.jersey.spi.spring.container.SpringComponentProviderFactory registerSpringBeans
INFO: Registering Spring bean, pizzashackAPIImpl, of type co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl as a root resource class
Feb 03, 2014 7:57:12 AM com.sun.jersey.server.impl.application.WebApplicationImpl _initiate
INFO: Initiating Jersey application, version 'Jersey: 1.17.1 02/28/2013 12:47 PM'
Feb 03, 2014 7:57:13 AM com.sun.jersey.spi.inject.Errors processErrorMessages
WARNING: The following warnings have been detected with resource and/or provider classes:
  WARNING: A HTTP GET method, public javax.ws.rs.core.Response co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl.getOrderProcessByOrderNo(java.lang.String), should not consume any entity.
2014-02-03 07:57:13.014:INFO:/:Initializing Spring FrameworkServlet 'dispatcher'
2014-02-03 07:57:13,014 [main           ] INFO  DispatcherServlet              - FrameworkServlet 'dispatcher': initialization started
2014-02-03 07:57:13,031 [main           ] INFO  DispatcherServlet              - FrameworkServlet 'dispatcher': initialization completed in 17 ms
2014-02-03 07:57:13.041:INFO:oejs.AbstractConnector:Started SelectChannelConnector@0.0.0.0:8111
[INFO] Started Jetty Server
[INFO] Starting scanner at interval of 10 seconds.
2014-02-03 07:57:29,049 [ckOrderInbound]] INFO  orderProcessRoute              - Received message 73247
Hibernate: 
    SELECT
        COUNT(*) 
    FROM
        T_ORDER_REQUEST_HISTORY 
    WHERE
        processor_name = ? 
        AND message_id = ?
Hibernate: 
    INSERT 
    INTO
        T_ORDER_REQUEST_HISTORY
        (processor_name, message_id, created_at) 
    VALUES
        (?, ?, ?)
2014-02-03 07:57:29,073 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlUnmarshal start:{} <order>
  <address>25 mavon downs</address>
  <order-list>
    <order-details>
      <pizza-name>Garden Fresh</pizza-name>
      <quantity>4</quantity>
    </order-details>
    <order-details>
      <pizza-name>Chicken Parmesan</pizza-name>
      <quantity>10</quantity>
    </order-details>
  </order-list>
  <customer>
    <name>david</name>
    <email>david.yuan124@gmail.com</email>
  </customer>
</order>
orderDetailsDto: co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Garden Fresh, qty:4, totalPrice:0)
orderDetailsDto: co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)
2014-02-03 07:57:29,152 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlUnmarshal end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:null, orderNo:null, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:david, customerEmail:david.yuan124@gmail.com, level:null), address:25 mavon downs, status:null, orderTime:null, deliverTime:null)
2014-02-03 07:57:29,152 [ckOrderInbound]] INFO  OrderRequestProcessor          - orderRequestProcessor start:{} 
2014-02-03 07:57:29,153 [ckOrderInbound]] INFO  OrderRequestProcessor          - order request:co.nz.pizzashack.data.dto.OrderDto(orderId:null, orderNo:null, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:david, customerEmail:david.yuan124@gmail.com, level:null), address:25 mavon downs, status:null, orderTime:null, deliverTime:null) 
2014-02-03 07:57:29,153 [ckOrderInbound]] INFO  OrderRequestProcessor          - messageId:73247 
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
2014-02-03 07:57:29,156 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@5a08780d[userId=4,username=general,password=MTIzNDU2,createTime=07:57:10]
2014-02-03 07:57:29,160 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)
2014-02-03 07:57:29,160 [ckOrderInbound]] INFO  OrderRequestProcessor          - default operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10) 
2014-02-03 07:57:29,161 [ckOrderInbound]] INFO  OrderProcessDSImpl             - startOrderProcess start:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.process_definition_key=? 
        and workflowmo0_.category=? limit ?
Hibernate: 
    insert 
    into
        t_order
        (order_id, cust_id, deliver_time, order_no, order_time, payment_remarks, payment_status, quantity, ship_address, status, total_price) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:57:29,175 [ckOrderInbound]] INFO  ActivitiFacade                 - startProcessInstance start:{}
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
2014-02-03 07:57:29,191 [ckOrderInbound]] INFO  ActivitiFacade                 - startProcessInstance end:{}
Hibernate: 
    insert 
    into
        t_order_process
        (order_process_id, active_process_definition_id, active_process_instance_id, complete_time, create_time, execution_id, main_process_definition_id, main_process_instance_id, operator_id, order_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2014-02-03 07:57:29,196 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@472ea3c7[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=Mon Feb 03 07:57:29 NZDT 2014,completeTime=<null>]
2014-02-03 07:57:29,212 [ckOrderInbound]] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@644e50e2[orderId=1,orderNo=92e4494e-456f-4891-8e8f-e1503073fa39,quantity=<null>,status=0,paymentStatus=0,deliverTime=<null>,totalPrice=<null>,orderTime=Mon Feb 03 07:57:29 NZDT 2014]
2014-02-03 07:57:29,213 [ckOrderInbound]] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 06:57:29, deliverTime:null)
2014-02-03 07:57:29,213 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@64613826[userId=4,username=general,password=MTIzNDU2,createTime=07:57:10]
2014-02-03 07:57:29,214 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)
2014-02-03 07:57:29,220 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 06:57:29, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 06:57:29, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10))
2014-02-03 07:57:29,220 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 06:57:29, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 06:57:29, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
2014-02-03 07:57:29,231 [ckOrderInbound]] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 07:57:29,231 [ckOrderInbound]] INFO  ActivitiFacade                 - executionId: 16, processDefinitionId: orderlocalProcess:1:15
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 07:57:29,257 [ckOrderInbound]] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:57:29,264 [ckOrderInbound]] INFO  OrderProcessAccessor           - assign operator[4] to task[Data entry]
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    insert 
    into
        ACT_RU_IDENTITYLINK
        (ID_, REV_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_, PROC_DEF_ID_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_IDENTITYLINK
        (ID_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_)     
    values
        (?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_TASK      
    SET
        REV_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        PRIORITY_ = ?,
        CREATE_TIME_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        DELEGATION_ = ?,
        EXECUTION_ID_ = ?,
        PROC_DEF_ID_ = ?,
        DESCRIPTION_ = ?,
        DUE_DATE_ = ?,
        SUSPENSION_STATE_ = ?      
    where
        ID_= ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
2014-02-03 07:57:29,282 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 06:57:29, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 06:57:29, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)) 
2014-02-03 07:57:29,283 [ckOrderInbound]] INFO  OrderProcessDSImpl             - startOrderProcess end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 06:57:29, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 06:57:29, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10))
2014-02-03 07:57:29,285 [ckOrderInbound]] INFO  OrderRequestProcessor          - after start process:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 06:57:29, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 06:57:29, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)) 
2014-02-03 07:57:29,285 [ckOrderInbound]] INFO  OrderProcessDSImpl             - dataEntry start:92e4494e-456f-4891-8e8f-e1503073fa39
2014-02-03 07:57:29,285 [ckOrderInbound]] INFO  OrderProcessDSImpl             - getOrderProcessByOrderNo start************************************
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 07:57:29,295 [ckOrderInbound]] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@6ec63335[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=07:57:29,completeTime=<null>] 
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_,
        customermo0_.address as address2_,
        customermo0_.credits as credits2_,
        customermo0_.customer_name as customer4_2_,
        customermo0_.email as email2_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.email=? limit ?
2014-02-03 07:57:29,300 [ckOrderInbound]] INFO  CustomerConverter              - toModel start:{} co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:david, customerEmail:david.yuan124@gmail.com, level:null)
2014-02-03 07:57:29,303 [ckOrderInbound]] INFO  CustomerConverter              - toModel end:{} co.nz.pizzashack.data.model.CustomerModel@111c02a[custId=<null>,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
Hibernate: 
    insert 
    into
        t_customer
        (cust_id, address, credits, customer_name, email) 
    values
        (null, ?, ?, ?, ?)
2014-02-03 07:57:29,306 [ckOrderInbound]] INFO  OrderProcessDSImpl             - orderDetailsSet size:2 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
2014-02-03 07:57:29,315 [ckOrderInbound]] INFO  OrderProcessDSImpl             - added orderPizzashackModel:co.nz.pizzashack.data.model.OrderPizzashackModel@3e5c6430[orderPizzashackId=<null>,totalPrice=0,qty=4] 
Hibernate: 
    insert 
    into
        t_order_pizzashack
        (order_pizza_id, order_id, pizzashack_id, qty, total_price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
2014-02-03 07:57:29,322 [ckOrderInbound]] INFO  OrderProcessDSImpl             - added orderPizzashackModel:co.nz.pizzashack.data.model.OrderPizzashackModel@57df438c[orderPizzashackId=<null>,totalPrice=0,qty=10] 
Hibernate: 
    insert 
    into
        t_order_pizzashack
        (order_pizza_id, order_id, pizzashack_id, qty, total_price) 
    values
        (null, ?, ?, ?, ?)
2014-02-03 07:57:29,324 [ckOrderInbound]] INFO  OrderProcessDSImpl             - after add detailsDto, size in model:2 
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        E.BUSINESS_KEY_ = ?                                                                                 
        and RES.PROC_DEF_ID_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                    
        and RES.ASSIGNEE_ = ?                                                                        
        and E.BUSINESS_KEY_ = ?
2014-02-03 07:57:29,329 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@6ec63335[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=07:57:29,completeTime=<null>]
2014-02-03 07:57:29,334 [ckOrderInbound]] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@5c6cc572[orderId=1,orderNo=92e4494e-456f-4891-8e8f-e1503073fa39,quantity=0,status=0,paymentStatus=0,deliverTime=<null>,totalPrice=0,orderTime=2014-02-03 07:57:29.167]
2014-02-03 07:57:29,338 [ckOrderInbound]] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@111c02a[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 07:57:29,345 [ckOrderInbound]] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-02-03 07:57:29,350 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@3e5c6430[orderPizzashackId=1,totalPrice=0,qty=4]
2014-02-03 07:57:29,357 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0)
2014-02-03 07:57:29,357 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@57df438c[orderPizzashackId=2,totalPrice=0,qty=10]
2014-02-03 07:57:29,358 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)
2014-02-03 07:57:29,358 [ckOrderInbound]] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 06:57:29, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:57:29,364 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@6348b80f[userId=4,username=general,password=MTIzNDU2,createTime=07:57:10]
2014-02-03 07:57:29,364 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)
2014-02-03 07:57:29,365 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 06:57:29, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:57:29, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10))
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        PARENT_TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE 
    where
        TASK_ID_ =     ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
2014-02-03 07:57:29,392 [ckOrderInbound]] INFO  ainTransitionExecutionListener - orderMainUserTaskExecutionListener start:{} 
2014-02-03 07:57:29,392 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity id:orderCoreCallactivity
2014-02-03 07:57:29,392 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity name:Core process
2014-02-03 07:57:29,392 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity type:callActivity
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
start calculate: co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 06:57:29, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:57:29, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10))
2014-02-03 07:57:29,604 [ckOrderInbound]] INFO  PizzashackCaculator            - caculate start:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 06:57:29, deliverTime:null) 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 07:57:29,614 [ckOrderInbound]] INFO  PizzashackCaculator            - caculate end:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 06:57:29, deliverTime:null) 
after calculation: co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 06:57:29, deliverTime:null)
2014-02-03 07:57:29,615 [ckOrderInbound]] INFO  culationMergeExecutionListener - CaculationMergeExecutionListener start
2014-02-03 07:57:29,616 [ckOrderInbound]] INFO  culationMergeExecutionListener - after calculation, orderProcess:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 06:57:29, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:57:29, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)) 
2014-02-03 07:57:29,616 [ckOrderInbound]] INFO  OrderProcessAccessor           - merge calculation result
2014-02-03 07:57:29,616 [ckOrderInbound]] INFO  OrderProcessAccessor           - total price:390.00 
2014-02-03 07:57:29,616 [ckOrderInbound]] INFO  OrderProcessAccessor           - qty:14 
2014-02-03 07:57:29,616 [ckOrderInbound]] INFO  OrderProcessAccessor           - orderDetailsSet.size():2
2014-02-03 07:57:29,617 [ckOrderInbound]] INFO  culationMergeExecutionListener - CaculationMergeExecutionListener end
total qty: 14
after autoreview: 2
reviewTransBean: co.nz.pizzashack.data.dto.OrderReviewRecordDto(reviewRecordId:null, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, content:order number is more than 10 but less than 30, reviewResult:pending, createTime:2014-02-02 06:57:29, reviewer:null)
2014-02-03 07:57:29,685 [ckOrderInbound]] INFO  oManualReviewExecutionListener - ToManualReviewExecutionListener start:{} 
2014-02-03 07:57:29,685 [ckOrderInbound]] INFO  oManualReviewExecutionListener - eventName:take 
2014-02-03 07:57:29,685 [ckOrderInbound]] INFO  oManualReviewExecutionListener - activitiProcessDefinitionId:orderCoreProcess:1:11
2014-02-03 07:57:29,685 [ckOrderInbound]] INFO  oManualReviewExecutionListener - activitiProcesssInstanceId:30
2014-02-03 07:57:29,685 [ckOrderInbound]] INFO  oManualReviewExecutionListener - get orderReviewRecord:co.nz.pizzashack.data.dto.OrderReviewRecordDto(reviewRecordId:null, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, content:order number is more than 10 but less than 30, reviewResult:pending, createTime:2014-02-02 06:57:29, reviewer:null) 
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_IDENTITYLINK
        (ID_, REV_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_, PROC_DEF_ID_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_IDENTITYLINK
        (ID_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_)     
    values
        (?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_EXECUTION 
    set
        REV_ = ?,
        BUSINESS_KEY_ = ?,
        PROC_DEF_ID_ = ?,
        ACT_ID_ = ?,
        IS_ACTIVE_ = ?,
        IS_CONCURRENT_ = ?,
        IS_SCOPE_ = ?,
        IS_EVENT_SCOPE_ = ?,
        PARENT_ID_ = ?,
        SUPER_EXEC_ = ?,
        SUSPENSION_STATE_ = ?,
        CACHED_ENT_STATE_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_TASK 
    where
        ID_ = ? 
        and REV_ = ?
2014-02-03 07:57:29,749 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:57:29, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:57:29, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-02-03 07:57:29,761 [ckOrderInbound]] INFO  OrderProcessAccessor           - get OrderProcessDto from flow:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:57:29, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:57:29, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)) 
2014-02-03 07:57:29,761 [ckOrderInbound]] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 07:57:29,761 [ckOrderInbound]] INFO  ActivitiFacade                 - executionId: 30, processDefinitionId: orderCoreProcess:1:11
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 07:57:29,766 [ckOrderInbound]] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:57:29,770 [ckOrderInbound]] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo start:{}
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 07:57:29,771 [ckOrderInbound]] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo end:{}
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
2014-02-03 07:57:29,772 [ckOrderInbound]] INFO  OrderProcessAccessor           - after merge orderProcessModel:co.nz.pizzashack.data.model.OrderProcessModel@6ec63335[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=07:57:29,completeTime=<null>] 
2014-02-03 07:57:29,774 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:57:29, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:57:29, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)) 
2014-02-03 07:57:29,775 [ckOrderInbound]] INFO  OrderProcessDSImpl             - dataEntry end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:57:29, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:57:29, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10))
Hibernate: 
    update
        t_order_process 
    set
        active_process_definition_id=?,
        active_process_instance_id=?,
        complete_time=?,
        create_time=?,
        execution_id=?,
        main_process_definition_id=?,
        main_process_instance_id=?,
        operator_id=?,
        order_id=? 
    where
        order_process_id=?
Hibernate: 
    update
        t_order 
    set
        cust_id=?,
        deliver_time=?,
        order_no=?,
        order_time=?,
        payment_remarks=?,
        payment_status=?,
        quantity=?,
        ship_address=?,
        status=?,
        total_price=? 
    where
        order_id=?
Hibernate: 
    update
        t_order_pizzashack 
    set
        order_id=?,
        pizzashack_id=?,
        qty=?,
        total_price=? 
    where
        order_pizza_id=?
Hibernate: 
    update
        t_order_pizzashack 
    set
        order_id=?,
        pizzashack_id=?,
        qty=?,
        total_price=? 
    where
        order_pizza_id=?
2014-02-03 07:57:29,788 [ckOrderInbound]] INFO  OrderRequestProcessor          - after dataEntry:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:57:29, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:57:29, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)) 
2014-02-03 07:57:29,788 [ckOrderInbound]] INFO  OrderConverter                 - toModel start:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:57:29, deliverTime:null)
2014-02-03 07:57:29,788 [ckOrderInbound]] INFO  OrderConverter                 - toModel end:{} co.nz.pizzashack.data.model.OrderModel@41e1c07d[orderId=<null>,orderNo=92e4494e-456f-4891-8e8f-e1503073fa39,quantity=14,status=<null>,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=<null>]
Hibernate: 
    select
        orderreque0_.message_id as message1_0_0_,
        orderreque0_.created_at as created2_0_0_,
        orderreque0_.order_id as order4_0_0_,
        orderreque0_.processor_name as processor3_0_0_ 
    from
        t_order_request_history orderreque0_ 
    where
        orderreque0_.message_id=?
2014-02-03 07:57:29,790 [ckOrderInbound]] INFO  OrderRequestProcessor          - orderRequestProcessor end:{} 
2014-02-03 07:57:29,792 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlMarshal start:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:57:29, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:57:29, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10))
2014-02-03 07:57:29,802 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - pendingActivity:{} co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
2014-02-03 07:57:29,802 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - customerDto:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-02-03 07:57:29,821 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlMarshal end:{} <order-process>
  <process-id>1</process-id>
  <create-time>1969-12-31 07:57:29</create-time>
  <complete-time>null</complete-time>
  <operator>general</operator>
  <order>
    <order-no>92e4494e-456f-4891-8e8f-e1503073fa39</order-no>
    <address>25 mavon downs</address>
    <quantity>14</quantity>
    <total-price>390.00</total-price>
    <status>pendingOnReview</status>
    <order-time>2014-02-02 06:57:29</order-time>
    <deliver-time>null</deliver-time>
    <order-list>
      <order-details>
        <pizza-name>Garden Fresh</pizza-name>
        <quantity>4</quantity>
        <total-price>140.00</total-price>
      </order-details>
      <order-details>
        <pizza-name>Chicken Parmesan</pizza-name>
        <quantity>10</quantity>
        <total-price>250.00</total-price>
      </order-details>
    </order-list>
  </order>
  <customer>
    <name>david</name>
    <email>david.yuan124@gmail.com</email>
  </customer>
  <pending-activity>
    <name>Manual underwriting</name>
    <type>userTask</type>
    <assignee>null</assignee>
  </pending-activity>
</order-process>
2014-02-03 07:57:29,823 [ckOrderInbound]] INFO  output                         - Exchange[ExchangePattern: InOnly, BodyType: String, Body: <order-process>  <process-id>1</process-id>  <create-time>1969-12-31 07:57:29</create-time>  <complete-time>null</complete-time>  <operator>general</operator>  <order>    <order-no>92e4494e-456f-4891-8e8f-e1503073fa39</order-no>    <address>25 mavon downs</address>    <quantity>14</quantity>    <total-price>390.00</total-price>    <status>pendingOnReview</status>    <order-time>2014-02-02 06:57:29</order-time>    <deliver-time>null</deliver-time>    <order-list>      <order-details>        <pizza-name>Garden Fresh</pizza-name>        <quantity>4</quantity>        <total-price>140.00</total-price>      </order-details>      <order-details>        <pizza-name>Chicken Parmesan</pizza-name>        <quantity>10</quantity>        <total-price>250.00</total-price>      </order-details>    </order-list>  </order>  <customer>    <name>david</name>    <email>david.yuan124@gmail.com</email>  </customer>  <pending-activity>    <name>Manual underwriting</name>    <type>userTask</type>    <assignee>null</assignee>  </pending-activity></order-process>]
2014-02-03 07:57:29,981 [ckOrderInbound]] INFO  orderProcessRoute              - Signalled to stop route
2014-02-03 07:57:37,329 [ckOrderInbound]] INFO  orderProcessRoute              - Received message 70569
Hibernate: 
    SELECT
        COUNT(*) 
    FROM
        T_ORDER_REQUEST_HISTORY 
    WHERE
        processor_name = ? 
        AND message_id = ?
Hibernate: 
    INSERT 
    INTO
        T_ORDER_REQUEST_HISTORY
        (processor_name, message_id, created_at) 
    VALUES
        (?, ?, ?)
2014-02-03 07:57:37,332 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlUnmarshal start:{} <order>
  <address>25 mavon downs</address>
  <order-list>
    <order-details>
      <pizza-name>Chicken Parmesan</pizza-name>
      <quantity>2</quantity>
    </order-details>
    <order-details>
      <pizza-name>Spicy Italian</pizza-name>
      <quantity>4</quantity>
    </order-details>
  </order-list>
  <customer>
    <name>david</name>
    <email>david.yuan124@gmail.com</email>
  </customer>
</order>
orderDetailsDto: co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:2, totalPrice:0)
orderDetailsDto: co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Spicy Italian, qty:4, totalPrice:0)
2014-02-03 07:57:37,335 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlUnmarshal end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:null, orderNo:null, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:david, customerEmail:david.yuan124@gmail.com, level:null), address:25 mavon downs, status:null, orderTime:null, deliverTime:null)
2014-02-03 07:57:37,335 [ckOrderInbound]] INFO  OrderRequestProcessor          - orderRequestProcessor start:{} 
2014-02-03 07:57:37,335 [ckOrderInbound]] INFO  OrderRequestProcessor          - order request:co.nz.pizzashack.data.dto.OrderDto(orderId:null, orderNo:null, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:david, customerEmail:david.yuan124@gmail.com, level:null), address:25 mavon downs, status:null, orderTime:null, deliverTime:null) 
2014-02-03 07:57:37,335 [ckOrderInbound]] INFO  OrderRequestProcessor          - messageId:70569 
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
2014-02-03 07:57:37,337 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@4068b27c[userId=4,username=general,password=MTIzNDU2,createTime=07:57:10]
2014-02-03 07:57:37,337 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)
2014-02-03 07:57:37,337 [ckOrderInbound]] INFO  OrderRequestProcessor          - default operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10) 
2014-02-03 07:57:37,338 [ckOrderInbound]] INFO  OrderProcessDSImpl             - startOrderProcess start:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.process_definition_key=? 
        and workflowmo0_.category=? limit ?
Hibernate: 
    insert 
    into
        t_order
        (order_id, cust_id, deliver_time, order_no, order_time, payment_remarks, payment_status, quantity, ship_address, status, total_price) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:57:37,341 [ckOrderInbound]] INFO  ActivitiFacade                 - startProcessInstance start:{}
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
2014-02-03 07:57:37,346 [ckOrderInbound]] INFO  ActivitiFacade                 - startProcessInstance end:{}
Hibernate: 
    insert 
    into
        t_order_process
        (order_process_id, active_process_definition_id, active_process_instance_id, complete_time, create_time, execution_id, main_process_definition_id, main_process_instance_id, operator_id, order_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2014-02-03 07:57:37,347 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@6bccad6b[orderProcessId=2,executionId=59,mainProcessInstanceId=59,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=59,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=Mon Feb 03 07:57:37 NZDT 2014,completeTime=<null>]
2014-02-03 07:57:37,347 [ckOrderInbound]] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@e98fff5[orderId=2,orderNo=b4283ff2-f0e2-4543-a0de-4f1230b6ee08,quantity=<null>,status=0,paymentStatus=0,deliverTime=<null>,totalPrice=<null>,orderTime=Mon Feb 03 07:57:37 NZDT 2014]
2014-02-03 07:57:37,348 [ckOrderInbound]] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 06:57:37, deliverTime:null)
2014-02-03 07:57:37,349 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@37cd853a[userId=4,username=general,password=MTIzNDU2,createTime=07:57:10]
2014-02-03 07:57:37,349 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)
2014-02-03 07:57:37,349 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 06:57:37, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 06:57:37, completeTime:null, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10))
2014-02-03 07:57:37,350 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 06:57:37, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 06:57:37, completeTime:null, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
2014-02-03 07:57:37,353 [ckOrderInbound]] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 07:57:37,353 [ckOrderInbound]] INFO  ActivitiFacade                 - executionId: 59, processDefinitionId: orderlocalProcess:1:15
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 07:57:37,356 [ckOrderInbound]] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:57:37,357 [ckOrderInbound]] INFO  OrderProcessAccessor           - assign operator[4] to task[Data entry]
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    insert 
    into
        ACT_RU_IDENTITYLINK
        (ID_, REV_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_, PROC_DEF_ID_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_IDENTITYLINK
        (ID_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_)     
    values
        (?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_TASK      
    SET
        REV_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        PRIORITY_ = ?,
        CREATE_TIME_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        DELEGATION_ = ?,
        EXECUTION_ID_ = ?,
        PROC_DEF_ID_ = ?,
        DESCRIPTION_ = ?,
        DUE_DATE_ = ?,
        SUSPENSION_STATE_ = ?      
    where
        ID_= ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
2014-02-03 07:57:37,366 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 06:57:37, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 06:57:37, completeTime:null, executionId:59, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)) 
2014-02-03 07:57:37,367 [ckOrderInbound]] INFO  OrderProcessDSImpl             - startOrderProcess end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 06:57:37, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 06:57:37, completeTime:null, executionId:59, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10))
2014-02-03 07:57:37,369 [ckOrderInbound]] INFO  OrderRequestProcessor          - after start process:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 06:57:37, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 06:57:37, completeTime:null, executionId:59, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)) 
2014-02-03 07:57:37,369 [ckOrderInbound]] INFO  OrderProcessDSImpl             - dataEntry start:b4283ff2-f0e2-4543-a0de-4f1230b6ee08
2014-02-03 07:57:37,369 [ckOrderInbound]] INFO  OrderProcessDSImpl             - getOrderProcessByOrderNo start************************************
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 07:57:37,371 [ckOrderInbound]] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@7289b546[orderProcessId=2,executionId=59,mainProcessInstanceId=59,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=59,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=07:57:37,completeTime=<null>] 
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_,
        customermo0_.address as address2_,
        customermo0_.credits as credits2_,
        customermo0_.customer_name as customer4_2_,
        customermo0_.email as email2_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.email=? limit ?
2014-02-03 07:57:37,372 [ckOrderInbound]] INFO  OrderProcessDSImpl             - orderDetailsSet size:2 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
2014-02-03 07:57:37,373 [ckOrderInbound]] INFO  OrderProcessDSImpl             - added orderPizzashackModel:co.nz.pizzashack.data.model.OrderPizzashackModel@30bffe08[orderPizzashackId=<null>,totalPrice=0,qty=2] 
Hibernate: 
    insert 
    into
        t_order_pizzashack
        (order_pizza_id, order_id, pizzashack_id, qty, total_price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
2014-02-03 07:57:37,375 [ckOrderInbound]] INFO  OrderProcessDSImpl             - added orderPizzashackModel:co.nz.pizzashack.data.model.OrderPizzashackModel@25c7f2fd[orderPizzashackId=<null>,totalPrice=0,qty=4] 
Hibernate: 
    insert 
    into
        t_order_pizzashack
        (order_pizza_id, order_id, pizzashack_id, qty, total_price) 
    values
        (null, ?, ?, ?, ?)
2014-02-03 07:57:37,376 [ckOrderInbound]] INFO  OrderProcessDSImpl             - after add detailsDto, size in model:2 
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        E.BUSINESS_KEY_ = ?                                                                                 
        and RES.PROC_DEF_ID_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                    
        and RES.ASSIGNEE_ = ?                                                                        
        and E.BUSINESS_KEY_ = ?
2014-02-03 07:57:37,380 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@7289b546[orderProcessId=2,executionId=59,mainProcessInstanceId=59,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=59,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=07:57:37,completeTime=<null>]
2014-02-03 07:57:37,380 [ckOrderInbound]] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@3a7f34c2[orderId=2,orderNo=b4283ff2-f0e2-4543-a0de-4f1230b6ee08,quantity=0,status=0,paymentStatus=0,deliverTime=<null>,totalPrice=0,orderTime=2014-02-03 07:57:37.339]
2014-02-03 07:57:37,380 [ckOrderInbound]] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@3f588fc[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 07:57:37,381 [ckOrderInbound]] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-02-03 07:57:37,381 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@30bffe08[orderPizzashackId=3,totalPrice=0,qty=2]
2014-02-03 07:57:37,381 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:0)
2014-02-03 07:57:37,381 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@25c7f2fd[orderPizzashackId=4,totalPrice=0,qty=4]
2014-02-03 07:57:37,381 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:0)
2014-02-03 07:57:37,382 [ckOrderInbound]] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 06:57:37, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:57:37,383 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@3340a0de[userId=4,username=general,password=MTIzNDU2,createTime=07:57:10]
2014-02-03 07:57:37,383 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)
2014-02-03 07:57:37,384 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 06:57:37, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:57:37, completeTime:null, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10))
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        PARENT_TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE 
    where
        TASK_ID_ =     ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
2014-02-03 07:57:37,392 [ckOrderInbound]] INFO  ainTransitionExecutionListener - orderMainUserTaskExecutionListener start:{} 
2014-02-03 07:57:37,392 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity id:orderCoreCallactivity
2014-02-03 07:57:37,392 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity name:Core process
2014-02-03 07:57:37,392 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity type:callActivity
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
start calculate: co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 06:57:37, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:57:37, completeTime:null, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10))
2014-02-03 07:57:37,408 [ckOrderInbound]] INFO  PizzashackCaculator            - caculate start:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 06:57:37, deliverTime:null) 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 07:57:37,412 [ckOrderInbound]] INFO  PizzashackCaculator            - caculate end:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 06:57:37, deliverTime:null) 
after calculation: co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 06:57:37, deliverTime:null)
2014-02-03 07:57:37,413 [ckOrderInbound]] INFO  culationMergeExecutionListener - CaculationMergeExecutionListener start
2014-02-03 07:57:37,413 [ckOrderInbound]] INFO  culationMergeExecutionListener - after calculation, orderProcess:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 06:57:37, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:57:37, completeTime:null, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)) 
2014-02-03 07:57:37,413 [ckOrderInbound]] INFO  OrderProcessAccessor           - merge calculation result
2014-02-03 07:57:37,413 [ckOrderInbound]] INFO  OrderProcessAccessor           - total price:162.00 
2014-02-03 07:57:37,413 [ckOrderInbound]] INFO  OrderProcessAccessor           - qty:6 
2014-02-03 07:57:37,413 [ckOrderInbound]] INFO  OrderProcessAccessor           - orderDetailsSet.size():2
2014-02-03 07:57:37,414 [ckOrderInbound]] INFO  culationMergeExecutionListener - CaculationMergeExecutionListener end
total qty: 6
after autoreview: 0
reviewTransBean: co.nz.pizzashack.data.dto.OrderReviewRecordDto(reviewRecordId:null, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, content:null, reviewResult:accept, createTime:2014-02-02 06:57:37, reviewer:null)
Hibernate: 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = ?
Hibernate: 
    update
        ACT_GE_PROPERTY      
    SET
        REV_ = ?,
        VALUE_ = ?      
    where
        NAME_ = ?       
        and REV_ = ?
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RU_JOB J     
    where
        J.EXECUTION_ID_ = ?
Hibernate: 
    select
        *      
    from
        ACT_RU_EVENT_SUBSCR     
    where
        (
            EXECUTION_ID_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
2014-02-03 07:57:37,451 [ckOrderInbound]] INFO  OfCoreProcessExecutionListener - after core process, orderProcess:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 06:57:37, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:57:37, completeTime:null, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)) 
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:57:37,452 [ckOrderInbound]] INFO  ainTransitionExecutionListener - orderMainUserTaskExecutionListener start:{} 
2014-02-03 07:57:37,452 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity id:billingEntry
2014-02-03 07:57:37,452 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity name:Billing fill in
2014-02-03 07:57:37,452 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity type:userTask
2014-02-03 07:57:37,452 [ckOrderInbound]] INFO  ainTransitionExecutionListener - order status:pendingOnBilling 
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_EXECUTION 
    set
        REV_ = ?,
        BUSINESS_KEY_ = ?,
        PROC_DEF_ID_ = ?,
        ACT_ID_ = ?,
        IS_ACTIVE_ = ?,
        IS_CONCURRENT_ = ?,
        IS_SCOPE_ = ?,
        IS_EVENT_SCOPE_ = ?,
        PARENT_ID_ = ?,
        SUPER_EXEC_ = ?,
        SUSPENSION_STATE_ = ?,
        CACHED_ENT_STATE_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_TASK 
    where
        ID_ = ? 
        and REV_ = ?
2014-02-03 07:57:37,490 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:57:37, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:57:37, completeTime:null, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-02-03 07:57:37,497 [ckOrderInbound]] INFO  OrderProcessAccessor           - get OrderProcessDto from flow:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:57:37, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:57:37, completeTime:null, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)) 
2014-02-03 07:57:37,497 [ckOrderInbound]] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 07:57:37,497 [ckOrderInbound]] INFO  ActivitiFacade                 - executionId: 59, processDefinitionId: orderlocalProcess:1:15
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 07:57:37,503 [ckOrderInbound]] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:57:37,506 [ckOrderInbound]] INFO  OrderProcessAccessor           - assign operator[4] to task[Billing fill in]
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_TASK      
    SET
        REV_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        PRIORITY_ = ?,
        CREATE_TIME_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        DELEGATION_ = ?,
        EXECUTION_ID_ = ?,
        PROC_DEF_ID_ = ?,
        DESCRIPTION_ = ?,
        DUE_DATE_ = ?,
        SUSPENSION_STATE_ = ?      
    where
        ID_= ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
2014-02-03 07:57:37,512 [ckOrderInbound]] INFO  OrderProcessAccessor           - after merge orderProcessModel:co.nz.pizzashack.data.model.OrderProcessModel@7289b546[orderProcessId=2,executionId=59,mainProcessInstanceId=59,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=59,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=07:57:37,completeTime=<null>] 
2014-02-03 07:57:37,514 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:57:37, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:57:37, completeTime:null, executionId:59, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)) 
2014-02-03 07:57:37,515 [ckOrderInbound]] INFO  OrderProcessDSImpl             - dataEntry end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:57:37, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:57:37, completeTime:null, executionId:59, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10))
Hibernate: 
    update
        t_order 
    set
        cust_id=?,
        deliver_time=?,
        order_no=?,
        order_time=?,
        payment_remarks=?,
        payment_status=?,
        quantity=?,
        ship_address=?,
        status=?,
        total_price=? 
    where
        order_id=?
Hibernate: 
    update
        t_order_pizzashack 
    set
        order_id=?,
        pizzashack_id=?,
        qty=?,
        total_price=? 
    where
        order_pizza_id=?
Hibernate: 
    update
        t_order_pizzashack 
    set
        order_id=?,
        pizzashack_id=?,
        qty=?,
        total_price=? 
    where
        order_pizza_id=?
2014-02-03 07:57:37,518 [ckOrderInbound]] INFO  OrderRequestProcessor          - after dataEntry:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:57:37, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:57:37, completeTime:null, executionId:59, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)) 
2014-02-03 07:57:37,519 [ckOrderInbound]] INFO  OrderConverter                 - toModel start:{} co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:57:37, deliverTime:null)
2014-02-03 07:57:37,519 [ckOrderInbound]] INFO  OrderConverter                 - toModel end:{} co.nz.pizzashack.data.model.OrderModel@63904513[orderId=<null>,orderNo=b4283ff2-f0e2-4543-a0de-4f1230b6ee08,quantity=6,status=<null>,paymentStatus=0,deliverTime=<null>,totalPrice=162.00,orderTime=<null>]
Hibernate: 
    select
        orderreque0_.message_id as message1_0_0_,
        orderreque0_.created_at as created2_0_0_,
        orderreque0_.order_id as order4_0_0_,
        orderreque0_.processor_name as processor3_0_0_ 
    from
        t_order_request_history orderreque0_ 
    where
        orderreque0_.message_id=?
2014-02-03 07:57:37,520 [ckOrderInbound]] INFO  OrderRequestProcessor          - orderRequestProcessor end:{} 
2014-02-03 07:57:37,522 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlMarshal start:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:57:37, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:57:37, completeTime:null, executionId:59, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10))
2014-02-03 07:57:37,523 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - pendingActivity:{} co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
2014-02-03 07:57:37,523 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - customerDto:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-02-03 07:57:37,526 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlMarshal end:{} <order-process>
  <process-id>2</process-id>
  <create-time>1969-12-31 07:57:37</create-time>
  <complete-time>null</complete-time>
  <operator>general</operator>
  <order>
    <order-no>b4283ff2-f0e2-4543-a0de-4f1230b6ee08</order-no>
    <address>25 mavon downs</address>
    <quantity>6</quantity>
    <total-price>162.00</total-price>
    <status>pendingOnBilling</status>
    <order-time>2014-02-02 06:57:37</order-time>
    <deliver-time>null</deliver-time>
    <order-list>
      <order-details>
        <pizza-name>Chicken Parmesan</pizza-name>
        <quantity>2</quantity>
        <total-price>50.00</total-price>
      </order-details>
      <order-details>
        <pizza-name>Spicy Italian</pizza-name>
        <quantity>4</quantity>
        <total-price>112.00</total-price>
      </order-details>
    </order-list>
  </order>
  <customer>
    <name>david</name>
    <email>david.yuan124@gmail.com</email>
  </customer>
  <pending-activity>
    <name>Billing fill in</name>
    <type>userTask</type>
    <assignee>general</assignee>
  </pending-activity>
</order-process>
2014-02-03 07:57:37,526 [ckOrderInbound]] INFO  output                         - Exchange[ExchangePattern: InOnly, BodyType: String, Body: <order-process>  <process-id>2</process-id>  <create-time>1969-12-31 07:57:37</create-time>  <complete-time>null</complete-time>  <operator>general</operator>  <order>    <order-no>b4283ff2-f0e2-4543-a0de-4f1230b6ee08</order-no>    <address>25 mavon downs</address>    <quantity>6</quantity>    <total-price>162.00</total-price>    <status>pendingOnBilling</status>    <order-time>2014-02-02 06:57:37</order-time>    <deliver-time>null</deliver-time>    <order-list>      <order-details>        <pizza-name>Chicken Parmesan</pizza-name>        <quantity>2</quantity>        <total-price>50.00</total-price>      </order-details>      <order-details>        <pizza-name>Spicy Italian</pizza-name>        <quantity>4</quantity>        <total-price>112.00</total-price>      </order-details>    </order-list>  </order>  <customer>    <name>david</name>    <email>david.yuan124@gmail.com</email>  </customer>  <pending-activity>    <name>Billing fill in</name>    <type>userTask</type>    <assignee>general</assignee>  </pending-activity></order-process>]
2014-02-03 07:57:37,565 [ckOrderInbound]] INFO  orderProcessRoute              - Signalled to stop route
2014-02-03 07:57:38,416 [tp2073719880-39] INFO  input                          - Exchange[ExchangePattern: InOut, BodyType: org.apache.cxf.message.MessageContentsList, Body: [co.nz.pizzashack.data.dto.BillingDto(billingRequestId:null, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, billingCode:null, billingMessage:null, billingTime:null, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111))]]
2014-02-03 07:57:38,417 [tp2073719880-39] INFO  BillingInboundProcessor        - BillingInboundProcessor start:{} 
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
2014-02-03 07:57:38,423 [tp2073719880-39] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@54a3fc8e[userId=4,username=general,password=MTIzNDU2,createTime=07:57:10]
2014-02-03 07:57:38,423 [tp2073719880-39] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)
2014-02-03 07:57:38,423 [tp2073719880-39] INFO  BillingInboundProcessor        - default operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10) 
2014-02-03 07:57:38,424 [tp2073719880-39] INFO  OrderProcessDSImpl             - fillinBillingAccount start:co.nz.pizzashack.data.dto.BillingDto(billingRequestId:28291, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, billingCode:null, billingMessage:null, billingTime:2014-02-02 06:57:38, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111))
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 07:57:38,428 [tp2073719880-39] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@48a78b03[orderProcessId=2,executionId=59,mainProcessInstanceId=59,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=59,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=07:57:37,completeTime=<null>] 
2014-02-03 07:57:38,428 [tp2073719880-39] INFO  OrderProcessDSImpl             - doFillinBillingAccount start:{} 
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        E.BUSINESS_KEY_ = ?                                                                                 
        and RES.PROC_DEF_ID_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:57:38,431 [tp2073719880-39] INFO  OrderProcessDSImpl             - current task:Billing fill in 
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                    
        and RES.ASSIGNEE_ = ?                                                                        
        and E.BUSINESS_KEY_ = ?
2014-02-03 07:57:38,433 [tp2073719880-39] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@48a78b03[orderProcessId=2,executionId=59,mainProcessInstanceId=59,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=59,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=07:57:37,completeTime=<null>]
2014-02-03 07:57:38,434 [tp2073719880-39] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@7209acb[orderId=2,orderNo=b4283ff2-f0e2-4543-a0de-4f1230b6ee08,quantity=6,status=5,paymentStatus=0,deliverTime=<null>,totalPrice=162.00,orderTime=2014-02-03 07:57:37.339]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 07:57:38,443 [tp2073719880-39] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@7d0c7d67[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 07:57:38,445 [tp2073719880-39] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 07:57:38,452 [tp2073719880-39] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@61cbd176[orderPizzashackId=3,totalPrice=50.00,qty=2]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:57:38,456 [tp2073719880-39] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00)
2014-02-03 07:57:38,456 [tp2073719880-39] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@c24cc23[orderPizzashackId=4,totalPrice=112.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:57:38,457 [tp2073719880-39] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)
2014-02-03 07:57:38,457 [tp2073719880-39] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:57:37, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:57:38,458 [tp2073719880-39] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@33f6e7fd[userId=4,username=general,password=MTIzNDU2,createTime=07:57:10]
2014-02-03 07:57:38,458 [tp2073719880-39] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)
2014-02-03 07:57:38,459 [tp2073719880-39] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:57:37, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:57:37, completeTime:null, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10))
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        PARENT_TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE 
    where
        TASK_ID_ =     ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
2014-02-03 07:57:38,474 [tp2073719880-39] INFO  ainTransitionExecutionListener - orderMainUserTaskExecutionListener start:{} 
2014-02-03 07:57:38,474 [tp2073719880-39] INFO  ainTransitionExecutionListener - nextActivity id:billingCallactivity
2014-02-03 07:57:38,474 [tp2073719880-39] INFO  ainTransitionExecutionListener - nextActivity name:Billing
2014-02-03 07:57:38,474 [tp2073719880-39] INFO  ainTransitionExecutionListener - nextActivity type:callActivity
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
2014-02-03 07:57:38,480 [tp2073719880-39] INFO  input                          - Exchange[ExchangePattern: InOnly, BodyType: java.util.HashMap, Body: {orderTransBean=co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:57:37, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:57:37, completeTime:null, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)), billingTransBean=co.nz.pizzashack.data.dto.BillingDto(billingRequestId:28291, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, billingCode:null, billingMessage:null, billingTime:2014-02-02 06:57:38, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111)), indenpendentProcess=false}]
2014-02-03 07:57:38,480 [tp2073719880-39] INFO  BillingVariableTransformer     - after transform billing:co.nz.pizzashack.data.dto.BillingDto(billingRequestId:28291, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, billingCode:null, billingMessage:null, billingTime:2014-02-02 06:57:38, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111)) 
2014-02-03 07:57:38,492 [tp2073719880-39] INFO  BillingFormatTransformer       - billingReqXmlMarshal start:{} co.nz.pizzashack.data.dto.BillingDto(billingRequestId:28291, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, billingCode:null, billingMessage:null, billingTime:2014-02-02 06:57:38, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111))
2014-02-03 07:57:38,495 [tp2073719880-39] INFO  BillingFormatTransformer       - billingReqXmlMarshal end:{} <billing>
  <account>
    <account-no>111111</account-no>
    <security-no>111</security-no>
    <expire-date>2019-06-24</expire-date>
    <account-type>credit</account-type>
  </account>
  <billing-amount>162.00</billing-amount>
  <create-time>2014-02-02 06:57:38</create-time>
</billing>
2014-02-03 07:57:38,496 [tp2073719880-39] INFO  myLog                          - Exchange[Id: ID-david-55208-1391367428308-0-6, ExchangePattern: InOut, Properties: {BillingRequest=co.nz.pizzashack.data.dto.BillingDto(billingRequestId:28291, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, billingCode:null, billingMessage:null, billingTime:2014-02-02 06:57:38, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111)), CamelCreatedTimestamp=Mon Feb 03 07:57:38 NZDT 2014, CamelMessageHistory=[DefaultMessageHistory[routeId=activitiBillingProcess, node=to1], DefaultMessageHistory[routeId=activitiBillingProcess, node=setHeader1], DefaultMessageHistory[routeId=activitiBillingProcess, node=to2], DefaultMessageHistory[routeId=direct:billingIntegration, node=transform1], DefaultMessageHistory[routeId=direct:billingIntegration, node=setHeader2], DefaultMessageHistory[routeId=direct:billingIntegration, node=to3], DefaultMessageHistory[routeId=route1, node=setExchangePattern1], DefaultMessageHistory[routeId=route1, node=setProperty1], DefaultMessageHistory[routeId=route1, node=bean1], DefaultMessageHistory[routeId=route1, node=to5]], CamelToEndpoint=log://myLog?showAll=true, PROCESS_ID_PROPERTY=123}, Headers: {breadcrumbId=ID-david-55208-1391367428308-0-5, destination=activiti:orderBillingProcess:receiveBillingResult, messageId=28291}, BodyType: String, Body: <billing>  <account>    <account-no>111111</account-no>    <security-no>111</security-no>    <expire-date>2019-06-24</expire-date>    <account-type>credit</account-type>  </account>  <billing-amount>162.00</billing-amount>  <create-time>2014-02-02 06:57:38</create-time></billing>, Out: null: ]
2014-02-03 07:57:38,781 [illingOutbound]] INFO  route1                         - jmsMsgId set = ID:david-58528-1391365586496-1:1858:1:1:1
2014-02-03 07:57:38,782 [illingOutbound]] INFO  myLog                          - Exchange[Id: ID-david-55208-1391367428308-0-6, ExchangePattern: InOut, Properties: {BillingRequest=co.nz.pizzashack.data.dto.BillingDto(billingRequestId:28291, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, billingCode:null, billingMessage:null, billingTime:2014-02-02 06:57:38, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111)), CamelCreatedTimestamp=Mon Feb 03 07:57:38 NZDT 2014, CamelExternalRedelivered=false, CamelMessageHistory=[DefaultMessageHistory[routeId=activitiBillingProcess, node=to1], DefaultMessageHistory[routeId=activitiBillingProcess, node=setHeader1], DefaultMessageHistory[routeId=activitiBillingProcess, node=to2], DefaultMessageHistory[routeId=direct:billingIntegration, node=transform1], DefaultMessageHistory[routeId=direct:billingIntegration, node=setHeader2], DefaultMessageHistory[routeId=direct:billingIntegration, node=to3], DefaultMessageHistory[routeId=route1, node=setExchangePattern1], DefaultMessageHistory[routeId=route1, node=setProperty1], DefaultMessageHistory[routeId=route1, node=bean1], DefaultMessageHistory[routeId=route1, node=to5], DefaultMessageHistory[routeId=route1, node=to6], DefaultMessageHistory[routeId=route1, node=log1], DefaultMessageHistory[routeId=route1, node=to7]], CamelToEndpoint=log://myLog?showAll=true, PROCESS_ID_PROPERTY=123}, Headers: {accountNo=111111, breadcrumbId=ID-david-55208-1391367428308-0-5, CamelJmsDeliveryMode=2, CamelSqlUpdateCount=1, code=000, destination=activiti:orderBillingProcess:receiveBillingResult, JMSCorrelationID=Camel-ID-david-55208-1391367428308-0-7, JMSDeliveryMode=2, JMSDestination=queue://pizzashackBillingOutbound, JMSExpiration=0, JMSMessageID=ID:david-58528-1391365586496-1:1858:1:1:1, JMSPriority=4, JMSRedelivered=false, JMSReplyTo=null, JMSTimestamp=1391367458779, JMSType=null, JMSXGroupID=null, JMSXUserID=null, messageId=28291, transactionNo=31dcb4b2-1c92-407e-98a3-a3f7dd15a139}, BodyType: String, Body: <account-transaction>  <transaction-no>31dcb4b2-1c92-407e-98a3-a3f7dd15a139</transaction-no>  <account-no>111111</account-no>  <code>000</code>  <reasons>null</reasons>  <create-time>2014-02-02 06:57:38</create-time></account-transaction>, Out: null: ]
2014-02-03 07:57:38,782 [illingOutbound]] INFO  BillingFormatTransformer       - billingRespXmalUnmarshal start:{} <account-transaction>
  <transaction-no>31dcb4b2-1c92-407e-98a3-a3f7dd15a139</transaction-no>
  <account-no>111111</account-no>
  <code>000</code>
  <reasons>null</reasons>
  <create-time>2014-02-02 06:57:38</create-time>
</account-transaction>
2014-02-03 07:57:38,785 [illingOutbound]] INFO  BillingFormatTransformer       - billingRespXmalUnmarshal end:{} co.nz.pizzashack.data.dto.BillingDto(billingRequestId:null, orderNo:null, billingCode:000, billingMessage:null, billingTime:null, billingAmount:null, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:null, expireDate:null, securityNo:null))
2014-02-03 07:57:38,785 [illingOutbound]] INFO  BillingResponseMergeProcessor  - billingReq:co.nz.pizzashack.data.dto.BillingDto(billingRequestId:28291, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, billingCode:null, billingMessage:null, billingTime:2014-02-02 06:57:38, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111)) 
2014-02-03 07:57:38,785 [illingOutbound]] INFO  BillingResponseMergeProcessor  - billingResp:co.nz.pizzashack.data.dto.BillingDto(billingRequestId:null, orderNo:null, billingCode:000, billingMessage:null, billingTime:null, billingAmount:null, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:null, expireDate:null, securityNo:null)) 
2014-02-03 07:57:38,794 [tp2073719880-39] INFO  BillingRespExecutionListener   - BillingRespExecutionListener execute start:{}
2014-02-03 07:57:38,794 [tp2073719880-39] INFO  BillingRespExecutionListener   - get billing after integration:co.nz.pizzashack.data.dto.BillingDto(billingRequestId:28291, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, billingCode:000, billingMessage:null, billingTime:2014-02-02 06:57:38, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111))
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:57:38,796 [tp2073719880-39] INFO  BillingRespExecutionListener   - activitiProcessDefinitionId:orderBillingProcess:1:7
2014-02-03 07:57:38,796 [tp2073719880-39] INFO  BillingRespExecutionListener   - activitiProcesssInstanceId:123
2014-02-03 07:57:38,796 [tp2073719880-39] INFO  BillingRespExecutionListener   - Key : camelBody Value : co.nz.pizzashack.data.dto.BillingDto(billingRequestId:28291, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, billingCode:000, billingMessage:null, billingTime:2014-02-02 06:57:38, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111))
2014-02-03 07:57:38,796 [tp2073719880-39] INFO  BillingRespExecutionListener   - Key : billingProcessStatus Value : 0
2014-02-03 07:57:38,797 [tp2073719880-39] INFO  BillingRespExecutionListener   - Key : billingTransBean Value : co.nz.pizzashack.data.dto.BillingDto(billingRequestId:28291, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, billingCode:000, billingMessage:null, billingTime:2014-02-02 06:57:38, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111))
2014-02-03 07:57:38,797 [tp2073719880-39] INFO  BillingRespExecutionListener   - Key : orderTransBean Value : co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:57:37, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:123, activeProcessDefinitionId:orderBillingProcess:1:7, createTime:1969-12-31 07:57:37, completeTime:null, executionId:123, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10))
2014-02-03 07:57:38,797 [tp2073719880-39] INFO  BillingRespExecutionListener   - Key : indenpendentProcess Value : false
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
2014-02-03 07:57:38,815 [ad #4 - WireTap] INFO  input                          - Exchange[ExchangePattern: InOnly, BodyType: co.nz.pizzashack.data.dto.BillingDto, Body: <?xml version="1.0" encoding="UTF-8" standalone="yes"?><billingRequest>    <billingRequestId>28291</billingRequestId>    <orderNo>b4283ff2-f0e2-4543-a0de-4f1230b6ee08</orderNo>    <billingCode>000</billingCode>    <billingMessage>null</billingMessage>    <billingTime>2014-02-02 06:57:38</billingTime>    <billingAmount>162.00</billingAmount>    <account>        <paymode>credit</paymode>        <accountNo>111111</accountNo>        <expireDate>2019-06-24</expireDate>        <securityNo>111</securityNo>    </account></billingRequest>]
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
2014-02-03 07:57:38,831 [ad #4 - WireTap] ERROR DefaultErrorHandler            - Failed delivery for (MessageId: ID-david-55208-1391367428308-0-8 on ExchangeId: ID-david-55208-1391367428308-0-10). Exhausted after delivery attempt: 1 caught: java.lang.NullPointerException

Message History
---------------------------------------------------------------------------------------------------------------------------------------
RouteId              ProcessorId          Processor                                                                        Elapsed (ms)
[activitiBillingPro] [activitiBillingPro] [                                                                              ] [       349]
[activitiBillingPro] [to1               ] [log:input                                                                     ] [         1]
[activitiBillingPro] [setHeader1        ] [setHeader[destination]                                                        ] [         0]
[activitiBillingPro] [to2               ] [direct:billingIntegration                                                     ] [       307]
[direct:billingInte] [transform1        ] [transform[{co.nz.pizzashack.integration.mapping.BillingVariableTransformer@4be] [         0]
[direct:billingInte] [setHeader2        ] [setHeader[messageId]                                                          ] [        11]
[direct:billingInte] [to3               ] [direct:doBillingIntegration                                                   ] [       295]
[route1            ] [setExchangePattern] [setExchangePattern[InOut]                                                     ] [         0]
[route1            ] [setProperty1      ] [setProperty[BillingRequest]                                                   ] [         0]
[route1            ] [bean1             ] [bean[co.nz.pizzashack.integration.mapping.BillingFormatTransformer@55cba0db]  ] [         4]
[route1            ] [to5               ] [log:myLog?showAll=true                                                        ] [         1]
[route1            ] [to6               ] [jms:queue:pizzashackBillingInbound?transacted=true&replyTo=pizzashackBillingOu] [       285]
[route1            ] [log1              ] [log                                                                           ] [         0]
[route1            ] [to7               ] [log:myLog?showAll=true                                                        ] [         1]
[route1            ] [bean2             ] [bean[co.nz.pizzashack.integration.mapping.BillingFormatTransformer@55cba0db]  ] [         3]
[route1            ] [process1          ] [co.nz.pizzashack.integration.mapping.BillingResponseMergeProcessor@2badb5de   ] [         1]
[direct:billingInte] [wireTap1          ] [wireTap[direct:receiveBillingQueue]                                           ] [         1]
[direct:receiveBill] [to4               ] [log:input                                                                     ] [        24]
[direct:receiveBill] [recipientList1    ] [recipientList[header{header(destination)}]                                    ] [        14]

Exchange
---------------------------------------------------------------------------------------------------------------------------------------
Exchange[
	Id                  ID-david-55208-1391367428308-0-10
	ExchangePattern     InOnly
	Headers             {accountNo=111111, breadcrumbId=ID-david-55208-1391367428308-0-5, CamelJmsDeliveryMode=2, CamelRedelivered=false, CamelRedeliveryCounter=0, CamelSqlUpdateCount=1, code=000, destination=activiti:orderBillingProcess:receiveBillingResult, JMSCorrelationID=Camel-ID-david-55208-1391367428308-0-7, JMSDeliveryMode=2, JMSDestination=queue://pizzashackBillingOutbound, JMSExpiration=0, JMSMessageID=ID:david-58528-1391365586496-1:1858:1:1:1, JMSPriority=4, JMSRedelivered=false, JMSReplyTo=null, JMSTimestamp=1391367458779, JMSType=null, JMSXGroupID=null, JMSXUserID=null, messageId=28291, transactionNo=31dcb4b2-1c92-407e-98a3-a3f7dd15a139}
	BodyType            co.nz.pizzashack.data.dto.BillingDto
	Body                <?xml version="1.0" encoding="UTF-8" standalone="yes"?><billingRequest>    <billingRequestId>28291</billingRequestId>    <orderNo>b4283ff2-f0e2-4543-a0de-4f1230b6ee08</orderNo>    <billingCode>000</billingCode>    <billingMessage>null</billingMessage>    <billingTime>2014-02-02 06:57:38</billingTime>    <billingAmount>162.00</billingAmount>    <account>        <paymode>credit</paymode>        <accountNo>111111</accountNo>        <expireDate>2019-06-24</expireDate>        <securityNo>111</securityNo>    </account></billingRequest>
]

Stacktrace
---------------------------------------------------------------------------------------------------------------------------------------
java.lang.NullPointerException
	at org.activiti.camel.ActivitiProducer.signal(ActivitiProducer.java:76)[activiti-camel-5.14.jar:5.14]
	at org.activiti.camel.ActivitiProducer.process(ActivitiProducer.java:60)[activiti-camel-5.14.jar:5.14]
	at org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge.process(AsyncProcessorConverterHelper.java:61)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:398)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:191)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.MulticastProcessor.doProcessSequential(MulticastProcessor.java:573)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.MulticastProcessor.doProcessSequential(MulticastProcessor.java:506)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.MulticastProcessor.process(MulticastProcessor.java:215)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.RecipientList.sendToRecipientList(RecipientList.java:153)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.RecipientList.process(RecipientList.java:112)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.Pipeline.process(Pipeline.java:118)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.Pipeline.process(Pipeline.java:80)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:72)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:398)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:191)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.Pipeline.process(Pipeline.java:118)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.Pipeline.process(Pipeline.java:80)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:191)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.component.direct.DirectProducer.process(DirectProducer.java:51)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:398)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:191)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.util.AsyncProcessorHelper.process(AsyncProcessorHelper.java:105)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:87)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.WireTapProcessor$1.call(WireTapProcessor.java:98)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.WireTapProcessor$1.call(WireTapProcessor.java:94)[camel-core-2.12.2.jar:2.12.2]
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)[:1.7.0_45]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)[:1.7.0_45]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)[:1.7.0_45]
	at java.lang.Thread.run(Thread.java:744)[:1.7.0_45]
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_EXECUTION 
    set
        REV_ = ?,
        BUSINESS_KEY_ = ?,
        PROC_DEF_ID_ = ?,
        ACT_ID_ = ?,
        IS_ACTIVE_ = ?,
        IS_CONCURRENT_ = ?,
        IS_SCOPE_ = ?,
        IS_EVENT_SCOPE_ = ?,
        PARENT_ID_ = ?,
        SUPER_EXEC_ = ?,
        SUSPENSION_STATE_ = ?,
        CACHED_ENT_STATE_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_TASK 
    where
        ID_ = ? 
        and REV_ = ?
2014-02-03 07:57:38,851 [tp2073719880-39] INFO  OrderProcessDSImpl             - doFillinBillingAccount end:{} 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:57:38,852 [tp2073719880-39] INFO  OrderProcessDSImpl             - process pending, build pending Activity:{} 
2014-02-03 07:57:38,853 [tp2073719880-39] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:57:37, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:123, activeProcessDefinitionId:orderBillingProcess:1:7, createTime:1969-12-31 07:57:37, completeTime:null, executionId:123, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-02-03 07:57:38,862 [tp2073719880-39] INFO  OrderProcessAccessor           - get OrderProcessDto from flow:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:57:37, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:123, activeProcessDefinitionId:orderBillingProcess:1:7, createTime:1969-12-31 07:57:37, completeTime:null, executionId:123, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)) 
2014-02-03 07:57:38,862 [tp2073719880-39] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 07:57:38,862 [tp2073719880-39] INFO  ActivitiFacade                 - executionId: 123, processDefinitionId: orderBillingProcess:1:7
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 07:57:38,868 [tp2073719880-39] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:receiveBillingResult, name:Receive Billing Result, type:receiveTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway1, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow12:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:receiveBillingResult, name:Receive Billing Result, type:receiveTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
2014-02-03 07:57:38,868 [tp2073719880-39] INFO  OrderProcessAccessor           - *************************pending on receiveBillingResponse task:{}
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 07:57:38,879 [tp2073719880-39] INFO  BillingRespExecutionListener   - BillingRespExecutionListener execute start:{}
2014-02-03 07:57:38,879 [tp2073719880-39] INFO  BillingRespExecutionListener   - get billing after integration:co.nz.pizzashack.data.dto.BillingDto(billingRequestId:28291, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, billingCode:000, billingMessage:null, billingTime:2014-02-02 06:57:38, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111))
2014-02-03 07:57:38,879 [tp2073719880-39] INFO  BillingRespExecutionListener   - activitiProcessDefinitionId:orderBillingProcess:1:7
2014-02-03 07:57:38,879 [tp2073719880-39] INFO  BillingRespExecutionListener   - activitiProcesssInstanceId:123
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-02-03 07:57:38,886 [tp2073719880-39] INFO  BillingRespExecutionListener   - Key : camelBody Value : co.nz.pizzashack.data.dto.BillingDto(billingRequestId:28291, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, billingCode:000, billingMessage:null, billingTime:2014-02-02 06:57:38, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111))
2014-02-03 07:57:38,886 [tp2073719880-39] INFO  BillingRespExecutionListener   - Key : billingProcessStatus Value : 0
2014-02-03 07:57:38,886 [tp2073719880-39] INFO  BillingRespExecutionListener   - Key : billingTransBean Value : co.nz.pizzashack.data.dto.BillingDto(billingRequestId:28291, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, billingCode:000, billingMessage:null, billingTime:2014-02-02 06:57:38, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111))
2014-02-03 07:57:38,887 [tp2073719880-39] INFO  BillingRespExecutionListener   - Key : orderTransBean Value : co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:57:37, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:123, activeProcessDefinitionId:orderBillingProcess:1:7, createTime:1969-12-31 07:57:37, completeTime:null, executionId:123, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10))
2014-02-03 07:57:38,887 [tp2073719880-39] INFO  BillingRespExecutionListener   - Key : indenpendentProcess Value : false
Hibernate: 
    select
        * 
    from
        ACT_HI_PROCINST 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RU_JOB J     
    where
        J.EXECUTION_ID_ = ?
Hibernate: 
    select
        *      
    from
        ACT_RU_EVENT_SUBSCR     
    where
        (
            EXECUTION_ID_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
2014-02-03 07:57:38,896 [tp2073719880-39] INFO  illingProcessExecutionListener - **********************after billing process, billingDto:co.nz.pizzashack.data.dto.BillingDto(billingRequestId:28291, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, billingCode:000, billingMessage:null, billingTime:2014-02-02 06:57:38, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111)) 
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-02-03 07:57:38,900 [tp2073719880-39] INFO  illingProcessExecutionListener - after core process, orderProcess:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:57:37, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:123, activeProcessDefinitionId:orderBillingProcess:1:7, createTime:1969-12-31 07:57:37, completeTime:null, executionId:123, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)) 
after delivered: co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:delivered, orderTime:2014-02-02 06:57:37, deliverTime:2014-02-02 06:57:38)
2014-02-03 07:57:38,931 [tp2073719880-39] INFO  EmailExecutionListener         - EmailExecutionListener start:{} 
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:57:38,932 [tp2073719880-39] INFO  EmailExecutionListener         - prepare email info for delivered case:{} 
2014-02-03 07:57:38,933 [tp2073719880-39] INFO  EmailExecutionListener         - EmailExecutionListener end:{} 
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
2014-02-03 07:57:44,048 [tp2073719880-39] INFO  EndExecutionListener           - EndExecutionListener start:{} 
2014-02-03 07:57:44,049 [tp2073719880-39] INFO  EndExecutionListener           - update order as delivered:{} 
2014-02-03 07:57:44,050 [tp2073719880-39] INFO  EndExecutionListener           - EndExecutionListener end:{} 
Hibernate: 
    select
        * 
    from
        ACT_HI_PROCINST 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_PROCINST 
    set
        PROC_DEF_ID_ = ?,
        BUSINESS_KEY_ = ?,
        START_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        END_ACT_ID_ = ?,
        DELETE_REASON_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_PROCINST 
    set
        PROC_DEF_ID_ = ?,
        BUSINESS_KEY_ = ?,
        START_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        END_ACT_ID_ = ?,
        DELETE_REASON_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_IDENTITYLINK 
    where
        ID_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ? 
        and REV_ = ?
2014-02-03 07:57:44,088 [tp2073719880-39] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:delivered, orderTime:2014-02-02 06:57:37, deliverTime:2014-02-02 06:57:38), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:57:37, completeTime:2014-02-02 06:57:44, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        t_order_process 
    set
        active_process_definition_id=?,
        active_process_instance_id=?,
        complete_time=?,
        create_time=?,
        execution_id=?,
        main_process_definition_id=?,
        main_process_instance_id=?,
        operator_id=?,
        order_id=? 
    where
        order_process_id=?
Hibernate: 
    update
        t_order 
    set
        cust_id=?,
        deliver_time=?,
        order_no=?,
        order_time=?,
        payment_remarks=?,
        payment_status=?,
        quantity=?,
        ship_address=?,
        status=?,
        total_price=? 
    where
        order_id=?
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
2014-02-03 07:57:44,094 [tp2073719880-39] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@48a78b03[orderProcessId=2,executionId=59,mainProcessInstanceId=59,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=59,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=07:57:37,completeTime=Mon Feb 03 07:57:44 NZDT 2014] 
2014-02-03 07:57:44,094 [tp2073719880-39] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@48a78b03[orderProcessId=2,executionId=59,mainProcessInstanceId=59,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=59,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=07:57:37,completeTime=Mon Feb 03 07:57:44 NZDT 2014]
2014-02-03 07:57:44,095 [tp2073719880-39] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@7209acb[orderId=2,orderNo=b4283ff2-f0e2-4543-a0de-4f1230b6ee08,quantity=6,status=7,paymentStatus=1,deliverTime=<null>,totalPrice=162.00,orderTime=2014-02-03 07:57:37.339]
2014-02-03 07:57:44,095 [tp2073719880-39] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@7d0c7d67[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 07:57:44,096 [tp2073719880-39] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-02-03 07:57:44,096 [tp2073719880-39] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@61cbd176[orderPizzashackId=3,totalPrice=50.00,qty=2]
2014-02-03 07:57:44,096 [tp2073719880-39] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00)
2014-02-03 07:57:44,096 [tp2073719880-39] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@c24cc23[orderPizzashackId=4,totalPrice=112.00,qty=4]
2014-02-03 07:57:44,096 [tp2073719880-39] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)
2014-02-03 07:57:44,096 [tp2073719880-39] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:delivered, orderTime:2014-02-02 06:57:37, deliverTime:null)
2014-02-03 07:57:44,096 [tp2073719880-39] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@33f6e7fd[userId=4,username=general,password=MTIzNDU2,createTime=07:57:10]
2014-02-03 07:57:44,097 [tp2073719880-39] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)
2014-02-03 07:57:44,097 [tp2073719880-39] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:delivered, orderTime:2014-02-02 06:57:37, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:57:37, completeTime:2014-02-02 06:57:44, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10))
2014-02-03 07:57:44,097 [tp2073719880-39] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:delivered, orderTime:2014-02-02 06:57:37, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:57:37, completeTime:2014-02-02 06:57:44, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)) 
2014-02-03 07:57:44,097 [tp2073719880-39] INFO  OrderProcessAccessor           - after merge orderProcessModel:co.nz.pizzashack.data.model.OrderProcessModel@48a78b03[orderProcessId=2,executionId=59,mainProcessInstanceId=59,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=59,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=07:57:37,completeTime=Mon Feb 03 07:57:44 NZDT 2014] 
2014-02-03 07:57:44,098 [tp2073719880-39] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:delivered, orderTime:2014-02-02 06:57:37, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:57:37, completeTime:2014-02-02 06:57:44, executionId:59, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:receiveBillingResult, name:Receive Billing Result, type:receiveTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway1, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow12:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:receiveBillingResult, name:Receive Billing Result, type:receiveTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)) 
2014-02-03 07:57:44,099 [tp2073719880-39] INFO  OrderProcessDSImpl             - fillinBillingAccount end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:delivered, orderTime:2014-02-02 06:57:37, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:57:37, completeTime:2014-02-02 06:57:44, executionId:59, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:receiveBillingResult, name:Receive Billing Result, type:receiveTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway1, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow12:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:receiveBillingResult, name:Receive Billing Result, type:receiveTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10))
2014-02-03 07:57:44,100 [tp2073719880-39] INFO  BillingInboundProcessor        - get pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:receiveBillingResult, name:Receive Billing Result, type:receiveTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway1, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow12:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:receiveBillingResult, name:Receive Billing Result, type:receiveTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
2014-02-03 07:57:44,101 [tp2073719880-39] INFO  BillingInboundProcessor        - billingResponse:co.nz.pizzashack.integration.ws.BillingResponse@1e00f52b[orderNo=b4283ff2-f0e2-4543-a0de-4f1230b6ee08,billingCode=000,billingMessage=<null>] 
2014-02-03 07:57:44,101 [tp2073719880-39] INFO  BillingInboundProcessor        - BillingInboundProcessor end:{} 
2014-02-03 07:57:52,133 [tp2073719880-35] INFO  UserDSImpl                     - loginUser start:{}
2014-02-03 07:57:52,133 [tp2073719880-35] INFO  UserDSImpl                     - username:david
2014-02-03 07:57:52,133 [tp2073719880-35] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? 
        and usermodel0_.password=? limit ?
2014-02-03 07:57:52,138 [tp2073719880-35] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@7c12a722[userId=1,username=david,password=MTIzNDU2,createTime=07:57:10]
2014-02-03 07:57:52,138 [tp2073719880-35] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:1969-12-31 07:57:10)
2014-02-03 07:57:52,138 [tp2073719880-35] INFO  UserDSImpl                     - loginUser end:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:1969-12-31 07:57:10)
2014-02-03 07:57:52,139 [tp2073719880-35] INFO  BaseController                 - requestMapping:/index
2014-02-03 07:57:52,147 [tp2073719880-38] INFO  IndexController                - index: {}
2014-02-03 07:57:52,148 [tp2073719880-38] INFO  OrderProcessDSImpl             - getAllTransTaskForCurrentUser start:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:1969-12-31 07:57:10) 
2014-02-03 07:57:52,148 [tp2073719880-38] INFO  ActivitiFacade                 - getAllTasksForUser start:1
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                    
    WHERE
        RES.ASSIGNEE_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        g.*     
    from
        ACT_ID_GROUP g,
        ACT_ID_MEMBERSHIP membership     
    where
        g.ID_ = membership.GROUP_ID_       
        and membership.USER_ID_ = ?
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                   
    inner join
        ACT_RU_IDENTITYLINK I 
            on I.TASK_ID_ = RES.ID_                              
    WHERE
        RES.ASSIGNEE_ is null         
        and I.TYPE_ = 'candidate'         
        and          (
            I.USER_ID_ = ?                                             
            or                                   I.GROUP_ID_ IN             (
                ?             
            )                    
        )                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_GROUP RES             
    inner join
        ACT_ID_MEMBERSHIP M 
            on RES.ID_ = M.GROUP_ID_       
    inner join
        ACT_ID_USER U 
            on M.USER_ID_ = U.ID_            
    WHERE
        U.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                   
    inner join
        ACT_RU_IDENTITYLINK I 
            on I.TASK_ID_ = RES.ID_                              
    WHERE
        RES.ASSIGNEE_ is null         
        and I.TYPE_ = 'candidate'         
        and          (
            I.GROUP_ID_ IN             (
                ?             
            )                    
        )                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:57:52,159 [tp2073719880-38] INFO  OrderProcessDSImpl             - tasks size:2
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ 
    where
        orderproce0_.execution_id=?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 07:57:52,169 [tp2073719880-38] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@17569550[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=07:57:29,completeTime=<null>]
2014-02-03 07:57:52,169 [tp2073719880-38] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@2d1f45e3[orderId=1,orderNo=92e4494e-456f-4891-8e8f-e1503073fa39,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 07:57:29.167]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 07:57:52,170 [tp2073719880-38] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@61e036b3[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 07:57:52,170 [tp2073719880-38] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 07:57:52,172 [tp2073719880-38] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@c731d42[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:57:52,173 [tp2073719880-38] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 07:57:52,173 [tp2073719880-38] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@5985de70[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:57:52,174 [tp2073719880-38] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 07:57:52,174 [tp2073719880-38] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:57:29, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:57:52,175 [tp2073719880-38] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@ed9905b[userId=4,username=general,password=MTIzNDU2,createTime=07:57:10]
2014-02-03 07:57:52,175 [tp2073719880-38] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)
2014-02-03 07:57:52,176 [tp2073719880-38] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:57:29, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:57:29, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10))
2014-02-03 07:57:52,177 [tp2073719880-38] INFO  OrderProcessDSImpl             - getAllTransTaskForCurrentUser end:{} 
2014-02-03 07:57:54,441 [tp2073719880-38] INFO  OrderQueryController           - userIndex start: {}
2014-02-03 07:57:54,441 [tp2073719880-38] INFO  OrderProcessQueryDSImpl        - getAllOrderProcesses start:{} 
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 07:57:54,467 [tp2073719880-38] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@6636fb07[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=07:57:29,completeTime=<null>]
2014-02-03 07:57:54,468 [tp2073719880-38] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@60726f3[orderId=1,orderNo=92e4494e-456f-4891-8e8f-e1503073fa39,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 07:57:29.167]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 07:57:54,469 [tp2073719880-38] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@2b5b9d21[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 07:57:54,469 [tp2073719880-38] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 07:57:54,470 [tp2073719880-38] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@49a1c24[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:57:54,471 [tp2073719880-38] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 07:57:54,471 [tp2073719880-38] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@21ad81d8[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:57:54,472 [tp2073719880-38] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 07:57:54,472 [tp2073719880-38] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:57:29, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:57:54,473 [tp2073719880-38] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@1c7eea49[userId=4,username=general,password=MTIzNDU2,createTime=07:57:10]
2014-02-03 07:57:54,474 [tp2073719880-38] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)
2014-02-03 07:57:54,474 [tp2073719880-38] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:57:29, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:57:29, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10))
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 07:57:54,475 [tp2073719880-38] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@239abcfe[orderProcessId=2,executionId=59,mainProcessInstanceId=59,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=59,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=07:57:37,completeTime=07:57:44]
2014-02-03 07:57:54,475 [tp2073719880-38] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@7f28b269[orderId=2,orderNo=b4283ff2-f0e2-4543-a0de-4f1230b6ee08,quantity=6,status=7,paymentStatus=1,deliverTime=<null>,totalPrice=162.00,orderTime=2014-02-03 07:57:37.339]
2014-02-03 07:57:54,476 [tp2073719880-38] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@2b5b9d21[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 07:57:54,476 [tp2073719880-38] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 07:57:54,477 [tp2073719880-38] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@48e24d3a[orderPizzashackId=3,totalPrice=50.00,qty=2]
2014-02-03 07:57:54,477 [tp2073719880-38] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00)
2014-02-03 07:57:54,477 [tp2073719880-38] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@13c4038[orderPizzashackId=4,totalPrice=112.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:57:54,477 [tp2073719880-38] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)
2014-02-03 07:57:54,478 [tp2073719880-38] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:delivered, orderTime:2014-02-02 06:57:37, deliverTime:null)
2014-02-03 07:57:54,478 [tp2073719880-38] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@1c7eea49[userId=4,username=general,password=MTIzNDU2,createTime=07:57:10]
2014-02-03 07:57:54,478 [tp2073719880-38] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)
2014-02-03 07:57:54,478 [tp2073719880-38] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:delivered, orderTime:2014-02-02 06:57:37, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:57:37, completeTime:1969-12-31 07:57:44, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10))
2014-02-03 07:57:54,478 [tp2073719880-38] INFO  OrderProcessQueryDSImpl        - getAllOrderProcesses end:{} 
2014-02-03 07:57:58,818 [tp2073719880-36] INFO  OrderQueryController           - show start: 92e4494e-456f-4891-8e8f-e1503073fa39
2014-02-03 07:57:58,819 [tp2073719880-36] INFO  OrderProcessQueryDSImpl        - getOrderProcessByOrderNo start:92e4494e-456f-4891-8e8f-e1503073fa39 
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 07:57:58,823 [tp2073719880-36] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@6f7d26e0[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=07:57:29,completeTime=<null>] 
2014-02-03 07:57:58,823 [tp2073719880-36] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@6f7d26e0[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=07:57:29,completeTime=<null>]
2014-02-03 07:57:58,824 [tp2073719880-36] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@4c7c221[orderId=1,orderNo=92e4494e-456f-4891-8e8f-e1503073fa39,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 07:57:29.167]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 07:57:58,826 [tp2073719880-36] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@744ad4d2[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 07:57:58,827 [tp2073719880-36] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 07:57:58,829 [tp2073719880-36] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@afd78f4[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:57:58,830 [tp2073719880-36] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 07:57:58,831 [tp2073719880-36] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@70fe0cf[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:57:58,834 [tp2073719880-36] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 07:57:58,834 [tp2073719880-36] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:57:29, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:57:58,835 [tp2073719880-36] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@bff8cde[userId=4,username=general,password=MTIzNDU2,createTime=07:57:10]
2014-02-03 07:57:58,836 [tp2073719880-36] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)
2014-02-03 07:57:58,836 [tp2073719880-36] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:57:29, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:57:29, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10))
2014-02-03 07:57:58,836 [tp2073719880-36] INFO  OrderProcessQueryDSImpl        - buildPendingActivity start:{}
2014-02-03 07:57:58,836 [tp2073719880-36] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 07:57:58,836 [tp2073719880-36] INFO  ActivitiFacade                 - executionId: 30, processDefinitionId: orderCoreProcess:1:11
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:57:58,840 [tp2073719880-36] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo start:{}
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 07:57:58,841 [tp2073719880-36] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo end:{}
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
2014-02-03 07:57:58,842 [tp2073719880-36] INFO  OrderProcessQueryDSImpl        - buildPendingActivity end:{}
2014-02-03 07:57:58,842 [tp2073719880-36] INFO  OrderProcessQueryDSImpl        - getOrderProcessByOrderNo end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:57:29, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:57:29, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:null), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)) 
2014-02-03 07:57:58,843 [tp2073719880-36] INFO  OrderQueryController           - Found user: co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:57:29, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:57:29, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:null), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10))
2014-02-03 07:58:01,770 [tp2073719880-36] INFO  OrderQueryController           - showHistory start: {}
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.PROC_INST_ID_ = ?                                     
        and RES.PROC_DEF_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:58:06,843 [tp2073719880-37] INFO  IndexController                - index: {}
2014-02-03 07:58:06,844 [tp2073719880-37] INFO  OrderProcessDSImpl             - getAllTransTaskForCurrentUser start:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:1969-12-31 07:57:10) 
2014-02-03 07:58:06,844 [tp2073719880-37] INFO  ActivitiFacade                 - getAllTasksForUser start:1
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                    
    WHERE
        RES.ASSIGNEE_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        g.*     
    from
        ACT_ID_GROUP g,
        ACT_ID_MEMBERSHIP membership     
    where
        g.ID_ = membership.GROUP_ID_       
        and membership.USER_ID_ = ?
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                   
    inner join
        ACT_RU_IDENTITYLINK I 
            on I.TASK_ID_ = RES.ID_                              
    WHERE
        RES.ASSIGNEE_ is null         
        and I.TYPE_ = 'candidate'         
        and          (
            I.USER_ID_ = ?                                             
            or                                   I.GROUP_ID_ IN             (
                ?             
            )                    
        )                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_GROUP RES             
    inner join
        ACT_ID_MEMBERSHIP M 
            on RES.ID_ = M.GROUP_ID_       
    inner join
        ACT_ID_USER U 
            on M.USER_ID_ = U.ID_            
    WHERE
        U.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                   
    inner join
        ACT_RU_IDENTITYLINK I 
            on I.TASK_ID_ = RES.ID_                              
    WHERE
        RES.ASSIGNEE_ is null         
        and I.TYPE_ = 'candidate'         
        and          (
            I.GROUP_ID_ IN             (
                ?             
            )                    
        )                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:58:06,855 [tp2073719880-37] INFO  OrderProcessDSImpl             - tasks size:2
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ 
    where
        orderproce0_.execution_id=?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 07:58:06,858 [tp2073719880-37] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@3264ebf1[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=07:57:29,completeTime=<null>]
2014-02-03 07:58:06,858 [tp2073719880-37] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@441aac95[orderId=1,orderNo=92e4494e-456f-4891-8e8f-e1503073fa39,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 07:57:29.167]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 07:58:06,859 [tp2073719880-37] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@78d44dba[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 07:58:06,860 [tp2073719880-37] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 07:58:06,861 [tp2073719880-37] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@2f77b190[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:58:06,862 [tp2073719880-37] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 07:58:06,862 [tp2073719880-37] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@5b2a7d48[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:58:06,863 [tp2073719880-37] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 07:58:06,863 [tp2073719880-37] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:57:29, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:58:06,864 [tp2073719880-37] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@cadf76e[userId=4,username=general,password=MTIzNDU2,createTime=07:57:10]
2014-02-03 07:58:06,864 [tp2073719880-37] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)
2014-02-03 07:58:06,865 [tp2073719880-37] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:57:29, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:57:29, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10))
2014-02-03 07:58:06,865 [tp2073719880-37] INFO  OrderProcessDSImpl             - getAllTransTaskForCurrentUser end:{} 
2014-02-03 07:58:08,132 [tp2073719880-36] INFO  OrderProcessQueryDSImpl        - getOrderProcessDtoById start:1 
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_0_,
        orderproce0_.active_process_definition_id as active2_10_0_,
        orderproce0_.active_process_instance_id as active3_10_0_,
        orderproce0_.complete_time as complete4_10_0_,
        orderproce0_.create_time as create5_10_0_,
        orderproce0_.execution_id as execution6_10_0_,
        orderproce0_.main_process_definition_id as main7_10_0_,
        orderproce0_.main_process_instance_id as main8_10_0_,
        orderproce0_.operator_id as operator9_10_0_,
        orderproce0_.order_id as order10_10_0_ 
    from
        t_order_process orderproce0_ 
    where
        orderproce0_.order_process_id=?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 07:58:08,135 [tp2073719880-36] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@62e4448d[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=07:57:29,completeTime=<null>]
2014-02-03 07:58:08,135 [tp2073719880-36] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@38080b75[orderId=1,orderNo=92e4494e-456f-4891-8e8f-e1503073fa39,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 07:57:29.167]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 07:58:08,136 [tp2073719880-36] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@1415258d[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 07:58:08,136 [tp2073719880-36] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 07:58:08,137 [tp2073719880-36] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@33e913b1[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:58:08,138 [tp2073719880-36] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 07:58:08,138 [tp2073719880-36] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@b0be417[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:58:08,139 [tp2073719880-36] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 07:58:08,139 [tp2073719880-36] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:57:29, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:58:08,140 [tp2073719880-36] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@1f9efdaf[userId=4,username=general,password=MTIzNDU2,createTime=07:57:10]
2014-02-03 07:58:08,140 [tp2073719880-36] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)
2014-02-03 07:58:08,141 [tp2073719880-36] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:57:29, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:57:29, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10))
2014-02-03 07:58:08,141 [tp2073719880-36] INFO  OrderProcessQueryDSImpl        - buildPendingActivity start:{}
2014-02-03 07:58:08,141 [tp2073719880-36] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 07:58:08,141 [tp2073719880-36] INFO  ActivitiFacade                 - executionId: 30, processDefinitionId: orderCoreProcess:1:11
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:58:08,144 [tp2073719880-36] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo start:{}
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 07:58:08,145 [tp2073719880-36] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo end:{}
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
2014-02-03 07:58:08,146 [tp2073719880-36] INFO  OrderProcessQueryDSImpl        - buildPendingActivity end:{}
2014-02-03 07:58:08,146 [tp2073719880-36] INFO  OrderProcessQueryDSImpl        - getOrderProcessDtoById end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:57:29, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:57:29, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:null), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)) 
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                    
        and RES.ASSIGNEE_ = ?                                                                        
        and E.BUSINESS_KEY_ = ?
Hibernate: 
    select
        g.*     
    from
        ACT_ID_GROUP g,
        ACT_ID_MEMBERSHIP membership     
    where
        g.ID_ = membership.GROUP_ID_       
        and membership.USER_ID_ = ?
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                   
    inner join
        ACT_RU_IDENTITYLINK I 
            on I.TASK_ID_ = RES.ID_                                 
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                                                                                                                                                              
        and RES.ASSIGNEE_ is null         
        and I.TYPE_ = 'candidate'         
        and          (
            I.USER_ID_ = ?                                             
            or                                   I.GROUP_ID_ IN             (
                ?             
            )                    
        )
2014-02-03 07:58:09,757 [tp2073719880-38] INFO  OrderController                - claimReviewTask start:{} 
2014-02-03 07:58:09,758 [tp2073719880-38] INFO  OrderProcessDSImpl             - claimOrderReviewTask start:92e4494e-456f-4891-8e8f-e1503073fa39
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 07:58:09,763 [tp2073719880-38] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@2e96189a[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=07:57:29,completeTime=<null>] 
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        E.BUSINESS_KEY_ = ?                                                                                 
        and RES.PROC_DEF_ID_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:58:09,766 [tp2073719880-38] INFO  OrderProcessDSImpl             - taskId:57
2014-02-03 07:58:09,766 [tp2073719880-38] INFO  OrderProcessDSImpl             - taskName:Manual underwriting
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                    
        and RES.ASSIGNEE_ = ?                                                                        
        and E.BUSINESS_KEY_ = ?
Hibernate: 
    select
        g.*     
    from
        ACT_ID_GROUP g,
        ACT_ID_MEMBERSHIP membership     
    where
        g.ID_ = membership.GROUP_ID_       
        and membership.USER_ID_ = ?
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                   
    inner join
        ACT_RU_IDENTITYLINK I 
            on I.TASK_ID_ = RES.ID_                                 
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                                                                                                                                                              
        and RES.ASSIGNEE_ is null         
        and I.TYPE_ = 'candidate'         
        and          (
            I.USER_ID_ = ?                                             
            or                                   I.GROUP_ID_ IN             (
                ?             
            )                    
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    insert 
    into
        ACT_RU_IDENTITYLINK
        (ID_, REV_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_, PROC_DEF_ID_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_IDENTITYLINK
        (ID_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_)     
    values
        (?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_COMMENT
        (ID_, TYPE_, TIME_, USER_ID_, TASK_ID_, PROC_INST_ID_, ACTION_, MESSAGE_, FULL_MSG_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_TASK      
    SET
        REV_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        PRIORITY_ = ?,
        CREATE_TIME_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        DELEGATION_ = ?,
        EXECUTION_ID_ = ?,
        PROC_DEF_ID_ = ?,
        DESCRIPTION_ = ?,
        DUE_DATE_ = ?,
        SUSPENSION_STATE_ = ?      
    where
        ID_= ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
2014-02-03 07:58:09,783 [tp2073719880-38] INFO  OrderProcessDSImpl             - claimOrderReviewTask end:{}
2014-02-03 07:58:09,783 [tp2073719880-38] INFO  BaseController                 - Adding feedback message with code: feedback.message.orderProcess.review.claimed and params: [Manual underwriting]
2014-02-03 07:58:09,784 [tp2073719880-38] INFO  BaseController                 - Current locale is en_US
2014-02-03 07:58:09,784 [tp2073719880-38] INFO  BaseController                 - Localized message is: Review Task Manual underwriting is claimed.
2014-02-03 07:58:09,784 [tp2073719880-38] INFO  BaseController                 - requestMapping:/orderProcess/{orderProcessId}
2014-02-03 07:58:09,798 [tp2073719880-36] INFO  OrderProcessQueryDSImpl        - getOrderProcessDtoById start:1 
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_0_,
        orderproce0_.active_process_definition_id as active2_10_0_,
        orderproce0_.active_process_instance_id as active3_10_0_,
        orderproce0_.complete_time as complete4_10_0_,
        orderproce0_.create_time as create5_10_0_,
        orderproce0_.execution_id as execution6_10_0_,
        orderproce0_.main_process_definition_id as main7_10_0_,
        orderproce0_.main_process_instance_id as main8_10_0_,
        orderproce0_.operator_id as operator9_10_0_,
        orderproce0_.order_id as order10_10_0_ 
    from
        t_order_process orderproce0_ 
    where
        orderproce0_.order_process_id=?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 07:58:09,802 [tp2073719880-36] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@5057bb84[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=07:57:29,completeTime=<null>]
2014-02-03 07:58:09,802 [tp2073719880-36] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@39650940[orderId=1,orderNo=92e4494e-456f-4891-8e8f-e1503073fa39,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 07:57:29.167]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 07:58:09,804 [tp2073719880-36] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@6cc902f4[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 07:58:09,805 [tp2073719880-36] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 07:58:09,807 [tp2073719880-36] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@fcac83e[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:58:09,808 [tp2073719880-36] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 07:58:09,808 [tp2073719880-36] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@4a20668b[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:58:09,809 [tp2073719880-36] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 07:58:09,809 [tp2073719880-36] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:57:29, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:58:09,810 [tp2073719880-36] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@56c89974[userId=4,username=general,password=MTIzNDU2,createTime=07:57:10]
2014-02-03 07:58:09,811 [tp2073719880-36] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)
2014-02-03 07:58:09,812 [tp2073719880-36] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:57:29, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:57:29, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10))
2014-02-03 07:58:09,812 [tp2073719880-36] INFO  OrderProcessQueryDSImpl        - buildPendingActivity start:{}
2014-02-03 07:58:09,812 [tp2073719880-36] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 07:58:09,812 [tp2073719880-36] INFO  ActivitiFacade                 - executionId: 30, processDefinitionId: orderCoreProcess:1:11
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:58:09,816 [tp2073719880-36] INFO  OrderProcessQueryDSImpl        - buildPendingActivity end:{}
2014-02-03 07:58:09,817 [tp2073719880-36] INFO  OrderProcessQueryDSImpl        - getOrderProcessDtoById end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:57:29, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:57:29, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:david, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:null), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)) 
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                    
        and RES.ASSIGNEE_ = ?                                                                        
        and E.BUSINESS_KEY_ = ?
2014-02-03 07:58:14,785 [tp2073719880-40] INFO  OrderController                - reviewOrder start: {}
2014-02-03 07:58:14,786 [tp2073719880-40] INFO  OrderController                - orderNo: co.nz.pizzashack.data.dto.OrderReviewRecordDto(reviewRecordId:null, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, content:, reviewResult:accept, createTime:null, reviewer:null)
2014-02-03 07:58:14,787 [tp2073719880-40] INFO  OrderProcessDSImpl             - manualOrderReview start:co.nz.pizzashack.data.dto.OrderReviewRecordDto(reviewRecordId:null, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, content:, reviewResult:accept, createTime:null, reviewer:null) 
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 07:58:14,791 [tp2073719880-40] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@59f3c6a4[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=07:57:29,completeTime=<null>] 
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:58:14,792 [tp2073719880-40] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@767eceec[userId=4,username=general,password=MTIzNDU2,createTime=07:57:10]
2014-02-03 07:58:14,793 [tp2073719880-40] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)
2014-02-03 07:58:14,793 [tp2073719880-40] INFO  OrderProcessDSImpl             - doManualOrderReview start:{} 
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        E.BUSINESS_KEY_ = ?                                                                                 
        and RES.PROC_DEF_ID_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                    
        and RES.ASSIGNEE_ = ?                                                                        
        and E.BUSINESS_KEY_ = ?
2014-02-03 07:58:14,799 [tp2073719880-40] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@59f3c6a4[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=07:57:29,completeTime=<null>]
2014-02-03 07:58:14,800 [tp2073719880-40] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@5b4de797[orderId=1,orderNo=92e4494e-456f-4891-8e8f-e1503073fa39,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 07:57:29.167]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 07:58:14,802 [tp2073719880-40] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@4f198896[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 07:58:14,803 [tp2073719880-40] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 07:58:14,805 [tp2073719880-40] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@317be609[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:58:14,806 [tp2073719880-40] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 07:58:14,806 [tp2073719880-40] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@3d3b7240[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:58:14,806 [tp2073719880-40] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 07:58:14,806 [tp2073719880-40] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:57:29, deliverTime:null)
2014-02-03 07:58:14,807 [tp2073719880-40] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@767eceec[userId=4,username=general,password=MTIzNDU2,createTime=07:57:10]
2014-02-03 07:58:14,807 [tp2073719880-40] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)
2014-02-03 07:58:14,807 [tp2073719880-40] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:57:29, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:57:29, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10))
2014-02-03 07:58:14,807 [tp2073719880-40] INFO  OrderProcessDSImpl             - before manual review flow:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:57:29, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:57:29, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10))
2014-02-03 07:58:14,807 [tp2073719880-40] INFO  OrderProcessDSImpl             - reviewResult:accept 
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        PARENT_TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE 
    where
        TASK_ID_ =     ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_PROCINST 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = ?
Hibernate: 
    update
        ACT_GE_PROPERTY      
    SET
        REV_ = ?,
        VALUE_ = ?      
    where
        NAME_ = ?       
        and REV_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RU_JOB J     
    where
        J.EXECUTION_ID_ = ?
Hibernate: 
    select
        *      
    from
        ACT_RU_EVENT_SUBSCR     
    where
        (
            EXECUTION_ID_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
2014-02-03 07:58:14,829 [tp2073719880-40] INFO  OfCoreProcessExecutionListener - after core process, orderProcess:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:57:29, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:57:29, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)) 
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-02-03 07:58:14,832 [tp2073719880-40] INFO  ainTransitionExecutionListener - orderMainUserTaskExecutionListener start:{} 
2014-02-03 07:58:14,832 [tp2073719880-40] INFO  ainTransitionExecutionListener - nextActivity id:billingEntry
2014-02-03 07:58:14,832 [tp2073719880-40] INFO  ainTransitionExecutionListener - nextActivity name:Billing fill in
2014-02-03 07:58:14,832 [tp2073719880-40] INFO  ainTransitionExecutionListener - nextActivity type:userTask
2014-02-03 07:58:14,832 [tp2073719880-40] INFO  ainTransitionExecutionListener - order status:pendingOnBilling 
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    update
        ACT_HI_VARINST 
    set
        REV_ = ?,
        BYTEARRAY_ID_ = ?,
        DOUBLE_ = ?,
        LONG_ = ?,
        TEXT_ = ?,
        TEXT2_ = ?,
        VAR_TYPE_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_EXECUTION 
    set
        REV_ = ?,
        BUSINESS_KEY_ = ?,
        PROC_DEF_ID_ = ?,
        ACT_ID_ = ?,
        IS_ACTIVE_ = ?,
        IS_CONCURRENT_ = ?,
        IS_SCOPE_ = ?,
        IS_EVENT_SCOPE_ = ?,
        PARENT_ID_ = ?,
        SUPER_EXEC_ = ?,
        SUSPENSION_STATE_ = ?,
        CACHED_ENT_STATE_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_PROCINST 
    set
        PROC_DEF_ID_ = ?,
        BUSINESS_KEY_ = ?,
        START_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        END_ACT_ID_ = ?,
        DELETE_REASON_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_IDENTITYLINK 
    where
        ID_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_TASK 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_IDENTITYLINK 
    where
        ID_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ? 
        and REV_ = ?
2014-02-03 07:58:14,854 [tp2073719880-40] INFO  OrderProcessDSImpl             - doManualOrderReview end:{} 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:58:14,855 [tp2073719880-40] INFO  OrderProcessDSImpl             - process pending, build pending Activity:{} 
2014-02-03 07:58:14,855 [tp2073719880-40] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:57:29, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:57:29, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-02-03 07:58:14,860 [tp2073719880-40] INFO  OrderProcessAccessor           - get OrderProcessDto from flow:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:57:29, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:57:29, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)) 
2014-02-03 07:58:14,860 [tp2073719880-40] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 07:58:14,860 [tp2073719880-40] INFO  ActivitiFacade                 - executionId: 16, processDefinitionId: orderlocalProcess:1:15
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 07:58:14,863 [tp2073719880-40] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:58:14,865 [tp2073719880-40] INFO  OrderProcessAccessor           - assign operator[4] to task[Billing fill in]
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_TASK      
    SET
        REV_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        PRIORITY_ = ?,
        CREATE_TIME_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        DELEGATION_ = ?,
        EXECUTION_ID_ = ?,
        PROC_DEF_ID_ = ?,
        DESCRIPTION_ = ?,
        DUE_DATE_ = ?,
        SUSPENSION_STATE_ = ?      
    where
        ID_= ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
2014-02-03 07:58:14,870 [tp2073719880-40] INFO  OrderProcessAccessor           - after merge orderProcessModel:co.nz.pizzashack.data.model.OrderProcessModel@59f3c6a4[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=07:57:29,completeTime=<null>] 
2014-02-03 07:58:14,871 [tp2073719880-40] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:57:29, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:57:29, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)) 
2014-02-03 07:58:14,872 [tp2073719880-40] INFO  OrderProcessDSImpl             - manualOrderReview end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:57:29, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:57:29, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)) 
Hibernate: 
    update
        t_order_process 
    set
        active_process_definition_id=?,
        active_process_instance_id=?,
        complete_time=?,
        create_time=?,
        execution_id=?,
        main_process_definition_id=?,
        main_process_instance_id=?,
        operator_id=?,
        order_id=? 
    where
        order_process_id=?
Hibernate: 
    update
        t_order 
    set
        cust_id=?,
        deliver_time=?,
        order_no=?,
        order_time=?,
        payment_remarks=?,
        payment_status=?,
        quantity=?,
        ship_address=?,
        status=?,
        total_price=? 
    where
        order_id=?
2014-02-03 07:58:14,874 [tp2073719880-40] INFO  BaseController                 - Adding feedback message with code: feedback.message.orderProcess.review.done and params: [92e4494e-456f-4891-8e8f-e1503073fa39]
2014-02-03 07:58:14,874 [tp2073719880-40] INFO  BaseController                 - Current locale is en_US
2014-02-03 07:58:14,874 [tp2073719880-40] INFO  BaseController                 - Localized message is: Review Task 92e4494e-456f-4891-8e8f-e1503073fa39 is completed.
2014-02-03 07:58:14,874 [tp2073719880-40] INFO  BaseController                 - requestMapping:/index
2014-02-03 07:58:14,876 [tp2073719880-37] INFO  IndexController                - index: {}
2014-02-03 07:58:14,876 [tp2073719880-37] INFO  OrderProcessDSImpl             - getAllTransTaskForCurrentUser start:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:1969-12-31 07:57:10) 
2014-02-03 07:58:14,876 [tp2073719880-37] INFO  ActivitiFacade                 - getAllTasksForUser start:1
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                    
    WHERE
        RES.ASSIGNEE_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        g.*     
    from
        ACT_ID_GROUP g,
        ACT_ID_MEMBERSHIP membership     
    where
        g.ID_ = membership.GROUP_ID_       
        and membership.USER_ID_ = ?
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                   
    inner join
        ACT_RU_IDENTITYLINK I 
            on I.TASK_ID_ = RES.ID_                              
    WHERE
        RES.ASSIGNEE_ is null         
        and I.TYPE_ = 'candidate'         
        and          (
            I.USER_ID_ = ?                                             
            or                                   I.GROUP_ID_ IN             (
                ?             
            )                    
        )                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_GROUP RES             
    inner join
        ACT_ID_MEMBERSHIP M 
            on RES.ID_ = M.GROUP_ID_       
    inner join
        ACT_ID_USER U 
            on M.USER_ID_ = U.ID_            
    WHERE
        U.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                   
    inner join
        ACT_RU_IDENTITYLINK I 
            on I.TASK_ID_ = RES.ID_                              
    WHERE
        RES.ASSIGNEE_ is null         
        and I.TYPE_ = 'candidate'         
        and          (
            I.GROUP_ID_ IN             (
                ?             
            )                    
        )                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:58:14,883 [tp2073719880-37] INFO  OrderProcessDSImpl             - getAllTransTaskForCurrentUser end:{} 
2014-02-03 07:58:17,015 [tp2073719880-35] INFO  OrderQueryController           - userIndex start: {}
2014-02-03 07:58:17,015 [tp2073719880-35] INFO  OrderProcessQueryDSImpl        - getAllOrderProcesses start:{} 
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 07:58:17,025 [tp2073719880-35] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@345ec5dd[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=07:57:29,completeTime=<null>]
2014-02-03 07:58:17,026 [tp2073719880-35] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@61730e6[orderId=1,orderNo=92e4494e-456f-4891-8e8f-e1503073fa39,quantity=14,status=5,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 07:57:29.167]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 07:58:17,028 [tp2073719880-35] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@619b1505[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 07:58:17,028 [tp2073719880-35] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 07:58:17,031 [tp2073719880-35] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@687f0de2[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:58:17,032 [tp2073719880-35] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 07:58:17,032 [tp2073719880-35] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@6d68a606[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:58:17,034 [tp2073719880-35] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 07:58:17,034 [tp2073719880-35] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:57:29, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:58:17,035 [tp2073719880-35] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@2cd43bc4[userId=4,username=general,password=MTIzNDU2,createTime=07:57:10]
2014-02-03 07:58:17,036 [tp2073719880-35] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)
2014-02-03 07:58:17,037 [tp2073719880-35] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:57:29, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:57:29, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10))
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 07:58:17,038 [tp2073719880-35] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@9d36ef2[orderProcessId=2,executionId=59,mainProcessInstanceId=59,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=59,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=07:57:37,completeTime=07:57:44]
2014-02-03 07:58:17,040 [tp2073719880-35] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@51290a7e[orderId=2,orderNo=b4283ff2-f0e2-4543-a0de-4f1230b6ee08,quantity=6,status=7,paymentStatus=1,deliverTime=<null>,totalPrice=162.00,orderTime=2014-02-03 07:57:37.339]
2014-02-03 07:58:17,042 [tp2073719880-35] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@619b1505[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 07:58:17,043 [tp2073719880-35] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 07:58:17,044 [tp2073719880-35] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@534076e8[orderPizzashackId=3,totalPrice=50.00,qty=2]
2014-02-03 07:58:17,044 [tp2073719880-35] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00)
2014-02-03 07:58:17,045 [tp2073719880-35] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@2d3ea40b[orderPizzashackId=4,totalPrice=112.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:58:17,045 [tp2073719880-35] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)
2014-02-03 07:58:17,045 [tp2073719880-35] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:delivered, orderTime:2014-02-02 06:57:37, deliverTime:null)
2014-02-03 07:58:17,046 [tp2073719880-35] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@2cd43bc4[userId=4,username=general,password=MTIzNDU2,createTime=07:57:10]
2014-02-03 07:58:17,046 [tp2073719880-35] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)
2014-02-03 07:58:17,047 [tp2073719880-35] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b4283ff2-f0e2-4543-a0de-4f1230b6ee08, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:delivered, orderTime:2014-02-02 06:57:37, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:57:37, completeTime:1969-12-31 07:57:44, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10))
2014-02-03 07:58:17,047 [tp2073719880-35] INFO  OrderProcessQueryDSImpl        - getAllOrderProcesses end:{} 
2014-02-03 07:58:19,074 [tp2073719880-36] INFO  OrderQueryController           - show start: 92e4494e-456f-4891-8e8f-e1503073fa39
2014-02-03 07:58:19,075 [tp2073719880-36] INFO  OrderProcessQueryDSImpl        - getOrderProcessByOrderNo start:92e4494e-456f-4891-8e8f-e1503073fa39 
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 07:58:19,079 [tp2073719880-36] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@25579433[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=07:57:29,completeTime=<null>] 
2014-02-03 07:58:19,080 [tp2073719880-36] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@25579433[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=07:57:29,completeTime=<null>]
2014-02-03 07:58:19,080 [tp2073719880-36] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@41e7eff8[orderId=1,orderNo=92e4494e-456f-4891-8e8f-e1503073fa39,quantity=14,status=5,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 07:57:29.167]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 07:58:19,082 [tp2073719880-36] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@31259363[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 07:58:19,083 [tp2073719880-36] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 07:58:19,085 [tp2073719880-36] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@d405e6b[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:58:19,086 [tp2073719880-36] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 07:58:19,086 [tp2073719880-36] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@7cf6c998[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:58:19,087 [tp2073719880-36] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 07:58:19,087 [tp2073719880-36] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:57:29, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:58:19,089 [tp2073719880-36] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@67da87cf[userId=4,username=general,password=MTIzNDU2,createTime=07:57:10]
2014-02-03 07:58:19,089 [tp2073719880-36] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)
2014-02-03 07:58:19,090 [tp2073719880-36] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:57:29, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:57:29, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10))
2014-02-03 07:58:19,090 [tp2073719880-36] INFO  OrderProcessQueryDSImpl        - buildPendingActivity start:{}
2014-02-03 07:58:19,090 [tp2073719880-36] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 07:58:19,090 [tp2073719880-36] INFO  ActivitiFacade                 - executionId: 16, processDefinitionId: orderlocalProcess:1:15
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:58:19,093 [tp2073719880-36] INFO  OrderProcessQueryDSImpl        - buildPendingActivity end:{}
2014-02-03 07:58:19,094 [tp2073719880-36] INFO  OrderProcessQueryDSImpl        - getOrderProcessByOrderNo end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:57:29, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:57:29, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:null), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)) 
2014-02-03 07:58:19,095 [tp2073719880-36] INFO  OrderQueryController           - Found user: co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:92e4494e-456f-4891-8e8f-e1503073fa39, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:57:29, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:57:29, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:null), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10))
2014-02-03 07:58:28,819 [tp2073719880-40] INFO  OrderQueryController           - showHistory start: {}
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.PROC_INST_ID_ = ?                                     
        and RES.PROC_DEF_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 08:32:14,781 [tp2073719880-36] INFO  PizzashackAPIImpl              - getPizzashackById start:{}
2014-02-03 08:32:14,782 [tp2073719880-36] INFO  PizzashackDSImpl               - getPizzashackById start:1 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 08:32:14,791 [tp2073719880-36] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:1, pizzaName:Chicken Parmesan, description:Grilled chicken, fresh tomatoes, feta and mozzarella cheese, price:25.00, afterDiscount:null, icon:/images/1.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 08:32:14,792 [tp2073719880-36] INFO  PizzashackDSImpl               - getPizzashackById end:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:1, pizzaName:Chicken Parmesan, description:Grilled chicken, fresh tomatoes, feta and mozzarella cheese, price:25.00, afterDiscount:null, icon:/images/1.png) 
2014-02-03 08:32:14,792 [tp2073719880-36] INFO  PizzashackAPIImpl              - getPizzashackById end:{}
2014-02-03 08:35:43,594 [tp2073719880-39] INFO  PizzashackAPIImpl              - getPizzashacks start:{}
2014-02-03 08:35:43,595 [tp2073719880-39] INFO  PizzashackDSImpl               - getAllItems start:{} 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_
2014-02-03 08:35:43,599 [tp2073719880-39] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:1, pizzaName:Chicken Parmesan, description:Grilled chicken, fresh tomatoes, feta and mozzarella cheese, price:25.00, afterDiscount:null, icon:/images/1.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 08:35:43,600 [tp2073719880-39] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:2, pizzaName:Spicy Italian, description:Pepperoni and a double portion of spicy Italian sausage, price:28.00, afterDiscount:null, icon:/images/2.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 08:35:43,600 [tp2073719880-39] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:3, pizzaName:Garden Fresh, description:Slices onions and green peppers, gourmet mushrooms, black olives and ripe Roma tomatoes, price:35.00, afterDiscount:null, icon:/images/3.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 08:35:43,601 [tp2073719880-39] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:4, pizzaName:Tuscan Six Cheese, description:Six cheese blend of mozzarella, Parmesan, Romano, Asiago and Fontina, price:26.50, afterDiscount:null, icon:/images/4.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 08:35:43,601 [tp2073719880-39] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:5, pizzaName:Spinach Alfredo, description:Rich and creamy blend of spinach and garlic Parmesan with Alfredo saucePepperoni and a double portion of spicy Italian sausage, price:15.10, afterDiscount:null, icon:/images/5.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 08:35:43,601 [tp2073719880-39] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:6, pizzaName:BBQ Chicken Bacon, description:Grilled white chicken, hickory-smoked bacon and fresh sliced onions in barbeque sauce, price:45.00, afterDiscount:null, icon:/images/6.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 08:35:43,602 [tp2073719880-39] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:7, pizzaName:Hawaiian BBQ Chicken, description:Grilled white chicken, hickory-smoked bacon, barbeque sauce topped with sweet pine-apple, price:37.00, afterDiscount:null, icon:/images/7.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 08:35:43,602 [tp2073719880-39] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:8, pizzaName:Grilled Chicken Club, description:Grilled white chicken, hickory-smoked bacon and fresh sliced onions topped with Roma tomatoes, price:29.00, afterDiscount:null, icon:/images/8.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 08:35:43,602 [tp2073719880-39] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:9, pizzaName:Double Bacon 6Cheese, description:Hickory-smoked bacon, Julienne cut Canadian bacon, Parmesan, mozzarella, Romano, Asiago and and Fontina cheese, price:32.50, afterDiscount:null, icon:/images/9.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 08:35:43,603 [tp2073719880-39] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:10, pizzaName:Chilly Chicken Cordon Bleu, description:Spinash Alfredo sauce topped with grilled chicken, ham, onions and mozzarella, price:28.00, afterDiscount:null, icon:/images/10.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 08:35:43,603 [tp2073719880-39] INFO  PizzashackDSImpl               - getAllItems end:{} 
2014-02-03 08:35:43,603 [tp2073719880-39] INFO  PizzashackAPIImpl              - getPizzashacks end:{}
2014-02-03 08:36:23,228 [tp2073719880-40] INFO  PizzashackAPIImpl              - getPizzashacks start:{}
2014-02-03 08:36:23,229 [tp2073719880-40] INFO  PizzashackDSImpl               - getAllItems start:{} 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_
2014-02-03 08:36:23,231 [tp2073719880-40] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:1, pizzaName:Chicken Parmesan, description:Grilled chicken, fresh tomatoes, feta and mozzarella cheese, price:25.00, afterDiscount:null, icon:/images/1.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 08:36:23,231 [tp2073719880-40] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:2, pizzaName:Spicy Italian, description:Pepperoni and a double portion of spicy Italian sausage, price:28.00, afterDiscount:null, icon:/images/2.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 08:36:23,231 [tp2073719880-40] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:3, pizzaName:Garden Fresh, description:Slices onions and green peppers, gourmet mushrooms, black olives and ripe Roma tomatoes, price:35.00, afterDiscount:null, icon:/images/3.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 08:36:23,232 [tp2073719880-40] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:4, pizzaName:Tuscan Six Cheese, description:Six cheese blend of mozzarella, Parmesan, Romano, Asiago and Fontina, price:26.50, afterDiscount:null, icon:/images/4.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 08:36:23,232 [tp2073719880-40] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:5, pizzaName:Spinach Alfredo, description:Rich and creamy blend of spinach and garlic Parmesan with Alfredo saucePepperoni and a double portion of spicy Italian sausage, price:15.10, afterDiscount:null, icon:/images/5.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 08:36:23,232 [tp2073719880-40] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:6, pizzaName:BBQ Chicken Bacon, description:Grilled white chicken, hickory-smoked bacon and fresh sliced onions in barbeque sauce, price:45.00, afterDiscount:null, icon:/images/6.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 08:36:23,232 [tp2073719880-40] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:7, pizzaName:Hawaiian BBQ Chicken, description:Grilled white chicken, hickory-smoked bacon, barbeque sauce topped with sweet pine-apple, price:37.00, afterDiscount:null, icon:/images/7.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 08:36:23,233 [tp2073719880-40] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:8, pizzaName:Grilled Chicken Club, description:Grilled white chicken, hickory-smoked bacon and fresh sliced onions topped with Roma tomatoes, price:29.00, afterDiscount:null, icon:/images/8.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 08:36:23,233 [tp2073719880-40] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:9, pizzaName:Double Bacon 6Cheese, description:Hickory-smoked bacon, Julienne cut Canadian bacon, Parmesan, mozzarella, Romano, Asiago and and Fontina cheese, price:32.50, afterDiscount:null, icon:/images/9.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 08:36:23,234 [tp2073719880-40] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:10, pizzaName:Chilly Chicken Cordon Bleu, description:Spinash Alfredo sauce topped with grilled chicken, ham, onions and mozzarella, price:28.00, afterDiscount:null, icon:/images/10.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 08:36:23,234 [tp2073719880-40] INFO  PizzashackDSImpl               - getAllItems end:{} 
2014-02-03 08:36:23,234 [tp2073719880-40] INFO  PizzashackAPIImpl              - getPizzashacks end:{}
2014-02-03 08:51:17,924 [tp2073719880-35] INFO  AdminIndexController           - index: {}
2014-02-03 08:51:19,731 [tp2073719880-37] INFO  UserController                 - userIndex start: {}
2014-02-03 08:51:19,733 [tp2073719880-37] INFO  UserDSImpl                     - getAllUsers start:{}
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_
2014-02-03 08:51:19,740 [tp2073719880-37] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@6701180[userId=1,username=david,password=MTIzNDU2,createTime=07:57:10]
2014-02-03 08:51:19,740 [tp2073719880-37] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:1969-12-31 07:57:10)
2014-02-03 08:51:19,741 [tp2073719880-37] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@278cedcd[userId=2,username=brad,password=MTIzNDU2,createTime=07:57:10]
2014-02-03 08:51:19,741 [tp2073719880-37] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:1969-12-31 07:57:10)
2014-02-03 08:51:19,741 [tp2073719880-37] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@15504204[userId=3,username=john,password=MTIzNDU2,createTime=07:57:10]
2014-02-03 08:51:19,742 [tp2073719880-37] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:1969-12-31 07:57:10)
2014-02-03 08:51:19,742 [tp2073719880-37] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@481e1f8a[userId=4,username=general,password=MTIzNDU2,createTime=07:57:10]
2014-02-03 08:51:19,742 [tp2073719880-37] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)
2014-02-03 08:51:19,742 [tp2073719880-37] INFO  UserDSImpl                     - getAllUsers end:{}
2014-02-03 08:51:19,742 [tp2073719880-37] INFO  UserController                 - users size: 4
2014-02-03 08:51:25,725 [tp2073719880-39] INFO  StaffController                - index start: {}
2014-02-03 08:51:25,725 [tp2073719880-39] INFO  StaffDSImpl                    - getAllStaffs start:null 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_
2014-02-03 08:51:25,733 [tp2073719880-39] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@12c1a8a7[staffId=1,individual=co.nz.pizzashack.data.model.IndividualModel@6f31e1f0[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=2014-02-03]
2014-02-03 08:51:25,737 [tp2073719880-39] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:1, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-02-03 08:51:25,738 [tp2073719880-39] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@6827758f[staffId=2,individual=co.nz.pizzashack.data.model.IndividualModel@6f3790e3[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=2014-02-03]
2014-02-03 08:51:25,738 [tp2073719880-39] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:2, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-02-03 08:51:25,738 [tp2073719880-39] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@769734b4[staffId=3,individual=co.nz.pizzashack.data.model.IndividualModel@2685e9ec[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=2014-02-03]
2014-02-03 08:51:25,739 [tp2073719880-39] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:3, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:null, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-02-03 08:51:25,739 [tp2073719880-39] INFO  StaffDSImpl                    - getAllStaffs end:{} 
2014-02-03 08:51:25,739 [tp2073719880-39] INFO  StaffController                - staffs size: 3
2014-02-03 08:51:27,025 [tp2073719880-35] INFO  UserController                 - userIndex start: {}
2014-02-03 08:51:27,025 [tp2073719880-35] INFO  UserDSImpl                     - getAllUsers start:{}
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_
2014-02-03 08:51:27,028 [tp2073719880-35] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@2bc595d7[userId=1,username=david,password=MTIzNDU2,createTime=07:57:10]
2014-02-03 08:51:27,029 [tp2073719880-35] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:1969-12-31 07:57:10)
2014-02-03 08:51:27,029 [tp2073719880-35] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@38f06cb4[userId=2,username=brad,password=MTIzNDU2,createTime=07:57:10]
2014-02-03 08:51:27,029 [tp2073719880-35] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:1969-12-31 07:57:10)
2014-02-03 08:51:27,030 [tp2073719880-35] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@3070baa0[userId=3,username=john,password=MTIzNDU2,createTime=07:57:10]
2014-02-03 08:51:27,030 [tp2073719880-35] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:1969-12-31 07:57:10)
2014-02-03 08:51:27,030 [tp2073719880-35] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@38ec7738[userId=4,username=general,password=MTIzNDU2,createTime=07:57:10]
2014-02-03 08:51:27,030 [tp2073719880-35] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:57:10)
2014-02-03 08:51:27,031 [tp2073719880-35] INFO  UserDSImpl                     - getAllUsers end:{}
2014-02-03 08:51:27,031 [tp2073719880-35] INFO  UserController                 - users size: 4
2014-02-03 08:51:28,247 [tp2073719880-39] INFO  DepartmentController           - departmentIndex start: {}
2014-02-03 08:51:28,247 [tp2073719880-39] INFO  DepartmentDSImpl               - getAllDepartments start:{}
Hibernate: 
    select
        department0_.dept_id as dept1_8_,
        department0_.create_date as create2_8_,
        department0_.dept_name as dept3_8_ 
    from
        t_dept department0_
Hibernate: 
    select
        staffdepar0_.dept_id as dept3_8_1_,
        staffdepar0_.staff_dept_id as staff1_1_,
        staffdepar0_.staff_dept_id as staff1_1_0_,
        staffdepar0_.join_date as join2_1_0_,
        staffdepar0_.dept_id as dept3_1_0_,
        staffdepar0_.staff_id as staff4_1_0_ 
    from
        t_dept_staff staffdepar0_ 
    where
        staffdepar0_.dept_id=?
2014-02-03 08:51:28,257 [tp2073719880-39] INFO  DepartmentConverter            - toDto start:{} co.nz.pizzashack.data.model.DepartmentModel@5b04a82c[deptId=1,deptName=Order manager,createDate=2014-02-03,staffDepartments=[co.nz.pizzashack.data.model.StaffDepartmentModel@54b024f4[staffDeptId=1,joinDate=2014-02-03], co.nz.pizzashack.data.model.StaffDepartmentModel@784a3a9b[staffDeptId=2,joinDate=2014-02-03], co.nz.pizzashack.data.model.StaffDepartmentModel@514dd3cf[staffDeptId=3,joinDate=2014-02-03]]]
2014-02-03 08:51:28,257 [tp2073719880-39] INFO  DepartmentConverter            - toDto end:{} co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02)
2014-02-03 08:51:28,257 [tp2073719880-39] INFO  DepartmentDSImpl               - getAllDepartments end:{}
2014-02-03 08:51:28,258 [tp2073719880-39] INFO  DepartmentController           - depts size: 1
^C2014-02-03 10:16:22.070:INFO:/:Destroying Spring FrameworkServlet 'dispatcher'
2014-02-03 10:16:22,070 [Thread-1       ] INFO  ionConfigWebApplicationContext - Closing Root WebApplicationContext: startup date [Mon Feb 03 07:57:02 NZDT 2014]; root of context hierarchy
2014-02-03 10:16:22,071 [Thread-1       ] INFO  BusApplicationContext          - Closing org.apache.cxf.bus.spring.BusApplicationContext@67cbb02a: startup date [Mon Feb 03 07:57:09 NZDT 2014]; parent: Root WebApplicationContext
2014-02-03 10:16:22,071 [Thread-1       ] INFO  DefaultListableBeanFactory     - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@33bb2a52: defining beans []; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@6a41ad35
2014-02-03 10:16:22,072 [Thread-1       ] INFO  DefaultListableBeanFactory     - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6a41ad35: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,applicationConfiguration,webMvcContextConfiguration,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,viewConfiguration,logoutController,loginController,indexController,userController,adminIndexController,departmentController,orderController,orderQueryController,staffController,billingProcessRespTransformer,billingProcessReqTransformer,orderProcessFormatTransformer,billingVariableTransformer,billingResponseMergeProcessor,billingFormatTransformer,billingInboundProcessor,orderDuplicatedReqProcessor,orderRequestProcessor,billingProcessRoute,billingInboundWsRoute,orderProcessRoute,sleepBean,pizzashackAPIImpl,camelSpringConfig,camelJdbcIdempotentConfig,camelCxfConfig,orderProcessDSImpl,customerDSImpl,workflowDSImpl,pizzashackDSImpl,userDSImpl,orderProcessAccessor,orderProcessQueryDSImpl,staffDSImpl,orderDSImpl,departmentDSImpl,initialDataConfig,pizzashackCaculator,emailExecutionListener,endExecutionListener,caculationMergeExecutionListener,orderMainTransitionExecutionListener,toManualReviewExecutionListener,outOfBillingProcessExecutionListener,outOfCoreProcessExecutionListener,billingRespExecutionListener,customerConverter,orderProcessConverter,staffConverter,userConverter,departmentConverter,workflowConverter,orderReviewRecordConverter,orderConverter,activityDiscountRateConverter,orderDetailConverter,pizzashackDataInitialConfiguration,pizzashackItemBuilder,infrastructureContextConfiguration,activitiFacade,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0,org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0,staffDepartmentRepository,orderProcessRepository,orderRepository,workflowRepository,userRepository,pizzashackRepository,staffRepository,orderRequestHistoryRepository,departmentRepository,activityDiscountRateRepository,orderPizzashackRepository,customerRepository,orderReviewRecordRepository,viewResolver,messageSource,activeMQConnectionFactory,pooledConnectionFactory,jmsComponent,jmsTransactionManager,camelBeanPostProcessor,camelContext,custThreadPoolProfile,sqlComponent,orderJdbcMessageIdRepository,billingInboundEndpoint,loggingOutInterceptor,cxf,org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor,org.apache.cxf.bus.spring.Jsr250BeanPostProcessor,org.apache.cxf.bus.spring.BusExtensionPostProcessor,org.apache.cxf.binding.soap.SoapBindingFactory,org.apache.cxf.binding.soap.SoapTransportFactory,org.apache.cxf.binding.soap.customEditorConfigurer,setupWorkflowData,setupData,org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration,org.springframework.transaction.config.internalTransactionAdvisor,transactionAttributeSource,transactionInterceptor,dataSource,transactionManager,entityManagerFactory,placeholderConfig,processEngineConfiguration,processEngine,repositoryService,runtimeService,taskService,historyService,managementService,identityService,org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration,mvcConversionService,mvcValidator,httpRequestHandlerAdapter,simpleControllerHandlerAdapter,requestMappingHandlerMapping,mvcContentNegotiationManager,viewControllerHandlerMapping,beanNameHandlerMapping,resourceHandlerMapping,defaultServletHandlerMapping,requestMappingHandlerAdapter,handlerExceptionResolver,localeResolver,simpleMappingExceptionResolver,multipartResolver,localeChangeInterceptor,sessionAttributeProcessor]; root of factory hierarchy
2014-02-03 10:16:22,077 [Thread-1       ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) is shutting down
2014-02-03 10:16:22,077 [Thread-1       ] INFO  DefaultShutdownStrategy        - Starting to graceful shutdown 8 routes (timeout 300 seconds)
2014-02-03 10:16:22,080 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: cxf:bean:billingInboundEndpoint shutdown complete, was consuming from: Endpoint[cxf://bean:billingInboundEndpoint]
2014-02-03 10:16:22,081 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:orderRegularProcess shutdown complete, was consuming from: Endpoint[direct://orderRegularProcess]
2014-02-03 10:16:22,081 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:orderDuplicatedProcess shutdown complete, was consuming from: Endpoint[direct://orderDuplicatedProcess]
2014-02-03 10:16:22,798 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: orderProcessRoute shutdown complete, was consuming from: Endpoint[jms://queue:pizzashackOrderInbound]
2014-02-03 10:16:22,798 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: route1 shutdown complete, was consuming from: Endpoint[direct://doBillingIntegration]
2014-02-03 10:16:22,798 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:receiveBillingQueue shutdown complete, was consuming from: Endpoint[direct://receiveBillingQueue]
2014-02-03 10:16:22,798 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:billingIntegration shutdown complete, was consuming from: Endpoint[direct://billingIntegration]
2014-02-03 10:16:22,799 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: activitiBillingProcess shutdown complete, was consuming from: Endpoint[activiti://orderBillingProcess:billingIntegration?copyVariablesToBodyAsMap=true]
2014-02-03 10:16:22,799 [Thread-1       ] INFO  DefaultShutdownStrategy        - Graceful shutdown of 8 routes completed in 0 seconds
2014-02-03 10:16:22,801 [Thread-1       ] INFO  CxfEndpoint                    - shutdown the bus ... org.apache.cxf.bus.spring.SpringBus@e543ec1
2014-02-03 10:16:23,692 [Thread-1       ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) uptime 2 hours 19 minutes
2014-02-03 10:16:23,692 [Thread-1       ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) is shutdown in 1.615 seconds
2014-02-03 10:16:23,713 [Thread-1       ] INFO  tainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2014-02-03 10:16:23,713 [Thread-1       ] INFO  SchemaExport                   - HHH000227: Running hbm2ddl schema export
Hibernate: 
    alter table t_activity_discount_rate 
        drop constraint FKA400C193698FCC4
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE11193A98D65
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE111A27DDA4A
Hibernate: 
    alter table t_order 
        drop constraint FKA0C0C3C3E11F4FCB
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB0883698FCC4
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB088BBCB676E
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F33E99148D
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F3BBCB676E
Hibernate: 
    alter table t_order_request_history 
        drop constraint FK5A6B268BBCB676E
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CA6130105
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CBBCB676E
Hibernate: 
    alter table t_staff 
        drop constraint FKA0F9FF552DC32C06
Hibernate: 
    drop table t_activity_discount_rate if exists
Hibernate: 
    drop table t_customer if exists
Hibernate: 
    drop table t_dept if exists
Hibernate: 
    drop table t_dept_staff if exists
Hibernate: 
    drop table t_order if exists
Hibernate: 
    drop table t_order_pizzashack if exists
Hibernate: 
    drop table t_order_process if exists
Hibernate: 
    drop table t_order_request_history if exists
Hibernate: 
    drop table t_order_review_record if exists
Hibernate: 
    drop table t_pizzashack if exists
Hibernate: 
    drop table t_staff if exists
Hibernate: 
    drop table t_user if exists
Hibernate: 
    drop table t_workflow if exists
2014-02-03 10:16:23,725 [Thread-1       ] INFO  SchemaExport                   - HHH000230: Schema export complete
2014-02-03 10:16:23.730:INFO:/:Closing Spring root WebApplicationContext
2014-02-03 10:16:23.731:INFO:oejsl.ELContextCleaner:Clazz: class co.nz.pizzashack.data.dto.ProcessActivityDto loaded by WebAppClassLoader=162257250@9abd962
2014-02-03 10:16:23.731:INFO:oejsl.ELContextCleaner:removed
2014-02-03 10:16:23.731:INFO:oejsl.ELContextCleaner:Clazz: class co.nz.pizzashack.data.dto.OrderProcessDto loaded by WebAppClassLoader=162257250@9abd962
2014-02-03 10:16:23.731:INFO:oejsl.ELContextCleaner:removed
2014-02-03 10:16:23.731:INFO:oejsl.ELContextCleaner:Clazz: class co.nz.pizzashack.data.dto.StaffDto loaded by WebAppClassLoader=162257250@9abd962
2014-02-03 10:16:23.731:INFO:oejsl.ELContextCleaner:removed
2014-02-03 10:16:23.732:INFO:oejsl.ELContextCleaner:Clazz: class co.nz.pizzashack.data.dto.OrderDetailsDto loaded by WebAppClassLoader=162257250@9abd962
2014-02-03 10:16:23.732:INFO:oejsl.ELContextCleaner:removed
2014-02-03 10:16:23.732:INFO:oejsl.ELContextCleaner:Clazz: class co.nz.pizzashack.data.dto.IndividualDto loaded by WebAppClassLoader=162257250@9abd962
2014-02-03 10:16:23.732:INFO:oejsl.ELContextCleaner:removed
2014-02-03 10:16:23.732:INFO:oejsl.ELContextCleaner:Clazz: class co.nz.pizzashack.data.dto.DepartmentDto loaded by WebAppClassLoader=162257250@9abd962
2014-02-03 10:16:23.732:INFO:oejsl.ELContextCleaner:removed
2014-02-03 10:16:23.732:INFO:oejsl.ELContextCleaner:Clazz: class co.nz.pizzashack.data.dto.UserDto loaded by WebAppClassLoader=162257250@9abd962
2014-02-03 10:16:23.732:INFO:oejsl.ELContextCleaner:removed
2014-02-03 10:16:23.732:INFO:oejsl.ELContextCleaner:Clazz: class co.nz.pizzashack.data.dto.OrderDto loaded by WebAppClassLoader=162257250@9abd962
2014-02-03 10:16:23.732:INFO:oejsl.ELContextCleaner:removed
2014-02-03 10:16:23.732:INFO:oejsl.ELContextCleaner:javax.el.BeanELResolver purged
2014-02-03 10:16:23.732:INFO:oejsh.ContextHandler:stopped o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
[INFO] Jetty server exiting.
2014-02-03 10:16:23.785:INFO:oejut.ShutdownThread:shutdown already commenced
]0;david@david: ~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-webdavid@david:~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web$ clear
[H[2J]0;david@david: ~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-webdavid@david:~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web$ mvn jetty:run
[INFO] Scanning for projects...
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building pizzashack-distributor-web Maven Webapp 1.0.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] >>> jetty-maven-plugin:8.1.5.v20120716:run (default-cli) @ pizzashack-distributor-web >>>
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ pizzashack-distributor-web ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 32 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ pizzashack-distributor-web ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ pizzashack-distributor-web ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ pizzashack-distributor-web ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] <<< jetty-maven-plugin:8.1.5.v20120716:run (default-cli) @ pizzashack-distributor-web <<<
[INFO] 
[INFO] --- jetty-maven-plugin:8.1.5.v20120716:run (default-cli) @ pizzashack-distributor-web ---
[INFO] Configuring Jetty for project: pizzashack-distributor-web Maven Webapp
[INFO] webAppSourceDirectory /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp does not exist. Defaulting to /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp
[INFO] Reload Mechanic: automatic
[INFO] Classes = /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/target/classes
[INFO] Context path = /
[INFO] Tmp directory = /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/target/tmp
[INFO] Web defaults = org/eclipse/jetty/webapp/webdefault.xml
[INFO] Web overrides =  none
[INFO] web.xml file = null
[INFO] Webapp directory = /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp
2014-02-03 11:22:34.994:INFO:oejs.Server:jetty-8.1.5.v20120716
2014-02-03 11:22:36.917:INFO:oejpw.PlusConfiguration:No Transaction manager found - if your webapp requires one, please configure one.
2014-02-03 11:23:04.673:INFO:/:Spring WebApplicationInitializers detected on classpath: [co.nz.pizzashack.config.PizzashackDistributorWebInitializer@f15ed5f]
2014-02-03 11:23:05.021:INFO:oejsh.ContextHandler:started o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
2014-02-03 11:23:05.021:INFO:oejsh.ContextHandler:started o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
2014-02-03 11:23:05.021:INFO:oejsh.ContextHandler:started o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
2014-02-03 11:23:05.022:INFO:/:Initializing Spring root WebApplicationContext
2014-02-03 11:23:05,022 [main           ] INFO  ContextLoader                  - Root WebApplicationContext: initialization started
2014-02-03 11:23:05,024 [main           ] INFO  ionConfigWebApplicationContext - Refreshing Root WebApplicationContext: startup date [Mon Feb 03 11:23:05 NZDT 2014]; root of context hierarchy
2014-02-03 11:23:05,079 [main           ] INFO  ClassPathBeanDefinitionScanner - JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2014-02-03 11:23:05,080 [main           ] INFO  ClassPathBeanDefinitionScanner - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2014-02-03 11:23:05,080 [main           ] INFO  ionConfigWebApplicationContext - Registering annotated classes: [class co.nz.pizzashack.config.ApplicationConfiguration,class co.nz.pizzashack.config.WebMvcContextConfiguration]
2014-02-03 11:23:05,135 [main           ] INFO  ClassPathBeanDefinitionScanner - JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2014-02-03 11:23:05,135 [main           ] INFO  ClassPathBeanDefinitionScanner - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2014-02-03 11:23:06,234 [main           ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [META-INF/cxf/cxf.xml]
2014-02-03 11:23:06,449 [main           ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [META-INF/cxf/cxf-extension-soap.xml]
2014-02-03 11:23:06,472 [main           ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [META-INF/cxf/cxf-servlet.xml]
2014-02-03 11:23:06,490 [main           ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [activitiAppContext.xml]
2014-02-03 11:23:06,662 [main           ] INFO  PropertyPlaceholderConfigurer  - Loading properties file from class path resource [activiti.properties]
2014-02-03 11:23:06,705 [main           ] INFO  redAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2014-02-03 11:23:06,755 [main           ] INFO  ionConfigWebApplicationContext - Bean 'infrastructureContextConfiguration' of type [class co.nz.pizzashack.config.InfrastructureContextConfiguration$$EnhancerByCGLIB$$ac6d27c0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:06,782 [main           ] INFO  MLog                           - MLog clients using log4j logging.
2014-02-03 11:23:06,831 [main           ] INFO  C3P0Registry                   - Initializing c3p0-0.9.1.2 [built 21-May-2007 15:04:56; debug? true; trace: 10]
2014-02-03 11:23:06,875 [main           ] INFO  ionConfigWebApplicationContext - Bean 'dataSource' of type [class com.mchange.v2.c3p0.ComboPooledDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:06,958 [main           ] INFO  tainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default'
2014-02-03 11:23:07,033 [main           ] INFO  Version                        - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2014-02-03 11:23:07,038 [main           ] INFO  Version                        - HHH000412: Hibernate Core {4.1.4.Final}
2014-02-03 11:23:07,040 [main           ] INFO  Environment                    - HHH000206: hibernate.properties not found
2014-02-03 11:23:07,041 [main           ] INFO  Environment                    - HHH000021: Bytecode provider name : javassist
2014-02-03 11:23:07,056 [main           ] INFO  Ejb3Configuration              - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2014-02-03 11:23:07,298 [main           ] INFO  ConnectionProviderInitiator    - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2014-02-03 11:23:07,349 [main           ] INFO  AbstractPoolBackedDataSource   - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge1508z1vw7whcr8ayvx|69003090, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.h2.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge1508z1vw7whcr8ayvx|69003090, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:h2:mem:pizzashackdistributor;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 600, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 2, numHelperThreads -> 3, numThreadsAwaitingCheckoutDefaultUser -> 0, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2014-02-03 11:23:07,485 [main           ] INFO  Dialect                        - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2014-02-03 11:23:07,491 [main           ] INFO  LobCreatorBuilder              - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2014-02-03 11:23:07,501 [main           ] INFO  TransactionFactoryInitiator    - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2014-02-03 11:23:07,504 [main           ] INFO  ASTQueryTranslatorFactory      - HHH000397: Using ASTQueryTranslatorFactory
2014-02-03 11:23:07,528 [main           ] INFO  Version                        - Hibernate Validator 4.2.0.Final
2014-02-03 11:23:07,740 [main           ] INFO  SchemaExport                   - HHH000227: Running hbm2ddl schema export
Hibernate: 
    alter table t_activity_discount_rate 
        drop constraint FKA400C193698FCC4
2014-02-03 11:23:07,750 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_activity_discount_rate drop constraint FKA400C193698FCC4
2014-02-03 11:23:07,750 [main           ] ERROR SchemaExport                   - Table "T_ACTIVITY_DISCOUNT_RATE" not found; SQL statement:

    alter table t_activity_discount_rate 
        drop constraint FKA400C193698FCC4 [42102-160]
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE11193A98D65
2014-02-03 11:23:07,751 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_dept_staff drop constraint FKBC8AE11193A98D65
2014-02-03 11:23:07,751 [main           ] ERROR SchemaExport                   - Table "T_DEPT_STAFF" not found; SQL statement:

    alter table t_dept_staff 
        drop constraint FKBC8AE11193A98D65 [42102-160]
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE111A27DDA4A
2014-02-03 11:23:07,752 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_dept_staff drop constraint FKBC8AE111A27DDA4A
2014-02-03 11:23:07,752 [main           ] ERROR SchemaExport                   - Table "T_DEPT_STAFF" not found; SQL statement:

    alter table t_dept_staff 
        drop constraint FKBC8AE111A27DDA4A [42102-160]
Hibernate: 
    alter table t_order 
        drop constraint FKA0C0C3C3E11F4FCB
2014-02-03 11:23:07,753 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order drop constraint FKA0C0C3C3E11F4FCB
2014-02-03 11:23:07,753 [main           ] ERROR SchemaExport                   - Table "T_ORDER" not found; SQL statement:

    alter table t_order 
        drop constraint FKA0C0C3C3E11F4FCB [42102-160]
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB0883698FCC4
2014-02-03 11:23:07,753 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_pizzashack drop constraint FKE8ACB0883698FCC4
2014-02-03 11:23:07,753 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PIZZASHACK" not found; SQL statement:

    alter table t_order_pizzashack 
        drop constraint FKE8ACB0883698FCC4 [42102-160]
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB088BBCB676E
2014-02-03 11:23:07,754 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_pizzashack drop constraint FKE8ACB088BBCB676E
2014-02-03 11:23:07,754 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PIZZASHACK" not found; SQL statement:

    alter table t_order_pizzashack 
        drop constraint FKE8ACB088BBCB676E [42102-160]
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F33E99148D
2014-02-03 11:23:07,755 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_process drop constraint FK6B8B15F33E99148D
2014-02-03 11:23:07,755 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PROCESS" not found; SQL statement:

    alter table t_order_process 
        drop constraint FK6B8B15F33E99148D [42102-160]
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F3BBCB676E
2014-02-03 11:23:07,756 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_process drop constraint FK6B8B15F3BBCB676E
2014-02-03 11:23:07,756 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PROCESS" not found; SQL statement:

    alter table t_order_process 
        drop constraint FK6B8B15F3BBCB676E [42102-160]
Hibernate: 
    alter table t_order_request_history 
        drop constraint FK5A6B268BBCB676E
2014-02-03 11:23:07,757 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_request_history drop constraint FK5A6B268BBCB676E
2014-02-03 11:23:07,757 [main           ] ERROR SchemaExport                   - Table "T_ORDER_REQUEST_HISTORY" not found; SQL statement:

    alter table t_order_request_history 
        drop constraint FK5A6B268BBCB676E [42102-160]
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CA6130105
2014-02-03 11:23:07,757 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_review_record drop constraint FKFB7A439CA6130105
2014-02-03 11:23:07,757 [main           ] ERROR SchemaExport                   - Table "T_ORDER_REVIEW_RECORD" not found; SQL statement:

    alter table t_order_review_record 
        drop constraint FKFB7A439CA6130105 [42102-160]
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CBBCB676E
2014-02-03 11:23:07,758 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_review_record drop constraint FKFB7A439CBBCB676E
2014-02-03 11:23:07,758 [main           ] ERROR SchemaExport                   - Table "T_ORDER_REVIEW_RECORD" not found; SQL statement:

    alter table t_order_review_record 
        drop constraint FKFB7A439CBBCB676E [42102-160]
Hibernate: 
    alter table t_staff 
        drop constraint FKA0F9FF552DC32C06
2014-02-03 11:23:07,759 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_staff drop constraint FKA0F9FF552DC32C06
2014-02-03 11:23:07,759 [main           ] ERROR SchemaExport                   - Table "T_STAFF" not found; SQL statement:

    alter table t_staff 
        drop constraint FKA0F9FF552DC32C06 [42102-160]
Hibernate: 
    drop table t_activity_discount_rate if exists
Hibernate: 
    drop table t_customer if exists
Hibernate: 
    drop table t_dept if exists
Hibernate: 
    drop table t_dept_staff if exists
Hibernate: 
    drop table t_order if exists
Hibernate: 
    drop table t_order_pizzashack if exists
Hibernate: 
    drop table t_order_process if exists
Hibernate: 
    drop table t_order_request_history if exists
Hibernate: 
    drop table t_order_review_record if exists
Hibernate: 
    drop table t_pizzashack if exists
Hibernate: 
    drop table t_staff if exists
Hibernate: 
    drop table t_user if exists
Hibernate: 
    drop table t_workflow if exists
Hibernate: 
    create table t_activity_discount_rate (
        activity_rate_id bigint generated by default as identity,
        code varchar(255),
        description varchar(255),
        effective_time timestamp,
        expire_time timestamp,
        rate decimal(19,2),
        pizzashack_id bigint,
        primary key (activity_rate_id)
    )
Hibernate: 
    create table t_customer (
        cust_id bigint generated by default as identity,
        address varchar(255),
        credits integer,
        customer_name varchar(255),
        email varchar(255),
        primary key (cust_id)
    )
Hibernate: 
    create table t_dept (
        dept_id bigint generated by default as identity,
        create_date date,
        dept_name varchar(255),
        primary key (dept_id)
    )
Hibernate: 
    create table t_dept_staff (
        staff_dept_id bigint generated by default as identity,
        join_date date,
        dept_id bigint,
        staff_id bigint,
        primary key (staff_dept_id)
    )
Hibernate: 
    create table t_order (
        order_id bigint generated by default as identity,
        deliver_time timestamp,
        order_no varchar(255),
        order_time timestamp,
        payment_remarks varchar(255),
        payment_status integer,
        quantity integer,
        ship_address varchar(255),
        status integer,
        total_price decimal(19,2),
        cust_id bigint,
        primary key (order_id)
    )
Hibernate: 
    create table t_order_pizzashack (
        order_pizza_id bigint generated by default as identity,
        qty integer,
        total_price decimal(19,2),
        order_id bigint,
        pizzashack_id bigint,
        primary key (order_pizza_id)
    )
Hibernate: 
    create table t_order_process (
        order_process_id bigint generated by default as identity,
        active_process_definition_id varchar(255),
        active_process_instance_id varchar(255),
        complete_time time,
        create_time time,
        execution_id varchar(255),
        main_process_definition_id varchar(255),
        main_process_instance_id varchar(255),
        operator_id bigint,
        order_id bigint,
        primary key (order_process_id)
    )
Hibernate: 
    create table t_order_request_history (
        message_id varchar(255) generated by default as identity,
        created_at time,
        processor_name varchar(255),
        order_id bigint,
        primary key (message_id)
    )
Hibernate: 
    create table t_order_review_record (
        review_record_id bigint generated by default as identity,
        content varchar(255),
        create_time time,
        review_status integer,
        order_id bigint,
        reviewer_id bigint,
        primary key (review_record_id)
    )
Hibernate: 
    create table t_pizzashack (
        pizzashack_id bigint generated by default as identity,
        description varchar(255),
        icon varchar(255),
        name varchar(255),
        price decimal(19,2),
        primary key (pizzashack_id)
    )
Hibernate: 
    create table t_staff (
        staff_id bigint generated by default as identity,
        create_date date,
        email varchar(255),
        first_name varchar(255),
        identity varchar(255),
        last_name varchar(255),
        level integer,
        role integer,
        user_id bigint,
        primary key (staff_id)
    )
Hibernate: 
    create table t_user (
        user_id bigint generated by default as identity,
        create_time time,
        password varchar(255),
        user_name varchar(255),
        primary key (user_id)
    )
Hibernate: 
    create table t_workflow (
        workflow_id bigint generated by default as identity,
        category varchar(255),
        create_time time,
        deploy_id varchar(255),
        workflow_name varchar(255),
        process_definition_id varchar(255),
        process_definition_key varchar(255),
        primary key (workflow_id)
    )
Hibernate: 
    alter table t_activity_discount_rate 
        add constraint FKA400C193698FCC4 
        foreign key (pizzashack_id) 
        references t_pizzashack
Hibernate: 
    alter table t_dept_staff 
        add constraint FKBC8AE11193A98D65 
        foreign key (dept_id) 
        references t_dept
Hibernate: 
    alter table t_dept_staff 
        add constraint FKBC8AE111A27DDA4A 
        foreign key (staff_id) 
        references t_staff
Hibernate: 
    alter table t_order 
        add constraint FKA0C0C3C3E11F4FCB 
        foreign key (cust_id) 
        references t_customer
Hibernate: 
    alter table t_order_pizzashack 
        add constraint FKE8ACB0883698FCC4 
        foreign key (pizzashack_id) 
        references t_pizzashack
Hibernate: 
    alter table t_order_pizzashack 
        add constraint FKE8ACB088BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_process 
        add constraint FK6B8B15F33E99148D 
        foreign key (operator_id) 
        references t_user
Hibernate: 
    alter table t_order_process 
        add constraint FK6B8B15F3BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_request_history 
        add constraint FK5A6B268BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_review_record 
        add constraint FKFB7A439CA6130105 
        foreign key (reviewer_id) 
        references t_staff
Hibernate: 
    alter table t_order_review_record 
        add constraint FKFB7A439CBBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_staff 
        add constraint FKA0F9FF552DC32C06 
        foreign key (user_id) 
        references t_user
2014-02-03 11:23:07,793 [main           ] INFO  SchemaExport                   - HHH000230: Schema export complete
2014-02-03 11:23:07,832 [main           ] INFO  ionConfigWebApplicationContext - Bean 'entityManagerFactory' of type [class org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:07,865 [main           ] INFO  ionConfigWebApplicationContext - Bean 'entityManagerFactory' of type [class com.sun.proxy.$Proxy56] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:08,060 [main           ] INFO  ionConfigWebApplicationContext - Bean 'cxf' of type [class org.apache.cxf.bus.spring.SpringBus] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:08,064 [main           ] WARN  OldSpringSupport               - Import of META-INF/cxf/cxf-extension-soap.xml has been deprecated and is unnecessary.
2014-02-03 11:23:08,070 [main           ] INFO  ionConfigWebApplicationContext - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerByCGLIB$$2eb46267] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:08,086 [main           ] INFO  ionConfigWebApplicationContext - Bean 'transactionAttributeSource' of type [class org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:08,095 [main           ] INFO  ionConfigWebApplicationContext - Bean 'transactionInterceptor' of type [class org.springframework.transaction.interceptor.TransactionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:08,101 [main           ] INFO  ionConfigWebApplicationContext - Bean 'org.springframework.transaction.config.internalTransactionAdvisor' of type [class org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:08,112 [main           ] INFO  ionConfigWebApplicationContext - Bean 'transactionManager' of type [class org.springframework.orm.jpa.JpaTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:08,112 [main           ] INFO  ionConfigWebApplicationContext - Bean 'camelJdbcIdempotentConfig' of type [class co.nz.pizzashack.config.CamelJdbcIdempotentConfig$$EnhancerByCGLIB$$133e0dee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:08,129 [main           ] INFO  ionConfigWebApplicationContext - Bean 'sqlComponent' of type [class org.apache.camel.component.sql.SqlComponent] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:08,135 [main           ] INFO  ionConfigWebApplicationContext - Bean 'camelCxfConfig' of type [class co.nz.pizzashack.config.CamelCxfConfig$$EnhancerByCGLIB$$3d462513] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:08,162 [main           ] INFO  ionConfigWebApplicationContext - Bean 'billingInboundEndpoint' of type [class org.apache.camel.component.cxf.CxfEndpoint] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:08,185 [main           ] INFO  ionConfigWebApplicationContext - Bean 'billingVariableTransformer' of type [class co.nz.pizzashack.integration.mapping.BillingVariableTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:08,364 [main           ] INFO  ionConfigWebApplicationContext - Bean 'billingFormatTransformer' of type [class co.nz.pizzashack.integration.mapping.BillingFormatTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:08,368 [main           ] INFO  ionConfigWebApplicationContext - Bean 'billingResponseMergeProcessor' of type [class co.nz.pizzashack.integration.mapping.BillingResponseMergeProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:08,371 [main           ] INFO  ionConfigWebApplicationContext - Bean 'sleepBean' of type [class co.nz.pizzashack.integration.utils.SleepBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:08,371 [main           ] INFO  ionConfigWebApplicationContext - Bean 'billingProcessRoute' of type [class co.nz.pizzashack.integration.route.BillingProcessRoute] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:08,459 [main           ] INFO  ionConfigWebApplicationContext - Bean 'org.activiti.engine.impl.rules.RulesDeployer#17931338' of type [class org.activiti.engine.impl.rules.RulesDeployer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:08,461 [main           ] INFO  ionConfigWebApplicationContext - Bean 'processEngineConfiguration' of type [class org.activiti.spring.SpringProcessEngineConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:08,464 [main           ] INFO  ionConfigWebApplicationContext - Bean 'processEngine' of type [class org.activiti.spring.ProcessEngineFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,418 [main           ] INFO  DbSqlSession                   - performing create on engine with resource org/activiti/db/create/activiti.h2.create.engine.sql
2014-02-03 11:23:09,436 [main           ] INFO  DbSqlSession                   - performing create on history with resource org/activiti/db/create/activiti.h2.create.history.sql
2014-02-03 11:23:09,442 [main           ] INFO  DbSqlSession                   - performing create on identity with resource org/activiti/db/create/activiti.h2.create.identity.sql
2014-02-03 11:23:09,445 [main           ] INFO  ProcessEngineImpl              - ProcessEngine default created
2014-02-03 11:23:09,446 [main           ] INFO  ionConfigWebApplicationContext - Bean 'processEngine' of type [class org.activiti.engine.impl.ProcessEngineImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,452 [main           ] INFO  ionConfigWebApplicationContext - Bean 'runtimeService' of type [class org.activiti.engine.impl.RuntimeServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,459 [main           ] INFO  ionConfigWebApplicationContext - Bean 'taskService' of type [class org.activiti.engine.impl.TaskServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,464 [main           ] INFO  ionConfigWebApplicationContext - Bean 'historyService' of type [class org.activiti.engine.impl.HistoryServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,470 [main           ] INFO  ionConfigWebApplicationContext - Bean 'repositoryService' of type [class org.activiti.engine.impl.RepositoryServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,476 [main           ] INFO  ionConfigWebApplicationContext - Bean 'managementService' of type [class org.activiti.engine.impl.ManagementServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,480 [main           ] INFO  ionConfigWebApplicationContext - Bean 'identityService' of type [class org.activiti.engine.impl.IdentityServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,481 [main           ] INFO  ionConfigWebApplicationContext - Bean 'activitiFacade' of type [class co.nz.pizzashack.wf.ActivitiFacade] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,487 [main           ] INFO  ionConfigWebApplicationContext - Bean 'userConverter' of type [class co.nz.pizzashack.data.converter.UserConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,506 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,506 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,510 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,523 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#1' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,581 [main           ] INFO  ionConfigWebApplicationContext - Bean 'workflowRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,616 [main           ] INFO  ionConfigWebApplicationContext - Bean 'workflowRepository' of type [class com.sun.proxy.$Proxy65] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,619 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#2' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,619 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#2' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,620 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#2' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,620 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#3' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,629 [main           ] INFO  ionConfigWebApplicationContext - Bean 'pizzashackRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,639 [main           ] INFO  ionConfigWebApplicationContext - Bean 'pizzashackRepository' of type [class com.sun.proxy.$Proxy68] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,641 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#4' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,641 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#4' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,642 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#4' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,642 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#5' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,650 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,656 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessRepository' of type [class com.sun.proxy.$Proxy69] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,658 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#6' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,658 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#6' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,658 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#6' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,659 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#7' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,667 [main           ] INFO  ionConfigWebApplicationContext - Bean 'userRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,671 [main           ] INFO  ionConfigWebApplicationContext - Bean 'userRepository' of type [class com.sun.proxy.$Proxy70] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,673 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#8' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,673 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#8' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,674 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#8' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,674 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#9' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,682 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,686 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderRepository' of type [class com.sun.proxy.$Proxy71] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,718 [main           ] INFO  ionConfigWebApplicationContext - Bean 'customerConverter' of type [class co.nz.pizzashack.data.converter.CustomerConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,726 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderDetailConverter' of type [class co.nz.pizzashack.data.converter.OrderDetailConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,726 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderConverter' of type [class co.nz.pizzashack.data.converter.OrderConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,727 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessConverter' of type [class co.nz.pizzashack.data.converter.OrderProcessConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,732 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#10' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,732 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#10' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,732 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#10' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,733 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#11' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,742 [main           ] INFO  ionConfigWebApplicationContext - Bean 'departmentRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,746 [main           ] INFO  ionConfigWebApplicationContext - Bean 'departmentRepository' of type [class com.sun.proxy.$Proxy72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,747 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessAccessor' of type [class co.nz.pizzashack.ds.OrderProcessAccessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,753 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderReviewRecordConverter' of type [class co.nz.pizzashack.data.converter.OrderReviewRecordConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,755 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#12' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,755 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#12' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,755 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#12' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,755 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#13' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,763 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderReviewRecordRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,769 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderReviewRecordRepository' of type [class com.sun.proxy.$Proxy73] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,776 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#14' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,776 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#14' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,776 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#14' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,777 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#15' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,786 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderPizzashackRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,791 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderPizzashackRepository' of type [class com.sun.proxy.$Proxy74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,793 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#16' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,793 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#16' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,794 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#16' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,794 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#17' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,801 [main           ] INFO  ionConfigWebApplicationContext - Bean 'customerRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,805 [main           ] INFO  ionConfigWebApplicationContext - Bean 'customerRepository' of type [class com.sun.proxy.$Proxy75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,806 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessDSImpl' of type [class co.nz.pizzashack.ds.OrderProcessDSImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,812 [main           ] INFO  ionConfigWebApplicationContext - Bean 'billingInboundProcessor' of type [class co.nz.pizzashack.integration.processor.BillingInboundProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,812 [main           ] INFO  ionConfigWebApplicationContext - Bean 'billingInboundWsRoute' of type [class co.nz.pizzashack.integration.route.BillingInboundWsRoute] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,833 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderJdbcMessageIdRepository' of type [class org.apache.camel.processor.idempotent.jdbc.JdbcMessageIdRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,840 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessFormatTransformer' of type [class co.nz.pizzashack.integration.mapping.OrderProcessFormatTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,849 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#18' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,849 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#18' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,850 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#18' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,850 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#19' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,857 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderRequestHistoryRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,861 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderRequestHistoryRepository' of type [class com.sun.proxy.$Proxy80] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,863 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderRequestProcessor' of type [class co.nz.pizzashack.integration.processor.OrderRequestProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,866 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderDuplicatedReqProcessor' of type [class co.nz.pizzashack.integration.processor.OrderDuplicatedReqProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,866 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessRoute' of type [class co.nz.pizzashack.integration.route.OrderProcessRoute] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:09,915 [main           ] INFO  ionConfigWebApplicationContext - Bean 'activeMQConnectionFactory' of type [class org.apache.activemq.ActiveMQConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:10,063 [main           ] INFO  ionConfigWebApplicationContext - Bean 'pooledConnectionFactory' of type [class org.apache.activemq.pool.PooledConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:10,083 [main           ] INFO  ionConfigWebApplicationContext - Bean 'jmsTransactionManager' of type [class org.springframework.jms.connection.JmsTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:10,095 [main           ] INFO  ionConfigWebApplicationContext - Bean 'jmsComponent' of type [class org.apache.camel.component.jms.JmsComponent] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:10,101 [main           ] INFO  ionConfigWebApplicationContext - Bean 'camelSpringConfig' of type [class co.nz.pizzashack.config.CamelSpringConfig$$EnhancerByCGLIB$$7cc61ba7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 11:23:10,142 [main           ] INFO  DefaultListableBeanFactory     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1cdfb204: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,applicationConfiguration,webMvcContextConfiguration,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,viewConfiguration,logoutController,loginController,indexController,userController,adminIndexController,departmentController,orderController,orderQueryController,staffController,billingProcessRespTransformer,billingProcessReqTransformer,orderProcessFormatTransformer,billingVariableTransformer,billingResponseMergeProcessor,billingFormatTransformer,billingInboundProcessor,orderDuplicatedReqProcessor,orderRequestProcessor,billingProcessRoute,billingInboundWsRoute,orderProcessRoute,sleepBean,pizzashackAPIImpl,camelSpringConfig,camelJdbcIdempotentConfig,camelCxfConfig,orderProcessDSImpl,customerDSImpl,workflowDSImpl,pizzashackDSImpl,userDSImpl,orderProcessAccessor,orderProcessQueryDSImpl,staffDSImpl,orderDSImpl,departmentDSImpl,initialDataConfig,pizzashackCaculator,emailExecutionListener,endExecutionListener,caculationMergeExecutionListener,orderMainTransitionExecutionListener,toManualReviewExecutionListener,outOfBillingProcessExecutionListener,outOfCoreProcessExecutionListener,billingRespExecutionListener,customerConverter,orderProcessConverter,staffConverter,userConverter,departmentConverter,workflowConverter,orderReviewRecordConverter,orderConverter,activityDiscountRateConverter,orderDetailConverter,pizzashackDataInitialConfiguration,pizzashackItemBuilder,infrastructureContextConfiguration,activitiFacade,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0,org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0,staffDepartmentRepository,orderRequestHistoryRepository,orderPizzashackRepository,activityDiscountRateRepository,customerRepository,orderProcessRepository,departmentRepository,staffRepository,orderRepository,userRepository,pizzashackRepository,workflowRepository,orderReviewRecordRepository,viewResolver,messageSource,activeMQConnectionFactory,pooledConnectionFactory,jmsComponent,jmsTransactionManager,camelBeanPostProcessor,camelContext,custThreadPoolProfile,sqlComponent,orderJdbcMessageIdRepository,billingInboundEndpoint,loggingOutInterceptor,cxf,org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor,org.apache.cxf.bus.spring.Jsr250BeanPostProcessor,org.apache.cxf.bus.spring.BusExtensionPostProcessor,org.apache.cxf.binding.soap.SoapBindingFactory,org.apache.cxf.binding.soap.SoapTransportFactory,org.apache.cxf.binding.soap.customEditorConfigurer,setupWorkflowData,setupData,org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration,org.springframework.transaction.config.internalTransactionAdvisor,transactionAttributeSource,transactionInterceptor,dataSource,transactionManager,entityManagerFactory,placeholderConfig,processEngineConfiguration,processEngine,repositoryService,runtimeService,taskService,historyService,managementService,identityService,org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration,requestMappingHandlerMapping,mvcContentNegotiationManager,viewControllerHandlerMapping,beanNameHandlerMapping,resourceHandlerMapping,defaultServletHandlerMapping,requestMappingHandlerAdapter,mvcConversionService,mvcValidator,httpRequestHandlerAdapter,simpleControllerHandlerAdapter,handlerExceptionResolver,sessionAttributeProcessor,localeChangeInterceptor,multipartResolver,localeResolver,simpleMappingExceptionResolver]; root of factory hierarchy
2014-02-03 11:23:10,595 [main           ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) is starting
2014-02-03 11:23:10,596 [main           ] INFO  ManagedManagementStrategy      - JMX is enabled
2014-02-03 11:23:10,692 [main           ] INFO  DefaultTypeConverter           - Loaded 194 type converters
Hibernate: 
    SELECT
        1 
    FROM
        T_ORDER_REQUEST_HISTORY 
    WHERE
        1 = 0
2014-02-03 11:23:11,071 [main           ] INFO  SpringCamelContext             - StreamCaching is not in use. If using streams then its recommended to enable stream caching. See more details at http://camel.apache.org/stream-caching.html
2014-02-03 11:23:11,496 [main           ] INFO  BusApplicationContext          - Refreshing org.apache.cxf.bus.spring.BusApplicationContext@2f58f947: startup date [Mon Feb 03 11:23:11 NZDT 2014]; parent: Root WebApplicationContext
2014-02-03 11:23:11,518 [main           ] INFO  DefaultListableBeanFactory     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@39869f96: defining beans []; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@1cdfb204
2014-02-03 11:23:11,530 [main           ] INFO  ReflectionServiceFactoryBean   - Creating Service {http://ws.integration.pizzashack.nz.co/}BillingProcessWebServicesService from class co.nz.pizzashack.integration.ws.BillingProcessWebServices
2014-02-03 11:23:11,939 [main           ] INFO  ServerImpl                     - Setting the server's publish address to be /billingWs
2014-02-03 11:23:11,987 [main           ] INFO  SpringCamelContext             - Route: activitiBillingProcess started and consuming from: Endpoint[activiti://orderBillingProcess:billingIntegration?copyVariablesToBodyAsMap=true]
2014-02-03 11:23:11,991 [main           ] INFO  SpringCamelContext             - Route: direct:billingIntegration started and consuming from: Endpoint[direct://billingIntegration]
2014-02-03 11:23:11,996 [main           ] INFO  SpringCamelContext             - Route: direct:receiveBillingQueue started and consuming from: Endpoint[direct://receiveBillingQueue]
2014-02-03 11:23:12,000 [main           ] INFO  SpringCamelContext             - Route: route1 started and consuming from: Endpoint[direct://doBillingIntegration]
2014-02-03 11:23:12,012 [main           ] INFO  SpringCamelContext             - Route: orderProcessRoute started and consuming from: Endpoint[jms://queue:pizzashackOrderInbound]
2014-02-03 11:23:12,017 [main           ] INFO  SpringCamelContext             - Route: direct:orderDuplicatedProcess started and consuming from: Endpoint[direct://orderDuplicatedProcess]
2014-02-03 11:23:12,024 [main           ] INFO  SpringCamelContext             - Route: direct:orderRegularProcess started and consuming from: Endpoint[direct://orderRegularProcess]
2014-02-03 11:23:12,035 [main           ] INFO  SpringCamelContext             - Route: cxf:bean:billingInboundEndpoint started and consuming from: Endpoint[cxf://bean:billingInboundEndpoint]
2014-02-03 11:23:12,059 [main           ] INFO  SpringCamelContext             - Total 8 routes, of which 8 is started.
2014-02-03 11:23:12,066 [main           ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) started in 1.465 seconds
2014-02-03 11:23:12,084 [main           ] INFO  WorkflowInitialDataSetup       - initialize start:{}
2014-02-03 11:23:12,089 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 11:23:12,089 [main           ] INFO  UserDSImpl                     - usernamedavid
2014-02-03 11:23:12,089 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 11:23:12,313 [main           ] INFO  UserDSImpl                     - userId:1 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 11:23:12,370 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@25c830ff[userId=1,username=david,password=MTIzNDU2,createTime=Mon Feb 03 11:23:12 NZDT 2014]
2014-02-03 11:23:12,423 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-02 10:23:12)
2014-02-03 11:23:12,423 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-02 10:23:12)
2014-02-03 11:23:12,426 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 11:23:12,426 [main           ] INFO  UserDSImpl                     - usernamebrad
2014-02-03 11:23:12,426 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 11:23:12,429 [main           ] INFO  UserDSImpl                     - userId:2 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 11:23:12,431 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@241ef4b0[userId=2,username=brad,password=MTIzNDU2,createTime=Mon Feb 03 11:23:12 NZDT 2014]
2014-02-03 11:23:12,431 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-02 10:23:12)
2014-02-03 11:23:12,431 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-02 10:23:12)
2014-02-03 11:23:12,432 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 11:23:12,432 [main           ] INFO  UserDSImpl                     - usernamejohn
2014-02-03 11:23:12,432 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 11:23:12,435 [main           ] INFO  UserDSImpl                     - userId:3 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 11:23:12,436 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@69f89013[userId=3,username=john,password=MTIzNDU2,createTime=Mon Feb 03 11:23:12 NZDT 2014]
2014-02-03 11:23:12,437 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-02 10:23:12)
2014-02-03 11:23:12,437 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-02 10:23:12)
2014-02-03 11:23:12,437 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 11:23:12,437 [main           ] INFO  UserDSImpl                     - usernamegeneral
2014-02-03 11:23:12,437 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 11:23:12,440 [main           ] INFO  UserDSImpl                     - userId:4 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 11:23:12,442 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@304406b2[userId=4,username=general,password=MTIzNDU2,createTime=Mon Feb 03 11:23:12 NZDT 2014]
2014-02-03 11:23:12,442 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:2014-02-02 10:23:12)
2014-02-03 11:23:12,442 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:2014-02-02 10:23:12)
2014-02-03 11:23:12,456 [main           ] INFO  DepartmentDSImpl               - createDepartment start:co.nz.pizzashack.data.dto.DepartmentDto(deptId:null, deptName:Order manager, createDate:null) 
Hibernate: 
    select
        department0_.dept_id as dept1_8_,
        department0_.create_date as create2_8_,
        department0_.dept_name as dept3_8_ 
    from
        t_dept department0_ 
    where
        department0_.dept_name=? limit ?
2014-02-03 11:23:12,463 [main           ] INFO  DepartmentConverter            - toModel start:{} co.nz.pizzashack.data.dto.DepartmentDto(deptId:null, deptName:Order manager, createDate:null)
2014-02-03 11:23:12,468 [main           ] INFO  DepartmentConverter            - toModel end:{} co.nz.pizzashack.data.model.DepartmentModel@3e4d1e9f[deptId=<null>,deptName=Order manager,createDate=<null>,staffDepartments=<null>]
Hibernate: 
    insert 
    into
        t_dept
        (dept_id, create_date, dept_name) 
    values
        (null, ?, ?)
Hibernate: 
    insert 
    into
        ACT_ID_GROUP
        (ID_, REV_, NAME_, TYPE_)     
    values
        (       ?,       1,        ?,       ?     )
2014-02-03 11:23:12,476 [main           ] INFO  DepartmentConverter            - toDto start:{} co.nz.pizzashack.data.model.DepartmentModel@3e4d1e9f[deptId=1,deptName=Order manager,createDate=Mon Feb 03 11:23:12 NZDT 2014,staffDepartments=<null>]
2014-02-03 11:23:12,477 [main           ] INFO  DepartmentConverter            - toDto end:{} co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02)
2014-02-03 11:23:12,477 [main           ] INFO  DepartmentDSImpl               - createDepartment end:co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02) 
2014-02-03 11:23:12,478 [main           ] INFO  WorkflowInitialDataSetup       - department:co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02) 
2014-02-03 11:23:12,501 [main           ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:null, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-02 10:23:12)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-02-03 11:23:12,508 [main           ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:null, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-02 10:23:12))
2014-02-03 11:23:12,530 [main           ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@3695cb6f[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@245f0068[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-02-03 11:23:12,581 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@3695cb6f[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@245f0068[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=Mon Feb 03 11:23:12 NZDT 2014] 
2014-02-03 11:23:12,581 [main           ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = ?
Hibernate: 
    update
        ACT_GE_PROPERTY      
    SET
        REV_ = ?,
        VALUE_ = ?      
    where
        NAME_ = ?       
        and REV_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-02-03 11:23:12,601 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-02-03 11:23:12,610 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@3695cb6f[staffId=1,individual=co.nz.pizzashack.data.model.IndividualModel@245f0068[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=Mon Feb 03 11:23:12 NZDT 2014]
2014-02-03 11:23:12,617 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:1, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-02-03 11:23:12,618 [main           ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:1, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-02-03 11:23:12,622 [main           ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:null, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-02 10:23:12)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-02-03 11:23:12,625 [main           ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:null, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-02 10:23:12))
2014-02-03 11:23:12,625 [main           ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@4f06d7ca[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@4a41374e[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-02-03 11:23:12,634 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@4f06d7ca[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@4a41374e[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=Mon Feb 03 11:23:12 NZDT 2014] 
2014-02-03 11:23:12,634 [main           ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-02-03 11:23:12,639 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-02-03 11:23:12,643 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@4f06d7ca[staffId=2,individual=co.nz.pizzashack.data.model.IndividualModel@4a41374e[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=Mon Feb 03 11:23:12 NZDT 2014]
2014-02-03 11:23:12,644 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:2, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-02-03 11:23:12,644 [main           ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:2, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-02-03 11:23:12,645 [main           ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:null, departments:null, role:manager, level:junior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-02 10:23:12)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-02-03 11:23:12,648 [main           ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:null, departments:null, role:manager, level:junior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-02 10:23:12))
2014-02-03 11:23:12,648 [main           ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@1c1247e[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@2f42cd18[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-02-03 11:23:12,655 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@1c1247e[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@2f42cd18[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=Mon Feb 03 11:23:12 NZDT 2014] 
2014-02-03 11:23:12,655 [main           ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-02-03 11:23:12,660 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-02-03 11:23:12,663 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@1c1247e[staffId=3,individual=co.nz.pizzashack.data.model.IndividualModel@2f42cd18[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=Mon Feb 03 11:23:12 NZDT 2014]
2014-02-03 11:23:12,664 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:3, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:null, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-02-03 11:23:12,664 [main           ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:3, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:null, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-02-03 11:23:12,665 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-02-03 11:23:12,676 [main           ] INFO  BpmnDeployer                   - Processing resource bpmn/OrderBillingProcess.bpmn20.xml
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 117: Having multiple <family> in <alias> isn't supported and may not work as expected
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-02-03 11:23:13,366 [main           ] INFO  RulesDeployer                  - Processing resource bpmn/OrderBillingProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 11:23:13,379 [main           ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderBillingProcess:1:7]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-02-03 11:23:13,385 [main           ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@2051ae26[wfId=1,name=orderBillingProcess,deployId=4,processDefinitionKey=orderBillingProcess,processDefinitionId=orderBillingProcess:1:7,createTime=Mon Feb 03 11:23:12 NZDT 2014]
2014-02-03 11:23:13,401 [main           ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-02-02 10:23:12)
2014-02-03 11:23:13,401 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-02-02 10:23:12)
2014-02-03 11:23:13,401 [main           ] INFO  WorkflowInitialDataSetup       - deploy billing process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-02-02 10:23:12) 
2014-02-03 11:23:13,402 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-02-03 11:23:13,404 [main           ] INFO  BpmnDeployer                   - Processing resource bpmn/OrdercoreProcess.bpmn20.xml
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-02-03 11:23:13,574 [main           ] INFO  RulesDeployer                  - Processing resource bpmn/OrdercoreProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 11:23:13,582 [main           ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderCoreProcess:1:11]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-02-03 11:23:13,584 [main           ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@30c5866a[wfId=2,name=orderCoreProcess,deployId=8,processDefinitionKey=orderCoreProcess,processDefinitionId=orderCoreProcess:1:11,createTime=Mon Feb 03 11:23:13 NZDT 2014]
2014-02-03 11:23:13,584 [main           ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-02-02 10:23:13)
2014-02-03 11:23:13,584 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-02-02 10:23:13)
2014-02-03 11:23:13,585 [main           ] INFO  WorkflowInitialDataSetup       - deploy core process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-02-02 10:23:13) 
2014-02-03 11:23:13,585 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-02-03 11:23:13,587 [main           ] INFO  BpmnDeployer                   - Processing resource bpmn/OrderlocalProcess.bpmn20.xml
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-02-03 11:23:13,856 [main           ] INFO  RulesDeployer                  - Processing resource bpmn/OrderlocalProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 11:23:13,867 [main           ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderlocalProcess:1:15]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-02-03 11:23:13,869 [main           ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@5008682a[wfId=3,name=orderlocalProcess,deployId=12,processDefinitionKey=orderlocalProcess,processDefinitionId=orderlocalProcess:1:15,createTime=Mon Feb 03 11:23:13 NZDT 2014]
2014-02-03 11:23:13,869 [main           ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 10:23:13)
2014-02-03 11:23:13,869 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 10:23:13)
2014-02-03 11:23:13,870 [main           ] INFO  WorkflowInitialDataSetup       - deploy local main process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 10:23:13) 
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
2014-02-03 11:23:14,010 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/logout],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LogoutController.logout(javax.servlet.http.HttpSession)
2014-02-03 11:23:14,011 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/login],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LoginController.showLoginPage(org.springframework.ui.Model)
2014-02-03 11:23:14,011 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/login],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LoginController.handleLogin(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws co.nz.pizzashack.AuthenticationException
2014-02-03 11:23:14,011 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/index],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.IndexController.index(org.springframework.ui.Model,co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-02-03 11:23:14,014 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/createUser],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public co.nz.pizzashack.data.dto.UserDto co.nz.pizzashack.controller.UserController.createUser(co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-02-03 11:23:14,014 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/{userId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 11:23:14,014 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 11:23:14,014 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/update/{userId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 11:23:14,015 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/{userId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.deleteUser(java.lang.Long) throws java.lang.Exception
2014-02-03 11:23:14,015 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/check/{userName}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.checkUser(java.lang.String) throws java.lang.Exception
2014-02-03 11:23:14,015 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 11:23:14,015 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/search],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.search(co.nz.pizzashack.data.dto.UserDto,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 11:23:14,015 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.create(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 11:23:14,015 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.update(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 11:23:14,016 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/adminIndex],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.AdminIndexController.index(org.springframework.ui.Model,co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-02-03 11:23:14,018 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/{deptId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 11:23:14,018 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/selectdepts],methods=[GET],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.util.Set<co.nz.pizzashack.data.dto.DepartmentDto> co.nz.pizzashack.controller.DepartmentController.select() throws java.lang.Exception
2014-02-03 11:23:14,018 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 11:23:14,018 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/update/{deptId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 11:23:14,019 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 11:23:14,019 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/{deptId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.delete(java.lang.Long) throws java.lang.Exception
2014-02-03 11:23:14,019 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/search],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.search(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 11:23:14,019 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.create(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 11:23:14,019 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.update(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 11:23:14,020 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/{orderProcessId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.showOrderProcess(java.lang.Long,org.springframework.ui.Model,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-02-03 11:23:14,020 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/claimReview/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.claimReviewTask(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-02-03 11:23:14,020 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/review],methods=[POST],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.reviewOrder(co.nz.pizzashack.data.dto.OrderReviewRecordDto,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-02-03 11:23:14,021 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderQuery/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderQueryController.show(java.lang.String,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 11:23:14,021 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderQuery/showHistory/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.util.Set<co.nz.pizzashack.data.dto.ProcessActivityDto> co.nz.pizzashack.controller.OrderQueryController.showHistory(java.lang.String) throws java.lang.Exception
2014-02-03 11:23:14,022 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderQuery/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderQueryController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 11:23:14,023 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/{staffId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 11:23:14,023 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 11:23:14,023 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/update/{staffId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 11:23:14,024 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 11:23:14,024 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/{staffId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.delete(java.lang.Long) throws java.lang.Exception
2014-02-03 11:23:14,024 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.create(co.nz.pizzashack.data.dto.StaffDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 11:23:14,024 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.update(co.nz.pizzashack.data.dto.StaffDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 11:23:14,062 [main           ] INFO  SimpleUrlHandlerMapping        - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2014-02-03 11:23:14,065 [main           ] INFO  SimpleUrlHandlerMapping        - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler]
2014-02-03 11:23:14,441 [main           ] INFO  ContextLoader                  - Root WebApplicationContext: initialization completed in 9419 ms
2014-02-03 11:23:14.441:INFO:oejsh.ContextHandler:started o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
Feb 03, 2014 11:23:14 AM com.sun.jersey.api.core.PackagesResourceConfig init
INFO: Scanning for root resource and provider classes in the packages:
  co.nz.pizzashack.integration.api
Feb 03, 2014 11:23:14 AM com.sun.jersey.api.core.ScanningResourceConfig logClasses
INFO: Root resource classes found:
  class co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl
Feb 03, 2014 11:23:14 AM com.sun.jersey.api.core.ScanningResourceConfig init
INFO: No provider classes found.
Feb 03, 2014 11:23:14 AM com.sun.jersey.spi.spring.container.servlet.SpringServlet getContext
INFO: Using default applicationContext
Feb 03, 2014 11:23:14 AM com.sun.jersey.spi.spring.container.SpringComponentProviderFactory registerSpringBeans
INFO: Registering Spring bean, pizzashackAPIImpl, of type co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl as a root resource class
Feb 03, 2014 11:23:14 AM com.sun.jersey.server.impl.application.WebApplicationImpl _initiate
INFO: Initiating Jersey application, version 'Jersey: 1.17.1 02/28/2013 12:47 PM'
Feb 03, 2014 11:23:15 AM com.sun.jersey.spi.inject.Errors processErrorMessages
WARNING: The following warnings have been detected with resource and/or provider classes:
  WARNING: A HTTP GET method, public javax.ws.rs.core.Response co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl.getOrderProcessByOrderNo(java.lang.String), should not consume any entity.
Feb 03, 2014 11:23:15 AM com.sun.jersey.spi.spring.container.servlet.SpringServlet getContext
INFO: Using default applicationContext
Feb 03, 2014 11:23:15 AM com.sun.jersey.spi.spring.container.SpringComponentProviderFactory registerSpringBeans
INFO: Registering Spring bean, pizzashackAPIImpl, of type co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl as a root resource class
Feb 03, 2014 11:23:15 AM com.sun.jersey.server.impl.application.WebApplicationImpl _initiate
INFO: Initiating Jersey application, version 'Jersey: 1.17.1 02/28/2013 12:47 PM'
Feb 03, 2014 11:23:15 AM com.sun.jersey.spi.inject.Errors processErrorMessages
WARNING: The following warnings have been detected with resource and/or provider classes:
  WARNING: A HTTP GET method, public javax.ws.rs.core.Response co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl.getOrderProcessByOrderNo(java.lang.String), should not consume any entity.
2014-02-03 11:23:15.438:INFO:/:Initializing Spring FrameworkServlet 'dispatcher'
2014-02-03 11:23:15,438 [main           ] INFO  DispatcherServlet              - FrameworkServlet 'dispatcher': initialization started
2014-02-03 11:23:15,459 [main           ] INFO  DispatcherServlet              - FrameworkServlet 'dispatcher': initialization completed in 21 ms
2014-02-03 11:23:15.469:INFO:oejs.AbstractConnector:Started SelectChannelConnector@0.0.0.0:8111
[INFO] Started Jetty Server
[INFO] Starting scanner at interval of 10 seconds.
2014-02-03 11:44:55,474 [qtp935945395-35] INFO  PizzashackAPIImpl              - getPizzashacks start:{}
2014-02-03 11:44:55,475 [qtp935945395-35] INFO  PizzashackDSImpl               - getAllItems start:{} 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_
2014-02-03 11:44:55,512 [qtp935945395-35] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:1, pizzaName:Chicken Parmesan, description:Grilled chicken, fresh tomatoes, feta and mozzarella cheese, price:25.00, afterDiscount:null, icon:/images/1.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 11:44:55,521 [qtp935945395-35] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:2, pizzaName:Spicy Italian, description:Pepperoni and a double portion of spicy Italian sausage, price:28.00, afterDiscount:null, icon:/images/2.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 11:44:55,522 [qtp935945395-35] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:3, pizzaName:Garden Fresh, description:Slices onions and green peppers, gourmet mushrooms, black olives and ripe Roma tomatoes, price:35.00, afterDiscount:null, icon:/images/3.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 11:44:55,523 [qtp935945395-35] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:4, pizzaName:Tuscan Six Cheese, description:Six cheese blend of mozzarella, Parmesan, Romano, Asiago and Fontina, price:26.50, afterDiscount:null, icon:/images/4.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 11:44:55,524 [qtp935945395-35] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:5, pizzaName:Spinach Alfredo, description:Rich and creamy blend of spinach and garlic Parmesan with Alfredo saucePepperoni and a double portion of spicy Italian sausage, price:15.10, afterDiscount:null, icon:/images/5.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 11:44:55,524 [qtp935945395-35] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:6, pizzaName:BBQ Chicken Bacon, description:Grilled white chicken, hickory-smoked bacon and fresh sliced onions in barbeque sauce, price:45.00, afterDiscount:null, icon:/images/6.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 11:44:55,525 [qtp935945395-35] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:7, pizzaName:Hawaiian BBQ Chicken, description:Grilled white chicken, hickory-smoked bacon, barbeque sauce topped with sweet pine-apple, price:37.00, afterDiscount:null, icon:/images/7.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 11:44:55,526 [qtp935945395-35] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:8, pizzaName:Grilled Chicken Club, description:Grilled white chicken, hickory-smoked bacon and fresh sliced onions topped with Roma tomatoes, price:29.00, afterDiscount:null, icon:/images/8.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 11:44:55,527 [qtp935945395-35] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:9, pizzaName:Double Bacon 6Cheese, description:Hickory-smoked bacon, Julienne cut Canadian bacon, Parmesan, mozzarella, Romano, Asiago and and Fontina cheese, price:32.50, afterDiscount:null, icon:/images/9.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 11:44:55,527 [qtp935945395-35] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:10, pizzaName:Chilly Chicken Cordon Bleu, description:Spinash Alfredo sauce topped with grilled chicken, ham, onions and mozzarella, price:28.00, afterDiscount:null, icon:/images/10.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 11:44:55,528 [qtp935945395-35] INFO  PizzashackDSImpl               - getAllItems end:{} 
2014-02-03 11:44:55,528 [qtp935945395-35] INFO  PizzashackAPIImpl              - getPizzashacks end:{}
2014-02-03 11:48:03,379 [qtp935945395-37] INFO  PizzashackAPIImpl              - getPizzashacks start:{}
2014-02-03 11:48:03,379 [qtp935945395-37] INFO  PizzashackDSImpl               - getAllItems start:{} 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_
2014-02-03 11:48:03,382 [qtp935945395-37] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:1, pizzaName:Chicken Parmesan, description:Grilled chicken, fresh tomatoes, feta and mozzarella cheese, price:25.00, afterDiscount:null, icon:/images/1.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 11:48:03,383 [qtp935945395-37] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:2, pizzaName:Spicy Italian, description:Pepperoni and a double portion of spicy Italian sausage, price:28.00, afterDiscount:null, icon:/images/2.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 11:48:03,384 [qtp935945395-37] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:3, pizzaName:Garden Fresh, description:Slices onions and green peppers, gourmet mushrooms, black olives and ripe Roma tomatoes, price:35.00, afterDiscount:null, icon:/images/3.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 11:48:03,385 [qtp935945395-37] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:4, pizzaName:Tuscan Six Cheese, description:Six cheese blend of mozzarella, Parmesan, Romano, Asiago and Fontina, price:26.50, afterDiscount:null, icon:/images/4.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 11:48:03,386 [qtp935945395-37] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:5, pizzaName:Spinach Alfredo, description:Rich and creamy blend of spinach and garlic Parmesan with Alfredo saucePepperoni and a double portion of spicy Italian sausage, price:15.10, afterDiscount:null, icon:/images/5.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 11:48:03,386 [qtp935945395-37] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:6, pizzaName:BBQ Chicken Bacon, description:Grilled white chicken, hickory-smoked bacon and fresh sliced onions in barbeque sauce, price:45.00, afterDiscount:null, icon:/images/6.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 11:48:03,387 [qtp935945395-37] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:7, pizzaName:Hawaiian BBQ Chicken, description:Grilled white chicken, hickory-smoked bacon, barbeque sauce topped with sweet pine-apple, price:37.00, afterDiscount:null, icon:/images/7.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 11:48:03,388 [qtp935945395-37] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:8, pizzaName:Grilled Chicken Club, description:Grilled white chicken, hickory-smoked bacon and fresh sliced onions topped with Roma tomatoes, price:29.00, afterDiscount:null, icon:/images/8.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 11:48:03,388 [qtp935945395-37] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:9, pizzaName:Double Bacon 6Cheese, description:Hickory-smoked bacon, Julienne cut Canadian bacon, Parmesan, mozzarella, Romano, Asiago and and Fontina cheese, price:32.50, afterDiscount:null, icon:/images/9.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 11:48:03,389 [qtp935945395-37] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:10, pizzaName:Chilly Chicken Cordon Bleu, description:Spinash Alfredo sauce topped with grilled chicken, ham, onions and mozzarella, price:28.00, afterDiscount:null, icon:/images/10.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 11:48:03,390 [qtp935945395-37] INFO  PizzashackDSImpl               - getAllItems end:{} 
2014-02-03 11:48:03,390 [qtp935945395-37] INFO  PizzashackAPIImpl              - getPizzashacks end:{}
2014-02-03 12:00:41,477 [qtp935945395-34] INFO  PizzashackAPIImpl              - getPizzashacks start:{}
2014-02-03 12:00:41,477 [qtp935945395-34] INFO  PizzashackDSImpl               - getAllItems start:{} 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_
2014-02-03 12:00:41,480 [qtp935945395-34] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:1, pizzaName:Chicken Parmesan, description:Grilled chicken, fresh tomatoes, feta and mozzarella cheese, price:25.00, afterDiscount:null, icon:/images/1.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 12:00:41,481 [qtp935945395-34] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:2, pizzaName:Spicy Italian, description:Pepperoni and a double portion of spicy Italian sausage, price:28.00, afterDiscount:null, icon:/images/2.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 12:00:41,482 [qtp935945395-34] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:3, pizzaName:Garden Fresh, description:Slices onions and green peppers, gourmet mushrooms, black olives and ripe Roma tomatoes, price:35.00, afterDiscount:null, icon:/images/3.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 12:00:41,482 [qtp935945395-34] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:4, pizzaName:Tuscan Six Cheese, description:Six cheese blend of mozzarella, Parmesan, Romano, Asiago and Fontina, price:26.50, afterDiscount:null, icon:/images/4.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 12:00:41,483 [qtp935945395-34] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:5, pizzaName:Spinach Alfredo, description:Rich and creamy blend of spinach and garlic Parmesan with Alfredo saucePepperoni and a double portion of spicy Italian sausage, price:15.10, afterDiscount:null, icon:/images/5.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 12:00:41,484 [qtp935945395-34] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:6, pizzaName:BBQ Chicken Bacon, description:Grilled white chicken, hickory-smoked bacon and fresh sliced onions in barbeque sauce, price:45.00, afterDiscount:null, icon:/images/6.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 12:00:41,485 [qtp935945395-34] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:7, pizzaName:Hawaiian BBQ Chicken, description:Grilled white chicken, hickory-smoked bacon, barbeque sauce topped with sweet pine-apple, price:37.00, afterDiscount:null, icon:/images/7.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 12:00:41,485 [qtp935945395-34] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:8, pizzaName:Grilled Chicken Club, description:Grilled white chicken, hickory-smoked bacon and fresh sliced onions topped with Roma tomatoes, price:29.00, afterDiscount:null, icon:/images/8.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 12:00:41,486 [qtp935945395-34] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:9, pizzaName:Double Bacon 6Cheese, description:Hickory-smoked bacon, Julienne cut Canadian bacon, Parmesan, mozzarella, Romano, Asiago and and Fontina cheese, price:32.50, afterDiscount:null, icon:/images/9.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 12:00:41,487 [qtp935945395-34] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:10, pizzaName:Chilly Chicken Cordon Bleu, description:Spinash Alfredo sauce topped with grilled chicken, ham, onions and mozzarella, price:28.00, afterDiscount:null, icon:/images/10.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 12:00:41,487 [qtp935945395-34] INFO  PizzashackDSImpl               - getAllItems end:{} 
2014-02-03 12:00:41,488 [qtp935945395-34] INFO  PizzashackAPIImpl              - getPizzashacks end:{}
2014-02-03 12:19:40,879 [qtp935945395-39] INFO  PizzashackAPIImpl              - getPizzashacks start:{}
2014-02-03 12:19:40,879 [qtp935945395-39] INFO  PizzashackDSImpl               - getAllItems start:{} 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_
2014-02-03 12:19:40,885 [qtp935945395-39] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:1, pizzaName:Chicken Parmesan, description:Grilled chicken, fresh tomatoes, feta and mozzarella cheese, price:25.00, afterDiscount:null, icon:/images/1.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 12:19:40,886 [qtp935945395-39] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:2, pizzaName:Spicy Italian, description:Pepperoni and a double portion of spicy Italian sausage, price:28.00, afterDiscount:null, icon:/images/2.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 12:19:40,887 [qtp935945395-39] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:3, pizzaName:Garden Fresh, description:Slices onions and green peppers, gourmet mushrooms, black olives and ripe Roma tomatoes, price:35.00, afterDiscount:null, icon:/images/3.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 12:19:40,888 [qtp935945395-39] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:4, pizzaName:Tuscan Six Cheese, description:Six cheese blend of mozzarella, Parmesan, Romano, Asiago and Fontina, price:26.50, afterDiscount:null, icon:/images/4.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 12:19:40,888 [qtp935945395-39] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:5, pizzaName:Spinach Alfredo, description:Rich and creamy blend of spinach and garlic Parmesan with Alfredo saucePepperoni and a double portion of spicy Italian sausage, price:15.10, afterDiscount:null, icon:/images/5.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 12:19:40,889 [qtp935945395-39] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:6, pizzaName:BBQ Chicken Bacon, description:Grilled white chicken, hickory-smoked bacon and fresh sliced onions in barbeque sauce, price:45.00, afterDiscount:null, icon:/images/6.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 12:19:40,890 [qtp935945395-39] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:7, pizzaName:Hawaiian BBQ Chicken, description:Grilled white chicken, hickory-smoked bacon, barbeque sauce topped with sweet pine-apple, price:37.00, afterDiscount:null, icon:/images/7.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 12:19:40,890 [qtp935945395-39] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:8, pizzaName:Grilled Chicken Club, description:Grilled white chicken, hickory-smoked bacon and fresh sliced onions topped with Roma tomatoes, price:29.00, afterDiscount:null, icon:/images/8.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 12:19:40,891 [qtp935945395-39] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:9, pizzaName:Double Bacon 6Cheese, description:Hickory-smoked bacon, Julienne cut Canadian bacon, Parmesan, mozzarella, Romano, Asiago and and Fontina cheese, price:32.50, afterDiscount:null, icon:/images/9.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 12:19:40,892 [qtp935945395-39] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:10, pizzaName:Chilly Chicken Cordon Bleu, description:Spinash Alfredo sauce topped with grilled chicken, ham, onions and mozzarella, price:28.00, afterDiscount:null, icon:/images/10.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 12:19:40,893 [qtp935945395-39] INFO  PizzashackDSImpl               - getAllItems end:{} 
2014-02-03 12:19:40,893 [qtp935945395-39] INFO  PizzashackAPIImpl              - getPizzashacks end:{}
2014-02-03 12:20:33,694 [qtp935945395-40] INFO  PizzashackAPIImpl              - getPizzashacks start:{}
2014-02-03 12:20:33,694 [qtp935945395-40] INFO  PizzashackDSImpl               - getAllItems start:{} 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_
2014-02-03 12:20:33,697 [qtp935945395-40] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:1, pizzaName:Chicken Parmesan, description:Grilled chicken, fresh tomatoes, feta and mozzarella cheese, price:25.00, afterDiscount:null, icon:/images/1.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 12:20:33,698 [qtp935945395-40] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:2, pizzaName:Spicy Italian, description:Pepperoni and a double portion of spicy Italian sausage, price:28.00, afterDiscount:null, icon:/images/2.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 12:20:33,699 [qtp935945395-40] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:3, pizzaName:Garden Fresh, description:Slices onions and green peppers, gourmet mushrooms, black olives and ripe Roma tomatoes, price:35.00, afterDiscount:null, icon:/images/3.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 12:20:33,700 [qtp935945395-40] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:4, pizzaName:Tuscan Six Cheese, description:Six cheese blend of mozzarella, Parmesan, Romano, Asiago and Fontina, price:26.50, afterDiscount:null, icon:/images/4.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 12:20:33,701 [qtp935945395-40] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:5, pizzaName:Spinach Alfredo, description:Rich and creamy blend of spinach and garlic Parmesan with Alfredo saucePepperoni and a double portion of spicy Italian sausage, price:15.10, afterDiscount:null, icon:/images/5.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 12:20:33,701 [qtp935945395-40] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:6, pizzaName:BBQ Chicken Bacon, description:Grilled white chicken, hickory-smoked bacon and fresh sliced onions in barbeque sauce, price:45.00, afterDiscount:null, icon:/images/6.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 12:20:33,702 [qtp935945395-40] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:7, pizzaName:Hawaiian BBQ Chicken, description:Grilled white chicken, hickory-smoked bacon, barbeque sauce topped with sweet pine-apple, price:37.00, afterDiscount:null, icon:/images/7.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 12:20:33,703 [qtp935945395-40] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:8, pizzaName:Grilled Chicken Club, description:Grilled white chicken, hickory-smoked bacon and fresh sliced onions topped with Roma tomatoes, price:29.00, afterDiscount:null, icon:/images/8.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 12:20:33,703 [qtp935945395-40] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:9, pizzaName:Double Bacon 6Cheese, description:Hickory-smoked bacon, Julienne cut Canadian bacon, Parmesan, mozzarella, Romano, Asiago and and Fontina cheese, price:32.50, afterDiscount:null, icon:/images/9.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 12:20:33,704 [qtp935945395-40] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:10, pizzaName:Chilly Chicken Cordon Bleu, description:Spinash Alfredo sauce topped with grilled chicken, ham, onions and mozzarella, price:28.00, afterDiscount:null, icon:/images/10.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 12:20:33,705 [qtp935945395-40] INFO  PizzashackDSImpl               - getAllItems end:{} 
2014-02-03 12:20:33,705 [qtp935945395-40] INFO  PizzashackAPIImpl              - getPizzashacks end:{}
[INFO] restarting o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
2014-02-03 12:24:52.622:INFO:/:Destroying Spring FrameworkServlet 'dispatcher'
2014-02-03 12:24:52,622 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Closing Root WebApplicationContext: startup date [Mon Feb 03 11:23:05 NZDT 2014]; root of context hierarchy
2014-02-03 12:24:52,623 [Scanner-0      ] INFO  BusApplicationContext          - Closing org.apache.cxf.bus.spring.BusApplicationContext@2f58f947: startup date [Mon Feb 03 11:23:11 NZDT 2014]; parent: Root WebApplicationContext
2014-02-03 12:24:52,624 [Scanner-0      ] INFO  DefaultListableBeanFactory     - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@39869f96: defining beans []; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@1cdfb204
2014-02-03 12:24:52,625 [Scanner-0      ] INFO  DefaultListableBeanFactory     - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1cdfb204: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,applicationConfiguration,webMvcContextConfiguration,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,viewConfiguration,logoutController,loginController,indexController,userController,adminIndexController,departmentController,orderController,orderQueryController,staffController,billingProcessRespTransformer,billingProcessReqTransformer,orderProcessFormatTransformer,billingVariableTransformer,billingResponseMergeProcessor,billingFormatTransformer,billingInboundProcessor,orderDuplicatedReqProcessor,orderRequestProcessor,billingProcessRoute,billingInboundWsRoute,orderProcessRoute,sleepBean,pizzashackAPIImpl,camelSpringConfig,camelJdbcIdempotentConfig,camelCxfConfig,orderProcessDSImpl,customerDSImpl,workflowDSImpl,pizzashackDSImpl,userDSImpl,orderProcessAccessor,orderProcessQueryDSImpl,staffDSImpl,orderDSImpl,departmentDSImpl,initialDataConfig,pizzashackCaculator,emailExecutionListener,endExecutionListener,caculationMergeExecutionListener,orderMainTransitionExecutionListener,toManualReviewExecutionListener,outOfBillingProcessExecutionListener,outOfCoreProcessExecutionListener,billingRespExecutionListener,customerConverter,orderProcessConverter,staffConverter,userConverter,departmentConverter,workflowConverter,orderReviewRecordConverter,orderConverter,activityDiscountRateConverter,orderDetailConverter,pizzashackDataInitialConfiguration,pizzashackItemBuilder,infrastructureContextConfiguration,activitiFacade,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0,org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0,staffDepartmentRepository,orderRequestHistoryRepository,orderPizzashackRepository,activityDiscountRateRepository,customerRepository,orderProcessRepository,departmentRepository,staffRepository,orderRepository,userRepository,pizzashackRepository,workflowRepository,orderReviewRecordRepository,viewResolver,messageSource,activeMQConnectionFactory,pooledConnectionFactory,jmsComponent,jmsTransactionManager,camelBeanPostProcessor,camelContext,custThreadPoolProfile,sqlComponent,orderJdbcMessageIdRepository,billingInboundEndpoint,loggingOutInterceptor,cxf,org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor,org.apache.cxf.bus.spring.Jsr250BeanPostProcessor,org.apache.cxf.bus.spring.BusExtensionPostProcessor,org.apache.cxf.binding.soap.SoapBindingFactory,org.apache.cxf.binding.soap.SoapTransportFactory,org.apache.cxf.binding.soap.customEditorConfigurer,setupWorkflowData,setupData,org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration,org.springframework.transaction.config.internalTransactionAdvisor,transactionAttributeSource,transactionInterceptor,dataSource,transactionManager,entityManagerFactory,placeholderConfig,processEngineConfiguration,processEngine,repositoryService,runtimeService,taskService,historyService,managementService,identityService,org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration,requestMappingHandlerMapping,mvcContentNegotiationManager,viewControllerHandlerMapping,beanNameHandlerMapping,resourceHandlerMapping,defaultServletHandlerMapping,requestMappingHandlerAdapter,mvcConversionService,mvcValidator,httpRequestHandlerAdapter,simpleControllerHandlerAdapter,handlerExceptionResolver,sessionAttributeProcessor,localeChangeInterceptor,multipartResolver,localeResolver,simpleMappingExceptionResolver]; root of factory hierarchy
2014-02-03 12:24:52,629 [Scanner-0      ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) is shutting down
2014-02-03 12:24:52,630 [Scanner-0      ] INFO  DefaultShutdownStrategy        - Starting to graceful shutdown 8 routes (timeout 300 seconds)
2014-02-03 12:24:52,633 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: cxf:bean:billingInboundEndpoint shutdown complete, was consuming from: Endpoint[cxf://bean:billingInboundEndpoint]
2014-02-03 12:24:52,633 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:orderRegularProcess shutdown complete, was consuming from: Endpoint[direct://orderRegularProcess]
2014-02-03 12:24:52,633 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:orderDuplicatedProcess shutdown complete, was consuming from: Endpoint[direct://orderDuplicatedProcess]
2014-02-03 12:24:53,253 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: orderProcessRoute shutdown complete, was consuming from: Endpoint[jms://queue:pizzashackOrderInbound]
2014-02-03 12:24:53,253 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: route1 shutdown complete, was consuming from: Endpoint[direct://doBillingIntegration]
2014-02-03 12:24:53,253 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:receiveBillingQueue shutdown complete, was consuming from: Endpoint[direct://receiveBillingQueue]
2014-02-03 12:24:53,253 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:billingIntegration shutdown complete, was consuming from: Endpoint[direct://billingIntegration]
2014-02-03 12:24:53,253 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: activitiBillingProcess shutdown complete, was consuming from: Endpoint[activiti://orderBillingProcess:billingIntegration?copyVariablesToBodyAsMap=true]
2014-02-03 12:24:53,254 [Scanner-0      ] INFO  DefaultShutdownStrategy        - Graceful shutdown of 8 routes completed in 0 seconds
2014-02-03 12:24:53,254 [Scanner-0      ] INFO  CxfEndpoint                    - shutdown the bus ... org.apache.cxf.bus.spring.SpringBus@78355ed4
2014-02-03 12:24:53,269 [Scanner-0      ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) uptime 1 hour 1 minute
2014-02-03 12:24:53,269 [Scanner-0      ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) is shutdown in 0.640 seconds
2014-02-03 12:24:53,290 [Scanner-0      ] INFO  tainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2014-02-03 12:24:53,293 [Scanner-0      ] INFO  SchemaExport                   - HHH000227: Running hbm2ddl schema export
Hibernate: 
    alter table t_activity_discount_rate 
        drop constraint FKA400C193698FCC4
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE11193A98D65
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE111A27DDA4A
Hibernate: 
    alter table t_order 
        drop constraint FKA0C0C3C3E11F4FCB
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB0883698FCC4
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB088BBCB676E
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F33E99148D
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F3BBCB676E
Hibernate: 
    alter table t_order_request_history 
        drop constraint FK5A6B268BBCB676E
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CA6130105
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CBBCB676E
Hibernate: 
    alter table t_staff 
        drop constraint FKA0F9FF552DC32C06
Hibernate: 
    drop table t_activity_discount_rate if exists
Hibernate: 
    drop table t_customer if exists
Hibernate: 
    drop table t_dept if exists
Hibernate: 
    drop table t_dept_staff if exists
Hibernate: 
    drop table t_order if exists
Hibernate: 
    drop table t_order_pizzashack if exists
Hibernate: 
    drop table t_order_process if exists
Hibernate: 
    drop table t_order_request_history if exists
Hibernate: 
    drop table t_order_review_record if exists
Hibernate: 
    drop table t_pizzashack if exists
Hibernate: 
    drop table t_staff if exists
Hibernate: 
    drop table t_user if exists
Hibernate: 
    drop table t_workflow if exists
2014-02-03 12:24:53,314 [Scanner-0      ] INFO  SchemaExport                   - HHH000230: Schema export complete
2014-02-03 12:24:53.324:INFO:/:Closing Spring root WebApplicationContext
2014-02-03 12:24:53.327:INFO:oejsl.ELContextCleaner:javax.el.BeanELResolver purged
2014-02-03 12:24:53.327:INFO:oejsh.ContextHandler:stopped o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
[INFO] Webapp source directory = /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp
[INFO] Reload Mechanic: automatic
[INFO] Classes = /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/target/classes
[INFO] Context path = /
[INFO] Tmp directory = /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/target/tmp
[INFO] Web defaults = org/eclipse/jetty/webapp/webdefault.xml
[INFO] Web overrides =  none
[INFO] web.xml file = null
[INFO] Webapp directory = /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp
2014-02-03 12:24:56.695:INFO:oejpw.PlusConfiguration:No Transaction manager found - if your webapp requires one, please configure one.
2014-02-03 12:25:45.404:INFO:/:Spring WebApplicationInitializers detected on classpath: [co.nz.pizzashack.config.PizzashackDistributorWebInitializer@4bbeeac1]
2014-02-03 12:25:45.654:INFO:oejsh.ContextHandler:started o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
2014-02-03 12:25:45.654:INFO:oejsh.ContextHandler:started o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
2014-02-03 12:25:45.654:INFO:oejsh.ContextHandler:started o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
2014-02-03 12:25:45.654:INFO:/:Initializing Spring root WebApplicationContext
2014-02-03 12:25:45,655 [Scanner-0      ] INFO  ContextLoader                  - Root WebApplicationContext: initialization started
2014-02-03 12:25:45,655 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Refreshing Root WebApplicationContext: startup date [Mon Feb 03 12:25:45 NZDT 2014]; root of context hierarchy
2014-02-03 12:25:45,712 [Scanner-0      ] INFO  ClassPathBeanDefinitionScanner - JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2014-02-03 12:25:45,713 [Scanner-0      ] INFO  ClassPathBeanDefinitionScanner - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2014-02-03 12:25:45,713 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Registering annotated classes: [class co.nz.pizzashack.config.ApplicationConfiguration,class co.nz.pizzashack.config.WebMvcContextConfiguration]
2014-02-03 12:25:45,763 [Scanner-0      ] INFO  ClassPathBeanDefinitionScanner - JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2014-02-03 12:25:45,763 [Scanner-0      ] INFO  ClassPathBeanDefinitionScanner - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2014-02-03 12:25:46,704 [Scanner-0      ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [META-INF/cxf/cxf.xml]
2014-02-03 12:25:46,907 [Scanner-0      ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [META-INF/cxf/cxf-extension-soap.xml]
2014-02-03 12:25:46,930 [Scanner-0      ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [META-INF/cxf/cxf-servlet.xml]
2014-02-03 12:25:46,948 [Scanner-0      ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [activitiAppContext.xml]
2014-02-03 12:25:47,123 [Scanner-0      ] INFO  PropertyPlaceholderConfigurer  - Loading properties file from class path resource [activiti.properties]
2014-02-03 12:25:47,156 [Scanner-0      ] INFO  redAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2014-02-03 12:25:47,199 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'infrastructureContextConfiguration' of type [class co.nz.pizzashack.config.InfrastructureContextConfiguration$$EnhancerByCGLIB$$860e45a3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:47,226 [Scanner-0      ] INFO  MLog                           - MLog clients using log4j logging.
2014-02-03 12:25:47,258 [Scanner-0      ] INFO  C3P0Registry                   - Initializing c3p0-0.9.1.2 [built 21-May-2007 15:04:56; debug? true; trace: 10]
2014-02-03 12:25:47,315 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'dataSource' of type [class com.mchange.v2.c3p0.ComboPooledDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:47,409 [Scanner-0      ] INFO  tainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default'
2014-02-03 12:25:47,513 [Scanner-0      ] INFO  Version                        - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2014-02-03 12:25:47,520 [Scanner-0      ] INFO  Version                        - HHH000412: Hibernate Core {4.1.4.Final}
2014-02-03 12:25:47,522 [Scanner-0      ] INFO  Environment                    - HHH000206: hibernate.properties not found
2014-02-03 12:25:47,523 [Scanner-0      ] INFO  Environment                    - HHH000021: Bytecode provider name : javassist
2014-02-03 12:25:47,537 [Scanner-0      ] INFO  Ejb3Configuration              - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2014-02-03 12:25:47,773 [Scanner-0      ] INFO  ConnectionProviderInitiator    - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2014-02-03 12:25:47,825 [Scanner-0      ] INFO  AbstractPoolBackedDataSource   - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge1508z1vygi241eyfhmd|6f78a656, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.h2.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge1508z1vygi241eyfhmd|6f78a656, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:h2:mem:pizzashackdistributor;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 600, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 2, numHelperThreads -> 3, numThreadsAwaitingCheckoutDefaultUser -> 0, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2014-02-03 12:25:47,962 [Scanner-0      ] INFO  Dialect                        - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2014-02-03 12:25:47,968 [Scanner-0      ] INFO  LobCreatorBuilder              - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2014-02-03 12:25:47,974 [Scanner-0      ] INFO  TransactionFactoryInitiator    - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2014-02-03 12:25:47,977 [Scanner-0      ] INFO  ASTQueryTranslatorFactory      - HHH000397: Using ASTQueryTranslatorFactory
2014-02-03 12:25:48,003 [Scanner-0      ] INFO  Version                        - Hibernate Validator 4.2.0.Final
2014-02-03 12:25:48,218 [Scanner-0      ] INFO  SchemaExport                   - HHH000227: Running hbm2ddl schema export
Hibernate: 
    alter table t_activity_discount_rate 
        drop constraint FKA400C193698FCC4
2014-02-03 12:25:48,227 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_activity_discount_rate drop constraint FKA400C193698FCC4
2014-02-03 12:25:48,227 [Scanner-0      ] ERROR SchemaExport                   - Table "T_ACTIVITY_DISCOUNT_RATE" not found; SQL statement:

    alter table t_activity_discount_rate 
        drop constraint FKA400C193698FCC4 [42102-160]
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE11193A98D65
2014-02-03 12:25:48,228 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_dept_staff drop constraint FKBC8AE11193A98D65
2014-02-03 12:25:48,228 [Scanner-0      ] ERROR SchemaExport                   - Table "T_DEPT_STAFF" not found; SQL statement:

    alter table t_dept_staff 
        drop constraint FKBC8AE11193A98D65 [42102-160]
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE111A27DDA4A
2014-02-03 12:25:48,229 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_dept_staff drop constraint FKBC8AE111A27DDA4A
2014-02-03 12:25:48,229 [Scanner-0      ] ERROR SchemaExport                   - Table "T_DEPT_STAFF" not found; SQL statement:

    alter table t_dept_staff 
        drop constraint FKBC8AE111A27DDA4A [42102-160]
Hibernate: 
    alter table t_order 
        drop constraint FKA0C0C3C3E11F4FCB
2014-02-03 12:25:48,230 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order drop constraint FKA0C0C3C3E11F4FCB
2014-02-03 12:25:48,230 [Scanner-0      ] ERROR SchemaExport                   - Table "T_ORDER" not found; SQL statement:

    alter table t_order 
        drop constraint FKA0C0C3C3E11F4FCB [42102-160]
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB0883698FCC4
2014-02-03 12:25:48,231 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_pizzashack drop constraint FKE8ACB0883698FCC4
2014-02-03 12:25:48,231 [Scanner-0      ] ERROR SchemaExport                   - Table "T_ORDER_PIZZASHACK" not found; SQL statement:

    alter table t_order_pizzashack 
        drop constraint FKE8ACB0883698FCC4 [42102-160]
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB088BBCB676E
2014-02-03 12:25:48,232 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_pizzashack drop constraint FKE8ACB088BBCB676E
2014-02-03 12:25:48,232 [Scanner-0      ] ERROR SchemaExport                   - Table "T_ORDER_PIZZASHACK" not found; SQL statement:

    alter table t_order_pizzashack 
        drop constraint FKE8ACB088BBCB676E [42102-160]
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F33E99148D
2014-02-03 12:25:48,232 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_process drop constraint FK6B8B15F33E99148D
2014-02-03 12:25:48,232 [Scanner-0      ] ERROR SchemaExport                   - Table "T_ORDER_PROCESS" not found; SQL statement:

    alter table t_order_process 
        drop constraint FK6B8B15F33E99148D [42102-160]
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F3BBCB676E
2014-02-03 12:25:48,233 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_process drop constraint FK6B8B15F3BBCB676E
2014-02-03 12:25:48,233 [Scanner-0      ] ERROR SchemaExport                   - Table "T_ORDER_PROCESS" not found; SQL statement:

    alter table t_order_process 
        drop constraint FK6B8B15F3BBCB676E [42102-160]
Hibernate: 
    alter table t_order_request_history 
        drop constraint FK5A6B268BBCB676E
2014-02-03 12:25:48,234 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_request_history drop constraint FK5A6B268BBCB676E
2014-02-03 12:25:48,234 [Scanner-0      ] ERROR SchemaExport                   - Table "T_ORDER_REQUEST_HISTORY" not found; SQL statement:

    alter table t_order_request_history 
        drop constraint FK5A6B268BBCB676E [42102-160]
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CA6130105
2014-02-03 12:25:48,235 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_review_record drop constraint FKFB7A439CA6130105
2014-02-03 12:25:48,235 [Scanner-0      ] ERROR SchemaExport                   - Table "T_ORDER_REVIEW_RECORD" not found; SQL statement:

    alter table t_order_review_record 
        drop constraint FKFB7A439CA6130105 [42102-160]
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CBBCB676E
2014-02-03 12:25:48,236 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_review_record drop constraint FKFB7A439CBBCB676E
2014-02-03 12:25:48,236 [Scanner-0      ] ERROR SchemaExport                   - Table "T_ORDER_REVIEW_RECORD" not found; SQL statement:

    alter table t_order_review_record 
        drop constraint FKFB7A439CBBCB676E [42102-160]
Hibernate: 
    alter table t_staff 
        drop constraint FKA0F9FF552DC32C06
2014-02-03 12:25:48,237 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_staff drop constraint FKA0F9FF552DC32C06
2014-02-03 12:25:48,237 [Scanner-0      ] ERROR SchemaExport                   - Table "T_STAFF" not found; SQL statement:

    alter table t_staff 
        drop constraint FKA0F9FF552DC32C06 [42102-160]
Hibernate: 
    drop table t_activity_discount_rate if exists
Hibernate: 
    drop table t_customer if exists
Hibernate: 
    drop table t_dept if exists
Hibernate: 
    drop table t_dept_staff if exists
Hibernate: 
    drop table t_order if exists
Hibernate: 
    drop table t_order_pizzashack if exists
Hibernate: 
    drop table t_order_process if exists
Hibernate: 
    drop table t_order_request_history if exists
Hibernate: 
    drop table t_order_review_record if exists
Hibernate: 
    drop table t_pizzashack if exists
Hibernate: 
    drop table t_staff if exists
Hibernate: 
    drop table t_user if exists
Hibernate: 
    drop table t_workflow if exists
Hibernate: 
    create table t_activity_discount_rate (
        activity_rate_id bigint generated by default as identity,
        code varchar(255),
        description varchar(255),
        effective_time timestamp,
        expire_time timestamp,
        rate decimal(19,2),
        pizzashack_id bigint,
        primary key (activity_rate_id)
    )
Hibernate: 
    create table t_customer (
        cust_id bigint generated by default as identity,
        address varchar(255),
        credits integer,
        customer_name varchar(255),
        email varchar(255),
        primary key (cust_id)
    )
Hibernate: 
    create table t_dept (
        dept_id bigint generated by default as identity,
        create_date date,
        dept_name varchar(255),
        primary key (dept_id)
    )
Hibernate: 
    create table t_dept_staff (
        staff_dept_id bigint generated by default as identity,
        join_date date,
        dept_id bigint,
        staff_id bigint,
        primary key (staff_dept_id)
    )
Hibernate: 
    create table t_order (
        order_id bigint generated by default as identity,
        deliver_time timestamp,
        order_no varchar(255),
        order_time timestamp,
        payment_remarks varchar(255),
        payment_status integer,
        quantity integer,
        ship_address varchar(255),
        status integer,
        total_price decimal(19,2),
        cust_id bigint,
        primary key (order_id)
    )
Hibernate: 
    create table t_order_pizzashack (
        order_pizza_id bigint generated by default as identity,
        qty integer,
        total_price decimal(19,2),
        order_id bigint,
        pizzashack_id bigint,
        primary key (order_pizza_id)
    )
Hibernate: 
    create table t_order_process (
        order_process_id bigint generated by default as identity,
        active_process_definition_id varchar(255),
        active_process_instance_id varchar(255),
        complete_time time,
        create_time time,
        execution_id varchar(255),
        main_process_definition_id varchar(255),
        main_process_instance_id varchar(255),
        operator_id bigint,
        order_id bigint,
        primary key (order_process_id)
    )
Hibernate: 
    create table t_order_request_history (
        message_id varchar(255) generated by default as identity,
        created_at time,
        processor_name varchar(255),
        order_id bigint,
        primary key (message_id)
    )
Hibernate: 
    create table t_order_review_record (
        review_record_id bigint generated by default as identity,
        content varchar(255),
        create_time time,
        review_status integer,
        order_id bigint,
        reviewer_id bigint,
        primary key (review_record_id)
    )
Hibernate: 
    create table t_pizzashack (
        pizzashack_id bigint generated by default as identity,
        description varchar(255),
        icon varchar(255),
        name varchar(255),
        price decimal(19,2),
        primary key (pizzashack_id)
    )
Hibernate: 
    create table t_staff (
        staff_id bigint generated by default as identity,
        create_date date,
        email varchar(255),
        first_name varchar(255),
        identity varchar(255),
        last_name varchar(255),
        level integer,
        role integer,
        user_id bigint,
        primary key (staff_id)
    )
Hibernate: 
    create table t_user (
        user_id bigint generated by default as identity,
        create_time time,
        password varchar(255),
        user_name varchar(255),
        primary key (user_id)
    )
Hibernate: 
    create table t_workflow (
        workflow_id bigint generated by default as identity,
        category varchar(255),
        create_time time,
        deploy_id varchar(255),
        workflow_name varchar(255),
        process_definition_id varchar(255),
        process_definition_key varchar(255),
        primary key (workflow_id)
    )
Hibernate: 
    alter table t_activity_discount_rate 
        add constraint FKA400C193698FCC4 
        foreign key (pizzashack_id) 
        references t_pizzashack
Hibernate: 
    alter table t_dept_staff 
        add constraint FKBC8AE11193A98D65 
        foreign key (dept_id) 
        references t_dept
Hibernate: 
    alter table t_dept_staff 
        add constraint FKBC8AE111A27DDA4A 
        foreign key (staff_id) 
        references t_staff
Hibernate: 
    alter table t_order 
        add constraint FKA0C0C3C3E11F4FCB 
        foreign key (cust_id) 
        references t_customer
Hibernate: 
    alter table t_order_pizzashack 
        add constraint FKE8ACB0883698FCC4 
        foreign key (pizzashack_id) 
        references t_pizzashack
Hibernate: 
    alter table t_order_pizzashack 
        add constraint FKE8ACB088BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_process 
        add constraint FK6B8B15F33E99148D 
        foreign key (operator_id) 
        references t_user
Hibernate: 
    alter table t_order_process 
        add constraint FK6B8B15F3BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_request_history 
        add constraint FK5A6B268BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_review_record 
        add constraint FKFB7A439CA6130105 
        foreign key (reviewer_id) 
        references t_staff
Hibernate: 
    alter table t_order_review_record 
        add constraint FKFB7A439CBBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_staff 
        add constraint FKA0F9FF552DC32C06 
        foreign key (user_id) 
        references t_user
2014-02-03 12:25:48,281 [Scanner-0      ] INFO  SchemaExport                   - HHH000230: Schema export complete
2014-02-03 12:25:48,327 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'entityManagerFactory' of type [class org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:48,361 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'entityManagerFactory' of type [class com.sun.proxy.$Proxy217] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:48,564 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'cxf' of type [class org.apache.cxf.bus.spring.SpringBus] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:48,567 [Scanner-0      ] WARN  OldSpringSupport               - Import of META-INF/cxf/cxf-extension-soap.xml has been deprecated and is unnecessary.
2014-02-03 12:25:48,573 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerByCGLIB$$855804a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:48,588 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'transactionAttributeSource' of type [class org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:48,596 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'transactionInterceptor' of type [class org.springframework.transaction.interceptor.TransactionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:48,602 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'org.springframework.transaction.config.internalTransactionAdvisor' of type [class org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:48,626 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'transactionManager' of type [class org.springframework.orm.jpa.JpaTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:48,626 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'camelJdbcIdempotentConfig' of type [class co.nz.pizzashack.config.CamelJdbcIdempotentConfig$$EnhancerByCGLIB$$ecdf2bd1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:48,643 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'sqlComponent' of type [class org.apache.camel.component.sql.SqlComponent] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:48,648 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'camelCxfConfig' of type [class co.nz.pizzashack.config.CamelCxfConfig$$EnhancerByCGLIB$$16e742f6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:48,672 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'billingInboundEndpoint' of type [class org.apache.camel.component.cxf.CxfEndpoint] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:48,692 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'billingVariableTransformer' of type [class co.nz.pizzashack.integration.mapping.BillingVariableTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:48,853 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'billingFormatTransformer' of type [class co.nz.pizzashack.integration.mapping.BillingFormatTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:48,855 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'billingResponseMergeProcessor' of type [class co.nz.pizzashack.integration.mapping.BillingResponseMergeProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:48,858 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'sleepBean' of type [class co.nz.pizzashack.integration.utils.SleepBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:48,858 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'billingProcessRoute' of type [class co.nz.pizzashack.integration.route.BillingProcessRoute] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:48,930 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'org.activiti.engine.impl.rules.RulesDeployer#6aa5681b' of type [class org.activiti.engine.impl.rules.RulesDeployer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:48,931 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'processEngineConfiguration' of type [class org.activiti.spring.SpringProcessEngineConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:48,934 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'processEngine' of type [class org.activiti.spring.ProcessEngineFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:49,819 [Scanner-0      ] INFO  DbSqlSession                   - performing create on engine with resource org/activiti/db/create/activiti.h2.create.engine.sql
2014-02-03 12:25:49,836 [Scanner-0      ] INFO  DbSqlSession                   - performing create on history with resource org/activiti/db/create/activiti.h2.create.history.sql
2014-02-03 12:25:49,842 [Scanner-0      ] INFO  DbSqlSession                   - performing create on identity with resource org/activiti/db/create/activiti.h2.create.identity.sql
2014-02-03 12:25:49,845 [Scanner-0      ] INFO  ProcessEngineImpl              - ProcessEngine default created
2014-02-03 12:25:49,846 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'processEngine' of type [class org.activiti.engine.impl.ProcessEngineImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:49,851 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'runtimeService' of type [class org.activiti.engine.impl.RuntimeServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:49,856 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'taskService' of type [class org.activiti.engine.impl.TaskServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:49,861 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'historyService' of type [class org.activiti.engine.impl.HistoryServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:49,866 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'repositoryService' of type [class org.activiti.engine.impl.RepositoryServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:49,870 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'managementService' of type [class org.activiti.engine.impl.ManagementServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:49,874 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'identityService' of type [class org.activiti.engine.impl.IdentityServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:49,875 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'activitiFacade' of type [class co.nz.pizzashack.wf.ActivitiFacade] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:49,880 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'userConverter' of type [class co.nz.pizzashack.data.converter.UserConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:49,898 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:49,898 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:49,902 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:49,912 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#1' of type [class com.sun.proxy.$Proxy224] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:49,972 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'workflowRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,004 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'workflowRepository' of type [class com.sun.proxy.$Proxy225] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,007 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#2' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,007 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#2' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,007 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#2' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,007 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#3' of type [class com.sun.proxy.$Proxy224] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,016 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'pizzashackRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,025 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'pizzashackRepository' of type [class com.sun.proxy.$Proxy228] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,027 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#4' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,027 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#4' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,028 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#4' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,028 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#5' of type [class com.sun.proxy.$Proxy224] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,037 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,042 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessRepository' of type [class com.sun.proxy.$Proxy229] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,044 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#6' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,044 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#6' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,044 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#6' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,045 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#7' of type [class com.sun.proxy.$Proxy224] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,053 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'userRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,057 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'userRepository' of type [class com.sun.proxy.$Proxy230] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,059 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#8' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,059 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#8' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,059 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#8' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,060 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#9' of type [class com.sun.proxy.$Proxy224] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,068 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,072 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderRepository' of type [class com.sun.proxy.$Proxy231] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,104 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'customerConverter' of type [class co.nz.pizzashack.data.converter.CustomerConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,111 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderDetailConverter' of type [class co.nz.pizzashack.data.converter.OrderDetailConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,111 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderConverter' of type [class co.nz.pizzashack.data.converter.OrderConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,112 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessConverter' of type [class co.nz.pizzashack.data.converter.OrderProcessConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,117 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#10' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,117 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#10' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,118 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#10' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,118 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#11' of type [class com.sun.proxy.$Proxy224] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,127 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'departmentRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,130 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'departmentRepository' of type [class com.sun.proxy.$Proxy232] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,131 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessAccessor' of type [class co.nz.pizzashack.ds.OrderProcessAccessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,137 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderReviewRecordConverter' of type [class co.nz.pizzashack.data.converter.OrderReviewRecordConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,139 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#12' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,139 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#12' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,139 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#12' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,139 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#13' of type [class com.sun.proxy.$Proxy224] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,147 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderReviewRecordRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,152 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderReviewRecordRepository' of type [class com.sun.proxy.$Proxy233] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,154 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#14' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,154 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#14' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,154 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#14' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,155 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#15' of type [class com.sun.proxy.$Proxy224] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,163 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderPizzashackRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,167 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderPizzashackRepository' of type [class com.sun.proxy.$Proxy234] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,169 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#16' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,169 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#16' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,169 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#16' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,170 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#17' of type [class com.sun.proxy.$Proxy224] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,177 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'customerRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,180 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'customerRepository' of type [class com.sun.proxy.$Proxy235] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,181 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessDSImpl' of type [class co.nz.pizzashack.ds.OrderProcessDSImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,187 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'billingInboundProcessor' of type [class co.nz.pizzashack.integration.processor.BillingInboundProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,187 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'billingInboundWsRoute' of type [class co.nz.pizzashack.integration.route.BillingInboundWsRoute] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,206 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderJdbcMessageIdRepository' of type [class org.apache.camel.processor.idempotent.jdbc.JdbcMessageIdRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,213 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessFormatTransformer' of type [class co.nz.pizzashack.integration.mapping.OrderProcessFormatTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,222 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#18' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,222 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#18' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,223 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#18' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,223 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#19' of type [class com.sun.proxy.$Proxy224] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,230 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderRequestHistoryRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,233 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderRequestHistoryRepository' of type [class com.sun.proxy.$Proxy240] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,234 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderRequestProcessor' of type [class co.nz.pizzashack.integration.processor.OrderRequestProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,237 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderDuplicatedReqProcessor' of type [class co.nz.pizzashack.integration.processor.OrderDuplicatedReqProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,238 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessRoute' of type [class co.nz.pizzashack.integration.route.OrderProcessRoute] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,282 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'activeMQConnectionFactory' of type [class org.apache.activemq.ActiveMQConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,428 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'pooledConnectionFactory' of type [class org.apache.activemq.pool.PooledConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,449 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'jmsTransactionManager' of type [class org.springframework.jms.connection.JmsTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,495 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'jmsComponent' of type [class org.apache.camel.component.jms.JmsComponent] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,501 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'camelSpringConfig' of type [class co.nz.pizzashack.config.CamelSpringConfig$$EnhancerByCGLIB$$5667398a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 12:25:50,542 [Scanner-0      ] INFO  DefaultListableBeanFactory     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4e92f378: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,applicationConfiguration,webMvcContextConfiguration,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,viewConfiguration,logoutController,loginController,indexController,userController,adminIndexController,departmentController,orderController,orderQueryController,staffController,billingProcessRespTransformer,billingProcessReqTransformer,orderProcessFormatTransformer,billingVariableTransformer,billingResponseMergeProcessor,billingFormatTransformer,billingInboundProcessor,orderDuplicatedReqProcessor,orderRequestProcessor,billingProcessRoute,billingInboundWsRoute,orderProcessRoute,sleepBean,pizzashackAPIImpl,camelSpringConfig,camelJdbcIdempotentConfig,camelCxfConfig,orderProcessDSImpl,customerDSImpl,workflowDSImpl,pizzashackDSImpl,userDSImpl,orderProcessAccessor,orderProcessQueryDSImpl,staffDSImpl,orderDSImpl,departmentDSImpl,initialDataConfig,pizzashackCaculator,emailExecutionListener,endExecutionListener,caculationMergeExecutionListener,orderMainTransitionExecutionListener,toManualReviewExecutionListener,outOfBillingProcessExecutionListener,outOfCoreProcessExecutionListener,billingRespExecutionListener,customerConverter,orderProcessConverter,staffConverter,userConverter,departmentConverter,workflowConverter,orderReviewRecordConverter,orderConverter,activityDiscountRateConverter,orderDetailConverter,pizzashackDataInitialConfiguration,pizzashackItemBuilder,infrastructureContextConfiguration,activitiFacade,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0,org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0,activityDiscountRateRepository,orderReviewRecordRepository,orderPizzashackRepository,staffDepartmentRepository,orderRepository,customerRepository,orderProcessRepository,pizzashackRepository,userRepository,workflowRepository,departmentRepository,orderRequestHistoryRepository,staffRepository,viewResolver,messageSource,activeMQConnectionFactory,pooledConnectionFactory,jmsComponent,jmsTransactionManager,camelBeanPostProcessor,camelContext,custThreadPoolProfile,sqlComponent,orderJdbcMessageIdRepository,billingInboundEndpoint,loggingOutInterceptor,cxf,org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor,org.apache.cxf.bus.spring.Jsr250BeanPostProcessor,org.apache.cxf.bus.spring.BusExtensionPostProcessor,org.apache.cxf.binding.soap.SoapBindingFactory,org.apache.cxf.binding.soap.SoapTransportFactory,org.apache.cxf.binding.soap.customEditorConfigurer,setupWorkflowData,setupData,org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration,org.springframework.transaction.config.internalTransactionAdvisor,transactionAttributeSource,transactionInterceptor,dataSource,transactionManager,entityManagerFactory,placeholderConfig,processEngineConfiguration,processEngine,repositoryService,runtimeService,taskService,historyService,managementService,identityService,org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration,requestMappingHandlerMapping,mvcContentNegotiationManager,viewControllerHandlerMapping,beanNameHandlerMapping,resourceHandlerMapping,defaultServletHandlerMapping,requestMappingHandlerAdapter,mvcConversionService,mvcValidator,httpRequestHandlerAdapter,simpleControllerHandlerAdapter,handlerExceptionResolver,sessionAttributeProcessor,localeChangeInterceptor,multipartResolver,localeResolver,simpleMappingExceptionResolver]; root of factory hierarchy
2014-02-03 12:25:50,942 [Scanner-0      ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) is starting
2014-02-03 12:25:50,943 [Scanner-0      ] INFO  ManagedManagementStrategy      - JMX is enabled
2014-02-03 12:25:51,020 [Scanner-0      ] INFO  DefaultTypeConverter           - Loaded 194 type converters
Hibernate: 
    SELECT
        1 
    FROM
        T_ORDER_REQUEST_HISTORY 
    WHERE
        1 = 0
2014-02-03 12:25:51,219 [Scanner-0      ] INFO  SpringCamelContext             - StreamCaching is not in use. If using streams then its recommended to enable stream caching. See more details at http://camel.apache.org/stream-caching.html
2014-02-03 12:25:51,322 [Scanner-0      ] INFO  BusApplicationContext          - Refreshing org.apache.cxf.bus.spring.BusApplicationContext@789e260: startup date [Mon Feb 03 12:25:51 NZDT 2014]; parent: Root WebApplicationContext
2014-02-03 12:25:51,341 [Scanner-0      ] INFO  DefaultListableBeanFactory     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@42147554: defining beans []; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@4e92f378
2014-02-03 12:25:51,352 [Scanner-0      ] INFO  ReflectionServiceFactoryBean   - Creating Service {http://ws.integration.pizzashack.nz.co/}BillingProcessWebServicesService from class co.nz.pizzashack.integration.ws.BillingProcessWebServices
2014-02-03 12:25:51,719 [Scanner-0      ] INFO  ServerImpl                     - Setting the server's publish address to be /billingWs
2014-02-03 12:25:51,736 [Scanner-0      ] INFO  SpringCamelContext             - Route: activitiBillingProcess started and consuming from: Endpoint[activiti://orderBillingProcess:billingIntegration?copyVariablesToBodyAsMap=true]
2014-02-03 12:25:51,737 [Scanner-0      ] INFO  SpringCamelContext             - Route: direct:billingIntegration started and consuming from: Endpoint[direct://billingIntegration]
2014-02-03 12:25:51,738 [Scanner-0      ] INFO  SpringCamelContext             - Route: direct:receiveBillingQueue started and consuming from: Endpoint[direct://receiveBillingQueue]
2014-02-03 12:25:51,739 [Scanner-0      ] INFO  SpringCamelContext             - Route: route1 started and consuming from: Endpoint[direct://doBillingIntegration]
2014-02-03 12:25:51,745 [Scanner-0      ] INFO  SpringCamelContext             - Route: orderProcessRoute started and consuming from: Endpoint[jms://queue:pizzashackOrderInbound]
2014-02-03 12:25:51,746 [Scanner-0      ] INFO  SpringCamelContext             - Route: direct:orderDuplicatedProcess started and consuming from: Endpoint[direct://orderDuplicatedProcess]
2014-02-03 12:25:51,747 [Scanner-0      ] INFO  SpringCamelContext             - Route: direct:orderRegularProcess started and consuming from: Endpoint[direct://orderRegularProcess]
2014-02-03 12:25:51,749 [Scanner-0      ] INFO  SpringCamelContext             - Route: cxf:bean:billingInboundEndpoint started and consuming from: Endpoint[cxf://bean:billingInboundEndpoint]
2014-02-03 12:25:51,757 [Scanner-0      ] INFO  SpringCamelContext             - Total 8 routes, of which 8 is started.
2014-02-03 12:25:51,758 [Scanner-0      ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) started in 0.816 seconds
2014-02-03 12:25:51,784 [Scanner-0      ] INFO  WorkflowInitialDataSetup       - initialize start:{}
2014-02-03 12:25:51,789 [Scanner-0      ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 12:25:51,789 [Scanner-0      ] INFO  UserDSImpl                     - usernamedavid
2014-02-03 12:25:51,789 [Scanner-0      ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 12:25:51,954 [Scanner-0      ] INFO  UserDSImpl                     - userId:1 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 12:25:52,001 [Scanner-0      ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@15f31910[userId=1,username=david,password=MTIzNDU2,createTime=Mon Feb 03 12:25:51 NZDT 2014]
2014-02-03 12:25:52,043 [Scanner-0      ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-02 11:25:51)
2014-02-03 12:25:52,043 [Scanner-0      ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-02 11:25:51)
2014-02-03 12:25:52,045 [Scanner-0      ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 12:25:52,045 [Scanner-0      ] INFO  UserDSImpl                     - usernamebrad
2014-02-03 12:25:52,045 [Scanner-0      ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 12:25:52,048 [Scanner-0      ] INFO  UserDSImpl                     - userId:2 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 12:25:52,050 [Scanner-0      ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@1c04f992[userId=2,username=brad,password=MTIzNDU2,createTime=Mon Feb 03 12:25:52 NZDT 2014]
2014-02-03 12:25:52,050 [Scanner-0      ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-02 11:25:52)
2014-02-03 12:25:52,050 [Scanner-0      ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-02 11:25:52)
2014-02-03 12:25:52,050 [Scanner-0      ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 12:25:52,050 [Scanner-0      ] INFO  UserDSImpl                     - usernamejohn
2014-02-03 12:25:52,050 [Scanner-0      ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 12:25:52,053 [Scanner-0      ] INFO  UserDSImpl                     - userId:3 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 12:25:52,055 [Scanner-0      ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@1da7fb13[userId=3,username=john,password=MTIzNDU2,createTime=Mon Feb 03 12:25:52 NZDT 2014]
2014-02-03 12:25:52,055 [Scanner-0      ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-02 11:25:52)
2014-02-03 12:25:52,055 [Scanner-0      ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-02 11:25:52)
2014-02-03 12:25:52,056 [Scanner-0      ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 12:25:52,056 [Scanner-0      ] INFO  UserDSImpl                     - usernamegeneral
2014-02-03 12:25:52,056 [Scanner-0      ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 12:25:52,058 [Scanner-0      ] INFO  UserDSImpl                     - userId:4 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 12:25:52,059 [Scanner-0      ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@3c4445[userId=4,username=general,password=MTIzNDU2,createTime=Mon Feb 03 12:25:52 NZDT 2014]
2014-02-03 12:25:52,060 [Scanner-0      ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:2014-02-02 11:25:52)
2014-02-03 12:25:52,060 [Scanner-0      ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:2014-02-02 11:25:52)
2014-02-03 12:25:52,071 [Scanner-0      ] INFO  DepartmentDSImpl               - createDepartment start:co.nz.pizzashack.data.dto.DepartmentDto(deptId:null, deptName:Order manager, createDate:null) 
Hibernate: 
    select
        department0_.dept_id as dept1_8_,
        department0_.create_date as create2_8_,
        department0_.dept_name as dept3_8_ 
    from
        t_dept department0_ 
    where
        department0_.dept_name=? limit ?
2014-02-03 12:25:52,076 [Scanner-0      ] INFO  DepartmentConverter            - toModel start:{} co.nz.pizzashack.data.dto.DepartmentDto(deptId:null, deptName:Order manager, createDate:null)
2014-02-03 12:25:52,080 [Scanner-0      ] INFO  DepartmentConverter            - toModel end:{} co.nz.pizzashack.data.model.DepartmentModel@76909f6c[deptId=<null>,deptName=Order manager,createDate=<null>,staffDepartments=<null>]
Hibernate: 
    insert 
    into
        t_dept
        (dept_id, create_date, dept_name) 
    values
        (null, ?, ?)
Hibernate: 
    insert 
    into
        ACT_ID_GROUP
        (ID_, REV_, NAME_, TYPE_)     
    values
        (       ?,       1,        ?,       ?     )
2014-02-03 12:25:52,086 [Scanner-0      ] INFO  DepartmentConverter            - toDto start:{} co.nz.pizzashack.data.model.DepartmentModel@76909f6c[deptId=1,deptName=Order manager,createDate=Mon Feb 03 12:25:52 NZDT 2014,staffDepartments=<null>]
2014-02-03 12:25:52,088 [Scanner-0      ] INFO  DepartmentConverter            - toDto end:{} co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02)
2014-02-03 12:25:52,088 [Scanner-0      ] INFO  DepartmentDSImpl               - createDepartment end:co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02) 
2014-02-03 12:25:52,088 [Scanner-0      ] INFO  WorkflowInitialDataSetup       - department:co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02) 
2014-02-03 12:25:52,107 [Scanner-0      ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:null, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-02 11:25:51)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-02-03 12:25:52,113 [Scanner-0      ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:null, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-02 11:25:51))
2014-02-03 12:25:52,131 [Scanner-0      ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@32c273a3[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@7c35ec5d[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-02-03 12:25:52,178 [Scanner-0      ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@32c273a3[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@7c35ec5d[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=Mon Feb 03 12:25:52 NZDT 2014] 
2014-02-03 12:25:52,178 [Scanner-0      ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = ?
Hibernate: 
    update
        ACT_GE_PROPERTY      
    SET
        REV_ = ?,
        VALUE_ = ?      
    where
        NAME_ = ?       
        and REV_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-02-03 12:25:52,198 [Scanner-0      ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-02-03 12:25:52,205 [Scanner-0      ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@32c273a3[staffId=1,individual=co.nz.pizzashack.data.model.IndividualModel@7c35ec5d[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=Mon Feb 03 12:25:52 NZDT 2014]
2014-02-03 12:25:52,213 [Scanner-0      ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:1, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-02-03 12:25:52,214 [Scanner-0      ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:1, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-02-03 12:25:52,218 [Scanner-0      ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:null, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-02 11:25:52)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-02-03 12:25:52,220 [Scanner-0      ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:null, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-02 11:25:52))
2014-02-03 12:25:52,220 [Scanner-0      ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@6d7ad9d1[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@1c72607e[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-02-03 12:25:52,228 [Scanner-0      ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@6d7ad9d1[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@1c72607e[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=Mon Feb 03 12:25:52 NZDT 2014] 
2014-02-03 12:25:52,228 [Scanner-0      ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-02-03 12:25:52,232 [Scanner-0      ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-02-03 12:25:52,235 [Scanner-0      ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@6d7ad9d1[staffId=2,individual=co.nz.pizzashack.data.model.IndividualModel@1c72607e[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=Mon Feb 03 12:25:52 NZDT 2014]
2014-02-03 12:25:52,236 [Scanner-0      ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:2, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-02-03 12:25:52,236 [Scanner-0      ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:2, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-02-03 12:25:52,238 [Scanner-0      ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:null, departments:null, role:manager, level:junior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-02 11:25:52)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-02-03 12:25:52,240 [Scanner-0      ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:null, departments:null, role:manager, level:junior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-02 11:25:52))
2014-02-03 12:25:52,240 [Scanner-0      ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@6d5b50e0[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@61ada37[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-02-03 12:25:52,247 [Scanner-0      ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@6d5b50e0[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@61ada37[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=Mon Feb 03 12:25:52 NZDT 2014] 
2014-02-03 12:25:52,247 [Scanner-0      ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-02-03 12:25:52,251 [Scanner-0      ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-02-03 12:25:52,254 [Scanner-0      ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@6d5b50e0[staffId=3,individual=co.nz.pizzashack.data.model.IndividualModel@61ada37[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=Mon Feb 03 12:25:52 NZDT 2014]
2014-02-03 12:25:52,254 [Scanner-0      ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:3, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:null, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-02-03 12:25:52,255 [Scanner-0      ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:3, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:null, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-02-03 12:25:52,256 [Scanner-0      ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-02-03 12:25:52,265 [Scanner-0      ] INFO  BpmnDeployer                   - Processing resource bpmn/OrderBillingProcess.bpmn20.xml
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-02-03 12:25:52,456 [Scanner-0      ] INFO  RulesDeployer                  - Processing resource bpmn/OrderBillingProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 12:25:52,466 [Scanner-0      ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderBillingProcess:1:7]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-02-03 12:25:52,471 [Scanner-0      ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@133655c2[wfId=1,name=orderBillingProcess,deployId=4,processDefinitionKey=orderBillingProcess,processDefinitionId=orderBillingProcess:1:7,createTime=Mon Feb 03 12:25:52 NZDT 2014]
2014-02-03 12:25:52,484 [Scanner-0      ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-02-02 11:25:52)
2014-02-03 12:25:52,484 [Scanner-0      ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-02-02 11:25:52)
2014-02-03 12:25:52,484 [Scanner-0      ] INFO  WorkflowInitialDataSetup       - deploy billing process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-02-02 11:25:52) 
2014-02-03 12:25:52,485 [Scanner-0      ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-02-03 12:25:52,487 [Scanner-0      ] INFO  BpmnDeployer                   - Processing resource bpmn/OrdercoreProcess.bpmn20.xml
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-02-03 12:25:52,587 [Scanner-0      ] INFO  RulesDeployer                  - Processing resource bpmn/OrdercoreProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 12:25:52,594 [Scanner-0      ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderCoreProcess:1:11]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-02-03 12:25:52,596 [Scanner-0      ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@4b9ac7c0[wfId=2,name=orderCoreProcess,deployId=8,processDefinitionKey=orderCoreProcess,processDefinitionId=orderCoreProcess:1:11,createTime=Mon Feb 03 12:25:52 NZDT 2014]
2014-02-03 12:25:52,596 [Scanner-0      ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-02-02 11:25:52)
2014-02-03 12:25:52,596 [Scanner-0      ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-02-02 11:25:52)
2014-02-03 12:25:52,597 [Scanner-0      ] INFO  WorkflowInitialDataSetup       - deploy core process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-02-02 11:25:52) 
2014-02-03 12:25:52,597 [Scanner-0      ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-02-03 12:25:52,599 [Scanner-0      ] INFO  BpmnDeployer                   - Processing resource bpmn/OrderlocalProcess.bpmn20.xml
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-02-03 12:25:52,761 [Scanner-0      ] INFO  RulesDeployer                  - Processing resource bpmn/OrderlocalProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 12:25:52,770 [Scanner-0      ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderlocalProcess:1:15]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-02-03 12:25:52,772 [Scanner-0      ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@19cf03f7[wfId=3,name=orderlocalProcess,deployId=12,processDefinitionKey=orderlocalProcess,processDefinitionId=orderlocalProcess:1:15,createTime=Mon Feb 03 12:25:52 NZDT 2014]
2014-02-03 12:25:52,772 [Scanner-0      ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 11:25:52)
2014-02-03 12:25:52,773 [Scanner-0      ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 11:25:52)
2014-02-03 12:25:52,773 [Scanner-0      ] INFO  WorkflowInitialDataSetup       - deploy local main process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 11:25:52) 
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
2014-02-03 12:25:52,901 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/logout],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LogoutController.logout(javax.servlet.http.HttpSession)
2014-02-03 12:25:52,902 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/login],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LoginController.showLoginPage(org.springframework.ui.Model)
2014-02-03 12:25:52,902 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/login],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LoginController.handleLogin(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws co.nz.pizzashack.AuthenticationException
2014-02-03 12:25:52,902 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/index],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.IndexController.index(org.springframework.ui.Model,co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-02-03 12:25:52,904 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/createUser],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public co.nz.pizzashack.data.dto.UserDto co.nz.pizzashack.controller.UserController.createUser(co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-02-03 12:25:52,904 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/{userId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 12:25:52,904 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 12:25:52,904 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/update/{userId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 12:25:52,905 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/{userId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.deleteUser(java.lang.Long) throws java.lang.Exception
2014-02-03 12:25:52,905 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/check/{userName}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.checkUser(java.lang.String) throws java.lang.Exception
2014-02-03 12:25:52,905 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 12:25:52,905 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/search],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.search(co.nz.pizzashack.data.dto.UserDto,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 12:25:52,905 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.create(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 12:25:52,905 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.update(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 12:25:52,906 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/adminIndex],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.AdminIndexController.index(org.springframework.ui.Model,co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-02-03 12:25:52,907 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/{deptId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 12:25:52,907 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/selectdepts],methods=[GET],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.util.Set<co.nz.pizzashack.data.dto.DepartmentDto> co.nz.pizzashack.controller.DepartmentController.select() throws java.lang.Exception
2014-02-03 12:25:52,907 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 12:25:52,907 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/update/{deptId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 12:25:52,908 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 12:25:52,908 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/{deptId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.delete(java.lang.Long) throws java.lang.Exception
2014-02-03 12:25:52,908 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/search],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.search(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 12:25:52,908 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.create(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 12:25:52,908 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.update(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 12:25:52,909 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/{orderProcessId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.showOrderProcess(java.lang.Long,org.springframework.ui.Model,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-02-03 12:25:52,909 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/claimReview/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.claimReviewTask(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-02-03 12:25:52,909 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/review],methods=[POST],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.reviewOrder(co.nz.pizzashack.data.dto.OrderReviewRecordDto,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-02-03 12:25:52,909 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderQuery/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderQueryController.show(java.lang.String,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 12:25:52,910 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderQuery/showHistory/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.util.Set<co.nz.pizzashack.data.dto.ProcessActivityDto> co.nz.pizzashack.controller.OrderQueryController.showHistory(java.lang.String) throws java.lang.Exception
2014-02-03 12:25:52,910 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderQuery/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderQueryController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 12:25:52,911 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/{staffId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 12:25:52,911 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 12:25:52,911 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/update/{staffId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 12:25:52,911 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 12:25:52,926 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/{staffId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.delete(java.lang.Long) throws java.lang.Exception
2014-02-03 12:25:52,927 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.create(co.nz.pizzashack.data.dto.StaffDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 12:25:52,927 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.update(co.nz.pizzashack.data.dto.StaffDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 12:25:52,973 [Scanner-0      ] INFO  SimpleUrlHandlerMapping        - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2014-02-03 12:25:52,975 [Scanner-0      ] INFO  SimpleUrlHandlerMapping        - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler]
2014-02-03 12:25:53,198 [Scanner-0      ] INFO  ContextLoader                  - Root WebApplicationContext: initialization completed in 7543 ms
2014-02-03 12:25:53.198:INFO:oejsh.ContextHandler:started o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
Feb 03, 2014 12:25:53 PM com.sun.jersey.api.core.PackagesResourceConfig init
INFO: Scanning for root resource and provider classes in the packages:
  co.nz.pizzashack.integration.api
Feb 03, 2014 12:25:53 PM com.sun.jersey.api.core.ScanningResourceConfig logClasses
INFO: Root resource classes found:
  class co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl
Feb 03, 2014 12:25:53 PM com.sun.jersey.api.core.ScanningResourceConfig init
INFO: No provider classes found.
Feb 03, 2014 12:25:53 PM com.sun.jersey.spi.spring.container.servlet.SpringServlet getContext
INFO: Using default applicationContext
Feb 03, 2014 12:25:53 PM com.sun.jersey.spi.spring.container.SpringComponentProviderFactory registerSpringBeans
INFO: Registering Spring bean, pizzashackAPIImpl, of type co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl as a root resource class
Feb 03, 2014 12:25:53 PM com.sun.jersey.server.impl.application.WebApplicationImpl _initiate
INFO: Initiating Jersey application, version 'Jersey: 1.17.1 02/28/2013 12:47 PM'
Feb 03, 2014 12:25:53 PM com.sun.jersey.spi.inject.Errors processErrorMessages
WARNING: The following warnings have been detected with resource and/or provider classes:
  WARNING: A HTTP GET method, public javax.ws.rs.core.Response co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl.getOrderProcessByOrderNo(java.lang.String), should not consume any entity.
Feb 03, 2014 12:25:53 PM com.sun.jersey.spi.spring.container.servlet.SpringServlet getContext
INFO: Using default applicationContext
Feb 03, 2014 12:25:53 PM com.sun.jersey.spi.spring.container.SpringComponentProviderFactory registerSpringBeans
INFO: Registering Spring bean, pizzashackAPIImpl, of type co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl as a root resource class
Feb 03, 2014 12:25:53 PM com.sun.jersey.server.impl.application.WebApplicationImpl _initiate
INFO: Initiating Jersey application, version 'Jersey: 1.17.1 02/28/2013 12:47 PM'
Feb 03, 2014 12:25:53 PM com.sun.jersey.spi.inject.Errors processErrorMessages
WARNING: The following warnings have been detected with resource and/or provider classes:
  WARNING: A HTTP GET method, public javax.ws.rs.core.Response co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl.getOrderProcessByOrderNo(java.lang.String), should not consume any entity.
2014-02-03 12:25:53.728:INFO:/:Initializing Spring FrameworkServlet 'dispatcher'
2014-02-03 12:25:53,728 [Scanner-0      ] INFO  DispatcherServlet              - FrameworkServlet 'dispatcher': initialization started
2014-02-03 12:25:53,741 [Scanner-0      ] INFO  DispatcherServlet              - FrameworkServlet 'dispatcher': initialization completed in 13 ms
[INFO] Restart completed at Mon Feb 03 12:25:53 NZDT 2014
2014-02-03 14:49:11,289 [qtp935945395-34] INFO  PizzashackAPIImpl              - getPizzashacks start:{}
2014-02-03 14:49:11,290 [qtp935945395-34] INFO  PizzashackDSImpl               - getAllItems start:{} 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_
2014-02-03 14:49:11,337 [qtp935945395-34] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:1, pizzaName:Chicken Parmesan, description:Grilled chicken, fresh tomatoes, feta and mozzarella cheese, price:25.00, afterDiscount:null, icon:/images/1.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 14:49:11,347 [qtp935945395-34] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:2, pizzaName:Spicy Italian, description:Pepperoni and a double portion of spicy Italian sausage, price:28.00, afterDiscount:null, icon:/images/2.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 14:49:11,348 [qtp935945395-34] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:3, pizzaName:Garden Fresh, description:Slices onions and green peppers, gourmet mushrooms, black olives and ripe Roma tomatoes, price:35.00, afterDiscount:null, icon:/images/3.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 14:49:11,348 [qtp935945395-34] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:4, pizzaName:Tuscan Six Cheese, description:Six cheese blend of mozzarella, Parmesan, Romano, Asiago and Fontina, price:26.50, afterDiscount:null, icon:/images/4.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 14:49:11,349 [qtp935945395-34] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:5, pizzaName:Spinach Alfredo, description:Rich and creamy blend of spinach and garlic Parmesan with Alfredo saucePepperoni and a double portion of spicy Italian sausage, price:15.10, afterDiscount:null, icon:/images/5.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 14:49:11,350 [qtp935945395-34] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:6, pizzaName:BBQ Chicken Bacon, description:Grilled white chicken, hickory-smoked bacon and fresh sliced onions in barbeque sauce, price:45.00, afterDiscount:null, icon:/images/6.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 14:49:11,351 [qtp935945395-34] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:7, pizzaName:Hawaiian BBQ Chicken, description:Grilled white chicken, hickory-smoked bacon, barbeque sauce topped with sweet pine-apple, price:37.00, afterDiscount:null, icon:/images/7.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 14:49:11,352 [qtp935945395-34] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:8, pizzaName:Grilled Chicken Club, description:Grilled white chicken, hickory-smoked bacon and fresh sliced onions topped with Roma tomatoes, price:29.00, afterDiscount:null, icon:/images/8.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 14:49:11,352 [qtp935945395-34] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:9, pizzaName:Double Bacon 6Cheese, description:Hickory-smoked bacon, Julienne cut Canadian bacon, Parmesan, mozzarella, Romano, Asiago and and Fontina cheese, price:32.50, afterDiscount:null, icon:/images/9.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 14:49:11,353 [qtp935945395-34] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:10, pizzaName:Chilly Chicken Cordon Bleu, description:Spinash Alfredo sauce topped with grilled chicken, ham, onions and mozzarella, price:28.00, afterDiscount:null, icon:/images/10.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 14:49:11,354 [qtp935945395-34] INFO  PizzashackDSImpl               - getAllItems end:{} 
2014-02-03 14:49:11,354 [qtp935945395-34] INFO  PizzashackAPIImpl              - getPizzashacks end:{}
2014-02-03 14:49:19,280 [qtp935945395-40] INFO  PizzashackAPIImpl              - getPizzashackById start:{}
2014-02-03 14:49:19,280 [qtp935945395-40] INFO  PizzashackDSImpl               - getPizzashackById start:1 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 14:49:19,283 [qtp935945395-40] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:1, pizzaName:Chicken Parmesan, description:Grilled chicken, fresh tomatoes, feta and mozzarella cheese, price:25.00, afterDiscount:null, icon:/images/1.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 14:49:19,283 [qtp935945395-40] INFO  PizzashackDSImpl               - getPizzashackById end:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:1, pizzaName:Chicken Parmesan, description:Grilled chicken, fresh tomatoes, feta and mozzarella cheese, price:25.00, afterDiscount:null, icon:/images/1.png) 
2014-02-03 14:49:19,283 [qtp935945395-40] INFO  PizzashackAPIImpl              - getPizzashackById end:{}
2014-02-03 16:09:15,602 [qtp935945395-38] INFO  UserDSImpl                     - loginUser start:{}
2014-02-03 16:09:15,602 [qtp935945395-38] INFO  UserDSImpl                     - username:david
2014-02-03 16:09:15,602 [qtp935945395-38] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? 
        and usermodel0_.password=? limit ?
2014-02-03 16:09:15,618 [qtp935945395-38] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@a637502[userId=1,username=david,password=MTIzNDU2,createTime=12:25:51]
2014-02-03 16:09:15,639 [qtp935945395-38] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:1970-01-01 12:25:51)
2014-02-03 16:09:15,639 [qtp935945395-38] INFO  UserDSImpl                     - loginUser end:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:1970-01-01 12:25:51)
2014-02-03 16:09:15,639 [qtp935945395-38] INFO  BaseController                 - requestMapping:/index
2014-02-03 16:09:15,646 [qtp935945395-34] INFO  IndexController                - index: {}
2014-02-03 16:09:15,646 [qtp935945395-34] INFO  OrderProcessDSImpl             - getAllTransTaskForCurrentUser start:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:1970-01-01 12:25:51) 
2014-02-03 16:09:15,646 [qtp935945395-34] INFO  ActivitiFacade                 - getAllTasksForUser start:1
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                    
    WHERE
        RES.ASSIGNEE_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        g.*     
    from
        ACT_ID_GROUP g,
        ACT_ID_MEMBERSHIP membership     
    where
        g.ID_ = membership.GROUP_ID_       
        and membership.USER_ID_ = ?
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                   
    inner join
        ACT_RU_IDENTITYLINK I 
            on I.TASK_ID_ = RES.ID_                              
    WHERE
        RES.ASSIGNEE_ is null         
        and I.TYPE_ = 'candidate'         
        and          (
            I.USER_ID_ = ?                                             
            or                                   I.GROUP_ID_ IN             (
                ?             
            )                    
        )                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_GROUP RES             
    inner join
        ACT_ID_MEMBERSHIP M 
            on RES.ID_ = M.GROUP_ID_       
    inner join
        ACT_ID_USER U 
            on M.USER_ID_ = U.ID_            
    WHERE
        U.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                   
    inner join
        ACT_RU_IDENTITYLINK I 
            on I.TASK_ID_ = RES.ID_                              
    WHERE
        RES.ASSIGNEE_ is null         
        and I.TYPE_ = 'candidate'         
        and          (
            I.GROUP_ID_ IN             (
                ?             
            )                    
        )                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 16:09:15,694 [qtp935945395-34] INFO  OrderProcessDSImpl             - getAllTransTaskForCurrentUser end:{} 
2014-02-03 16:09:16,858 [qtp935945395-40] INFO  OrderQueryController           - userIndex start: {}
2014-02-03 16:09:16,859 [qtp935945395-40] INFO  OrderProcessQueryDSImpl        - getAllOrderProcesses start:{} 
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_
2014-02-03 16:09:16,864 [qtp935945395-40] INFO  OrderProcessQueryDSImpl        - getAllOrderProcesses end:{} 
2014-02-03 16:09:19,344 [qtp935945395-37] INFO  OrderQueryController           - userIndex start: {}
2014-02-03 16:09:19,345 [qtp935945395-37] INFO  OrderProcessQueryDSImpl        - getAllOrderProcesses start:{} 
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_
2014-02-03 16:09:19,348 [qtp935945395-37] INFO  OrderProcessQueryDSImpl        - getAllOrderProcesses end:{} 
2014-02-03 16:09:36,204 [ckOrderInbound]] INFO  orderProcessRoute              - Received message 50493
Hibernate: 
    SELECT
        COUNT(*) 
    FROM
        T_ORDER_REQUEST_HISTORY 
    WHERE
        processor_name = ? 
        AND message_id = ?
Hibernate: 
    INSERT 
    INTO
        T_ORDER_REQUEST_HISTORY
        (processor_name, message_id, created_at) 
    VALUES
        (?, ?, ?)
2014-02-03 16:09:36,368 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlUnmarshal start:{} <order>
  <address>25 mavon downs</address>
  <order-list>
    <order-details>
      <pizza-name>Garden Fresh</pizza-name>
      <quantity>4</quantity>
    </order-details>
    <order-details>
      <pizza-name>Chicken Parmesan</pizza-name>
      <quantity>10</quantity>
    </order-details>
  </order-list>
  <customer>
    <name>david</name>
    <email>david.yuan124@gmail.com</email>
  </customer>
</order>
orderDetailsDto: co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Garden Fresh, qty:4, totalPrice:0)
orderDetailsDto: co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)
2014-02-03 16:09:36,430 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlUnmarshal end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:null, orderNo:null, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:david, customerEmail:david.yuan124@gmail.com, level:null), address:25 mavon downs, status:null, orderTime:null, deliverTime:null)
2014-02-03 16:09:36,430 [ckOrderInbound]] INFO  OrderRequestProcessor          - orderRequestProcessor start:{} 
2014-02-03 16:09:36,431 [ckOrderInbound]] INFO  OrderRequestProcessor          - order request:co.nz.pizzashack.data.dto.OrderDto(orderId:null, orderNo:null, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:david, customerEmail:david.yuan124@gmail.com, level:null), address:25 mavon downs, status:null, orderTime:null, deliverTime:null) 
2014-02-03 16:09:36,431 [ckOrderInbound]] INFO  OrderRequestProcessor          - messageId:50493 
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
2014-02-03 16:09:36,433 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@23c8aac[userId=4,username=general,password=MTIzNDU2,createTime=12:25:52]
2014-02-03 16:09:36,433 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 12:25:52)
2014-02-03 16:09:36,433 [ckOrderInbound]] INFO  OrderRequestProcessor          - default operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 12:25:52) 
2014-02-03 16:09:36,434 [ckOrderInbound]] INFO  OrderProcessDSImpl             - startOrderProcess start:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 12:25:52)
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.process_definition_key=? 
        and workflowmo0_.category=? limit ?
Hibernate: 
    insert 
    into
        t_order
        (order_id, cust_id, deliver_time, order_no, order_time, payment_remarks, payment_status, quantity, ship_address, status, total_price) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 16:09:36,447 [ckOrderInbound]] INFO  ActivitiFacade                 - startProcessInstance start:{}
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
2014-02-03 16:09:36,464 [ckOrderInbound]] INFO  ActivitiFacade                 - startProcessInstance end:{}
Hibernate: 
    insert 
    into
        t_order_process
        (order_process_id, active_process_definition_id, active_process_instance_id, complete_time, create_time, execution_id, main_process_definition_id, main_process_instance_id, operator_id, order_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2014-02-03 16:09:36,470 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@c015fef[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=Mon Feb 03 16:09:36 NZDT 2014,completeTime=<null>]
2014-02-03 16:09:36,486 [ckOrderInbound]] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@736802bf[orderId=1,orderNo=916743e7-7a84-4bcc-b944-27f5f385f92d,quantity=<null>,status=0,paymentStatus=0,deliverTime=<null>,totalPrice=<null>,orderTime=Mon Feb 03 16:09:36 NZDT 2014]
2014-02-03 16:09:36,488 [ckOrderInbound]] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:916743e7-7a84-4bcc-b944-27f5f385f92d, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 03:09:36, deliverTime:null)
2014-02-03 16:09:36,489 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@1a032c3d[userId=4,username=general,password=MTIzNDU2,createTime=12:25:52]
2014-02-03 16:09:36,489 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 12:25:52)
2014-02-03 16:09:36,495 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:916743e7-7a84-4bcc-b944-27f5f385f92d, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 03:09:36, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 03:09:36, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 12:25:52))
2014-02-03 16:09:36,495 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:916743e7-7a84-4bcc-b944-27f5f385f92d, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 03:09:36, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 03:09:36, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 12:25:52)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
2014-02-03 16:09:36,503 [ckOrderInbound]] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 16:09:36,504 [ckOrderInbound]] INFO  ActivitiFacade                 - executionId: 16, processDefinitionId: orderlocalProcess:1:15
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 16:09:36,527 [ckOrderInbound]] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 16:09:36,530 [ckOrderInbound]] INFO  OrderProcessAccessor           - assign operator[4] to task[Data entry]
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    insert 
    into
        ACT_RU_IDENTITYLINK
        (ID_, REV_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_, PROC_DEF_ID_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_IDENTITYLINK
        (ID_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_)     
    values
        (?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    update
        ACT_RU_TASK      
    SET
        REV_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        PRIORITY_ = ?,
        CREATE_TIME_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        DELEGATION_ = ?,
        EXECUTION_ID_ = ?,
        PROC_DEF_ID_ = ?,
        DESCRIPTION_ = ?,
        DUE_DATE_ = ?,
        SUSPENSION_STATE_ = ?      
    where
        ID_= ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
2014-02-03 16:09:36,547 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:916743e7-7a84-4bcc-b944-27f5f385f92d, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 03:09:36, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 03:09:36, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 12:25:52)) 
2014-02-03 16:09:36,548 [ckOrderInbound]] INFO  OrderProcessDSImpl             - startOrderProcess end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:916743e7-7a84-4bcc-b944-27f5f385f92d, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 03:09:36, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 03:09:36, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 12:25:52))
2014-02-03 16:09:36,550 [ckOrderInbound]] INFO  OrderRequestProcessor          - after start process:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:916743e7-7a84-4bcc-b944-27f5f385f92d, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 03:09:36, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 03:09:36, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 12:25:52)) 
2014-02-03 16:09:36,550 [ckOrderInbound]] INFO  OrderProcessDSImpl             - dataEntry start:916743e7-7a84-4bcc-b944-27f5f385f92d
2014-02-03 16:09:36,551 [ckOrderInbound]] INFO  OrderProcessDSImpl             - getOrderProcessByOrderNo start************************************
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 16:09:36,561 [ckOrderInbound]] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@1d7eb9d8[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=16:09:36,completeTime=<null>] 
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_,
        customermo0_.address as address2_,
        customermo0_.credits as credits2_,
        customermo0_.customer_name as customer4_2_,
        customermo0_.email as email2_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.email=? limit ?
2014-02-03 16:09:36,566 [ckOrderInbound]] INFO  CustomerConverter              - toModel start:{} co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:david, customerEmail:david.yuan124@gmail.com, level:null)
2014-02-03 16:09:36,569 [ckOrderInbound]] INFO  CustomerConverter              - toModel end:{} co.nz.pizzashack.data.model.CustomerModel@2a8c3431[custId=<null>,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
Hibernate: 
    insert 
    into
        t_customer
        (cust_id, address, credits, customer_name, email) 
    values
        (null, ?, ?, ?, ?)
2014-02-03 16:09:36,572 [ckOrderInbound]] INFO  OrderProcessDSImpl             - orderDetailsSet size:2 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
2014-02-03 16:09:36,578 [ckOrderInbound]] INFO  OrderProcessDSImpl             - added orderPizzashackModel:co.nz.pizzashack.data.model.OrderPizzashackModel@29a31892[orderPizzashackId=<null>,totalPrice=0,qty=4] 
Hibernate: 
    insert 
    into
        t_order_pizzashack
        (order_pizza_id, order_id, pizzashack_id, qty, total_price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
2014-02-03 16:09:36,585 [ckOrderInbound]] INFO  OrderProcessDSImpl             - added orderPizzashackModel:co.nz.pizzashack.data.model.OrderPizzashackModel@57b9cb5[orderPizzashackId=<null>,totalPrice=0,qty=10] 
Hibernate: 
    insert 
    into
        t_order_pizzashack
        (order_pizza_id, order_id, pizzashack_id, qty, total_price) 
    values
        (null, ?, ?, ?, ?)
2014-02-03 16:09:36,586 [ckOrderInbound]] INFO  OrderProcessDSImpl             - after add detailsDto, size in model:2 
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        E.BUSINESS_KEY_ = ?                                                                                 
        and RES.PROC_DEF_ID_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                    
        and RES.ASSIGNEE_ = ?                                                                        
        and E.BUSINESS_KEY_ = ?
2014-02-03 16:09:36,592 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@1d7eb9d8[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=16:09:36,completeTime=<null>]
2014-02-03 16:09:36,596 [ckOrderInbound]] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@377e7e9d[orderId=1,orderNo=916743e7-7a84-4bcc-b944-27f5f385f92d,quantity=0,status=0,paymentStatus=0,deliverTime=<null>,totalPrice=0,orderTime=2014-02-03 16:09:36.44]
2014-02-03 16:09:36,600 [ckOrderInbound]] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@2a8c3431[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 16:09:36,607 [ckOrderInbound]] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-02-03 16:09:36,611 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@29a31892[orderPizzashackId=1,totalPrice=0,qty=4]
2014-02-03 16:09:36,617 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0)
2014-02-03 16:09:36,617 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@57b9cb5[orderPizzashackId=2,totalPrice=0,qty=10]
2014-02-03 16:09:36,618 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)
2014-02-03 16:09:36,618 [ckOrderInbound]] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:916743e7-7a84-4bcc-b944-27f5f385f92d, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 03:09:36, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 16:09:36,622 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@69524741[userId=4,username=general,password=MTIzNDU2,createTime=12:25:52]
2014-02-03 16:09:36,623 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 12:25:52)
2014-02-03 16:09:36,623 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:916743e7-7a84-4bcc-b944-27f5f385f92d, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 03:09:36, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 04:09:36, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 12:25:52))
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        PARENT_TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE 
    where
        TASK_ID_ =     ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
2014-02-03 16:09:36,669 [ckOrderInbound]] INFO  ainTransitionExecutionListener - orderMainUserTaskExecutionListener start:{} 
2014-02-03 16:09:36,669 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity id:orderCoreCallactivity
2014-02-03 16:09:36,669 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity name:Core process
2014-02-03 16:09:36,669 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity type:callActivity
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
start calculate: co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:916743e7-7a84-4bcc-b944-27f5f385f92d, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 03:09:36, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 04:09:36, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 12:25:52))
2014-02-03 16:09:36,946 [ckOrderInbound]] INFO  PizzashackCaculator            - caculate start:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:916743e7-7a84-4bcc-b944-27f5f385f92d, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 03:09:36, deliverTime:null) 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 16:09:36,953 [ckOrderInbound]] INFO  PizzashackCaculator            - caculate end:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:916743e7-7a84-4bcc-b944-27f5f385f92d, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 03:09:36, deliverTime:null) 
after calculation: co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:916743e7-7a84-4bcc-b944-27f5f385f92d, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 03:09:36, deliverTime:null)
2014-02-03 16:09:36,954 [ckOrderInbound]] INFO  culationMergeExecutionListener - CaculationMergeExecutionListener start
2014-02-03 16:09:36,955 [ckOrderInbound]] INFO  culationMergeExecutionListener - after calculation, orderProcess:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:916743e7-7a84-4bcc-b944-27f5f385f92d, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 03:09:36, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 04:09:36, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 12:25:52)) 
2014-02-03 16:09:36,955 [ckOrderInbound]] INFO  OrderProcessAccessor           - merge calculation result
2014-02-03 16:09:36,955 [ckOrderInbound]] INFO  OrderProcessAccessor           - total price:390.00 
2014-02-03 16:09:36,955 [ckOrderInbound]] INFO  OrderProcessAccessor           - qty:14 
2014-02-03 16:09:36,956 [ckOrderInbound]] INFO  OrderProcessAccessor           - orderDetailsSet.size():2
2014-02-03 16:09:36,956 [ckOrderInbound]] INFO  culationMergeExecutionListener - CaculationMergeExecutionListener end
total qty: 14
after autoreview: 2
reviewTransBean: co.nz.pizzashack.data.dto.OrderReviewRecordDto(reviewRecordId:null, orderNo:916743e7-7a84-4bcc-b944-27f5f385f92d, content:order number is more than 10 but less than 30, reviewResult:pending, createTime:2014-02-03 03:09:37, reviewer:null)
2014-02-03 16:09:37,022 [ckOrderInbound]] INFO  oManualReviewExecutionListener - ToManualReviewExecutionListener start:{} 
2014-02-03 16:09:37,022 [ckOrderInbound]] INFO  oManualReviewExecutionListener - eventName:take 
2014-02-03 16:09:37,022 [ckOrderInbound]] INFO  oManualReviewExecutionListener - activitiProcessDefinitionId:orderCoreProcess:1:11
2014-02-03 16:09:37,022 [ckOrderInbound]] INFO  oManualReviewExecutionListener - activitiProcesssInstanceId:30
2014-02-03 16:09:37,022 [ckOrderInbound]] INFO  oManualReviewExecutionListener - get orderReviewRecord:co.nz.pizzashack.data.dto.OrderReviewRecordDto(reviewRecordId:null, orderNo:916743e7-7a84-4bcc-b944-27f5f385f92d, content:order number is more than 10 but less than 30, reviewResult:pending, createTime:2014-02-03 03:09:37, reviewer:null) 
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_IDENTITYLINK
        (ID_, REV_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_, PROC_DEF_ID_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_IDENTITYLINK
        (ID_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_)     
    values
        (?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_EXECUTION 
    set
        REV_ = ?,
        BUSINESS_KEY_ = ?,
        PROC_DEF_ID_ = ?,
        ACT_ID_ = ?,
        IS_ACTIVE_ = ?,
        IS_CONCURRENT_ = ?,
        IS_SCOPE_ = ?,
        IS_EVENT_SCOPE_ = ?,
        PARENT_ID_ = ?,
        SUPER_EXEC_ = ?,
        SUSPENSION_STATE_ = ?,
        CACHED_ENT_STATE_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_TASK 
    where
        ID_ = ? 
        and REV_ = ?
2014-02-03 16:09:37,058 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:916743e7-7a84-4bcc-b944-27f5f385f92d, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:09:36, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 04:09:36, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 12:25:52)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-02-03 16:09:37,100 [ckOrderInbound]] INFO  OrderProcessAccessor           - get OrderProcessDto from flow:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:916743e7-7a84-4bcc-b944-27f5f385f92d, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:09:36, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 04:09:36, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 12:25:52)) 
2014-02-03 16:09:37,100 [ckOrderInbound]] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 16:09:37,100 [ckOrderInbound]] INFO  ActivitiFacade                 - executionId: 30, processDefinitionId: orderCoreProcess:1:11
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 16:09:37,104 [ckOrderInbound]] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 16:09:37,106 [ckOrderInbound]] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo start:{}
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 16:09:37,107 [ckOrderInbound]] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo end:{}
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
2014-02-03 16:09:37,108 [ckOrderInbound]] INFO  OrderProcessAccessor           - after merge orderProcessModel:co.nz.pizzashack.data.model.OrderProcessModel@1d7eb9d8[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=16:09:36,completeTime=<null>] 
2014-02-03 16:09:37,109 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:916743e7-7a84-4bcc-b944-27f5f385f92d, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:09:36, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 04:09:36, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 12:25:52)) 
2014-02-03 16:09:37,111 [ckOrderInbound]] INFO  OrderProcessDSImpl             - dataEntry end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:916743e7-7a84-4bcc-b944-27f5f385f92d, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:09:36, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 04:09:36, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 12:25:52))
Hibernate: 
    update
        t_order_process 
    set
        active_process_definition_id=?,
        active_process_instance_id=?,
        complete_time=?,
        create_time=?,
        execution_id=?,
        main_process_definition_id=?,
        main_process_instance_id=?,
        operator_id=?,
        order_id=? 
    where
        order_process_id=?
Hibernate: 
    update
        t_order 
    set
        cust_id=?,
        deliver_time=?,
        order_no=?,
        order_time=?,
        payment_remarks=?,
        payment_status=?,
        quantity=?,
        ship_address=?,
        status=?,
        total_price=? 
    where
        order_id=?
Hibernate: 
    update
        t_order_pizzashack 
    set
        order_id=?,
        pizzashack_id=?,
        qty=?,
        total_price=? 
    where
        order_pizza_id=?
Hibernate: 
    update
        t_order_pizzashack 
    set
        order_id=?,
        pizzashack_id=?,
        qty=?,
        total_price=? 
    where
        order_pizza_id=?
2014-02-03 16:09:37,122 [ckOrderInbound]] INFO  OrderRequestProcessor          - after dataEntry:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:916743e7-7a84-4bcc-b944-27f5f385f92d, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:09:36, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 04:09:36, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 12:25:52)) 
2014-02-03 16:09:37,123 [ckOrderInbound]] INFO  OrderConverter                 - toModel start:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:916743e7-7a84-4bcc-b944-27f5f385f92d, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:09:36, deliverTime:null)
2014-02-03 16:09:37,123 [ckOrderInbound]] INFO  OrderConverter                 - toModel end:{} co.nz.pizzashack.data.model.OrderModel@6e2b9ef4[orderId=<null>,orderNo=916743e7-7a84-4bcc-b944-27f5f385f92d,quantity=14,status=<null>,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=<null>]
Hibernate: 
    select
        orderreque0_.message_id as message1_0_0_,
        orderreque0_.created_at as created2_0_0_,
        orderreque0_.order_id as order4_0_0_,
        orderreque0_.processor_name as processor3_0_0_ 
    from
        t_order_request_history orderreque0_ 
    where
        orderreque0_.message_id=?
2014-02-03 16:09:37,124 [ckOrderInbound]] INFO  OrderRequestProcessor          - orderRequestProcessor end:{} 
2014-02-03 16:09:37,126 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlMarshal start:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:916743e7-7a84-4bcc-b944-27f5f385f92d, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:09:36, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 04:09:36, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 12:25:52))
2014-02-03 16:09:37,133 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - pendingActivity:{} co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
2014-02-03 16:09:37,134 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - customerDto:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-02-03 16:09:37,148 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlMarshal end:{} <order-process>
  <process-id>1</process-id>
  <create-time>1970-01-01 04:09:36</create-time>
  <complete-time>null</complete-time>
  <operator>general</operator>
  <order>
    <order-no>916743e7-7a84-4bcc-b944-27f5f385f92d</order-no>
    <address>25 mavon downs</address>
    <quantity>14</quantity>
    <total-price>390.00</total-price>
    <status>pendingOnReview</status>
    <order-time>2014-02-03 03:09:36</order-time>
    <deliver-time>null</deliver-time>
    <order-list>
      <order-details>
        <pizza-name>Garden Fresh</pizza-name>
        <quantity>4</quantity>
        <total-price>140.00</total-price>
      </order-details>
      <order-details>
        <pizza-name>Chicken Parmesan</pizza-name>
        <quantity>10</quantity>
        <total-price>250.00</total-price>
      </order-details>
    </order-list>
  </order>
  <customer>
    <name>david</name>
    <email>david.yuan124@gmail.com</email>
  </customer>
  <pending-activity>
    <name>Manual underwriting</name>
    <type>userTask</type>
    <assignee>null</assignee>
  </pending-activity>
</order-process>
2014-02-03 16:09:37,150 [ckOrderInbound]] INFO  output                         - Exchange[ExchangePattern: InOnly, BodyType: String, Body: <order-process>  <process-id>1</process-id>  <create-time>1970-01-01 04:09:36</create-time>  <complete-time>null</complete-time>  <operator>general</operator>  <order>    <order-no>916743e7-7a84-4bcc-b944-27f5f385f92d</order-no>    <address>25 mavon downs</address>    <quantity>14</quantity>    <total-price>390.00</total-price>    <status>pendingOnReview</status>    <order-time>2014-02-03 03:09:36</order-time>    <deliver-time>null</deliver-time>    <order-list>      <order-details>        <pizza-name>Garden Fresh</pizza-name>        <quantity>4</quantity>        <total-price>140.00</total-price>      </order-details>      <order-details>        <pizza-name>Chicken Parmesan</pizza-name>        <quantity>10</quantity>        <total-price>250.00</total-price>      </order-details>    </order-list>  </order>  <customer>    <name>david</name>    <email>david.yuan124@gmail.com</email>  </customer>  <pending-activity>    <name>Manual underwriting</name>    <type>userTask</type>    <assignee>null</assignee>  </pending-activity></order-process>]
2014-02-03 16:09:37,197 [ckOrderInbound]] INFO  orderProcessRoute              - Signalled to stop route
2014-02-03 16:09:42,808 [qtp935945395-61] INFO  OrderQueryController           - userIndex start: {}
2014-02-03 16:09:42,808 [qtp935945395-61] INFO  OrderProcessQueryDSImpl        - getAllOrderProcesses start:{} 
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 16:09:42,813 [qtp935945395-61] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@d786e7c[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=16:09:36,completeTime=<null>]
2014-02-03 16:09:42,814 [qtp935945395-61] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@66fa64c4[orderId=1,orderNo=916743e7-7a84-4bcc-b944-27f5f385f92d,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 16:09:36.44]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 16:09:42,828 [qtp935945395-61] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@3ad1a5f5[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 16:09:42,828 [qtp935945395-61] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 16:09:42,835 [qtp935945395-61] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@7df42de3[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 16:09:42,839 [qtp935945395-61] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 16:09:42,839 [qtp935945395-61] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@29f0d2af[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 16:09:42,840 [qtp935945395-61] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 16:09:42,841 [qtp935945395-61] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:916743e7-7a84-4bcc-b944-27f5f385f92d, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:09:36, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 16:09:42,841 [qtp935945395-61] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@19fd6b85[userId=4,username=general,password=MTIzNDU2,createTime=12:25:52]
2014-02-03 16:09:42,842 [qtp935945395-61] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 12:25:52)
2014-02-03 16:09:42,842 [qtp935945395-61] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:916743e7-7a84-4bcc-b944-27f5f385f92d, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:09:36, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 04:09:36, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 12:25:52))
2014-02-03 16:09:42,843 [qtp935945395-61] INFO  OrderProcessQueryDSImpl        - getAllOrderProcesses end:{} 
2014-02-03 16:09:45,584 [qtp935945395-34] INFO  OrderQueryController           - show start: 916743e7-7a84-4bcc-b944-27f5f385f92d
2014-02-03 16:09:45,585 [qtp935945395-34] INFO  OrderProcessQueryDSImpl        - getOrderProcessByOrderNo start:916743e7-7a84-4bcc-b944-27f5f385f92d 
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 16:09:45,588 [qtp935945395-34] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@5ef3c73e[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=16:09:36,completeTime=<null>] 
2014-02-03 16:09:45,588 [qtp935945395-34] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@5ef3c73e[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=16:09:36,completeTime=<null>]
2014-02-03 16:09:45,589 [qtp935945395-34] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@32e20d23[orderId=1,orderNo=916743e7-7a84-4bcc-b944-27f5f385f92d,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 16:09:36.44]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 16:09:45,590 [qtp935945395-34] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@5d84825d[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 16:09:45,590 [qtp935945395-34] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 16:09:45,591 [qtp935945395-34] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@48e1b017[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 16:09:45,591 [qtp935945395-34] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 16:09:45,592 [qtp935945395-34] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@58efdb62[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 16:09:45,592 [qtp935945395-34] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 16:09:45,592 [qtp935945395-34] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:916743e7-7a84-4bcc-b944-27f5f385f92d, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:09:36, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 16:09:45,593 [qtp935945395-34] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@41cbf5cf[userId=4,username=general,password=MTIzNDU2,createTime=12:25:52]
2014-02-03 16:09:45,593 [qtp935945395-34] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 12:25:52)
2014-02-03 16:09:45,593 [qtp935945395-34] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:916743e7-7a84-4bcc-b944-27f5f385f92d, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:09:36, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 04:09:36, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 12:25:52))
2014-02-03 16:09:45,594 [qtp935945395-34] INFO  OrderProcessQueryDSImpl        - buildPendingActivity start:{}
2014-02-03 16:09:45,594 [qtp935945395-34] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 16:09:45,594 [qtp935945395-34] INFO  ActivitiFacade                 - executionId: 30, processDefinitionId: orderCoreProcess:1:11
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 16:09:45,599 [qtp935945395-34] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo start:{}
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 16:09:45,600 [qtp935945395-34] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo end:{}
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
2014-02-03 16:09:45,601 [qtp935945395-34] INFO  OrderProcessQueryDSImpl        - buildPendingActivity end:{}
2014-02-03 16:09:45,602 [qtp935945395-34] INFO  OrderProcessQueryDSImpl        - getOrderProcessByOrderNo end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:916743e7-7a84-4bcc-b944-27f5f385f92d, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:09:36, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 04:09:36, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:null), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 12:25:52)) 
2014-02-03 16:09:45,603 [qtp935945395-34] INFO  OrderQueryController           - Found user: co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:916743e7-7a84-4bcc-b944-27f5f385f92d, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:09:36, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 04:09:36, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:null), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 12:25:52))
2014-02-03 16:09:51,722 [qtp935945395-38] INFO  IndexController                - index: {}
2014-02-03 16:09:51,723 [qtp935945395-38] INFO  OrderProcessDSImpl             - getAllTransTaskForCurrentUser start:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:1970-01-01 12:25:51) 
2014-02-03 16:09:51,723 [qtp935945395-38] INFO  ActivitiFacade                 - getAllTasksForUser start:1
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                    
    WHERE
        RES.ASSIGNEE_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        g.*     
    from
        ACT_ID_GROUP g,
        ACT_ID_MEMBERSHIP membership     
    where
        g.ID_ = membership.GROUP_ID_       
        and membership.USER_ID_ = ?
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                   
    inner join
        ACT_RU_IDENTITYLINK I 
            on I.TASK_ID_ = RES.ID_                              
    WHERE
        RES.ASSIGNEE_ is null         
        and I.TYPE_ = 'candidate'         
        and          (
            I.USER_ID_ = ?                                             
            or                                   I.GROUP_ID_ IN             (
                ?             
            )                    
        )                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_GROUP RES             
    inner join
        ACT_ID_MEMBERSHIP M 
            on RES.ID_ = M.GROUP_ID_       
    inner join
        ACT_ID_USER U 
            on M.USER_ID_ = U.ID_            
    WHERE
        U.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                   
    inner join
        ACT_RU_IDENTITYLINK I 
            on I.TASK_ID_ = RES.ID_                              
    WHERE
        RES.ASSIGNEE_ is null         
        and I.TYPE_ = 'candidate'         
        and          (
            I.GROUP_ID_ IN             (
                ?             
            )                    
        )                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 16:09:51,738 [qtp935945395-38] INFO  OrderProcessDSImpl             - tasks size:2
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ 
    where
        orderproce0_.execution_id=?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 16:09:51,763 [qtp935945395-38] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@500580f7[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=16:09:36,completeTime=<null>]
2014-02-03 16:09:51,764 [qtp935945395-38] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@4002101b[orderId=1,orderNo=916743e7-7a84-4bcc-b944-27f5f385f92d,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 16:09:36.44]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 16:09:51,765 [qtp935945395-38] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@62ff33e3[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 16:09:51,765 [qtp935945395-38] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 16:09:51,767 [qtp935945395-38] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@5ccec286[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 16:09:51,767 [qtp935945395-38] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 16:09:51,767 [qtp935945395-38] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@a451b04[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 16:09:51,768 [qtp935945395-38] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 16:09:51,768 [qtp935945395-38] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:916743e7-7a84-4bcc-b944-27f5f385f92d, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:09:36, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 16:09:51,769 [qtp935945395-38] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@148517bc[userId=4,username=general,password=MTIzNDU2,createTime=12:25:52]
2014-02-03 16:09:51,769 [qtp935945395-38] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 12:25:52)
2014-02-03 16:09:51,770 [qtp935945395-38] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:916743e7-7a84-4bcc-b944-27f5f385f92d, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:09:36, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 04:09:36, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 12:25:52))
2014-02-03 16:09:51,770 [qtp935945395-38] INFO  OrderProcessDSImpl             - getAllTransTaskForCurrentUser end:{} 
2014-02-03 16:09:53,247 [qtp935945395-39] INFO  OrderQueryController           - userIndex start: {}
2014-02-03 16:09:53,248 [qtp935945395-39] INFO  OrderProcessQueryDSImpl        - getAllOrderProcesses start:{} 
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 16:09:53,251 [qtp935945395-39] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@5843b34[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=16:09:36,completeTime=<null>]
2014-02-03 16:09:53,252 [qtp935945395-39] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@60af3bf8[orderId=1,orderNo=916743e7-7a84-4bcc-b944-27f5f385f92d,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 16:09:36.44]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 16:09:53,254 [qtp935945395-39] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@4d73f568[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 16:09:53,254 [qtp935945395-39] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 16:09:53,256 [qtp935945395-39] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@25bc61d7[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 16:09:53,258 [qtp935945395-39] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 16:09:53,258 [qtp935945395-39] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@72bb7d9b[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 16:09:53,259 [qtp935945395-39] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 16:09:53,260 [qtp935945395-39] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:916743e7-7a84-4bcc-b944-27f5f385f92d, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:09:36, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 16:09:53,261 [qtp935945395-39] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@16e5a21b[userId=4,username=general,password=MTIzNDU2,createTime=12:25:52]
2014-02-03 16:09:53,262 [qtp935945395-39] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 12:25:52)
2014-02-03 16:09:53,263 [qtp935945395-39] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:916743e7-7a84-4bcc-b944-27f5f385f92d, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:09:36, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 04:09:36, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 12:25:52))
2014-02-03 16:09:53,263 [qtp935945395-39] INFO  OrderProcessQueryDSImpl        - getAllOrderProcesses end:{} 
2014-02-03 16:09:55,214 [qtp935945395-37] INFO  OrderQueryController           - show start: 916743e7-7a84-4bcc-b944-27f5f385f92d
2014-02-03 16:09:55,215 [qtp935945395-37] INFO  OrderProcessQueryDSImpl        - getOrderProcessByOrderNo start:916743e7-7a84-4bcc-b944-27f5f385f92d 
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 16:09:55,217 [qtp935945395-37] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@3a8c345[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=16:09:36,completeTime=<null>] 
2014-02-03 16:09:55,217 [qtp935945395-37] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@3a8c345[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=16:09:36,completeTime=<null>]
2014-02-03 16:09:55,218 [qtp935945395-37] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@213a1a0c[orderId=1,orderNo=916743e7-7a84-4bcc-b944-27f5f385f92d,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 16:09:36.44]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 16:09:55,219 [qtp935945395-37] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@49a09d62[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 16:09:55,219 [qtp935945395-37] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 16:09:55,220 [qtp935945395-37] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@43f7fa7e[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 16:09:55,220 [qtp935945395-37] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 16:09:55,221 [qtp935945395-37] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@4d5e890e[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 16:09:55,221 [qtp935945395-37] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 16:09:55,221 [qtp935945395-37] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:916743e7-7a84-4bcc-b944-27f5f385f92d, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:09:36, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 16:09:55,222 [qtp935945395-37] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@40d7b3b[userId=4,username=general,password=MTIzNDU2,createTime=12:25:52]
2014-02-03 16:09:55,222 [qtp935945395-37] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 12:25:52)
2014-02-03 16:09:55,223 [qtp935945395-37] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:916743e7-7a84-4bcc-b944-27f5f385f92d, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:09:36, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 04:09:36, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 12:25:52))
2014-02-03 16:09:55,223 [qtp935945395-37] INFO  OrderProcessQueryDSImpl        - buildPendingActivity start:{}
2014-02-03 16:09:55,223 [qtp935945395-37] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 16:09:55,223 [qtp935945395-37] INFO  ActivitiFacade                 - executionId: 30, processDefinitionId: orderCoreProcess:1:11
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 16:09:55,227 [qtp935945395-37] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo start:{}
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 16:09:55,228 [qtp935945395-37] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo end:{}
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
2014-02-03 16:09:55,229 [qtp935945395-37] INFO  OrderProcessQueryDSImpl        - buildPendingActivity end:{}
2014-02-03 16:09:55,230 [qtp935945395-37] INFO  OrderProcessQueryDSImpl        - getOrderProcessByOrderNo end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:916743e7-7a84-4bcc-b944-27f5f385f92d, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:09:36, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 04:09:36, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:null), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 12:25:52)) 
2014-02-03 16:09:55,231 [qtp935945395-37] INFO  OrderQueryController           - Found user: co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:916743e7-7a84-4bcc-b944-27f5f385f92d, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:09:36, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 04:09:36, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:null), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 12:25:52))
2014-02-03 16:12:08,417 [qtp935945395-39] INFO  PizzashackAPIImpl              - getOrderByNo start:916743e7-7a84-4bcc-b944-27f5f385f92d 
2014-02-03 16:12:08,418 [qtp935945395-39] INFO  OrderDSImpl                    - getOrderByOrderNo start:916743e7-7a84-4bcc-b944-27f5f385f92d  
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_,
        ordermodel0_.cust_id as cust11_4_,
        ordermodel0_.deliver_time as deliver2_4_,
        ordermodel0_.order_no as order3_4_,
        ordermodel0_.order_time as order4_4_,
        ordermodel0_.payment_remarks as payment5_4_,
        ordermodel0_.payment_status as payment6_4_,
        ordermodel0_.quantity as quantity4_,
        ordermodel0_.ship_address as ship8_4_,
        ordermodel0_.status as status4_,
        ordermodel0_.total_price as total10_4_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_no=? limit ?
2014-02-03 16:12:08,455 [qtp935945395-39] INFO  PizzashackAPIImpl              - getOrderByNo end:{}
2014-02-03 16:13:01,516 [qtp935945395-34] INFO  PizzashackAPIImpl              - getOrderByNo start:916743e7-7a84-4bcc-b944-27f5f385f92d
2014-02-03 16:13:01,516 [qtp935945395-34] INFO  OrderDSImpl                    - getOrderByOrderNo start:916743e7-7a84-4bcc-b944-27f5f385f92d 
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_,
        ordermodel0_.cust_id as cust11_4_,
        ordermodel0_.deliver_time as deliver2_4_,
        ordermodel0_.order_no as order3_4_,
        ordermodel0_.order_time as order4_4_,
        ordermodel0_.payment_remarks as payment5_4_,
        ordermodel0_.payment_status as payment6_4_,
        ordermodel0_.quantity as quantity4_,
        ordermodel0_.ship_address as ship8_4_,
        ordermodel0_.status as status4_,
        ordermodel0_.total_price as total10_4_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_no=? limit ?
2014-02-03 16:13:01,518 [qtp935945395-34] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@437acf5e[orderId=1,orderNo=916743e7-7a84-4bcc-b944-27f5f385f92d,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 16:09:36.44]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 16:13:01,519 [qtp935945395-34] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@f5b3ea[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 16:13:01,520 [qtp935945395-34] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 16:13:01,521 [qtp935945395-34] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@29846d7c[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 16:13:01,521 [qtp935945395-34] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 16:13:01,521 [qtp935945395-34] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@352ffd2f[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 16:13:01,522 [qtp935945395-34] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 16:13:01,523 [qtp935945395-34] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:916743e7-7a84-4bcc-b944-27f5f385f92d, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:09:36, deliverTime:null)
2014-02-03 16:13:01,523 [qtp935945395-34] INFO  OrderDSImpl                    - getOrderByOrderNo end:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:916743e7-7a84-4bcc-b944-27f5f385f92d, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:09:36, deliverTime:null) 
2014-02-03 16:13:01,523 [qtp935945395-34] INFO  PizzashackAPIImpl              - getOrderByNo end:{}
2014-02-03 16:14:42,118 [qtp935945395-37] INFO  PizzashackAPIImpl              - getOrderByNo start:916743e7-7a84-4bcc-b944-27f5f385f92d
2014-02-03 16:14:42,119 [qtp935945395-37] INFO  OrderDSImpl                    - getOrderByOrderNo start:916743e7-7a84-4bcc-b944-27f5f385f92d 
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_,
        ordermodel0_.cust_id as cust11_4_,
        ordermodel0_.deliver_time as deliver2_4_,
        ordermodel0_.order_no as order3_4_,
        ordermodel0_.order_time as order4_4_,
        ordermodel0_.payment_remarks as payment5_4_,
        ordermodel0_.payment_status as payment6_4_,
        ordermodel0_.quantity as quantity4_,
        ordermodel0_.ship_address as ship8_4_,
        ordermodel0_.status as status4_,
        ordermodel0_.total_price as total10_4_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_no=? limit ?
2014-02-03 16:14:42,121 [qtp935945395-37] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@4c63c203[orderId=1,orderNo=916743e7-7a84-4bcc-b944-27f5f385f92d,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 16:09:36.44]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 16:14:42,123 [qtp935945395-37] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@7f5c07a7[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 16:14:42,124 [qtp935945395-37] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 16:14:42,126 [qtp935945395-37] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@6e867696[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 16:14:42,127 [qtp935945395-37] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 16:14:42,128 [qtp935945395-37] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@3dd3aa8a[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 16:14:42,131 [qtp935945395-37] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 16:14:42,132 [qtp935945395-37] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:916743e7-7a84-4bcc-b944-27f5f385f92d, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:09:36, deliverTime:null)
2014-02-03 16:14:42,132 [qtp935945395-37] INFO  OrderDSImpl                    - getOrderByOrderNo end:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:916743e7-7a84-4bcc-b944-27f5f385f92d, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:09:36, deliverTime:null) 
2014-02-03 16:14:42,133 [qtp935945395-37] INFO  PizzashackAPIImpl              - getOrderByNo end:{}
[INFO] restarting o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
2014-02-03 16:20:13.589:INFO:/:Destroying Spring FrameworkServlet 'dispatcher'
2014-02-03 16:20:13,589 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Closing Root WebApplicationContext: startup date [Mon Feb 03 12:25:45 NZDT 2014]; root of context hierarchy
2014-02-03 16:20:13,590 [Scanner-0      ] INFO  BusApplicationContext          - Closing org.apache.cxf.bus.spring.BusApplicationContext@789e260: startup date [Mon Feb 03 12:25:51 NZDT 2014]; parent: Root WebApplicationContext
2014-02-03 16:20:13,590 [Scanner-0      ] INFO  DefaultListableBeanFactory     - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@42147554: defining beans []; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@4e92f378
2014-02-03 16:20:13,590 [Scanner-0      ] INFO  DefaultListableBeanFactory     - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4e92f378: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,applicationConfiguration,webMvcContextConfiguration,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,viewConfiguration,logoutController,loginController,indexController,userController,adminIndexController,departmentController,orderController,orderQueryController,staffController,billingProcessRespTransformer,billingProcessReqTransformer,orderProcessFormatTransformer,billingVariableTransformer,billingResponseMergeProcessor,billingFormatTransformer,billingInboundProcessor,orderDuplicatedReqProcessor,orderRequestProcessor,billingProcessRoute,billingInboundWsRoute,orderProcessRoute,sleepBean,pizzashackAPIImpl,camelSpringConfig,camelJdbcIdempotentConfig,camelCxfConfig,orderProcessDSImpl,customerDSImpl,workflowDSImpl,pizzashackDSImpl,userDSImpl,orderProcessAccessor,orderProcessQueryDSImpl,staffDSImpl,orderDSImpl,departmentDSImpl,initialDataConfig,pizzashackCaculator,emailExecutionListener,endExecutionListener,caculationMergeExecutionListener,orderMainTransitionExecutionListener,toManualReviewExecutionListener,outOfBillingProcessExecutionListener,outOfCoreProcessExecutionListener,billingRespExecutionListener,customerConverter,orderProcessConverter,staffConverter,userConverter,departmentConverter,workflowConverter,orderReviewRecordConverter,orderConverter,activityDiscountRateConverter,orderDetailConverter,pizzashackDataInitialConfiguration,pizzashackItemBuilder,infrastructureContextConfiguration,activitiFacade,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0,org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0,activityDiscountRateRepository,orderReviewRecordRepository,orderPizzashackRepository,staffDepartmentRepository,orderRepository,customerRepository,orderProcessRepository,pizzashackRepository,userRepository,workflowRepository,departmentRepository,orderRequestHistoryRepository,staffRepository,viewResolver,messageSource,activeMQConnectionFactory,pooledConnectionFactory,jmsComponent,jmsTransactionManager,camelBeanPostProcessor,camelContext,custThreadPoolProfile,sqlComponent,orderJdbcMessageIdRepository,billingInboundEndpoint,loggingOutInterceptor,cxf,org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor,org.apache.cxf.bus.spring.Jsr250BeanPostProcessor,org.apache.cxf.bus.spring.BusExtensionPostProcessor,org.apache.cxf.binding.soap.SoapBindingFactory,org.apache.cxf.binding.soap.SoapTransportFactory,org.apache.cxf.binding.soap.customEditorConfigurer,setupWorkflowData,setupData,org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration,org.springframework.transaction.config.internalTransactionAdvisor,transactionAttributeSource,transactionInterceptor,dataSource,transactionManager,entityManagerFactory,placeholderConfig,processEngineConfiguration,processEngine,repositoryService,runtimeService,taskService,historyService,managementService,identityService,org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration,requestMappingHandlerMapping,mvcContentNegotiationManager,viewControllerHandlerMapping,beanNameHandlerMapping,resourceHandlerMapping,defaultServletHandlerMapping,requestMappingHandlerAdapter,mvcConversionService,mvcValidator,httpRequestHandlerAdapter,simpleControllerHandlerAdapter,handlerExceptionResolver,sessionAttributeProcessor,localeChangeInterceptor,multipartResolver,localeResolver,simpleMappingExceptionResolver]; root of factory hierarchy
2014-02-03 16:20:13,592 [Scanner-0      ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) is shutting down
2014-02-03 16:20:13,593 [Scanner-0      ] INFO  DefaultShutdownStrategy        - Starting to graceful shutdown 8 routes (timeout 300 seconds)
2014-02-03 16:20:13,596 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: cxf:bean:billingInboundEndpoint shutdown complete, was consuming from: Endpoint[cxf://bean:billingInboundEndpoint]
2014-02-03 16:20:13,597 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:orderRegularProcess shutdown complete, was consuming from: Endpoint[direct://orderRegularProcess]
2014-02-03 16:20:13,597 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:orderDuplicatedProcess shutdown complete, was consuming from: Endpoint[direct://orderDuplicatedProcess]
2014-02-03 16:20:14,376 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: orderProcessRoute shutdown complete, was consuming from: Endpoint[jms://queue:pizzashackOrderInbound]
2014-02-03 16:20:14,376 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: route1 shutdown complete, was consuming from: Endpoint[direct://doBillingIntegration]
2014-02-03 16:20:14,376 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:receiveBillingQueue shutdown complete, was consuming from: Endpoint[direct://receiveBillingQueue]
2014-02-03 16:20:14,376 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:billingIntegration shutdown complete, was consuming from: Endpoint[direct://billingIntegration]
2014-02-03 16:20:14,377 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: activitiBillingProcess shutdown complete, was consuming from: Endpoint[activiti://orderBillingProcess:billingIntegration?copyVariablesToBodyAsMap=true]
2014-02-03 16:20:14,377 [Scanner-0      ] INFO  DefaultShutdownStrategy        - Graceful shutdown of 8 routes completed in 0 seconds
2014-02-03 16:20:14,379 [Scanner-0      ] INFO  CxfEndpoint                    - shutdown the bus ... org.apache.cxf.bus.spring.SpringBus@36d5274e
2014-02-03 16:20:14,392 [Scanner-0      ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) uptime 3 hours 54 minutes
2014-02-03 16:20:14,392 [Scanner-0      ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) is shutdown in 0.800 seconds
2014-02-03 16:20:14,404 [Scanner-0      ] INFO  tainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2014-02-03 16:20:14,405 [Scanner-0      ] INFO  SchemaExport                   - HHH000227: Running hbm2ddl schema export
Hibernate: 
    alter table t_activity_discount_rate 
        drop constraint FKA400C193698FCC4
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE11193A98D65
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE111A27DDA4A
Hibernate: 
    alter table t_order 
        drop constraint FKA0C0C3C3E11F4FCB
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB0883698FCC4
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB088BBCB676E
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F33E99148D
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F3BBCB676E
Hibernate: 
    alter table t_order_request_history 
        drop constraint FK5A6B268BBCB676E
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CA6130105
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CBBCB676E
Hibernate: 
    alter table t_staff 
        drop constraint FKA0F9FF552DC32C06
Hibernate: 
    drop table t_activity_discount_rate if exists
Hibernate: 
    drop table t_customer if exists
Hibernate: 
    drop table t_dept if exists
Hibernate: 
    drop table t_dept_staff if exists
Hibernate: 
    drop table t_order if exists
Hibernate: 
    drop table t_order_pizzashack if exists
Hibernate: 
    drop table t_order_process if exists
Hibernate: 
    drop table t_order_request_history if exists
Hibernate: 
    drop table t_order_review_record if exists
Hibernate: 
    drop table t_pizzashack if exists
Hibernate: 
    drop table t_staff if exists
Hibernate: 
    drop table t_user if exists
Hibernate: 
    drop table t_workflow if exists
2014-02-03 16:20:14,427 [Scanner-0      ] INFO  SchemaExport                   - HHH000230: Schema export complete
2014-02-03 16:20:14.433:INFO:/:Closing Spring root WebApplicationContext
2014-02-03 16:20:14.434:INFO:oejsl.ELContextCleaner:Clazz: class co.nz.pizzashack.data.dto.UserDto loaded by WebAppClassLoader=1683009287@6450af07
2014-02-03 16:20:14.434:INFO:oejsl.ELContextCleaner:removed
2014-02-03 16:20:14.434:INFO:oejsl.ELContextCleaner:Clazz: class co.nz.pizzashack.data.dto.OrderProcessDto loaded by WebAppClassLoader=1683009287@6450af07
2014-02-03 16:20:14.435:INFO:oejsl.ELContextCleaner:removed
2014-02-03 16:20:14.435:INFO:oejsl.ELContextCleaner:Clazz: class co.nz.pizzashack.data.dto.ProcessActivityDto loaded by WebAppClassLoader=1683009287@6450af07
2014-02-03 16:20:14.435:INFO:oejsl.ELContextCleaner:removed
2014-02-03 16:20:14.435:INFO:oejsl.ELContextCleaner:Clazz: class co.nz.pizzashack.data.dto.OrderDto loaded by WebAppClassLoader=1683009287@6450af07
2014-02-03 16:20:14.435:INFO:oejsl.ELContextCleaner:removed
2014-02-03 16:20:14.435:INFO:oejsl.ELContextCleaner:Clazz: class co.nz.pizzashack.data.dto.OrderDetailsDto loaded by WebAppClassLoader=1683009287@6450af07
2014-02-03 16:20:14.435:INFO:oejsl.ELContextCleaner:removed
2014-02-03 16:20:14.435:INFO:oejsl.ELContextCleaner:javax.el.BeanELResolver purged
2014-02-03 16:20:14.435:INFO:oejsh.ContextHandler:stopped o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
[INFO] Webapp source directory = /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp
[INFO] Reload Mechanic: automatic
[INFO] Classes = /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/target/classes
[INFO] Context path = /
[INFO] Tmp directory = /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/target/tmp
[INFO] Web defaults = org/eclipse/jetty/webapp/webdefault.xml
[INFO] Web overrides =  none
[INFO] web.xml file = null
[INFO] Webapp directory = /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp
2014-02-03 16:20:20.610:INFO:oejpw.PlusConfiguration:No Transaction manager found - if your webapp requires one, please configure one.
2014-02-03 16:21:30.794:INFO:/:Spring WebApplicationInitializers detected on classpath: [co.nz.pizzashack.config.PizzashackDistributorWebInitializer@52caa90e]
2014-02-03 16:21:30.966:INFO:oejsh.ContextHandler:started o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
2014-02-03 16:21:30.966:INFO:oejsh.ContextHandler:started o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
2014-02-03 16:21:30.967:INFO:oejsh.ContextHandler:started o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
2014-02-03 16:21:30.967:INFO:/:Initializing Spring root WebApplicationContext
2014-02-03 16:21:30,967 [Scanner-0      ] INFO  ContextLoader                  - Root WebApplicationContext: initialization started
2014-02-03 16:21:30,968 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Refreshing Root WebApplicationContext: startup date [Mon Feb 03 16:21:30 NZDT 2014]; root of context hierarchy
2014-02-03 16:21:31,022 [Scanner-0      ] INFO  ClassPathBeanDefinitionScanner - JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2014-02-03 16:21:31,022 [Scanner-0      ] INFO  ClassPathBeanDefinitionScanner - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2014-02-03 16:21:31,022 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Registering annotated classes: [class co.nz.pizzashack.config.ApplicationConfiguration,class co.nz.pizzashack.config.WebMvcContextConfiguration]
2014-02-03 16:21:31,067 [Scanner-0      ] INFO  ClassPathBeanDefinitionScanner - JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2014-02-03 16:21:31,067 [Scanner-0      ] INFO  ClassPathBeanDefinitionScanner - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2014-02-03 16:21:32,025 [Scanner-0      ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [META-INF/cxf/cxf.xml]
2014-02-03 16:21:32,257 [Scanner-0      ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [META-INF/cxf/cxf-extension-soap.xml]
2014-02-03 16:21:32,280 [Scanner-0      ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [META-INF/cxf/cxf-servlet.xml]
2014-02-03 16:21:32,298 [Scanner-0      ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [activitiAppContext.xml]
2014-02-03 16:21:32,473 [Scanner-0      ] INFO  PropertyPlaceholderConfigurer  - Loading properties file from class path resource [activiti.properties]
2014-02-03 16:21:32,507 [Scanner-0      ] INFO  redAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2014-02-03 16:21:32,552 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'infrastructureContextConfiguration' of type [class co.nz.pizzashack.config.InfrastructureContextConfiguration$$EnhancerByCGLIB$$2c09c9cc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:32,578 [Scanner-0      ] INFO  MLog                           - MLog clients using log4j logging.
2014-02-03 16:21:32,600 [Scanner-0      ] INFO  C3P0Registry                   - Initializing c3p0-0.9.1.2 [built 21-May-2007 15:04:56; debug? true; trace: 10]
2014-02-03 16:21:32,635 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'dataSource' of type [class com.mchange.v2.c3p0.ComboPooledDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:32,713 [Scanner-0      ] INFO  tainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default'
2014-02-03 16:21:32,801 [Scanner-0      ] INFO  Version                        - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2014-02-03 16:21:32,807 [Scanner-0      ] INFO  Version                        - HHH000412: Hibernate Core {4.1.4.Final}
2014-02-03 16:21:32,809 [Scanner-0      ] INFO  Environment                    - HHH000206: hibernate.properties not found
2014-02-03 16:21:32,810 [Scanner-0      ] INFO  Environment                    - HHH000021: Bytecode provider name : javassist
2014-02-03 16:21:32,825 [Scanner-0      ] INFO  Ejb3Configuration              - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2014-02-03 16:21:33,043 [Scanner-0      ] INFO  ConnectionProviderInitiator    - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2014-02-03 16:21:33,085 [Scanner-0      ] INFO  AbstractPoolBackedDataSource   - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge1508z1w6vooh8v23tx|57a1781, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.h2.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge1508z1w6vooh8v23tx|57a1781, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:h2:mem:pizzashackdistributor;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 600, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 2, numHelperThreads -> 3, numThreadsAwaitingCheckoutDefaultUser -> 0, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2014-02-03 16:21:33,227 [Scanner-0      ] INFO  Dialect                        - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2014-02-03 16:21:33,233 [Scanner-0      ] INFO  LobCreatorBuilder              - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2014-02-03 16:21:33,239 [Scanner-0      ] INFO  TransactionFactoryInitiator    - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2014-02-03 16:21:33,242 [Scanner-0      ] INFO  ASTQueryTranslatorFactory      - HHH000397: Using ASTQueryTranslatorFactory
2014-02-03 16:21:33,266 [Scanner-0      ] INFO  Version                        - Hibernate Validator 4.2.0.Final
2014-02-03 16:21:33,483 [Scanner-0      ] INFO  SchemaExport                   - HHH000227: Running hbm2ddl schema export
Hibernate: 
    alter table t_activity_discount_rate 
        drop constraint FKA400C193698FCC4
2014-02-03 16:21:33,492 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_activity_discount_rate drop constraint FKA400C193698FCC4
2014-02-03 16:21:33,492 [Scanner-0      ] ERROR SchemaExport                   - Table "T_ACTIVITY_DISCOUNT_RATE" not found; SQL statement:

    alter table t_activity_discount_rate 
        drop constraint FKA400C193698FCC4 [42102-160]
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE11193A98D65
2014-02-03 16:21:33,493 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_dept_staff drop constraint FKBC8AE11193A98D65
2014-02-03 16:21:33,493 [Scanner-0      ] ERROR SchemaExport                   - Table "T_DEPT_STAFF" not found; SQL statement:

    alter table t_dept_staff 
        drop constraint FKBC8AE11193A98D65 [42102-160]
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE111A27DDA4A
2014-02-03 16:21:33,494 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_dept_staff drop constraint FKBC8AE111A27DDA4A
2014-02-03 16:21:33,494 [Scanner-0      ] ERROR SchemaExport                   - Table "T_DEPT_STAFF" not found; SQL statement:

    alter table t_dept_staff 
        drop constraint FKBC8AE111A27DDA4A [42102-160]
Hibernate: 
    alter table t_order 
        drop constraint FKA0C0C3C3E11F4FCB
2014-02-03 16:21:33,495 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order drop constraint FKA0C0C3C3E11F4FCB
2014-02-03 16:21:33,495 [Scanner-0      ] ERROR SchemaExport                   - Table "T_ORDER" not found; SQL statement:

    alter table t_order 
        drop constraint FKA0C0C3C3E11F4FCB [42102-160]
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB0883698FCC4
2014-02-03 16:21:33,495 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_pizzashack drop constraint FKE8ACB0883698FCC4
2014-02-03 16:21:33,496 [Scanner-0      ] ERROR SchemaExport                   - Table "T_ORDER_PIZZASHACK" not found; SQL statement:

    alter table t_order_pizzashack 
        drop constraint FKE8ACB0883698FCC4 [42102-160]
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB088BBCB676E
2014-02-03 16:21:33,496 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_pizzashack drop constraint FKE8ACB088BBCB676E
2014-02-03 16:21:33,496 [Scanner-0      ] ERROR SchemaExport                   - Table "T_ORDER_PIZZASHACK" not found; SQL statement:

    alter table t_order_pizzashack 
        drop constraint FKE8ACB088BBCB676E [42102-160]
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F33E99148D
2014-02-03 16:21:33,497 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_process drop constraint FK6B8B15F33E99148D
2014-02-03 16:21:33,497 [Scanner-0      ] ERROR SchemaExport                   - Table "T_ORDER_PROCESS" not found; SQL statement:

    alter table t_order_process 
        drop constraint FK6B8B15F33E99148D [42102-160]
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F3BBCB676E
2014-02-03 16:21:33,498 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_process drop constraint FK6B8B15F3BBCB676E
2014-02-03 16:21:33,498 [Scanner-0      ] ERROR SchemaExport                   - Table "T_ORDER_PROCESS" not found; SQL statement:

    alter table t_order_process 
        drop constraint FK6B8B15F3BBCB676E [42102-160]
Hibernate: 
    alter table t_order_request_history 
        drop constraint FK5A6B268BBCB676E
2014-02-03 16:21:33,498 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_request_history drop constraint FK5A6B268BBCB676E
2014-02-03 16:21:33,498 [Scanner-0      ] ERROR SchemaExport                   - Table "T_ORDER_REQUEST_HISTORY" not found; SQL statement:

    alter table t_order_request_history 
        drop constraint FK5A6B268BBCB676E [42102-160]
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CA6130105
2014-02-03 16:21:33,499 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_review_record drop constraint FKFB7A439CA6130105
2014-02-03 16:21:33,499 [Scanner-0      ] ERROR SchemaExport                   - Table "T_ORDER_REVIEW_RECORD" not found; SQL statement:

    alter table t_order_review_record 
        drop constraint FKFB7A439CA6130105 [42102-160]
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CBBCB676E
2014-02-03 16:21:33,500 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_review_record drop constraint FKFB7A439CBBCB676E
2014-02-03 16:21:33,500 [Scanner-0      ] ERROR SchemaExport                   - Table "T_ORDER_REVIEW_RECORD" not found; SQL statement:

    alter table t_order_review_record 
        drop constraint FKFB7A439CBBCB676E [42102-160]
Hibernate: 
    alter table t_staff 
        drop constraint FKA0F9FF552DC32C06
2014-02-03 16:21:33,500 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_staff drop constraint FKA0F9FF552DC32C06
2014-02-03 16:21:33,500 [Scanner-0      ] ERROR SchemaExport                   - Table "T_STAFF" not found; SQL statement:

    alter table t_staff 
        drop constraint FKA0F9FF552DC32C06 [42102-160]
Hibernate: 
    drop table t_activity_discount_rate if exists
Hibernate: 
    drop table t_customer if exists
Hibernate: 
    drop table t_dept if exists
Hibernate: 
    drop table t_dept_staff if exists
Hibernate: 
    drop table t_order if exists
Hibernate: 
    drop table t_order_pizzashack if exists
Hibernate: 
    drop table t_order_process if exists
Hibernate: 
    drop table t_order_request_history if exists
Hibernate: 
    drop table t_order_review_record if exists
Hibernate: 
    drop table t_pizzashack if exists
Hibernate: 
    drop table t_staff if exists
Hibernate: 
    drop table t_user if exists
Hibernate: 
    drop table t_workflow if exists
Hibernate: 
    create table t_activity_discount_rate (
        activity_rate_id bigint generated by default as identity,
        code varchar(255),
        description varchar(255),
        effective_time timestamp,
        expire_time timestamp,
        rate decimal(19,2),
        pizzashack_id bigint,
        primary key (activity_rate_id)
    )
Hibernate: 
    create table t_customer (
        cust_id bigint generated by default as identity,
        address varchar(255),
        credits integer,
        customer_name varchar(255),
        email varchar(255),
        primary key (cust_id)
    )
Hibernate: 
    create table t_dept (
        dept_id bigint generated by default as identity,
        create_date date,
        dept_name varchar(255),
        primary key (dept_id)
    )
Hibernate: 
    create table t_dept_staff (
        staff_dept_id bigint generated by default as identity,
        join_date date,
        dept_id bigint,
        staff_id bigint,
        primary key (staff_dept_id)
    )
Hibernate: 
    create table t_order (
        order_id bigint generated by default as identity,
        deliver_time timestamp,
        order_no varchar(255),
        order_time timestamp,
        payment_remarks varchar(255),
        payment_status integer,
        quantity integer,
        ship_address varchar(255),
        status integer,
        total_price decimal(19,2),
        cust_id bigint,
        primary key (order_id)
    )
Hibernate: 
    create table t_order_pizzashack (
        order_pizza_id bigint generated by default as identity,
        qty integer,
        total_price decimal(19,2),
        order_id bigint,
        pizzashack_id bigint,
        primary key (order_pizza_id)
    )
Hibernate: 
    create table t_order_process (
        order_process_id bigint generated by default as identity,
        active_process_definition_id varchar(255),
        active_process_instance_id varchar(255),
        complete_time time,
        create_time time,
        execution_id varchar(255),
        main_process_definition_id varchar(255),
        main_process_instance_id varchar(255),
        operator_id bigint,
        order_id bigint,
        primary key (order_process_id)
    )
Hibernate: 
    create table t_order_request_history (
        message_id varchar(255) generated by default as identity,
        created_at time,
        processor_name varchar(255),
        order_id bigint,
        primary key (message_id)
    )
Hibernate: 
    create table t_order_review_record (
        review_record_id bigint generated by default as identity,
        content varchar(255),
        create_time time,
        review_status integer,
        order_id bigint,
        reviewer_id bigint,
        primary key (review_record_id)
    )
Hibernate: 
    create table t_pizzashack (
        pizzashack_id bigint generated by default as identity,
        description varchar(255),
        icon varchar(255),
        name varchar(255),
        price decimal(19,2),
        primary key (pizzashack_id)
    )
Hibernate: 
    create table t_staff (
        staff_id bigint generated by default as identity,
        create_date date,
        email varchar(255),
        first_name varchar(255),
        identity varchar(255),
        last_name varchar(255),
        level integer,
        role integer,
        user_id bigint,
        primary key (staff_id)
    )
Hibernate: 
    create table t_user (
        user_id bigint generated by default as identity,
        create_time time,
        password varchar(255),
        user_name varchar(255),
        primary key (user_id)
    )
Hibernate: 
    create table t_workflow (
        workflow_id bigint generated by default as identity,
        category varchar(255),
        create_time time,
        deploy_id varchar(255),
        workflow_name varchar(255),
        process_definition_id varchar(255),
        process_definition_key varchar(255),
        primary key (workflow_id)
    )
Hibernate: 
    alter table t_activity_discount_rate 
        add constraint FKA400C193698FCC4 
        foreign key (pizzashack_id) 
        references t_pizzashack
Hibernate: 
    alter table t_dept_staff 
        add constraint FKBC8AE11193A98D65 
        foreign key (dept_id) 
        references t_dept
Hibernate: 
    alter table t_dept_staff 
        add constraint FKBC8AE111A27DDA4A 
        foreign key (staff_id) 
        references t_staff
Hibernate: 
    alter table t_order 
        add constraint FKA0C0C3C3E11F4FCB 
        foreign key (cust_id) 
        references t_customer
Hibernate: 
    alter table t_order_pizzashack 
        add constraint FKE8ACB0883698FCC4 
        foreign key (pizzashack_id) 
        references t_pizzashack
Hibernate: 
    alter table t_order_pizzashack 
        add constraint FKE8ACB088BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_process 
        add constraint FK6B8B15F33E99148D 
        foreign key (operator_id) 
        references t_user
Hibernate: 
    alter table t_order_process 
        add constraint FK6B8B15F3BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_request_history 
        add constraint FK5A6B268BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_review_record 
        add constraint FKFB7A439CA6130105 
        foreign key (reviewer_id) 
        references t_staff
Hibernate: 
    alter table t_order_review_record 
        add constraint FKFB7A439CBBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_staff 
        add constraint FKA0F9FF552DC32C06 
        foreign key (user_id) 
        references t_user
2014-02-03 16:21:33,531 [Scanner-0      ] INFO  SchemaExport                   - HHH000230: Schema export complete
2014-02-03 16:21:33,569 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'entityManagerFactory' of type [class org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:33,601 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'entityManagerFactory' of type [class com.sun.proxy.$Proxy365] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:33,786 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'cxf' of type [class org.apache.cxf.bus.spring.SpringBus] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:33,790 [Scanner-0      ] WARN  OldSpringSupport               - Import of META-INF/cxf/cxf-extension-soap.xml has been deprecated and is unnecessary.
2014-02-03 16:21:33,796 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerByCGLIB$$ae510473] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:33,811 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'transactionAttributeSource' of type [class org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:33,820 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'transactionInterceptor' of type [class org.springframework.transaction.interceptor.TransactionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:33,826 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'org.springframework.transaction.config.internalTransactionAdvisor' of type [class org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:33,835 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'transactionManager' of type [class org.springframework.orm.jpa.JpaTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:33,835 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'camelJdbcIdempotentConfig' of type [class co.nz.pizzashack.config.CamelJdbcIdempotentConfig$$EnhancerByCGLIB$$92daaffa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:33,850 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'sqlComponent' of type [class org.apache.camel.component.sql.SqlComponent] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:33,855 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'camelCxfConfig' of type [class co.nz.pizzashack.config.CamelCxfConfig$$EnhancerByCGLIB$$bce2c71f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:33,881 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'billingInboundEndpoint' of type [class org.apache.camel.component.cxf.CxfEndpoint] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:33,902 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'billingVariableTransformer' of type [class co.nz.pizzashack.integration.mapping.BillingVariableTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:34,067 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'billingFormatTransformer' of type [class co.nz.pizzashack.integration.mapping.BillingFormatTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:34,069 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'billingResponseMergeProcessor' of type [class co.nz.pizzashack.integration.mapping.BillingResponseMergeProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:34,071 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'sleepBean' of type [class co.nz.pizzashack.integration.utils.SleepBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:34,072 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'billingProcessRoute' of type [class co.nz.pizzashack.integration.route.BillingProcessRoute] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:34,141 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'org.activiti.engine.impl.rules.RulesDeployer#7fe49fff' of type [class org.activiti.engine.impl.rules.RulesDeployer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:34,143 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'processEngineConfiguration' of type [class org.activiti.spring.SpringProcessEngineConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:34,145 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'processEngine' of type [class org.activiti.spring.ProcessEngineFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,010 [Scanner-0      ] INFO  DbSqlSession                   - performing create on engine with resource org/activiti/db/create/activiti.h2.create.engine.sql
2014-02-03 16:21:35,028 [Scanner-0      ] INFO  DbSqlSession                   - performing create on history with resource org/activiti/db/create/activiti.h2.create.history.sql
2014-02-03 16:21:35,034 [Scanner-0      ] INFO  DbSqlSession                   - performing create on identity with resource org/activiti/db/create/activiti.h2.create.identity.sql
2014-02-03 16:21:35,037 [Scanner-0      ] INFO  ProcessEngineImpl              - ProcessEngine default created
2014-02-03 16:21:35,037 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'processEngine' of type [class org.activiti.engine.impl.ProcessEngineImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,043 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'runtimeService' of type [class org.activiti.engine.impl.RuntimeServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,047 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'taskService' of type [class org.activiti.engine.impl.TaskServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,052 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'historyService' of type [class org.activiti.engine.impl.HistoryServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,058 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'repositoryService' of type [class org.activiti.engine.impl.RepositoryServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,062 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'managementService' of type [class org.activiti.engine.impl.ManagementServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,066 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'identityService' of type [class org.activiti.engine.impl.IdentityServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,066 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'activitiFacade' of type [class co.nz.pizzashack.wf.ActivitiFacade] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,071 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'userConverter' of type [class co.nz.pizzashack.data.converter.UserConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,088 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,088 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,091 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,101 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#1' of type [class com.sun.proxy.$Proxy372] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,215 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'workflowRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,247 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'workflowRepository' of type [class com.sun.proxy.$Proxy373] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,250 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#2' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,250 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#2' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,250 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#2' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,250 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#3' of type [class com.sun.proxy.$Proxy372] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,259 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'pizzashackRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,268 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'pizzashackRepository' of type [class com.sun.proxy.$Proxy376] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,270 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#4' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,270 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#4' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,270 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#4' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,271 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#5' of type [class com.sun.proxy.$Proxy372] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,279 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,284 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessRepository' of type [class com.sun.proxy.$Proxy377] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,285 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#6' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,286 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#6' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,286 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#6' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,286 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#7' of type [class com.sun.proxy.$Proxy372] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,294 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'userRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,298 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'userRepository' of type [class com.sun.proxy.$Proxy378] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,299 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#8' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,299 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#8' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,300 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#8' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,300 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#9' of type [class com.sun.proxy.$Proxy372] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,308 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,311 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderRepository' of type [class com.sun.proxy.$Proxy379] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,340 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'customerConverter' of type [class co.nz.pizzashack.data.converter.CustomerConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,348 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderDetailConverter' of type [class co.nz.pizzashack.data.converter.OrderDetailConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,349 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderConverter' of type [class co.nz.pizzashack.data.converter.OrderConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,349 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessConverter' of type [class co.nz.pizzashack.data.converter.OrderProcessConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,354 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#10' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,354 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#10' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,354 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#10' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,355 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#11' of type [class com.sun.proxy.$Proxy372] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,364 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'departmentRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,367 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'departmentRepository' of type [class com.sun.proxy.$Proxy380] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,368 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessAccessor' of type [class co.nz.pizzashack.ds.OrderProcessAccessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,374 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderReviewRecordConverter' of type [class co.nz.pizzashack.data.converter.OrderReviewRecordConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,375 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#12' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,375 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#12' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,376 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#12' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,376 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#13' of type [class com.sun.proxy.$Proxy372] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,384 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderReviewRecordRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,388 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderReviewRecordRepository' of type [class com.sun.proxy.$Proxy381] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,390 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#14' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,390 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#14' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,390 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#14' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,391 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#15' of type [class com.sun.proxy.$Proxy372] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,398 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderPizzashackRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,402 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderPizzashackRepository' of type [class com.sun.proxy.$Proxy382] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,404 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#16' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,404 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#16' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,404 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#16' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,405 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#17' of type [class com.sun.proxy.$Proxy372] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,412 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'customerRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,415 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'customerRepository' of type [class com.sun.proxy.$Proxy383] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,416 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessDSImpl' of type [class co.nz.pizzashack.ds.OrderProcessDSImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,421 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'billingInboundProcessor' of type [class co.nz.pizzashack.integration.processor.BillingInboundProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,421 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'billingInboundWsRoute' of type [class co.nz.pizzashack.integration.route.BillingInboundWsRoute] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,441 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderJdbcMessageIdRepository' of type [class org.apache.camel.processor.idempotent.jdbc.JdbcMessageIdRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,447 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessFormatTransformer' of type [class co.nz.pizzashack.integration.mapping.OrderProcessFormatTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,456 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#18' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,456 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#18' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,456 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#18' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,456 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#19' of type [class com.sun.proxy.$Proxy372] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,463 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderRequestHistoryRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,467 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderRequestHistoryRepository' of type [class com.sun.proxy.$Proxy388] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,468 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderRequestProcessor' of type [class co.nz.pizzashack.integration.processor.OrderRequestProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,471 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderDuplicatedReqProcessor' of type [class co.nz.pizzashack.integration.processor.OrderDuplicatedReqProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,471 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessRoute' of type [class co.nz.pizzashack.integration.route.OrderProcessRoute] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,516 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'activeMQConnectionFactory' of type [class org.apache.activemq.ActiveMQConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,669 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'pooledConnectionFactory' of type [class org.apache.activemq.pool.PooledConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,690 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'jmsTransactionManager' of type [class org.springframework.jms.connection.JmsTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,700 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'jmsComponent' of type [class org.apache.camel.component.jms.JmsComponent] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,705 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'camelSpringConfig' of type [class co.nz.pizzashack.config.CamelSpringConfig$$EnhancerByCGLIB$$fc62bdb3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:21:35,741 [Scanner-0      ] INFO  DefaultListableBeanFactory     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4c8113bf: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,applicationConfiguration,webMvcContextConfiguration,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,viewConfiguration,logoutController,loginController,indexController,userController,adminIndexController,departmentController,orderController,orderQueryController,staffController,billingProcessRespTransformer,billingProcessReqTransformer,orderProcessFormatTransformer,billingVariableTransformer,billingResponseMergeProcessor,billingFormatTransformer,billingInboundProcessor,orderDuplicatedReqProcessor,orderRequestProcessor,billingProcessRoute,billingInboundWsRoute,orderProcessRoute,sleepBean,pizzashackAPIImpl,camelSpringConfig,camelJdbcIdempotentConfig,camelCxfConfig,orderProcessDSImpl,customerDSImpl,workflowDSImpl,pizzashackDSImpl,userDSImpl,orderProcessAccessor,orderProcessQueryDSImpl,staffDSImpl,orderDSImpl,departmentDSImpl,initialDataConfig,pizzashackCaculator,emailExecutionListener,endExecutionListener,caculationMergeExecutionListener,orderMainTransitionExecutionListener,toManualReviewExecutionListener,outOfBillingProcessExecutionListener,outOfCoreProcessExecutionListener,billingRespExecutionListener,customerConverter,orderProcessConverter,staffConverter,userConverter,departmentConverter,workflowConverter,orderReviewRecordConverter,orderConverter,activityDiscountRateConverter,orderDetailConverter,pizzashackDataInitialConfiguration,pizzashackItemBuilder,infrastructureContextConfiguration,activitiFacade,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0,org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0,departmentRepository,workflowRepository,orderRepository,customerRepository,staffDepartmentRepository,orderRequestHistoryRepository,activityDiscountRateRepository,orderPizzashackRepository,pizzashackRepository,userRepository,staffRepository,orderReviewRecordRepository,orderProcessRepository,viewResolver,messageSource,activeMQConnectionFactory,pooledConnectionFactory,jmsComponent,jmsTransactionManager,camelBeanPostProcessor,camelContext,custThreadPoolProfile,sqlComponent,orderJdbcMessageIdRepository,billingInboundEndpoint,loggingOutInterceptor,cxf,org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor,org.apache.cxf.bus.spring.Jsr250BeanPostProcessor,org.apache.cxf.bus.spring.BusExtensionPostProcessor,org.apache.cxf.binding.soap.SoapBindingFactory,org.apache.cxf.binding.soap.SoapTransportFactory,org.apache.cxf.binding.soap.customEditorConfigurer,setupWorkflowData,setupData,org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration,org.springframework.transaction.config.internalTransactionAdvisor,transactionAttributeSource,transactionInterceptor,dataSource,transactionManager,entityManagerFactory,placeholderConfig,processEngineConfiguration,processEngine,repositoryService,runtimeService,taskService,historyService,managementService,identityService,org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration,requestMappingHandlerMapping,mvcContentNegotiationManager,viewControllerHandlerMapping,beanNameHandlerMapping,resourceHandlerMapping,defaultServletHandlerMapping,requestMappingHandlerAdapter,mvcConversionService,mvcValidator,httpRequestHandlerAdapter,simpleControllerHandlerAdapter,handlerExceptionResolver,sessionAttributeProcessor,localeChangeInterceptor,multipartResolver,localeResolver,simpleMappingExceptionResolver]; root of factory hierarchy
2014-02-03 16:21:36,130 [Scanner-0      ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) is starting
2014-02-03 16:21:36,131 [Scanner-0      ] INFO  ManagedManagementStrategy      - JMX is enabled
2014-02-03 16:21:36,202 [Scanner-0      ] INFO  DefaultTypeConverter           - Loaded 194 type converters
Hibernate: 
    SELECT
        1 
    FROM
        T_ORDER_REQUEST_HISTORY 
    WHERE
        1 = 0
2014-02-03 16:21:36,412 [Scanner-0      ] INFO  SpringCamelContext             - StreamCaching is not in use. If using streams then its recommended to enable stream caching. See more details at http://camel.apache.org/stream-caching.html
2014-02-03 16:21:36,516 [Scanner-0      ] INFO  BusApplicationContext          - Refreshing org.apache.cxf.bus.spring.BusApplicationContext@7fab506b: startup date [Mon Feb 03 16:21:36 NZDT 2014]; parent: Root WebApplicationContext
2014-02-03 16:21:36,535 [Scanner-0      ] INFO  DefaultListableBeanFactory     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@22ce147b: defining beans []; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@4c8113bf
2014-02-03 16:21:36,546 [Scanner-0      ] INFO  ReflectionServiceFactoryBean   - Creating Service {http://ws.integration.pizzashack.nz.co/}BillingProcessWebServicesService from class co.nz.pizzashack.integration.ws.BillingProcessWebServices
2014-02-03 16:21:36,910 [Scanner-0      ] INFO  ServerImpl                     - Setting the server's publish address to be /billingWs
2014-02-03 16:21:36,923 [Scanner-0      ] INFO  SpringCamelContext             - Route: activitiBillingProcess started and consuming from: Endpoint[activiti://orderBillingProcess:billingIntegration?copyVariablesToBodyAsMap=true]
2014-02-03 16:21:36,924 [Scanner-0      ] INFO  SpringCamelContext             - Route: direct:billingIntegration started and consuming from: Endpoint[direct://billingIntegration]
2014-02-03 16:21:36,925 [Scanner-0      ] INFO  SpringCamelContext             - Route: direct:receiveBillingQueue started and consuming from: Endpoint[direct://receiveBillingQueue]
2014-02-03 16:21:36,926 [Scanner-0      ] INFO  SpringCamelContext             - Route: route1 started and consuming from: Endpoint[direct://doBillingIntegration]
2014-02-03 16:21:36,933 [Scanner-0      ] INFO  SpringCamelContext             - Route: orderProcessRoute started and consuming from: Endpoint[jms://queue:pizzashackOrderInbound]
2014-02-03 16:21:36,934 [Scanner-0      ] INFO  SpringCamelContext             - Route: direct:orderDuplicatedProcess started and consuming from: Endpoint[direct://orderDuplicatedProcess]
2014-02-03 16:21:36,936 [Scanner-0      ] INFO  SpringCamelContext             - Route: direct:orderRegularProcess started and consuming from: Endpoint[direct://orderRegularProcess]
2014-02-03 16:21:36,945 [Scanner-0      ] INFO  SpringCamelContext             - Route: cxf:bean:billingInboundEndpoint started and consuming from: Endpoint[cxf://bean:billingInboundEndpoint]
2014-02-03 16:21:36,953 [Scanner-0      ] INFO  SpringCamelContext             - Total 8 routes, of which 8 is started.
2014-02-03 16:21:36,956 [Scanner-0      ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) started in 0.824 seconds
2014-02-03 16:21:36,994 [Scanner-0      ] INFO  WorkflowInitialDataSetup       - initialize start:{}
2014-02-03 16:21:37,006 [Scanner-0      ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 16:21:37,006 [Scanner-0      ] INFO  UserDSImpl                     - usernamedavid
2014-02-03 16:21:37,006 [Scanner-0      ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 16:21:37,159 [Scanner-0      ] INFO  UserDSImpl                     - userId:1 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 16:21:37,203 [Scanner-0      ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@15b1b2e[userId=1,username=david,password=MTIzNDU2,createTime=Mon Feb 03 16:21:37 NZDT 2014]
2014-02-03 16:21:37,242 [Scanner-0      ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-03 03:21:37)
2014-02-03 16:21:37,243 [Scanner-0      ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-03 03:21:37)
2014-02-03 16:21:37,259 [Scanner-0      ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 16:21:37,259 [Scanner-0      ] INFO  UserDSImpl                     - usernamebrad
2014-02-03 16:21:37,259 [Scanner-0      ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 16:21:37,261 [Scanner-0      ] INFO  UserDSImpl                     - userId:2 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 16:21:37,263 [Scanner-0      ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@6db3d226[userId=2,username=brad,password=MTIzNDU2,createTime=Mon Feb 03 16:21:37 NZDT 2014]
2014-02-03 16:21:37,263 [Scanner-0      ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-03 03:21:37)
2014-02-03 16:21:37,263 [Scanner-0      ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-03 03:21:37)
2014-02-03 16:21:37,264 [Scanner-0      ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 16:21:37,264 [Scanner-0      ] INFO  UserDSImpl                     - usernamejohn
2014-02-03 16:21:37,264 [Scanner-0      ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 16:21:37,267 [Scanner-0      ] INFO  UserDSImpl                     - userId:3 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 16:21:37,268 [Scanner-0      ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@e56f9f0[userId=3,username=john,password=MTIzNDU2,createTime=Mon Feb 03 16:21:37 NZDT 2014]
2014-02-03 16:21:37,268 [Scanner-0      ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-03 03:21:37)
2014-02-03 16:21:37,268 [Scanner-0      ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-03 03:21:37)
2014-02-03 16:21:37,269 [Scanner-0      ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 16:21:37,269 [Scanner-0      ] INFO  UserDSImpl                     - usernamegeneral
2014-02-03 16:21:37,269 [Scanner-0      ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 16:21:37,271 [Scanner-0      ] INFO  UserDSImpl                     - userId:4 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 16:21:37,273 [Scanner-0      ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@25e4d313[userId=4,username=general,password=MTIzNDU2,createTime=Mon Feb 03 16:21:37 NZDT 2014]
2014-02-03 16:21:37,273 [Scanner-0      ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:2014-02-03 03:21:37)
2014-02-03 16:21:37,273 [Scanner-0      ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:2014-02-03 03:21:37)
2014-02-03 16:21:37,283 [Scanner-0      ] INFO  DepartmentDSImpl               - createDepartment start:co.nz.pizzashack.data.dto.DepartmentDto(deptId:null, deptName:Order manager, createDate:null) 
Hibernate: 
    select
        department0_.dept_id as dept1_8_,
        department0_.create_date as create2_8_,
        department0_.dept_name as dept3_8_ 
    from
        t_dept department0_ 
    where
        department0_.dept_name=? limit ?
2014-02-03 16:21:37,289 [Scanner-0      ] INFO  DepartmentConverter            - toModel start:{} co.nz.pizzashack.data.dto.DepartmentDto(deptId:null, deptName:Order manager, createDate:null)
2014-02-03 16:21:37,292 [Scanner-0      ] INFO  DepartmentConverter            - toModel end:{} co.nz.pizzashack.data.model.DepartmentModel@6878271c[deptId=<null>,deptName=Order manager,createDate=<null>,staffDepartments=<null>]
Hibernate: 
    insert 
    into
        t_dept
        (dept_id, create_date, dept_name) 
    values
        (null, ?, ?)
Hibernate: 
    insert 
    into
        ACT_ID_GROUP
        (ID_, REV_, NAME_, TYPE_)     
    values
        (       ?,       1,        ?,       ?     )
2014-02-03 16:21:37,298 [Scanner-0      ] INFO  DepartmentConverter            - toDto start:{} co.nz.pizzashack.data.model.DepartmentModel@6878271c[deptId=1,deptName=Order manager,createDate=Mon Feb 03 16:21:37 NZDT 2014,staffDepartments=<null>]
2014-02-03 16:21:37,300 [Scanner-0      ] INFO  DepartmentConverter            - toDto end:{} co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-03)
2014-02-03 16:21:37,300 [Scanner-0      ] INFO  DepartmentDSImpl               - createDepartment end:co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-03) 
2014-02-03 16:21:37,300 [Scanner-0      ] INFO  WorkflowInitialDataSetup       - department:co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-03) 
2014-02-03 16:21:37,316 [Scanner-0      ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:null, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-03 03:21:37)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-02-03 16:21:37,322 [Scanner-0      ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:null, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-03 03:21:37))
2014-02-03 16:21:37,339 [Scanner-0      ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@1100c458[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@495a7620[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-02-03 16:21:37,377 [Scanner-0      ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@1100c458[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@495a7620[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=Mon Feb 03 16:21:37 NZDT 2014] 
2014-02-03 16:21:37,377 [Scanner-0      ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = ?
Hibernate: 
    update
        ACT_GE_PROPERTY      
    SET
        REV_ = ?,
        VALUE_ = ?      
    where
        NAME_ = ?       
        and REV_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-02-03 16:21:37,394 [Scanner-0      ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-02-03 16:21:37,400 [Scanner-0      ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@1100c458[staffId=1,individual=co.nz.pizzashack.data.model.IndividualModel@495a7620[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=Mon Feb 03 16:21:37 NZDT 2014]
2014-02-03 16:21:37,407 [Scanner-0      ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:1, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:2014-02-03, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-02-03 16:21:37,407 [Scanner-0      ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:1, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:2014-02-03, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-02-03 16:21:37,410 [Scanner-0      ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:null, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-03 03:21:37)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-02-03 16:21:37,412 [Scanner-0      ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:null, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-03 03:21:37))
2014-02-03 16:21:37,412 [Scanner-0      ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@15a08191[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@5c9a61ae[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-02-03 16:21:37,420 [Scanner-0      ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@15a08191[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@5c9a61ae[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=Mon Feb 03 16:21:37 NZDT 2014] 
2014-02-03 16:21:37,420 [Scanner-0      ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-02-03 16:21:37,424 [Scanner-0      ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-02-03 16:21:37,427 [Scanner-0      ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@15a08191[staffId=2,individual=co.nz.pizzashack.data.model.IndividualModel@5c9a61ae[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=Mon Feb 03 16:21:37 NZDT 2014]
2014-02-03 16:21:37,428 [Scanner-0      ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:2, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:2014-02-03, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-02-03 16:21:37,428 [Scanner-0      ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:2, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:2014-02-03, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-02-03 16:21:37,429 [Scanner-0      ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:null, departments:null, role:manager, level:junior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-03 03:21:37)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-02-03 16:21:37,430 [Scanner-0      ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:null, departments:null, role:manager, level:junior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-03 03:21:37))
2014-02-03 16:21:37,431 [Scanner-0      ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@15393679[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@5f274cd1[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-02-03 16:21:37,435 [Scanner-0      ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@15393679[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@5f274cd1[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=Mon Feb 03 16:21:37 NZDT 2014] 
2014-02-03 16:21:37,435 [Scanner-0      ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-02-03 16:21:37,439 [Scanner-0      ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-02-03 16:21:37,441 [Scanner-0      ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@15393679[staffId=3,individual=co.nz.pizzashack.data.model.IndividualModel@5f274cd1[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=Mon Feb 03 16:21:37 NZDT 2014]
2014-02-03 16:21:37,442 [Scanner-0      ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:3, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:2014-02-03, departments:null, role:manager, level:null, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-02-03 16:21:37,442 [Scanner-0      ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:3, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:2014-02-03, departments:null, role:manager, level:null, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-02-03 16:21:37,443 [Scanner-0      ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-02-03 16:21:37,450 [Scanner-0      ] INFO  BpmnDeployer                   - Processing resource bpmn/OrderBillingProcess.bpmn20.xml
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-02-03 16:21:37,652 [Scanner-0      ] INFO  RulesDeployer                  - Processing resource bpmn/OrderBillingProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 16:21:37,663 [Scanner-0      ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderBillingProcess:1:7]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-02-03 16:21:37,668 [Scanner-0      ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@7747a566[wfId=1,name=orderBillingProcess,deployId=4,processDefinitionKey=orderBillingProcess,processDefinitionId=orderBillingProcess:1:7,createTime=Mon Feb 03 16:21:37 NZDT 2014]
2014-02-03 16:21:37,680 [Scanner-0      ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-02-03 03:21:37)
2014-02-03 16:21:37,680 [Scanner-0      ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-02-03 03:21:37)
2014-02-03 16:21:37,681 [Scanner-0      ] INFO  WorkflowInitialDataSetup       - deploy billing process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-02-03 03:21:37) 
2014-02-03 16:21:37,681 [Scanner-0      ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-02-03 16:21:37,683 [Scanner-0      ] INFO  BpmnDeployer                   - Processing resource bpmn/OrdercoreProcess.bpmn20.xml
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-02-03 16:21:37,777 [Scanner-0      ] INFO  RulesDeployer                  - Processing resource bpmn/OrdercoreProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 16:21:37,783 [Scanner-0      ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderCoreProcess:1:11]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-02-03 16:21:37,784 [Scanner-0      ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@5a94e511[wfId=2,name=orderCoreProcess,deployId=8,processDefinitionKey=orderCoreProcess,processDefinitionId=orderCoreProcess:1:11,createTime=Mon Feb 03 16:21:37 NZDT 2014]
2014-02-03 16:21:37,784 [Scanner-0      ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-02-03 03:21:37)
2014-02-03 16:21:37,785 [Scanner-0      ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-02-03 03:21:37)
2014-02-03 16:21:37,785 [Scanner-0      ] INFO  WorkflowInitialDataSetup       - deploy core process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-02-03 03:21:37) 
2014-02-03 16:21:37,785 [Scanner-0      ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-02-03 16:21:37,787 [Scanner-0      ] INFO  BpmnDeployer                   - Processing resource bpmn/OrderlocalProcess.bpmn20.xml
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-02-03 16:21:37,906 [Scanner-0      ] INFO  RulesDeployer                  - Processing resource bpmn/OrderlocalProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 16:21:37,912 [Scanner-0      ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderlocalProcess:1:15]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-02-03 16:21:37,914 [Scanner-0      ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@5ea3144c[wfId=3,name=orderlocalProcess,deployId=12,processDefinitionKey=orderlocalProcess,processDefinitionId=orderlocalProcess:1:15,createTime=Mon Feb 03 16:21:37 NZDT 2014]
2014-02-03 16:21:37,914 [Scanner-0      ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 03:21:37)
2014-02-03 16:21:37,914 [Scanner-0      ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 03:21:37)
2014-02-03 16:21:37,914 [Scanner-0      ] INFO  WorkflowInitialDataSetup       - deploy local main process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 03:21:37) 
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
2014-02-03 16:21:38,026 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/logout],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LogoutController.logout(javax.servlet.http.HttpSession)
2014-02-03 16:21:38,027 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/login],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LoginController.showLoginPage(org.springframework.ui.Model)
2014-02-03 16:21:38,027 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/login],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LoginController.handleLogin(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws co.nz.pizzashack.AuthenticationException
2014-02-03 16:21:38,027 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/index],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.IndexController.index(org.springframework.ui.Model,co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-02-03 16:21:38,029 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/createUser],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public co.nz.pizzashack.data.dto.UserDto co.nz.pizzashack.controller.UserController.createUser(co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-02-03 16:21:38,029 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/{userId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:21:38,029 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:21:38,029 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/update/{userId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:21:38,029 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/{userId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.deleteUser(java.lang.Long) throws java.lang.Exception
2014-02-03 16:21:38,029 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/check/{userName}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.checkUser(java.lang.String) throws java.lang.Exception
2014-02-03 16:21:38,029 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:21:38,030 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/search],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.search(co.nz.pizzashack.data.dto.UserDto,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:21:38,030 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.create(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 16:21:38,030 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.update(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 16:21:38,030 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/adminIndex],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.AdminIndexController.index(org.springframework.ui.Model,co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-02-03 16:21:38,031 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/{deptId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:21:38,031 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/selectdepts],methods=[GET],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.util.Set<co.nz.pizzashack.data.dto.DepartmentDto> co.nz.pizzashack.controller.DepartmentController.select() throws java.lang.Exception
2014-02-03 16:21:38,032 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:21:38,032 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/update/{deptId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:21:38,032 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:21:38,032 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/{deptId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.delete(java.lang.Long) throws java.lang.Exception
2014-02-03 16:21:38,032 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/search],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.search(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:21:38,032 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.create(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 16:21:38,032 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.update(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 16:21:38,033 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/{orderProcessId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.showOrderProcess(java.lang.Long,org.springframework.ui.Model,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-02-03 16:21:38,033 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/claimReview/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.claimReviewTask(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-02-03 16:21:38,033 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/review],methods=[POST],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.reviewOrder(co.nz.pizzashack.data.dto.OrderReviewRecordDto,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-02-03 16:21:38,034 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderQuery/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderQueryController.show(java.lang.String,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:21:38,034 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderQuery/showHistory/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.util.Set<co.nz.pizzashack.data.dto.ProcessActivityDto> co.nz.pizzashack.controller.OrderQueryController.showHistory(java.lang.String) throws java.lang.Exception
2014-02-03 16:21:38,034 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderQuery/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderQueryController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:21:38,035 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/{staffId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:21:38,035 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:21:38,035 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/update/{staffId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:21:38,035 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:21:38,035 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/{staffId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.delete(java.lang.Long) throws java.lang.Exception
2014-02-03 16:21:38,036 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.create(co.nz.pizzashack.data.dto.StaffDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 16:21:38,036 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.update(co.nz.pizzashack.data.dto.StaffDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 16:21:38,068 [Scanner-0      ] INFO  SimpleUrlHandlerMapping        - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2014-02-03 16:21:38,069 [Scanner-0      ] INFO  SimpleUrlHandlerMapping        - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler]
2014-02-03 16:21:38,285 [Scanner-0      ] INFO  ContextLoader                  - Root WebApplicationContext: initialization completed in 7318 ms
2014-02-03 16:21:38.285:INFO:oejsh.ContextHandler:started o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
Feb 03, 2014 4:21:38 PM com.sun.jersey.api.core.PackagesResourceConfig init
INFO: Scanning for root resource and provider classes in the packages:
  co.nz.pizzashack.integration.api
Feb 03, 2014 4:21:38 PM com.sun.jersey.api.core.ScanningResourceConfig logClasses
INFO: Root resource classes found:
  class co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl
Feb 03, 2014 4:21:38 PM com.sun.jersey.api.core.ScanningResourceConfig init
INFO: No provider classes found.
Feb 03, 2014 4:21:38 PM com.sun.jersey.spi.spring.container.servlet.SpringServlet getContext
INFO: Using default applicationContext
Feb 03, 2014 4:21:38 PM com.sun.jersey.spi.spring.container.SpringComponentProviderFactory registerSpringBeans
INFO: Registering Spring bean, pizzashackAPIImpl, of type co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl as a root resource class
Feb 03, 2014 4:21:38 PM com.sun.jersey.server.impl.application.WebApplicationImpl _initiate
INFO: Initiating Jersey application, version 'Jersey: 1.17.1 02/28/2013 12:47 PM'
Feb 03, 2014 4:21:38 PM com.sun.jersey.spi.inject.Errors processErrorMessages
WARNING: The following warnings have been detected with resource and/or provider classes:
  WARNING: A HTTP GET method, public javax.ws.rs.core.Response co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl.getOrderProcessByOrderNo(java.lang.String), should not consume any entity.
Feb 03, 2014 4:21:38 PM com.sun.jersey.spi.spring.container.servlet.SpringServlet getContext
INFO: Using default applicationContext
Feb 03, 2014 4:21:38 PM com.sun.jersey.spi.spring.container.SpringComponentProviderFactory registerSpringBeans
INFO: Registering Spring bean, pizzashackAPIImpl, of type co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl as a root resource class
Feb 03, 2014 4:21:38 PM com.sun.jersey.server.impl.application.WebApplicationImpl _initiate
INFO: Initiating Jersey application, version 'Jersey: 1.17.1 02/28/2013 12:47 PM'
Feb 03, 2014 4:21:38 PM com.sun.jersey.spi.inject.Errors processErrorMessages
WARNING: The following warnings have been detected with resource and/or provider classes:
  WARNING: A HTTP GET method, public javax.ws.rs.core.Response co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl.getOrderProcessByOrderNo(java.lang.String), should not consume any entity.
2014-02-03 16:21:38.814:INFO:/:Initializing Spring FrameworkServlet 'dispatcher'
2014-02-03 16:21:38,814 [Scanner-0      ] INFO  DispatcherServlet              - FrameworkServlet 'dispatcher': initialization started
2014-02-03 16:21:38,828 [Scanner-0      ] INFO  DispatcherServlet              - FrameworkServlet 'dispatcher': initialization completed in 14 ms
[INFO] Restart completed at Mon Feb 03 16:21:38 NZDT 2014
2014-02-03 16:26:37,292 [qtp935945395-61] INFO  PizzashackAPIImpl              - getOrderByNo start:916743e7-7a84-4bcc-b944-27f5f385f92d
2014-02-03 16:26:37,293 [qtp935945395-61] INFO  OrderDSImpl                    - getOrderByOrderNo start:916743e7-7a84-4bcc-b944-27f5f385f92d 
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_,
        ordermodel0_.cust_id as cust11_4_,
        ordermodel0_.deliver_time as deliver2_4_,
        ordermodel0_.order_no as order3_4_,
        ordermodel0_.order_time as order4_4_,
        ordermodel0_.payment_remarks as payment5_4_,
        ordermodel0_.payment_status as payment6_4_,
        ordermodel0_.quantity as quantity4_,
        ordermodel0_.ship_address as ship8_4_,
        ordermodel0_.status as status4_,
        ordermodel0_.total_price as total10_4_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_no=? limit ?
2014-02-03 16:26:37,316 [qtp935945395-61] INFO  PizzashackAPIImpl              - getOrderByNo end:{}
2014-02-03 16:26:58,836 [qtp935945395-34] INFO  OrderQueryController           - userIndex start: {}
2014-02-03 16:26:58,837 [qtp935945395-34] INFO  OrderProcessQueryDSImpl        - getAllOrderProcesses start:{} 
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_
2014-02-03 16:26:58,855 [qtp935945395-34] INFO  OrderProcessQueryDSImpl        - getAllOrderProcesses end:{} 
2014-02-03 16:27:00,177 [qtp935945395-37] INFO  OrderQueryController           - userIndex start: {}
2014-02-03 16:27:00,178 [qtp935945395-37] INFO  OrderProcessQueryDSImpl        - getAllOrderProcesses start:{} 
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_
2014-02-03 16:27:00,180 [qtp935945395-37] INFO  OrderProcessQueryDSImpl        - getAllOrderProcesses end:{} 
2014-02-03 16:27:00,975 [qtp935945395-40] ERROR InputTag                       - Neither BindingResult nor plain target object for bean name 'user' available as request attribute
java.lang.IllegalStateException: Neither BindingResult nor plain target object for bean name 'user' available as request attribute
	at org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:141)[spring-webmvc-3.2.4.RELEASE.jar:3.2.4.RELEASE]
	at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getBindStatus(AbstractDataBoundFormElementTag.java:179)[spring-webmvc-3.2.4.RELEASE.jar:3.2.4.RELEASE]
	at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getPropertyPath(AbstractDataBoundFormElementTag.java:199)[spring-webmvc-3.2.4.RELEASE.jar:3.2.4.RELEASE]
	at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getName(AbstractDataBoundFormElementTag.java:165)[spring-webmvc-3.2.4.RELEASE.jar:3.2.4.RELEASE]
	at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.writeDefaultAttributes(AbstractDataBoundFormElementTag.java:128)[spring-webmvc-3.2.4.RELEASE.jar:3.2.4.RELEASE]
	at org.springframework.web.servlet.tags.form.AbstractHtmlElementTag.writeDefaultAttributes(AbstractHtmlElementTag.java:421)[spring-webmvc-3.2.4.RELEASE.jar:3.2.4.RELEASE]
	at org.springframework.web.servlet.tags.form.InputTag.writeTagContent(InputTag.java:142)[spring-webmvc-3.2.4.RELEASE.jar:3.2.4.RELEASE]
	at org.springframework.web.servlet.tags.form.AbstractFormTag.doStartTagInternal(AbstractFormTag.java:103)[spring-webmvc-3.2.4.RELEASE.jar:3.2.4.RELEASE]
	at org.springframework.web.servlet.tags.RequestContextAwareTag.doStartTag(RequestContextAwareTag.java:80)[spring-webmvc-3.2.4.RELEASE.jar:3.2.4.RELEASE]
	at org.apache.jsp.WEB_002dINF.jsp.login_jsp._jspx_meth_form_input_0(login_jsp.java:301)
	at org.apache.jsp.WEB_002dINF.jsp.login_jsp._jspService(login_jsp.java:131)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:111)[org.apache.jasper.glassfish-2.2.2.v201112011158.jar:]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)[javax.servlet-3.0.0.v201112011016.jar:]
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:403)[org.apache.jasper.glassfish-2.2.2.v201112011158.jar:]
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:492)[org.apache.jasper.glassfish-2.2.2.v201112011158.jar:]
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:378)[org.apache.jasper.glassfish-2.2.2.v201112011158.jar:]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)[javax.servlet-3.0.0.v201112011016.jar:]
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:643)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1331)
	at org.sitemesh.webapp.contentfilter.ContentBufferingFilter.bufferAndPostProcess(ContentBufferingFilter.java:169)[sitemesh-3.0-alpha-2.jar:]
	at org.sitemesh.webapp.contentfilter.ContentBufferingFilter.doFilter(ContentBufferingFilter.java:126)[sitemesh-3.0-alpha-2.jar:]
	at org.sitemesh.config.ConfigurableSiteMeshFilter.doFilter(ConfigurableSiteMeshFilter.java:163)[sitemesh-3.0-alpha-2.jar:]
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1302)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:448)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:131)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:542)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1067)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:377)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:192)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1001)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:129)
	at org.eclipse.jetty.server.Dispatcher.forward(Dispatcher.java:271)
	at org.eclipse.jetty.server.Dispatcher.forward(Dispatcher.java:98)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:238)[spring-webmvc-3.2.4.RELEASE.jar:3.2.4.RELEASE]
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:263)[spring-webmvc-3.2.4.RELEASE.jar:3.2.4.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1208)[spring-webmvc-3.2.4.RELEASE.jar:3.2.4.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:992)[spring-webmvc-3.2.4.RELEASE.jar:3.2.4.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:939)[spring-webmvc-3.2.4.RELEASE.jar:3.2.4.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:856)[spring-webmvc-3.2.4.RELEASE.jar:3.2.4.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:936)[spring-webmvc-3.2.4.RELEASE.jar:3.2.4.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:827)[spring-webmvc-3.2.4.RELEASE.jar:3.2.4.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:735)[javax.servlet-3.0.0.v201112011016.jar:]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:812)[spring-webmvc-3.2.4.RELEASE.jar:3.2.4.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)[javax.servlet-3.0.0.v201112011016.jar:]
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:643)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1331)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:88)[spring-web-3.2.4.RELEASE.jar:3.2.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)[spring-web-3.2.4.RELEASE.jar:3.2.4.RELEASE]
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1302)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)[spring-web-3.2.4.RELEASE.jar:3.2.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)[spring-web-3.2.4.RELEASE.jar:3.2.4.RELEASE]
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1302)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:448)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:131)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:524)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1067)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:377)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:192)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1001)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:129)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:250)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:149)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:111)
	at org.eclipse.jetty.server.Server.handle(Server.java:360)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:454)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:890)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:944)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:630)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:230)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:77)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:622)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:46)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:603)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:538)
	at java.lang.Thread.run(Thread.java:744)[:1.7.0_45]
2014-02-03 16:27:00.994:WARN:oejs.ServletHandler:/index
java.lang.IllegalStateException: Neither BindingResult nor plain target object for bean name 'user' available as request attribute
	at org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:141)
	at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getBindStatus(AbstractDataBoundFormElementTag.java:179)
	at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getPropertyPath(AbstractDataBoundFormElementTag.java:199)
	at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getName(AbstractDataBoundFormElementTag.java:165)
	at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.writeDefaultAttributes(AbstractDataBoundFormElementTag.java:128)
	at org.springframework.web.servlet.tags.form.AbstractHtmlElementTag.writeDefaultAttributes(AbstractHtmlElementTag.java:421)
	at org.springframework.web.servlet.tags.form.InputTag.writeTagContent(InputTag.java:142)
	at org.springframework.web.servlet.tags.form.AbstractFormTag.doStartTagInternal(AbstractFormTag.java:103)
	at org.springframework.web.servlet.tags.RequestContextAwareTag.doStartTag(RequestContextAwareTag.java:80)
	at org.apache.jsp.WEB_002dINF.jsp.login_jsp._jspx_meth_form_input_0(login_jsp.java:301)
	at org.apache.jsp.WEB_002dINF.jsp.login_jsp._jspService(login_jsp.java:131)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:111)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:403)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:492)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:378)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:643)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1331)
	at org.sitemesh.webapp.contentfilter.ContentBufferingFilter.bufferAndPostProcess(ContentBufferingFilter.java:169)
	at org.sitemesh.webapp.contentfilter.ContentBufferingFilter.doFilter(ContentBufferingFilter.java:126)
	at org.sitemesh.config.ConfigurableSiteMeshFilter.doFilter(ConfigurableSiteMeshFilter.java:163)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1302)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:448)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:131)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:542)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1067)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:377)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:192)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1001)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:129)
	at org.eclipse.jetty.server.Dispatcher.forward(Dispatcher.java:271)
	at org.eclipse.jetty.server.Dispatcher.forward(Dispatcher.java:98)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:238)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:263)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1208)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:992)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:939)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:856)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:936)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:827)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:735)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:812)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:643)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1331)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1302)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1302)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:448)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:131)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:524)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1067)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:377)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:192)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1001)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:129)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:250)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:149)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:111)
	at org.eclipse.jetty.server.Server.handle(Server.java:360)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:454)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:890)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:944)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:630)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:230)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:77)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:622)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:46)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:603)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:538)
	at java.lang.Thread.run(Thread.java:744)
2014-02-03 16:27:09,672 [qtp935945395-38] INFO  BaseController                 - requestMapping:/login
2014-02-03 16:27:14,957 [qtp935945395-40] INFO  UserDSImpl                     - loginUser start:{}
2014-02-03 16:27:14,957 [qtp935945395-40] INFO  UserDSImpl                     - username:david
2014-02-03 16:27:14,957 [qtp935945395-40] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? 
        and usermodel0_.password=? limit ?
2014-02-03 16:27:14,963 [qtp935945395-40] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@12f69c78[userId=1,username=david,password=MTIzNDU2,createTime=16:21:37]
2014-02-03 16:27:14,967 [qtp935945395-40] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:1970-01-01 04:21:37)
2014-02-03 16:27:14,967 [qtp935945395-40] INFO  UserDSImpl                     - loginUser end:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:1970-01-01 04:21:37)
2014-02-03 16:27:14,967 [qtp935945395-40] INFO  BaseController                 - requestMapping:/index
2014-02-03 16:27:14,973 [qtp935945395-38] INFO  IndexController                - index: {}
2014-02-03 16:27:14,973 [qtp935945395-38] INFO  OrderProcessDSImpl             - getAllTransTaskForCurrentUser start:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:1970-01-01 04:21:37) 
2014-02-03 16:27:14,973 [qtp935945395-38] INFO  ActivitiFacade                 - getAllTasksForUser start:1
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                    
    WHERE
        RES.ASSIGNEE_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        g.*     
    from
        ACT_ID_GROUP g,
        ACT_ID_MEMBERSHIP membership     
    where
        g.ID_ = membership.GROUP_ID_       
        and membership.USER_ID_ = ?
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                   
    inner join
        ACT_RU_IDENTITYLINK I 
            on I.TASK_ID_ = RES.ID_                              
    WHERE
        RES.ASSIGNEE_ is null         
        and I.TYPE_ = 'candidate'         
        and          (
            I.USER_ID_ = ?                                             
            or                                   I.GROUP_ID_ IN             (
                ?             
            )                    
        )                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_GROUP RES             
    inner join
        ACT_ID_MEMBERSHIP M 
            on RES.ID_ = M.GROUP_ID_       
    inner join
        ACT_ID_USER U 
            on M.USER_ID_ = U.ID_            
    WHERE
        U.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                   
    inner join
        ACT_RU_IDENTITYLINK I 
            on I.TASK_ID_ = RES.ID_                              
    WHERE
        RES.ASSIGNEE_ is null         
        and I.TYPE_ = 'candidate'         
        and          (
            I.GROUP_ID_ IN             (
                ?             
            )                    
        )                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 16:27:15,001 [qtp935945395-38] INFO  OrderProcessDSImpl             - getAllTransTaskForCurrentUser end:{} 
2014-02-03 16:27:16,164 [qtp935945395-37] INFO  IndexController                - index: {}
2014-02-03 16:27:16,165 [qtp935945395-37] INFO  OrderProcessDSImpl             - getAllTransTaskForCurrentUser start:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:1970-01-01 04:21:37) 
2014-02-03 16:27:16,165 [qtp935945395-37] INFO  ActivitiFacade                 - getAllTasksForUser start:1
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                    
    WHERE
        RES.ASSIGNEE_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        g.*     
    from
        ACT_ID_GROUP g,
        ACT_ID_MEMBERSHIP membership     
    where
        g.ID_ = membership.GROUP_ID_       
        and membership.USER_ID_ = ?
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                   
    inner join
        ACT_RU_IDENTITYLINK I 
            on I.TASK_ID_ = RES.ID_                              
    WHERE
        RES.ASSIGNEE_ is null         
        and I.TYPE_ = 'candidate'         
        and          (
            I.USER_ID_ = ?                                             
            or                                   I.GROUP_ID_ IN             (
                ?             
            )                    
        )                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_GROUP RES             
    inner join
        ACT_ID_MEMBERSHIP M 
            on RES.ID_ = M.GROUP_ID_       
    inner join
        ACT_ID_USER U 
            on M.USER_ID_ = U.ID_            
    WHERE
        U.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                   
    inner join
        ACT_RU_IDENTITYLINK I 
            on I.TASK_ID_ = RES.ID_                              
    WHERE
        RES.ASSIGNEE_ is null         
        and I.TYPE_ = 'candidate'         
        and          (
            I.GROUP_ID_ IN             (
                ?             
            )                    
        )                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 16:27:16,184 [qtp935945395-37] INFO  OrderProcessDSImpl             - getAllTransTaskForCurrentUser end:{} 
2014-02-03 16:27:17,327 [qtp935945395-34] INFO  OrderQueryController           - userIndex start: {}
2014-02-03 16:27:17,327 [qtp935945395-34] INFO  OrderProcessQueryDSImpl        - getAllOrderProcesses start:{} 
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_
2014-02-03 16:27:17,328 [qtp935945395-34] INFO  OrderProcessQueryDSImpl        - getAllOrderProcesses end:{} 
2014-02-03 16:27:35,394 [ckOrderInbound]] INFO  orderProcessRoute              - Received message 15555
Hibernate: 
    SELECT
        COUNT(*) 
    FROM
        T_ORDER_REQUEST_HISTORY 
    WHERE
        processor_name = ? 
        AND message_id = ?
Hibernate: 
    INSERT 
    INTO
        T_ORDER_REQUEST_HISTORY
        (processor_name, message_id, created_at) 
    VALUES
        (?, ?, ?)
2014-02-03 16:27:35,407 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlUnmarshal start:{} <order>
  <address>25 mavon downs</address>
  <order-list>
    <order-details>
      <pizza-name>Garden Fresh</pizza-name>
      <quantity>4</quantity>
    </order-details>
    <order-details>
      <pizza-name>Chicken Parmesan</pizza-name>
      <quantity>10</quantity>
    </order-details>
  </order-list>
  <customer>
    <name>david</name>
    <email>david.yuan124@gmail.com</email>
  </customer>
</order>
orderDetailsDto: co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Garden Fresh, qty:4, totalPrice:0)
orderDetailsDto: co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)
2014-02-03 16:27:35,462 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlUnmarshal end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:null, orderNo:null, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:david, customerEmail:david.yuan124@gmail.com, level:null), address:25 mavon downs, status:null, orderTime:null, deliverTime:null)
2014-02-03 16:27:35,462 [ckOrderInbound]] INFO  OrderRequestProcessor          - orderRequestProcessor start:{} 
2014-02-03 16:27:35,462 [ckOrderInbound]] INFO  OrderRequestProcessor          - order request:co.nz.pizzashack.data.dto.OrderDto(orderId:null, orderNo:null, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:david, customerEmail:david.yuan124@gmail.com, level:null), address:25 mavon downs, status:null, orderTime:null, deliverTime:null) 
2014-02-03 16:27:35,462 [ckOrderInbound]] INFO  OrderRequestProcessor          - messageId:15555 
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
2014-02-03 16:27:35,464 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@559bbe8d[userId=4,username=general,password=MTIzNDU2,createTime=16:21:37]
2014-02-03 16:27:35,465 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 04:21:37)
2014-02-03 16:27:35,465 [ckOrderInbound]] INFO  OrderRequestProcessor          - default operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 04:21:37) 
2014-02-03 16:27:35,465 [ckOrderInbound]] INFO  OrderProcessDSImpl             - startOrderProcess start:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 04:21:37)
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.process_definition_key=? 
        and workflowmo0_.category=? limit ?
Hibernate: 
    insert 
    into
        t_order
        (order_id, cust_id, deliver_time, order_no, order_time, payment_remarks, payment_status, quantity, ship_address, status, total_price) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 16:27:35,478 [ckOrderInbound]] INFO  ActivitiFacade                 - startProcessInstance start:{}
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
2014-02-03 16:27:35,494 [ckOrderInbound]] INFO  ActivitiFacade                 - startProcessInstance end:{}
Hibernate: 
    insert 
    into
        t_order_process
        (order_process_id, active_process_definition_id, active_process_instance_id, complete_time, create_time, execution_id, main_process_definition_id, main_process_instance_id, operator_id, order_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2014-02-03 16:27:35,500 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@cbc99f5[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=Mon Feb 03 16:27:35 NZDT 2014,completeTime=<null>]
2014-02-03 16:27:35,514 [ckOrderInbound]] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@5f63ea40[orderId=1,orderNo=6a0ad17b-f050-4fb5-964c-bd3b163b0ce8,quantity=<null>,status=0,paymentStatus=0,deliverTime=<null>,totalPrice=<null>,orderTime=Mon Feb 03 16:27:35 NZDT 2014]
2014-02-03 16:27:35,516 [ckOrderInbound]] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 03:27:35, deliverTime:null)
2014-02-03 16:27:35,516 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@44763591[userId=4,username=general,password=MTIzNDU2,createTime=16:21:37]
2014-02-03 16:27:35,517 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 04:21:37)
2014-02-03 16:27:35,524 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 03:27:35, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 03:27:35, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 04:21:37))
2014-02-03 16:27:35,524 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 03:27:35, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 03:27:35, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 04:21:37)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
2014-02-03 16:27:35,534 [ckOrderInbound]] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 16:27:35,534 [ckOrderInbound]] INFO  ActivitiFacade                 - executionId: 16, processDefinitionId: orderlocalProcess:1:15
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 16:27:35,560 [ckOrderInbound]] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 16:27:35,564 [ckOrderInbound]] INFO  OrderProcessAccessor           - assign operator[4] to task[Data entry]
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    insert 
    into
        ACT_RU_IDENTITYLINK
        (ID_, REV_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_, PROC_DEF_ID_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_IDENTITYLINK
        (ID_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_)     
    values
        (?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_TASK      
    SET
        REV_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        PRIORITY_ = ?,
        CREATE_TIME_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        DELEGATION_ = ?,
        EXECUTION_ID_ = ?,
        PROC_DEF_ID_ = ?,
        DESCRIPTION_ = ?,
        DUE_DATE_ = ?,
        SUSPENSION_STATE_ = ?      
    where
        ID_= ?       
        and REV_ = ?
2014-02-03 16:27:35,584 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 03:27:35, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 03:27:35, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 04:21:37)) 
2014-02-03 16:27:35,585 [ckOrderInbound]] INFO  OrderProcessDSImpl             - startOrderProcess end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 03:27:35, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 03:27:35, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 04:21:37))
2014-02-03 16:27:35,587 [ckOrderInbound]] INFO  OrderRequestProcessor          - after start process:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 03:27:35, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 03:27:35, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 04:21:37)) 
2014-02-03 16:27:35,588 [ckOrderInbound]] INFO  OrderProcessDSImpl             - dataEntry start:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8
2014-02-03 16:27:35,588 [ckOrderInbound]] INFO  OrderProcessDSImpl             - getOrderProcessByOrderNo start************************************
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 16:27:35,599 [ckOrderInbound]] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@3b7042fd[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=16:27:35,completeTime=<null>] 
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_,
        customermo0_.address as address2_,
        customermo0_.credits as credits2_,
        customermo0_.customer_name as customer4_2_,
        customermo0_.email as email2_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.email=? limit ?
2014-02-03 16:27:35,604 [ckOrderInbound]] INFO  CustomerConverter              - toModel start:{} co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:david, customerEmail:david.yuan124@gmail.com, level:null)
2014-02-03 16:27:35,607 [ckOrderInbound]] INFO  CustomerConverter              - toModel end:{} co.nz.pizzashack.data.model.CustomerModel@4ac0e652[custId=<null>,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
Hibernate: 
    insert 
    into
        t_customer
        (cust_id, address, credits, customer_name, email) 
    values
        (null, ?, ?, ?, ?)
2014-02-03 16:27:35,609 [ckOrderInbound]] INFO  OrderProcessDSImpl             - orderDetailsSet size:2 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
2014-02-03 16:27:35,617 [ckOrderInbound]] INFO  OrderProcessDSImpl             - added orderPizzashackModel:co.nz.pizzashack.data.model.OrderPizzashackModel@729a26aa[orderPizzashackId=<null>,totalPrice=0,qty=4] 
Hibernate: 
    insert 
    into
        t_order_pizzashack
        (order_pizza_id, order_id, pizzashack_id, qty, total_price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
2014-02-03 16:27:35,624 [ckOrderInbound]] INFO  OrderProcessDSImpl             - added orderPizzashackModel:co.nz.pizzashack.data.model.OrderPizzashackModel@73aaa74c[orderPizzashackId=<null>,totalPrice=0,qty=10] 
Hibernate: 
    insert 
    into
        t_order_pizzashack
        (order_pizza_id, order_id, pizzashack_id, qty, total_price) 
    values
        (null, ?, ?, ?, ?)
2014-02-03 16:27:35,625 [ckOrderInbound]] INFO  OrderProcessDSImpl             - after add detailsDto, size in model:2 
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        E.BUSINESS_KEY_ = ?                                                                                 
        and RES.PROC_DEF_ID_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                    
        and RES.ASSIGNEE_ = ?                                                                        
        and E.BUSINESS_KEY_ = ?
2014-02-03 16:27:35,631 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@3b7042fd[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=16:27:35,completeTime=<null>]
2014-02-03 16:27:35,635 [ckOrderInbound]] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@37f77604[orderId=1,orderNo=6a0ad17b-f050-4fb5-964c-bd3b163b0ce8,quantity=0,status=0,paymentStatus=0,deliverTime=<null>,totalPrice=0,orderTime=2014-02-03 16:27:35.471]
2014-02-03 16:27:35,638 [ckOrderInbound]] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@4ac0e652[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 16:27:35,645 [ckOrderInbound]] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-02-03 16:27:35,649 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@729a26aa[orderPizzashackId=1,totalPrice=0,qty=4]
2014-02-03 16:27:35,658 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0)
2014-02-03 16:27:35,658 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@73aaa74c[orderPizzashackId=2,totalPrice=0,qty=10]
2014-02-03 16:27:35,658 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)
2014-02-03 16:27:35,658 [ckOrderInbound]] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 03:27:35, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 16:27:35,663 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@5e951507[userId=4,username=general,password=MTIzNDU2,createTime=16:21:37]
2014-02-03 16:27:35,664 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 04:21:37)
2014-02-03 16:27:35,664 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 03:27:35, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 04:27:35, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 04:21:37))
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        PARENT_TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE 
    where
        TASK_ID_ =     ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
2014-02-03 16:27:35,686 [ckOrderInbound]] INFO  ainTransitionExecutionListener - orderMainUserTaskExecutionListener start:{} 
2014-02-03 16:27:35,686 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity id:orderCoreCallactivity
2014-02-03 16:27:35,686 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity name:Core process
2014-02-03 16:27:35,686 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity type:callActivity
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
start calculate: co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 03:27:35, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 04:27:35, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 04:21:37))
2014-02-03 16:27:35,900 [ckOrderInbound]] INFO  PizzashackCaculator            - caculate start:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 03:27:35, deliverTime:null) 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 16:27:35,912 [ckOrderInbound]] INFO  PizzashackCaculator            - caculate end:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 03:27:35, deliverTime:null) 
after calculation: co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 03:27:35, deliverTime:null)
2014-02-03 16:27:35,913 [ckOrderInbound]] INFO  culationMergeExecutionListener - CaculationMergeExecutionListener start
2014-02-03 16:27:35,914 [ckOrderInbound]] INFO  culationMergeExecutionListener - after calculation, orderProcess:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 03:27:35, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 04:27:35, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 04:21:37)) 
2014-02-03 16:27:35,914 [ckOrderInbound]] INFO  OrderProcessAccessor           - merge calculation result
2014-02-03 16:27:35,914 [ckOrderInbound]] INFO  OrderProcessAccessor           - total price:390.00 
2014-02-03 16:27:35,915 [ckOrderInbound]] INFO  OrderProcessAccessor           - qty:14 
2014-02-03 16:27:35,915 [ckOrderInbound]] INFO  OrderProcessAccessor           - orderDetailsSet.size():2
2014-02-03 16:27:35,915 [ckOrderInbound]] INFO  culationMergeExecutionListener - CaculationMergeExecutionListener end
total qty: 14
after autoreview: 2
reviewTransBean: co.nz.pizzashack.data.dto.OrderReviewRecordDto(reviewRecordId:null, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, content:order number is more than 10 but less than 30, reviewResult:pending, createTime:2014-02-03 03:27:35, reviewer:null)
2014-02-03 16:27:35,984 [ckOrderInbound]] INFO  oManualReviewExecutionListener - ToManualReviewExecutionListener start:{} 
2014-02-03 16:27:35,985 [ckOrderInbound]] INFO  oManualReviewExecutionListener - eventName:take 
2014-02-03 16:27:35,985 [ckOrderInbound]] INFO  oManualReviewExecutionListener - activitiProcessDefinitionId:orderCoreProcess:1:11
2014-02-03 16:27:35,985 [ckOrderInbound]] INFO  oManualReviewExecutionListener - activitiProcesssInstanceId:30
2014-02-03 16:27:35,985 [ckOrderInbound]] INFO  oManualReviewExecutionListener - get orderReviewRecord:co.nz.pizzashack.data.dto.OrderReviewRecordDto(reviewRecordId:null, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, content:order number is more than 10 but less than 30, reviewResult:pending, createTime:2014-02-03 03:27:35, reviewer:null) 
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_IDENTITYLINK
        (ID_, REV_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_, PROC_DEF_ID_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_IDENTITYLINK
        (ID_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_)     
    values
        (?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_EXECUTION 
    set
        REV_ = ?,
        BUSINESS_KEY_ = ?,
        PROC_DEF_ID_ = ?,
        ACT_ID_ = ?,
        IS_ACTIVE_ = ?,
        IS_CONCURRENT_ = ?,
        IS_SCOPE_ = ?,
        IS_EVENT_SCOPE_ = ?,
        PARENT_ID_ = ?,
        SUPER_EXEC_ = ?,
        SUSPENSION_STATE_ = ?,
        CACHED_ENT_STATE_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_TASK 
    where
        ID_ = ? 
        and REV_ = ?
2014-02-03 16:27:36,079 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:27:35, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 04:27:35, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 04:21:37)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-02-03 16:27:36,092 [ckOrderInbound]] INFO  OrderProcessAccessor           - get OrderProcessDto from flow:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:27:35, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 04:27:35, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 04:21:37)) 
2014-02-03 16:27:36,092 [ckOrderInbound]] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 16:27:36,092 [ckOrderInbound]] INFO  ActivitiFacade                 - executionId: 30, processDefinitionId: orderCoreProcess:1:11
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 16:27:36,098 [ckOrderInbound]] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 16:27:36,101 [ckOrderInbound]] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo start:{}
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 16:27:36,103 [ckOrderInbound]] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo end:{}
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
2014-02-03 16:27:36,106 [ckOrderInbound]] INFO  OrderProcessAccessor           - after merge orderProcessModel:co.nz.pizzashack.data.model.OrderProcessModel@3b7042fd[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=16:27:35,completeTime=<null>] 
2014-02-03 16:27:36,107 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:27:35, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 04:27:35, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 04:21:37)) 
2014-02-03 16:27:36,108 [ckOrderInbound]] INFO  OrderProcessDSImpl             - dataEntry end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:27:35, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 04:27:35, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 04:21:37))
Hibernate: 
    update
        t_order_process 
    set
        active_process_definition_id=?,
        active_process_instance_id=?,
        complete_time=?,
        create_time=?,
        execution_id=?,
        main_process_definition_id=?,
        main_process_instance_id=?,
        operator_id=?,
        order_id=? 
    where
        order_process_id=?
Hibernate: 
    update
        t_order 
    set
        cust_id=?,
        deliver_time=?,
        order_no=?,
        order_time=?,
        payment_remarks=?,
        payment_status=?,
        quantity=?,
        ship_address=?,
        status=?,
        total_price=? 
    where
        order_id=?
Hibernate: 
    update
        t_order_pizzashack 
    set
        order_id=?,
        pizzashack_id=?,
        qty=?,
        total_price=? 
    where
        order_pizza_id=?
Hibernate: 
    update
        t_order_pizzashack 
    set
        order_id=?,
        pizzashack_id=?,
        qty=?,
        total_price=? 
    where
        order_pizza_id=?
2014-02-03 16:27:36,139 [ckOrderInbound]] INFO  OrderRequestProcessor          - after dataEntry:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:27:35, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 04:27:35, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 04:21:37)) 
2014-02-03 16:27:36,140 [ckOrderInbound]] INFO  OrderConverter                 - toModel start:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:27:35, deliverTime:null)
2014-02-03 16:27:36,140 [ckOrderInbound]] INFO  OrderConverter                 - toModel end:{} co.nz.pizzashack.data.model.OrderModel@7cb60c23[orderId=<null>,orderNo=6a0ad17b-f050-4fb5-964c-bd3b163b0ce8,quantity=14,status=<null>,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=<null>]
Hibernate: 
    select
        orderreque0_.message_id as message1_0_0_,
        orderreque0_.created_at as created2_0_0_,
        orderreque0_.order_id as order4_0_0_,
        orderreque0_.processor_name as processor3_0_0_ 
    from
        t_order_request_history orderreque0_ 
    where
        orderreque0_.message_id=?
2014-02-03 16:27:36,142 [ckOrderInbound]] INFO  OrderRequestProcessor          - orderRequestProcessor end:{} 
2014-02-03 16:27:36,144 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlMarshal start:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:27:35, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 04:27:35, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 04:21:37))
2014-02-03 16:27:36,151 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - pendingActivity:{} co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
2014-02-03 16:27:36,152 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - customerDto:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-02-03 16:27:36,170 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlMarshal end:{} <order-process>
  <process-id>1</process-id>
  <create-time>1970-01-01 04:27:35</create-time>
  <complete-time>null</complete-time>
  <operator>general</operator>
  <order>
    <order-no>6a0ad17b-f050-4fb5-964c-bd3b163b0ce8</order-no>
    <address>25 mavon downs</address>
    <quantity>14</quantity>
    <total-price>390.00</total-price>
    <status>pendingOnReview</status>
    <order-time>2014-02-03 03:27:35</order-time>
    <deliver-time>null</deliver-time>
    <order-list>
      <order-details>
        <pizza-name>Garden Fresh</pizza-name>
        <quantity>4</quantity>
        <total-price>140.00</total-price>
      </order-details>
      <order-details>
        <pizza-name>Chicken Parmesan</pizza-name>
        <quantity>10</quantity>
        <total-price>250.00</total-price>
      </order-details>
    </order-list>
  </order>
  <customer>
    <name>david</name>
    <email>david.yuan124@gmail.com</email>
  </customer>
  <pending-activity>
    <name>Manual underwriting</name>
    <type>userTask</type>
    <assignee>null</assignee>
  </pending-activity>
</order-process>
2014-02-03 16:27:36,171 [ckOrderInbound]] INFO  output                         - Exchange[ExchangePattern: InOnly, BodyType: String, Body: <order-process>  <process-id>1</process-id>  <create-time>1970-01-01 04:27:35</create-time>  <complete-time>null</complete-time>  <operator>general</operator>  <order>    <order-no>6a0ad17b-f050-4fb5-964c-bd3b163b0ce8</order-no>    <address>25 mavon downs</address>    <quantity>14</quantity>    <total-price>390.00</total-price>    <status>pendingOnReview</status>    <order-time>2014-02-03 03:27:35</order-time>    <deliver-time>null</deliver-time>    <order-list>      <order-details>        <pizza-name>Garden Fresh</pizza-name>        <quantity>4</quantity>        <total-price>140.00</total-price>      </order-details>      <order-details>        <pizza-name>Chicken Parmesan</pizza-name>        <quantity>10</quantity>        <total-price>250.00</total-price>      </order-details>    </order-list>  </order>  <customer>    <name>david</name>    <email>david.yuan124@gmail.com</email>  </customer>  <pending-activity>    <name>Manual underwriting</name>    <type>userTask</type>    <assignee>null</assignee>  </pending-activity></order-process>]
2014-02-03 16:27:36,218 [ckOrderInbound]] INFO  orderProcessRoute              - Signalled to stop route
2014-02-03 16:27:40,260 [qtp935945395-40] INFO  OrderQueryController           - userIndex start: {}
2014-02-03 16:27:40,261 [qtp935945395-40] INFO  OrderProcessQueryDSImpl        - getAllOrderProcesses start:{} 
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 16:27:40,266 [qtp935945395-40] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@4ced6e83[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=16:27:35,completeTime=<null>]
2014-02-03 16:27:40,267 [qtp935945395-40] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@3dde6e03[orderId=1,orderNo=6a0ad17b-f050-4fb5-964c-bd3b163b0ce8,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 16:27:35.471]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 16:27:40,277 [qtp935945395-40] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@5de1410a[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 16:27:40,278 [qtp935945395-40] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 16:27:40,285 [qtp935945395-40] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@5e690abe[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 16:27:40,292 [qtp935945395-40] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 16:27:40,292 [qtp935945395-40] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@4240705e[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 16:27:40,293 [qtp935945395-40] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 16:27:40,294 [qtp935945395-40] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:27:35, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 16:27:40,295 [qtp935945395-40] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@4f26a631[userId=4,username=general,password=MTIzNDU2,createTime=16:21:37]
2014-02-03 16:27:40,295 [qtp935945395-40] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 04:21:37)
2014-02-03 16:27:40,296 [qtp935945395-40] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:27:35, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 04:27:35, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 04:21:37))
2014-02-03 16:27:40,296 [qtp935945395-40] INFO  OrderProcessQueryDSImpl        - getAllOrderProcesses end:{} 
2014-02-03 16:27:56,576 [qtp935945395-38] INFO  PizzashackAPIImpl              - getOrderByNo start:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8
2014-02-03 16:27:56,576 [qtp935945395-38] INFO  OrderDSImpl                    - getOrderByOrderNo start:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8 
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_,
        ordermodel0_.cust_id as cust11_4_,
        ordermodel0_.deliver_time as deliver2_4_,
        ordermodel0_.order_no as order3_4_,
        ordermodel0_.order_time as order4_4_,
        ordermodel0_.payment_remarks as payment5_4_,
        ordermodel0_.payment_status as payment6_4_,
        ordermodel0_.quantity as quantity4_,
        ordermodel0_.ship_address as ship8_4_,
        ordermodel0_.status as status4_,
        ordermodel0_.total_price as total10_4_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_no=? limit ?
2014-02-03 16:27:56,578 [qtp935945395-38] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@4ff0608e[orderId=1,orderNo=6a0ad17b-f050-4fb5-964c-bd3b163b0ce8,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 16:27:35.471]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 16:27:56,579 [qtp935945395-38] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@1ebab7e5[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 16:27:56,579 [qtp935945395-38] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 16:27:56,580 [qtp935945395-38] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@775db1c[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 16:27:56,581 [qtp935945395-38] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 16:27:56,581 [qtp935945395-38] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@4a840f17[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 16:27:56,582 [qtp935945395-38] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 16:27:56,582 [qtp935945395-38] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:27:35, deliverTime:null)
2014-02-03 16:27:56,582 [qtp935945395-38] INFO  OrderDSImpl                    - getOrderByOrderNo end:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:27:35, deliverTime:null) 
2014-02-03 16:27:56,582 [qtp935945395-38] INFO  PizzashackAPIImpl              - getOrderByNo end:{}
2014-02-03 16:30:02,701 [qtp935945395-40] INFO  PizzashackAPIImpl              - getOrderByNo start:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8
2014-02-03 16:30:02,702 [qtp935945395-40] INFO  OrderDSImpl                    - getOrderByOrderNo start:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8 
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_,
        ordermodel0_.cust_id as cust11_4_,
        ordermodel0_.deliver_time as deliver2_4_,
        ordermodel0_.order_no as order3_4_,
        ordermodel0_.order_time as order4_4_,
        ordermodel0_.payment_remarks as payment5_4_,
        ordermodel0_.payment_status as payment6_4_,
        ordermodel0_.quantity as quantity4_,
        ordermodel0_.ship_address as ship8_4_,
        ordermodel0_.status as status4_,
        ordermodel0_.total_price as total10_4_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_no=? limit ?
2014-02-03 16:30:02,703 [qtp935945395-40] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@1eef3269[orderId=1,orderNo=6a0ad17b-f050-4fb5-964c-bd3b163b0ce8,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 16:27:35.471]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 16:30:02,704 [qtp935945395-40] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@d06c567[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 16:30:02,704 [qtp935945395-40] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 16:30:02,705 [qtp935945395-40] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@2aa1df40[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 16:30:02,706 [qtp935945395-40] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 16:30:02,706 [qtp935945395-40] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@6947f89d[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 16:30:02,707 [qtp935945395-40] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 16:30:02,707 [qtp935945395-40] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:27:35, deliverTime:null)
2014-02-03 16:30:02,707 [qtp935945395-40] INFO  OrderDSImpl                    - getOrderByOrderNo end:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:27:35, deliverTime:null) 
2014-02-03 16:30:02,707 [qtp935945395-40] INFO  PizzashackAPIImpl              - getOrderByNo end:{}
2014-02-03 16:31:17,830 [qtp935945395-61] INFO  OrderQueryController           - show start: 6a0ad17b-f050-4fb5-964c-bd3b163b0ce8
2014-02-03 16:31:17,831 [qtp935945395-61] INFO  OrderProcessQueryDSImpl        - getOrderProcessByOrderNo start:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8 
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 16:31:17,836 [qtp935945395-61] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@2694b52e[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=16:27:35,completeTime=<null>] 
2014-02-03 16:31:17,837 [qtp935945395-61] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@2694b52e[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=16:27:35,completeTime=<null>]
2014-02-03 16:31:17,837 [qtp935945395-61] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@6f0e1353[orderId=1,orderNo=6a0ad17b-f050-4fb5-964c-bd3b163b0ce8,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 16:27:35.471]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 16:31:17,840 [qtp935945395-61] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@787dcfb6[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 16:31:17,841 [qtp935945395-61] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 16:31:17,842 [qtp935945395-61] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@41ab3986[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 16:31:17,843 [qtp935945395-61] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 16:31:17,843 [qtp935945395-61] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@504dae18[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 16:31:17,844 [qtp935945395-61] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 16:31:17,844 [qtp935945395-61] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:27:35, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 16:31:17,845 [qtp935945395-61] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@640fc2ab[userId=4,username=general,password=MTIzNDU2,createTime=16:21:37]
2014-02-03 16:31:17,845 [qtp935945395-61] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 04:21:37)
2014-02-03 16:31:17,845 [qtp935945395-61] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:27:35, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 04:27:35, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 04:21:37))
2014-02-03 16:31:17,845 [qtp935945395-61] INFO  OrderProcessQueryDSImpl        - buildPendingActivity start:{}
2014-02-03 16:31:17,845 [qtp935945395-61] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 16:31:17,845 [qtp935945395-61] INFO  ActivitiFacade                 - executionId: 30, processDefinitionId: orderCoreProcess:1:11
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 16:31:17,850 [qtp935945395-61] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo start:{}
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 16:31:17,851 [qtp935945395-61] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo end:{}
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
2014-02-03 16:31:17,851 [qtp935945395-61] INFO  OrderProcessQueryDSImpl        - buildPendingActivity end:{}
2014-02-03 16:31:17,852 [qtp935945395-61] INFO  OrderProcessQueryDSImpl        - getOrderProcessByOrderNo end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:27:35, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 04:27:35, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:null), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 04:21:37)) 
2014-02-03 16:31:17,853 [qtp935945395-61] INFO  OrderQueryController           - Found user: co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:27:35, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 04:27:35, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:null), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 04:21:37))
2014-02-03 16:31:42,948 [qtp935945395-39] INFO  OrderQueryController           - showHistory start: {}
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.PROC_INST_ID_ = ?                                     
        and RES.PROC_DEF_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 16:32:03,733 [qtp935945395-37] INFO  OrderQueryController           - showHistory start: {}
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.PROC_INST_ID_ = ?                                     
        and RES.PROC_DEF_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 16:32:06,790 [qtp935945395-39] INFO  OrderQueryController           - userIndex start: {}
2014-02-03 16:32:06,790 [qtp935945395-39] INFO  OrderProcessQueryDSImpl        - getAllOrderProcesses start:{} 
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 16:32:06,794 [qtp935945395-39] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@19d8d368[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=16:27:35,completeTime=<null>]
2014-02-03 16:32:06,795 [qtp935945395-39] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@267558f9[orderId=1,orderNo=6a0ad17b-f050-4fb5-964c-bd3b163b0ce8,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 16:27:35.471]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 16:32:06,798 [qtp935945395-39] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@49260741[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 16:32:06,798 [qtp935945395-39] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 16:32:06,801 [qtp935945395-39] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@aac5b17[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 16:32:06,801 [qtp935945395-39] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 16:32:06,802 [qtp935945395-39] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@3990487a[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 16:32:06,802 [qtp935945395-39] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 16:32:06,803 [qtp935945395-39] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:27:35, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 16:32:06,803 [qtp935945395-39] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@4d00fd7b[userId=4,username=general,password=MTIzNDU2,createTime=16:21:37]
2014-02-03 16:32:06,804 [qtp935945395-39] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 04:21:37)
2014-02-03 16:32:06,804 [qtp935945395-39] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:27:35, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 04:27:35, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 04:21:37))
2014-02-03 16:32:06,804 [qtp935945395-39] INFO  OrderProcessQueryDSImpl        - getAllOrderProcesses end:{} 
2014-02-03 16:32:07,976 [qtp935945395-40] INFO  IndexController                - index: {}
2014-02-03 16:32:07,978 [qtp935945395-40] INFO  OrderProcessDSImpl             - getAllTransTaskForCurrentUser start:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:1970-01-01 04:21:37) 
2014-02-03 16:32:07,978 [qtp935945395-40] INFO  ActivitiFacade                 - getAllTasksForUser start:1
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                    
    WHERE
        RES.ASSIGNEE_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        g.*     
    from
        ACT_ID_GROUP g,
        ACT_ID_MEMBERSHIP membership     
    where
        g.ID_ = membership.GROUP_ID_       
        and membership.USER_ID_ = ?
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                   
    inner join
        ACT_RU_IDENTITYLINK I 
            on I.TASK_ID_ = RES.ID_                              
    WHERE
        RES.ASSIGNEE_ is null         
        and I.TYPE_ = 'candidate'         
        and          (
            I.USER_ID_ = ?                                             
            or                                   I.GROUP_ID_ IN             (
                ?             
            )                    
        )                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_GROUP RES             
    inner join
        ACT_ID_MEMBERSHIP M 
            on RES.ID_ = M.GROUP_ID_       
    inner join
        ACT_ID_USER U 
            on M.USER_ID_ = U.ID_            
    WHERE
        U.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                   
    inner join
        ACT_RU_IDENTITYLINK I 
            on I.TASK_ID_ = RES.ID_                              
    WHERE
        RES.ASSIGNEE_ is null         
        and I.TYPE_ = 'candidate'         
        and          (
            I.GROUP_ID_ IN             (
                ?             
            )                    
        )                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 16:32:07,993 [qtp935945395-40] INFO  OrderProcessDSImpl             - tasks size:2
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ 
    where
        orderproce0_.execution_id=?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 16:32:08,005 [qtp935945395-40] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@6663e9df[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=16:27:35,completeTime=<null>]
2014-02-03 16:32:08,005 [qtp935945395-40] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@1e0e61d[orderId=1,orderNo=6a0ad17b-f050-4fb5-964c-bd3b163b0ce8,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 16:27:35.471]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 16:32:08,006 [qtp935945395-40] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@7b9328de[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 16:32:08,006 [qtp935945395-40] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 16:32:08,008 [qtp935945395-40] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@eb01a90[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 16:32:08,008 [qtp935945395-40] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 16:32:08,008 [qtp935945395-40] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@4b9feb78[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 16:32:08,009 [qtp935945395-40] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 16:32:08,010 [qtp935945395-40] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:27:35, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 16:32:08,010 [qtp935945395-40] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@24be57b7[userId=4,username=general,password=MTIzNDU2,createTime=16:21:37]
2014-02-03 16:32:08,011 [qtp935945395-40] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 04:21:37)
2014-02-03 16:32:08,011 [qtp935945395-40] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:27:35, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 04:27:35, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 04:21:37))
2014-02-03 16:32:08,011 [qtp935945395-40] INFO  OrderProcessDSImpl             - getAllTransTaskForCurrentUser end:{} 
[INFO] restarting o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
2014-02-03 16:32:56.048:INFO:/:Destroying Spring FrameworkServlet 'dispatcher'
2014-02-03 16:32:56,048 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Closing Root WebApplicationContext: startup date [Mon Feb 03 16:21:30 NZDT 2014]; root of context hierarchy
2014-02-03 16:32:56,048 [Scanner-0      ] INFO  BusApplicationContext          - Closing org.apache.cxf.bus.spring.BusApplicationContext@7fab506b: startup date [Mon Feb 03 16:21:36 NZDT 2014]; parent: Root WebApplicationContext
2014-02-03 16:32:56,049 [Scanner-0      ] INFO  DefaultListableBeanFactory     - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@22ce147b: defining beans []; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@4c8113bf
2014-02-03 16:32:56,049 [Scanner-0      ] INFO  DefaultListableBeanFactory     - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4c8113bf: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,applicationConfiguration,webMvcContextConfiguration,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,viewConfiguration,logoutController,loginController,indexController,userController,adminIndexController,departmentController,orderController,orderQueryController,staffController,billingProcessRespTransformer,billingProcessReqTransformer,orderProcessFormatTransformer,billingVariableTransformer,billingResponseMergeProcessor,billingFormatTransformer,billingInboundProcessor,orderDuplicatedReqProcessor,orderRequestProcessor,billingProcessRoute,billingInboundWsRoute,orderProcessRoute,sleepBean,pizzashackAPIImpl,camelSpringConfig,camelJdbcIdempotentConfig,camelCxfConfig,orderProcessDSImpl,customerDSImpl,workflowDSImpl,pizzashackDSImpl,userDSImpl,orderProcessAccessor,orderProcessQueryDSImpl,staffDSImpl,orderDSImpl,departmentDSImpl,initialDataConfig,pizzashackCaculator,emailExecutionListener,endExecutionListener,caculationMergeExecutionListener,orderMainTransitionExecutionListener,toManualReviewExecutionListener,outOfBillingProcessExecutionListener,outOfCoreProcessExecutionListener,billingRespExecutionListener,customerConverter,orderProcessConverter,staffConverter,userConverter,departmentConverter,workflowConverter,orderReviewRecordConverter,orderConverter,activityDiscountRateConverter,orderDetailConverter,pizzashackDataInitialConfiguration,pizzashackItemBuilder,infrastructureContextConfiguration,activitiFacade,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0,org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0,departmentRepository,workflowRepository,orderRepository,customerRepository,staffDepartmentRepository,orderRequestHistoryRepository,activityDiscountRateRepository,orderPizzashackRepository,pizzashackRepository,userRepository,staffRepository,orderReviewRecordRepository,orderProcessRepository,viewResolver,messageSource,activeMQConnectionFactory,pooledConnectionFactory,jmsComponent,jmsTransactionManager,camelBeanPostProcessor,camelContext,custThreadPoolProfile,sqlComponent,orderJdbcMessageIdRepository,billingInboundEndpoint,loggingOutInterceptor,cxf,org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor,org.apache.cxf.bus.spring.Jsr250BeanPostProcessor,org.apache.cxf.bus.spring.BusExtensionPostProcessor,org.apache.cxf.binding.soap.SoapBindingFactory,org.apache.cxf.binding.soap.SoapTransportFactory,org.apache.cxf.binding.soap.customEditorConfigurer,setupWorkflowData,setupData,org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration,org.springframework.transaction.config.internalTransactionAdvisor,transactionAttributeSource,transactionInterceptor,dataSource,transactionManager,entityManagerFactory,placeholderConfig,processEngineConfiguration,processEngine,repositoryService,runtimeService,taskService,historyService,managementService,identityService,org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration,requestMappingHandlerMapping,mvcContentNegotiationManager,viewControllerHandlerMapping,beanNameHandlerMapping,resourceHandlerMapping,defaultServletHandlerMapping,requestMappingHandlerAdapter,mvcConversionService,mvcValidator,httpRequestHandlerAdapter,simpleControllerHandlerAdapter,handlerExceptionResolver,sessionAttributeProcessor,localeChangeInterceptor,multipartResolver,localeResolver,simpleMappingExceptionResolver]; root of factory hierarchy
2014-02-03 16:32:56,050 [Scanner-0      ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) is shutting down
2014-02-03 16:32:56,050 [Scanner-0      ] INFO  DefaultShutdownStrategy        - Starting to graceful shutdown 8 routes (timeout 300 seconds)
2014-02-03 16:32:56,053 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: cxf:bean:billingInboundEndpoint shutdown complete, was consuming from: Endpoint[cxf://bean:billingInboundEndpoint]
2014-02-03 16:32:56,053 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:orderRegularProcess shutdown complete, was consuming from: Endpoint[direct://orderRegularProcess]
2014-02-03 16:32:56,053 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:orderDuplicatedProcess shutdown complete, was consuming from: Endpoint[direct://orderDuplicatedProcess]
2014-02-03 16:32:56,396 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: orderProcessRoute shutdown complete, was consuming from: Endpoint[jms://queue:pizzashackOrderInbound]
2014-02-03 16:32:56,396 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: route1 shutdown complete, was consuming from: Endpoint[direct://doBillingIntegration]
2014-02-03 16:32:56,396 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:receiveBillingQueue shutdown complete, was consuming from: Endpoint[direct://receiveBillingQueue]
2014-02-03 16:32:56,396 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:billingIntegration shutdown complete, was consuming from: Endpoint[direct://billingIntegration]
2014-02-03 16:32:56,397 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: activitiBillingProcess shutdown complete, was consuming from: Endpoint[activiti://orderBillingProcess:billingIntegration?copyVariablesToBodyAsMap=true]
2014-02-03 16:32:56,397 [Scanner-0      ] INFO  DefaultShutdownStrategy        - Graceful shutdown of 8 routes completed in 0 seconds
2014-02-03 16:32:56,398 [Scanner-0      ] INFO  CxfEndpoint                    - shutdown the bus ... org.apache.cxf.bus.spring.SpringBus@254cb3f1
2014-02-03 16:32:56,404 [Scanner-0      ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) uptime 11 minutes
2014-02-03 16:32:56,405 [Scanner-0      ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) is shutdown in 0.354 seconds
2014-02-03 16:32:56,415 [Scanner-0      ] INFO  tainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2014-02-03 16:32:56,415 [Scanner-0      ] INFO  SchemaExport                   - HHH000227: Running hbm2ddl schema export
Hibernate: 
    alter table t_activity_discount_rate 
        drop constraint FKA400C193698FCC4
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE11193A98D65
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE111A27DDA4A
Hibernate: 
    alter table t_order 
        drop constraint FKA0C0C3C3E11F4FCB
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB0883698FCC4
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB088BBCB676E
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F33E99148D
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F3BBCB676E
Hibernate: 
    alter table t_order_request_history 
        drop constraint FK5A6B268BBCB676E
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CA6130105
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CBBCB676E
Hibernate: 
    alter table t_staff 
        drop constraint FKA0F9FF552DC32C06
Hibernate: 
    drop table t_activity_discount_rate if exists
Hibernate: 
    drop table t_customer if exists
Hibernate: 
    drop table t_dept if exists
Hibernate: 
    drop table t_dept_staff if exists
Hibernate: 
    drop table t_order if exists
Hibernate: 
    drop table t_order_pizzashack if exists
Hibernate: 
    drop table t_order_process if exists
Hibernate: 
    drop table t_order_request_history if exists
Hibernate: 
    drop table t_order_review_record if exists
Hibernate: 
    drop table t_pizzashack if exists
Hibernate: 
    drop table t_staff if exists
Hibernate: 
    drop table t_user if exists
Hibernate: 
    drop table t_workflow if exists
2014-02-03 16:32:56,429 [Scanner-0      ] INFO  SchemaExport                   - HHH000230: Schema export complete
2014-02-03 16:32:56.433:INFO:/:Closing Spring root WebApplicationContext
2014-02-03 16:32:56.434:INFO:oejsl.ELContextCleaner:Clazz: class co.nz.pizzashack.data.dto.OrderDto loaded by WebAppClassLoader=1494953301@591b2d55
2014-02-03 16:32:56.434:INFO:oejsl.ELContextCleaner:removed
2014-02-03 16:32:56.434:INFO:oejsl.ELContextCleaner:Clazz: class co.nz.pizzashack.data.dto.UserDto loaded by WebAppClassLoader=1494953301@591b2d55
2014-02-03 16:32:56.434:INFO:oejsl.ELContextCleaner:removed
2014-02-03 16:32:56.434:INFO:oejsl.ELContextCleaner:Clazz: class co.nz.pizzashack.data.dto.ProcessActivityDto loaded by WebAppClassLoader=1494953301@591b2d55
2014-02-03 16:32:56.435:INFO:oejsl.ELContextCleaner:removed
2014-02-03 16:32:56.435:INFO:oejsl.ELContextCleaner:Clazz: class co.nz.pizzashack.data.dto.OrderDetailsDto loaded by WebAppClassLoader=1494953301@591b2d55
2014-02-03 16:32:56.435:INFO:oejsl.ELContextCleaner:removed
2014-02-03 16:32:56.435:INFO:oejsl.ELContextCleaner:Clazz: class co.nz.pizzashack.data.dto.OrderProcessDto loaded by WebAppClassLoader=1494953301@591b2d55
2014-02-03 16:32:56.435:INFO:oejsl.ELContextCleaner:removed
2014-02-03 16:32:56.435:INFO:oejsl.ELContextCleaner:javax.el.BeanELResolver purged
2014-02-03 16:32:56.435:INFO:oejsh.ContextHandler:stopped o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
[INFO] Webapp source directory = /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp
[INFO] Reload Mechanic: automatic
[INFO] Classes = /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/target/classes
[INFO] Context path = /
[INFO] Tmp directory = /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/target/tmp
[INFO] Web defaults = org/eclipse/jetty/webapp/webdefault.xml
[INFO] Web overrides =  none
[INFO] web.xml file = null
[INFO] Webapp directory = /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp
2014-02-03 16:33:03.030:INFO:oejpw.PlusConfiguration:No Transaction manager found - if your webapp requires one, please configure one.
2014-02-03 16:34:38.311:INFO:/:Spring WebApplicationInitializers detected on classpath: [co.nz.pizzashack.config.PizzashackDistributorWebInitializer@23d507e]
2014-02-03 16:34:38.458:INFO:oejsh.ContextHandler:started o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
2014-02-03 16:34:38.458:INFO:oejsh.ContextHandler:started o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
2014-02-03 16:34:38.458:INFO:oejsh.ContextHandler:started o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
2014-02-03 16:34:38.458:INFO:/:Initializing Spring root WebApplicationContext
2014-02-03 16:34:38,458 [Scanner-0      ] INFO  ContextLoader                  - Root WebApplicationContext: initialization started
2014-02-03 16:34:38,459 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Refreshing Root WebApplicationContext: startup date [Mon Feb 03 16:34:38 NZDT 2014]; root of context hierarchy
2014-02-03 16:34:38,515 [Scanner-0      ] INFO  ClassPathBeanDefinitionScanner - JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2014-02-03 16:34:38,515 [Scanner-0      ] INFO  ClassPathBeanDefinitionScanner - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2014-02-03 16:34:38,516 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Registering annotated classes: [class co.nz.pizzashack.config.ApplicationConfiguration,class co.nz.pizzashack.config.WebMvcContextConfiguration]
2014-02-03 16:34:38,561 [Scanner-0      ] INFO  ClassPathBeanDefinitionScanner - JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2014-02-03 16:34:38,561 [Scanner-0      ] INFO  ClassPathBeanDefinitionScanner - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2014-02-03 16:34:39,548 [Scanner-0      ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [META-INF/cxf/cxf.xml]
2014-02-03 16:34:39,753 [Scanner-0      ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [META-INF/cxf/cxf-extension-soap.xml]
2014-02-03 16:34:39,777 [Scanner-0      ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [META-INF/cxf/cxf-servlet.xml]
2014-02-03 16:34:39,794 [Scanner-0      ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [activitiAppContext.xml]
2014-02-03 16:34:39,964 [Scanner-0      ] INFO  PropertyPlaceholderConfigurer  - Loading properties file from class path resource [activiti.properties]
2014-02-03 16:34:39,997 [Scanner-0      ] INFO  redAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2014-02-03 16:34:40,041 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'infrastructureContextConfiguration' of type [class co.nz.pizzashack.config.InfrastructureContextConfiguration$$EnhancerByCGLIB$$5fadd085] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:40,082 [Scanner-0      ] INFO  MLog                           - MLog clients using log4j logging.
2014-02-03 16:34:40,105 [Scanner-0      ] INFO  C3P0Registry                   - Initializing c3p0-0.9.1.2 [built 21-May-2007 15:04:56; debug? true; trace: 10]
2014-02-03 16:34:40,139 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'dataSource' of type [class com.mchange.v2.c3p0.ComboPooledDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:40,212 [Scanner-0      ] INFO  tainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default'
2014-02-03 16:34:40,292 [Scanner-0      ] INFO  Version                        - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2014-02-03 16:34:40,300 [Scanner-0      ] INFO  Version                        - HHH000412: Hibernate Core {4.1.4.Final}
2014-02-03 16:34:40,301 [Scanner-0      ] INFO  Environment                    - HHH000206: hibernate.properties not found
2014-02-03 16:34:40,302 [Scanner-0      ] INFO  Environment                    - HHH000021: Bytecode provider name : javassist
2014-02-03 16:34:40,317 [Scanner-0      ] INFO  Ejb3Configuration              - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2014-02-03 16:34:40,531 [Scanner-0      ] INFO  ConnectionProviderInitiator    - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2014-02-03 16:34:40,575 [Scanner-0      ] INFO  AbstractPoolBackedDataSource   - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge1508z1w7ckbny4zg6e|5d1784eb, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.h2.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge1508z1w7ckbny4zg6e|5d1784eb, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:h2:mem:pizzashackdistributor;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 600, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 2, numHelperThreads -> 3, numThreadsAwaitingCheckoutDefaultUser -> 0, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2014-02-03 16:34:40,719 [Scanner-0      ] INFO  Dialect                        - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2014-02-03 16:34:40,725 [Scanner-0      ] INFO  LobCreatorBuilder              - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2014-02-03 16:34:40,731 [Scanner-0      ] INFO  TransactionFactoryInitiator    - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2014-02-03 16:34:40,734 [Scanner-0      ] INFO  ASTQueryTranslatorFactory      - HHH000397: Using ASTQueryTranslatorFactory
2014-02-03 16:34:40,759 [Scanner-0      ] INFO  Version                        - Hibernate Validator 4.2.0.Final
2014-02-03 16:34:40,966 [Scanner-0      ] INFO  SchemaExport                   - HHH000227: Running hbm2ddl schema export
Hibernate: 
    alter table t_activity_discount_rate 
        drop constraint FKA400C193698FCC4
2014-02-03 16:34:40,976 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_activity_discount_rate drop constraint FKA400C193698FCC4
2014-02-03 16:34:40,976 [Scanner-0      ] ERROR SchemaExport                   - Table "T_ACTIVITY_DISCOUNT_RATE" not found; SQL statement:

    alter table t_activity_discount_rate 
        drop constraint FKA400C193698FCC4 [42102-160]
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE11193A98D65
2014-02-03 16:34:40,976 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_dept_staff drop constraint FKBC8AE11193A98D65
2014-02-03 16:34:40,976 [Scanner-0      ] ERROR SchemaExport                   - Table "T_DEPT_STAFF" not found; SQL statement:

    alter table t_dept_staff 
        drop constraint FKBC8AE11193A98D65 [42102-160]
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE111A27DDA4A
2014-02-03 16:34:40,977 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_dept_staff drop constraint FKBC8AE111A27DDA4A
2014-02-03 16:34:40,977 [Scanner-0      ] ERROR SchemaExport                   - Table "T_DEPT_STAFF" not found; SQL statement:

    alter table t_dept_staff 
        drop constraint FKBC8AE111A27DDA4A [42102-160]
Hibernate: 
    alter table t_order 
        drop constraint FKA0C0C3C3E11F4FCB
2014-02-03 16:34:40,978 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order drop constraint FKA0C0C3C3E11F4FCB
2014-02-03 16:34:40,978 [Scanner-0      ] ERROR SchemaExport                   - Table "T_ORDER" not found; SQL statement:

    alter table t_order 
        drop constraint FKA0C0C3C3E11F4FCB [42102-160]
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB0883698FCC4
2014-02-03 16:34:40,979 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_pizzashack drop constraint FKE8ACB0883698FCC4
2014-02-03 16:34:40,979 [Scanner-0      ] ERROR SchemaExport                   - Table "T_ORDER_PIZZASHACK" not found; SQL statement:

    alter table t_order_pizzashack 
        drop constraint FKE8ACB0883698FCC4 [42102-160]
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB088BBCB676E
2014-02-03 16:34:40,979 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_pizzashack drop constraint FKE8ACB088BBCB676E
2014-02-03 16:34:40,979 [Scanner-0      ] ERROR SchemaExport                   - Table "T_ORDER_PIZZASHACK" not found; SQL statement:

    alter table t_order_pizzashack 
        drop constraint FKE8ACB088BBCB676E [42102-160]
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F33E99148D
2014-02-03 16:34:40,980 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_process drop constraint FK6B8B15F33E99148D
2014-02-03 16:34:40,980 [Scanner-0      ] ERROR SchemaExport                   - Table "T_ORDER_PROCESS" not found; SQL statement:

    alter table t_order_process 
        drop constraint FK6B8B15F33E99148D [42102-160]
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F3BBCB676E
2014-02-03 16:34:40,981 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_process drop constraint FK6B8B15F3BBCB676E
2014-02-03 16:34:40,981 [Scanner-0      ] ERROR SchemaExport                   - Table "T_ORDER_PROCESS" not found; SQL statement:

    alter table t_order_process 
        drop constraint FK6B8B15F3BBCB676E [42102-160]
Hibernate: 
    alter table t_order_request_history 
        drop constraint FK5A6B268BBCB676E
2014-02-03 16:34:40,981 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_request_history drop constraint FK5A6B268BBCB676E
2014-02-03 16:34:40,982 [Scanner-0      ] ERROR SchemaExport                   - Table "T_ORDER_REQUEST_HISTORY" not found; SQL statement:

    alter table t_order_request_history 
        drop constraint FK5A6B268BBCB676E [42102-160]
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CA6130105
2014-02-03 16:34:40,982 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_review_record drop constraint FKFB7A439CA6130105
2014-02-03 16:34:40,982 [Scanner-0      ] ERROR SchemaExport                   - Table "T_ORDER_REVIEW_RECORD" not found; SQL statement:

    alter table t_order_review_record 
        drop constraint FKFB7A439CA6130105 [42102-160]
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CBBCB676E
2014-02-03 16:34:40,983 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_review_record drop constraint FKFB7A439CBBCB676E
2014-02-03 16:34:40,983 [Scanner-0      ] ERROR SchemaExport                   - Table "T_ORDER_REVIEW_RECORD" not found; SQL statement:

    alter table t_order_review_record 
        drop constraint FKFB7A439CBBCB676E [42102-160]
Hibernate: 
    alter table t_staff 
        drop constraint FKA0F9FF552DC32C06
2014-02-03 16:34:40,984 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_staff drop constraint FKA0F9FF552DC32C06
2014-02-03 16:34:40,984 [Scanner-0      ] ERROR SchemaExport                   - Table "T_STAFF" not found; SQL statement:

    alter table t_staff 
        drop constraint FKA0F9FF552DC32C06 [42102-160]
Hibernate: 
    drop table t_activity_discount_rate if exists
Hibernate: 
    drop table t_customer if exists
Hibernate: 
    drop table t_dept if exists
Hibernate: 
    drop table t_dept_staff if exists
Hibernate: 
    drop table t_order if exists
Hibernate: 
    drop table t_order_pizzashack if exists
Hibernate: 
    drop table t_order_process if exists
Hibernate: 
    drop table t_order_request_history if exists
Hibernate: 
    drop table t_order_review_record if exists
Hibernate: 
    drop table t_pizzashack if exists
Hibernate: 
    drop table t_staff if exists
Hibernate: 
    drop table t_user if exists
Hibernate: 
    drop table t_workflow if exists
Hibernate: 
    create table t_activity_discount_rate (
        activity_rate_id bigint generated by default as identity,
        code varchar(255),
        description varchar(255),
        effective_time timestamp,
        expire_time timestamp,
        rate decimal(19,2),
        pizzashack_id bigint,
        primary key (activity_rate_id)
    )
Hibernate: 
    create table t_customer (
        cust_id bigint generated by default as identity,
        address varchar(255),
        credits integer,
        customer_name varchar(255),
        email varchar(255),
        primary key (cust_id)
    )
Hibernate: 
    create table t_dept (
        dept_id bigint generated by default as identity,
        create_date date,
        dept_name varchar(255),
        primary key (dept_id)
    )
Hibernate: 
    create table t_dept_staff (
        staff_dept_id bigint generated by default as identity,
        join_date date,
        dept_id bigint,
        staff_id bigint,
        primary key (staff_dept_id)
    )
Hibernate: 
    create table t_order (
        order_id bigint generated by default as identity,
        deliver_time timestamp,
        order_no varchar(255),
        order_time timestamp,
        payment_remarks varchar(255),
        payment_status integer,
        quantity integer,
        ship_address varchar(255),
        status integer,
        total_price decimal(19,2),
        cust_id bigint,
        primary key (order_id)
    )
Hibernate: 
    create table t_order_pizzashack (
        order_pizza_id bigint generated by default as identity,
        qty integer,
        total_price decimal(19,2),
        order_id bigint,
        pizzashack_id bigint,
        primary key (order_pizza_id)
    )
Hibernate: 
    create table t_order_process (
        order_process_id bigint generated by default as identity,
        active_process_definition_id varchar(255),
        active_process_instance_id varchar(255),
        complete_time time,
        create_time time,
        execution_id varchar(255),
        main_process_definition_id varchar(255),
        main_process_instance_id varchar(255),
        operator_id bigint,
        order_id bigint,
        primary key (order_process_id)
    )
Hibernate: 
    create table t_order_request_history (
        message_id varchar(255) generated by default as identity,
        created_at time,
        processor_name varchar(255),
        order_id bigint,
        primary key (message_id)
    )
Hibernate: 
    create table t_order_review_record (
        review_record_id bigint generated by default as identity,
        content varchar(255),
        create_time time,
        review_status integer,
        order_id bigint,
        reviewer_id bigint,
        primary key (review_record_id)
    )
Hibernate: 
    create table t_pizzashack (
        pizzashack_id bigint generated by default as identity,
        description varchar(255),
        icon varchar(255),
        name varchar(255),
        price decimal(19,2),
        primary key (pizzashack_id)
    )
Hibernate: 
    create table t_staff (
        staff_id bigint generated by default as identity,
        create_date date,
        email varchar(255),
        first_name varchar(255),
        identity varchar(255),
        last_name varchar(255),
        level integer,
        role integer,
        user_id bigint,
        primary key (staff_id)
    )
Hibernate: 
    create table t_user (
        user_id bigint generated by default as identity,
        create_time time,
        password varchar(255),
        user_name varchar(255),
        primary key (user_id)
    )
Hibernate: 
    create table t_workflow (
        workflow_id bigint generated by default as identity,
        category varchar(255),
        create_time time,
        deploy_id varchar(255),
        workflow_name varchar(255),
        process_definition_id varchar(255),
        process_definition_key varchar(255),
        primary key (workflow_id)
    )
Hibernate: 
    alter table t_activity_discount_rate 
        add constraint FKA400C193698FCC4 
        foreign key (pizzashack_id) 
        references t_pizzashack
Hibernate: 
    alter table t_dept_staff 
        add constraint FKBC8AE11193A98D65 
        foreign key (dept_id) 
        references t_dept
Hibernate: 
    alter table t_dept_staff 
        add constraint FKBC8AE111A27DDA4A 
        foreign key (staff_id) 
        references t_staff
Hibernate: 
    alter table t_order 
        add constraint FKA0C0C3C3E11F4FCB 
        foreign key (cust_id) 
        references t_customer
Hibernate: 
    alter table t_order_pizzashack 
        add constraint FKE8ACB0883698FCC4 
        foreign key (pizzashack_id) 
        references t_pizzashack
Hibernate: 
    alter table t_order_pizzashack 
        add constraint FKE8ACB088BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_process 
        add constraint FK6B8B15F33E99148D 
        foreign key (operator_id) 
        references t_user
Hibernate: 
    alter table t_order_process 
        add constraint FK6B8B15F3BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_request_history 
        add constraint FK5A6B268BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_review_record 
        add constraint FKFB7A439CA6130105 
        foreign key (reviewer_id) 
        references t_staff
Hibernate: 
    alter table t_order_review_record 
        add constraint FKFB7A439CBBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_staff 
        add constraint FKA0F9FF552DC32C06 
        foreign key (user_id) 
        references t_user
2014-02-03 16:34:41,429 [Scanner-0      ] INFO  SchemaExport                   - HHH000230: Schema export complete
2014-02-03 16:34:41,468 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'entityManagerFactory' of type [class org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:41,498 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'entityManagerFactory' of type [class com.sun.proxy.$Proxy513] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:41,699 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'cxf' of type [class org.apache.cxf.bus.spring.SpringBus] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:41,703 [Scanner-0      ] WARN  OldSpringSupport               - Import of META-INF/cxf/cxf-extension-soap.xml has been deprecated and is unnecessary.
2014-02-03 16:34:41,709 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerByCGLIB$$e1f50b2c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:41,722 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'transactionAttributeSource' of type [class org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:41,729 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'transactionInterceptor' of type [class org.springframework.transaction.interceptor.TransactionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:41,735 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'org.springframework.transaction.config.internalTransactionAdvisor' of type [class org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:41,743 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'transactionManager' of type [class org.springframework.orm.jpa.JpaTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:41,744 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'camelJdbcIdempotentConfig' of type [class co.nz.pizzashack.config.CamelJdbcIdempotentConfig$$EnhancerByCGLIB$$c67eb6b3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:41,758 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'sqlComponent' of type [class org.apache.camel.component.sql.SqlComponent] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:41,763 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'camelCxfConfig' of type [class co.nz.pizzashack.config.CamelCxfConfig$$EnhancerByCGLIB$$f086cdd8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:41,787 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'billingInboundEndpoint' of type [class org.apache.camel.component.cxf.CxfEndpoint] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:41,808 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'billingVariableTransformer' of type [class co.nz.pizzashack.integration.mapping.BillingVariableTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:41,974 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'billingFormatTransformer' of type [class co.nz.pizzashack.integration.mapping.BillingFormatTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:41,976 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'billingResponseMergeProcessor' of type [class co.nz.pizzashack.integration.mapping.BillingResponseMergeProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:41,979 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'sleepBean' of type [class co.nz.pizzashack.integration.utils.SleepBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:41,979 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'billingProcessRoute' of type [class co.nz.pizzashack.integration.route.BillingProcessRoute] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:42,048 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'org.activiti.engine.impl.rules.RulesDeployer#2ab85492' of type [class org.activiti.engine.impl.rules.RulesDeployer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:42,049 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'processEngineConfiguration' of type [class org.activiti.spring.SpringProcessEngineConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:42,052 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'processEngine' of type [class org.activiti.spring.ProcessEngineFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,531 [Scanner-0      ] INFO  DbSqlSession                   - performing create on engine with resource org/activiti/db/create/activiti.h2.create.engine.sql
2014-02-03 16:34:43,549 [Scanner-0      ] INFO  DbSqlSession                   - performing create on history with resource org/activiti/db/create/activiti.h2.create.history.sql
2014-02-03 16:34:43,555 [Scanner-0      ] INFO  DbSqlSession                   - performing create on identity with resource org/activiti/db/create/activiti.h2.create.identity.sql
2014-02-03 16:34:43,557 [Scanner-0      ] INFO  ProcessEngineImpl              - ProcessEngine default created
2014-02-03 16:34:43,558 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'processEngine' of type [class org.activiti.engine.impl.ProcessEngineImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,564 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'runtimeService' of type [class org.activiti.engine.impl.RuntimeServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,568 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'taskService' of type [class org.activiti.engine.impl.TaskServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,573 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'historyService' of type [class org.activiti.engine.impl.HistoryServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,578 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'repositoryService' of type [class org.activiti.engine.impl.RepositoryServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,583 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'managementService' of type [class org.activiti.engine.impl.ManagementServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,587 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'identityService' of type [class org.activiti.engine.impl.IdentityServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,587 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'activitiFacade' of type [class co.nz.pizzashack.wf.ActivitiFacade] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,593 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'userConverter' of type [class co.nz.pizzashack.data.converter.UserConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,609 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,609 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,612 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,622 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#1' of type [class com.sun.proxy.$Proxy520] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,679 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'workflowRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,711 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'workflowRepository' of type [class com.sun.proxy.$Proxy521] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,714 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#2' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,714 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#2' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,714 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#2' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,715 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#3' of type [class com.sun.proxy.$Proxy520] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,723 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'pizzashackRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,732 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'pizzashackRepository' of type [class com.sun.proxy.$Proxy524] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,734 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#4' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,734 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#4' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,735 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#4' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,735 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#5' of type [class com.sun.proxy.$Proxy520] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,743 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,748 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessRepository' of type [class com.sun.proxy.$Proxy525] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,750 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#6' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,750 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#6' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,750 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#6' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,750 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#7' of type [class com.sun.proxy.$Proxy520] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,759 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'userRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,762 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'userRepository' of type [class com.sun.proxy.$Proxy526] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,764 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#8' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,764 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#8' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,764 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#8' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,765 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#9' of type [class com.sun.proxy.$Proxy520] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,773 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,776 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderRepository' of type [class com.sun.proxy.$Proxy527] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,805 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'customerConverter' of type [class co.nz.pizzashack.data.converter.CustomerConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,811 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderDetailConverter' of type [class co.nz.pizzashack.data.converter.OrderDetailConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,811 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderConverter' of type [class co.nz.pizzashack.data.converter.OrderConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,812 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessConverter' of type [class co.nz.pizzashack.data.converter.OrderProcessConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,816 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#10' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,816 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#10' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,817 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#10' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,817 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#11' of type [class com.sun.proxy.$Proxy520] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,826 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'departmentRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,829 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'departmentRepository' of type [class com.sun.proxy.$Proxy528] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,830 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessAccessor' of type [class co.nz.pizzashack.ds.OrderProcessAccessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,835 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderReviewRecordConverter' of type [class co.nz.pizzashack.data.converter.OrderReviewRecordConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,836 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#12' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,837 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#12' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,837 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#12' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,837 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#13' of type [class com.sun.proxy.$Proxy520] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,845 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderReviewRecordRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,849 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderReviewRecordRepository' of type [class com.sun.proxy.$Proxy529] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,851 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#14' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,851 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#14' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,851 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#14' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,852 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#15' of type [class com.sun.proxy.$Proxy520] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,860 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderPizzashackRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,863 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderPizzashackRepository' of type [class com.sun.proxy.$Proxy530] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,865 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#16' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,865 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#16' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,866 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#16' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,866 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#17' of type [class com.sun.proxy.$Proxy520] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,873 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'customerRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,876 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'customerRepository' of type [class com.sun.proxy.$Proxy531] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,877 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessDSImpl' of type [class co.nz.pizzashack.ds.OrderProcessDSImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,883 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'billingInboundProcessor' of type [class co.nz.pizzashack.integration.processor.BillingInboundProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,884 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'billingInboundWsRoute' of type [class co.nz.pizzashack.integration.route.BillingInboundWsRoute] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,902 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderJdbcMessageIdRepository' of type [class org.apache.camel.processor.idempotent.jdbc.JdbcMessageIdRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,909 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessFormatTransformer' of type [class co.nz.pizzashack.integration.mapping.OrderProcessFormatTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,918 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#18' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,918 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#18' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,918 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#18' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,919 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#19' of type [class com.sun.proxy.$Proxy520] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,925 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderRequestHistoryRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,929 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderRequestHistoryRepository' of type [class com.sun.proxy.$Proxy536] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,930 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderRequestProcessor' of type [class co.nz.pizzashack.integration.processor.OrderRequestProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,933 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderDuplicatedReqProcessor' of type [class co.nz.pizzashack.integration.processor.OrderDuplicatedReqProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,933 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessRoute' of type [class co.nz.pizzashack.integration.route.OrderProcessRoute] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:44,022 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'activeMQConnectionFactory' of type [class org.apache.activemq.ActiveMQConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:44,175 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'pooledConnectionFactory' of type [class org.apache.activemq.pool.PooledConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:44,197 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'jmsTransactionManager' of type [class org.springframework.jms.connection.JmsTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:44,207 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'jmsComponent' of type [class org.apache.camel.component.jms.JmsComponent] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:44,212 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'camelSpringConfig' of type [class co.nz.pizzashack.config.CamelSpringConfig$$EnhancerByCGLIB$$3006c46c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:44,248 [Scanner-0      ] INFO  DefaultListableBeanFactory     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@7e9e7b19: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,applicationConfiguration,webMvcContextConfiguration,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,viewConfiguration,logoutController,loginController,indexController,userController,adminIndexController,departmentController,orderController,orderQueryController,staffController,billingProcessRespTransformer,billingProcessReqTransformer,orderProcessFormatTransformer,billingVariableTransformer,billingResponseMergeProcessor,billingFormatTransformer,billingInboundProcessor,orderDuplicatedReqProcessor,orderRequestProcessor,billingProcessRoute,billingInboundWsRoute,orderProcessRoute,sleepBean,pizzashackAPIImpl,camelSpringConfig,camelJdbcIdempotentConfig,camelCxfConfig,orderProcessDSImpl,customerDSImpl,workflowDSImpl,pizzashackDSImpl,userDSImpl,orderProcessAccessor,orderProcessQueryDSImpl,staffDSImpl,orderDSImpl,departmentDSImpl,initialDataConfig,pizzashackCaculator,emailExecutionListener,endExecutionListener,caculationMergeExecutionListener,orderMainTransitionExecutionListener,toManualReviewExecutionListener,outOfBillingProcessExecutionListener,outOfCoreProcessExecutionListener,billingRespExecutionListener,customerConverter,orderProcessConverter,staffConverter,userConverter,departmentConverter,workflowConverter,orderReviewRecordConverter,orderConverter,activityDiscountRateConverter,orderDetailConverter,pizzashackDataInitialConfiguration,pizzashackItemBuilder,infrastructureContextConfiguration,activitiFacade,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0,org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0,orderReviewRecordRepository,userRepository,pizzashackRepository,staffRepository,workflowRepository,orderPizzashackRepository,customerRepository,activityDiscountRateRepository,orderRepository,orderProcessRepository,departmentRepository,orderRequestHistoryRepository,staffDepartmentRepository,viewResolver,messageSource,activeMQConnectionFactory,pooledConnectionFactory,jmsComponent,jmsTransactionManager,camelBeanPostProcessor,camelContext,custThreadPoolProfile,sqlComponent,orderJdbcMessageIdRepository,billingInboundEndpoint,loggingOutInterceptor,cxf,org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor,org.apache.cxf.bus.spring.Jsr250BeanPostProcessor,org.apache.cxf.bus.spring.BusExtensionPostProcessor,org.apache.cxf.binding.soap.SoapBindingFactory,org.apache.cxf.binding.soap.SoapTransportFactory,org.apache.cxf.binding.soap.customEditorConfigurer,setupWorkflowData,setupData,org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration,org.springframework.transaction.config.internalTransactionAdvisor,transactionAttributeSource,transactionInterceptor,dataSource,transactionManager,entityManagerFactory,placeholderConfig,processEngineConfiguration,processEngine,repositoryService,runtimeService,taskService,historyService,managementService,identityService,org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration,requestMappingHandlerMapping,mvcContentNegotiationManager,viewControllerHandlerMapping,beanNameHandlerMapping,resourceHandlerMapping,defaultServletHandlerMapping,requestMappingHandlerAdapter,mvcConversionService,mvcValidator,httpRequestHandlerAdapter,simpleControllerHandlerAdapter,handlerExceptionResolver,sessionAttributeProcessor,localeChangeInterceptor,multipartResolver,localeResolver,simpleMappingExceptionResolver]; root of factory hierarchy
2014-02-03 16:34:44,634 [Scanner-0      ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) is starting
2014-02-03 16:34:44,634 [Scanner-0      ] INFO  ManagedManagementStrategy      - JMX is enabled
2014-02-03 16:34:44,700 [Scanner-0      ] INFO  DefaultTypeConverter           - Loaded 194 type converters
Hibernate: 
    SELECT
        1 
    FROM
        T_ORDER_REQUEST_HISTORY 
    WHERE
        1 = 0
2014-02-03 16:34:44,894 [Scanner-0      ] INFO  SpringCamelContext             - StreamCaching is not in use. If using streams then its recommended to enable stream caching. See more details at http://camel.apache.org/stream-caching.html
2014-02-03 16:34:44,993 [Scanner-0      ] INFO  BusApplicationContext          - Refreshing org.apache.cxf.bus.spring.BusApplicationContext@2c038d57: startup date [Mon Feb 03 16:34:44 NZDT 2014]; parent: Root WebApplicationContext
2014-02-03 16:34:45,015 [Scanner-0      ] INFO  DefaultListableBeanFactory     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2536589c: defining beans []; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@7e9e7b19
2014-02-03 16:34:45,027 [Scanner-0      ] INFO  ReflectionServiceFactoryBean   - Creating Service {http://ws.integration.pizzashack.nz.co/}BillingProcessWebServicesService from class co.nz.pizzashack.integration.ws.BillingProcessWebServices
2014-02-03 16:34:45,397 [Scanner-0      ] INFO  ServerImpl                     - Setting the server's publish address to be /billingWs
2014-02-03 16:34:45,413 [Scanner-0      ] INFO  SpringCamelContext             - Route: activitiBillingProcess started and consuming from: Endpoint[activiti://orderBillingProcess:billingIntegration?copyVariablesToBodyAsMap=true]
2014-02-03 16:34:45,414 [Scanner-0      ] INFO  SpringCamelContext             - Route: direct:billingIntegration started and consuming from: Endpoint[direct://billingIntegration]
2014-02-03 16:34:45,415 [Scanner-0      ] INFO  SpringCamelContext             - Route: direct:receiveBillingQueue started and consuming from: Endpoint[direct://receiveBillingQueue]
2014-02-03 16:34:45,415 [Scanner-0      ] INFO  SpringCamelContext             - Route: route1 started and consuming from: Endpoint[direct://doBillingIntegration]
2014-02-03 16:34:45,420 [Scanner-0      ] INFO  SpringCamelContext             - Route: orderProcessRoute started and consuming from: Endpoint[jms://queue:pizzashackOrderInbound]
2014-02-03 16:34:45,421 [Scanner-0      ] INFO  SpringCamelContext             - Route: direct:orderDuplicatedProcess started and consuming from: Endpoint[direct://orderDuplicatedProcess]
2014-02-03 16:34:45,422 [Scanner-0      ] INFO  SpringCamelContext             - Route: direct:orderRegularProcess started and consuming from: Endpoint[direct://orderRegularProcess]
2014-02-03 16:34:45,424 [Scanner-0      ] INFO  SpringCamelContext             - Route: cxf:bean:billingInboundEndpoint started and consuming from: Endpoint[cxf://bean:billingInboundEndpoint]
2014-02-03 16:34:45,432 [Scanner-0      ] INFO  SpringCamelContext             - Total 8 routes, of which 8 is started.
2014-02-03 16:34:45,434 [Scanner-0      ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) started in 0.800 seconds
2014-02-03 16:34:45,458 [Scanner-0      ] INFO  WorkflowInitialDataSetup       - initialize start:{}
2014-02-03 16:34:45,469 [Scanner-0      ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 16:34:45,469 [Scanner-0      ] INFO  UserDSImpl                     - usernamedavid
2014-02-03 16:34:45,469 [Scanner-0      ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 16:34:45,637 [Scanner-0      ] INFO  UserDSImpl                     - userId:1 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 16:34:45,684 [Scanner-0      ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@1721d79[userId=1,username=david,password=MTIzNDU2,createTime=Mon Feb 03 16:34:45 NZDT 2014]
2014-02-03 16:34:45,729 [Scanner-0      ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-03 03:34:45)
2014-02-03 16:34:45,729 [Scanner-0      ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-03 03:34:45)
2014-02-03 16:34:45,731 [Scanner-0      ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 16:34:45,731 [Scanner-0      ] INFO  UserDSImpl                     - usernamebrad
2014-02-03 16:34:45,731 [Scanner-0      ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 16:34:45,734 [Scanner-0      ] INFO  UserDSImpl                     - userId:2 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 16:34:45,735 [Scanner-0      ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@1834d38a[userId=2,username=brad,password=MTIzNDU2,createTime=Mon Feb 03 16:34:45 NZDT 2014]
2014-02-03 16:34:45,736 [Scanner-0      ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-03 03:34:45)
2014-02-03 16:34:45,736 [Scanner-0      ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-03 03:34:45)
2014-02-03 16:34:45,736 [Scanner-0      ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 16:34:45,736 [Scanner-0      ] INFO  UserDSImpl                     - usernamejohn
2014-02-03 16:34:45,736 [Scanner-0      ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 16:34:45,739 [Scanner-0      ] INFO  UserDSImpl                     - userId:3 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 16:34:45,740 [Scanner-0      ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@29d1f8f9[userId=3,username=john,password=MTIzNDU2,createTime=Mon Feb 03 16:34:45 NZDT 2014]
2014-02-03 16:34:45,741 [Scanner-0      ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-03 03:34:45)
2014-02-03 16:34:45,741 [Scanner-0      ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-03 03:34:45)
2014-02-03 16:34:45,741 [Scanner-0      ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 16:34:45,741 [Scanner-0      ] INFO  UserDSImpl                     - usernamegeneral
2014-02-03 16:34:45,741 [Scanner-0      ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 16:34:45,744 [Scanner-0      ] INFO  UserDSImpl                     - userId:4 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 16:34:45,746 [Scanner-0      ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@7dce4f28[userId=4,username=general,password=MTIzNDU2,createTime=Mon Feb 03 16:34:45 NZDT 2014]
2014-02-03 16:34:45,746 [Scanner-0      ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:2014-02-03 03:34:45)
2014-02-03 16:34:45,746 [Scanner-0      ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:2014-02-03 03:34:45)
2014-02-03 16:34:45,757 [Scanner-0      ] INFO  DepartmentDSImpl               - createDepartment start:co.nz.pizzashack.data.dto.DepartmentDto(deptId:null, deptName:Order manager, createDate:null) 
Hibernate: 
    select
        department0_.dept_id as dept1_8_,
        department0_.create_date as create2_8_,
        department0_.dept_name as dept3_8_ 
    from
        t_dept department0_ 
    where
        department0_.dept_name=? limit ?
2014-02-03 16:34:45,762 [Scanner-0      ] INFO  DepartmentConverter            - toModel start:{} co.nz.pizzashack.data.dto.DepartmentDto(deptId:null, deptName:Order manager, createDate:null)
2014-02-03 16:34:45,766 [Scanner-0      ] INFO  DepartmentConverter            - toModel end:{} co.nz.pizzashack.data.model.DepartmentModel@59eb9078[deptId=<null>,deptName=Order manager,createDate=<null>,staffDepartments=<null>]
Hibernate: 
    insert 
    into
        t_dept
        (dept_id, create_date, dept_name) 
    values
        (null, ?, ?)
Hibernate: 
    insert 
    into
        ACT_ID_GROUP
        (ID_, REV_, NAME_, TYPE_)     
    values
        (       ?,       1,        ?,       ?     )
2014-02-03 16:34:45,773 [Scanner-0      ] INFO  DepartmentConverter            - toDto start:{} co.nz.pizzashack.data.model.DepartmentModel@59eb9078[deptId=1,deptName=Order manager,createDate=Mon Feb 03 16:34:45 NZDT 2014,staffDepartments=<null>]
2014-02-03 16:34:45,774 [Scanner-0      ] INFO  DepartmentConverter            - toDto end:{} co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-03)
2014-02-03 16:34:45,774 [Scanner-0      ] INFO  DepartmentDSImpl               - createDepartment end:co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-03) 
2014-02-03 16:34:45,775 [Scanner-0      ] INFO  WorkflowInitialDataSetup       - department:co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-03) 
2014-02-03 16:34:45,795 [Scanner-0      ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:null, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-03 03:34:45)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-02-03 16:34:45,802 [Scanner-0      ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:null, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-03 03:34:45))
2014-02-03 16:34:45,820 [Scanner-0      ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@749a6e02[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@46ac811c[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-02-03 16:34:45,864 [Scanner-0      ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@749a6e02[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@46ac811c[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=Mon Feb 03 16:34:45 NZDT 2014] 
2014-02-03 16:34:45,864 [Scanner-0      ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = ?
Hibernate: 
    update
        ACT_GE_PROPERTY      
    SET
        REV_ = ?,
        VALUE_ = ?      
    where
        NAME_ = ?       
        and REV_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-02-03 16:34:45,886 [Scanner-0      ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-02-03 16:34:45,893 [Scanner-0      ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@749a6e02[staffId=1,individual=co.nz.pizzashack.data.model.IndividualModel@46ac811c[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=Mon Feb 03 16:34:45 NZDT 2014]
2014-02-03 16:34:45,900 [Scanner-0      ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:1, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:2014-02-03, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-02-03 16:34:45,901 [Scanner-0      ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:1, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:2014-02-03, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-02-03 16:34:45,905 [Scanner-0      ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:null, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-03 03:34:45)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-02-03 16:34:45,906 [Scanner-0      ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:null, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-03 03:34:45))
2014-02-03 16:34:45,907 [Scanner-0      ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@557d410a[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@1239235f[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-02-03 16:34:45,915 [Scanner-0      ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@557d410a[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@1239235f[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=Mon Feb 03 16:34:45 NZDT 2014] 
2014-02-03 16:34:45,915 [Scanner-0      ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-02-03 16:34:45,919 [Scanner-0      ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-02-03 16:34:45,922 [Scanner-0      ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@557d410a[staffId=2,individual=co.nz.pizzashack.data.model.IndividualModel@1239235f[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=Mon Feb 03 16:34:45 NZDT 2014]
2014-02-03 16:34:45,923 [Scanner-0      ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:2, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:2014-02-03, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-02-03 16:34:45,923 [Scanner-0      ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:2, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:2014-02-03, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-02-03 16:34:45,924 [Scanner-0      ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:null, departments:null, role:manager, level:junior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-03 03:34:45)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-02-03 16:34:45,926 [Scanner-0      ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:null, departments:null, role:manager, level:junior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-03 03:34:45))
2014-02-03 16:34:45,926 [Scanner-0      ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@2225d77f[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@6266e45c[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-02-03 16:34:45,932 [Scanner-0      ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@2225d77f[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@6266e45c[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=Mon Feb 03 16:34:45 NZDT 2014] 
2014-02-03 16:34:45,932 [Scanner-0      ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-02-03 16:34:45,938 [Scanner-0      ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-02-03 16:34:45,941 [Scanner-0      ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@2225d77f[staffId=3,individual=co.nz.pizzashack.data.model.IndividualModel@6266e45c[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=Mon Feb 03 16:34:45 NZDT 2014]
2014-02-03 16:34:45,942 [Scanner-0      ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:3, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:2014-02-03, departments:null, role:manager, level:null, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-02-03 16:34:45,942 [Scanner-0      ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:3, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:2014-02-03, departments:null, role:manager, level:null, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-02-03 16:34:45,943 [Scanner-0      ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-02-03 16:34:45,952 [Scanner-0      ] INFO  BpmnDeployer                   - Processing resource bpmn/OrderBillingProcess.bpmn20.xml
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-02-03 16:34:46,144 [Scanner-0      ] INFO  RulesDeployer                  - Processing resource bpmn/OrderBillingProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 16:34:46,154 [Scanner-0      ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderBillingProcess:1:7]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-02-03 16:34:46,160 [Scanner-0      ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@ca7e889[wfId=1,name=orderBillingProcess,deployId=4,processDefinitionKey=orderBillingProcess,processDefinitionId=orderBillingProcess:1:7,createTime=Mon Feb 03 16:34:45 NZDT 2014]
2014-02-03 16:34:46,172 [Scanner-0      ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-02-03 03:34:45)
2014-02-03 16:34:46,172 [Scanner-0      ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-02-03 03:34:45)
2014-02-03 16:34:46,173 [Scanner-0      ] INFO  WorkflowInitialDataSetup       - deploy billing process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-02-03 03:34:45) 
2014-02-03 16:34:46,173 [Scanner-0      ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-02-03 16:34:46,175 [Scanner-0      ] INFO  BpmnDeployer                   - Processing resource bpmn/OrdercoreProcess.bpmn20.xml
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-02-03 16:34:46,276 [Scanner-0      ] INFO  RulesDeployer                  - Processing resource bpmn/OrdercoreProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 16:34:46,283 [Scanner-0      ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderCoreProcess:1:11]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-02-03 16:34:46,284 [Scanner-0      ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@3e7cc289[wfId=2,name=orderCoreProcess,deployId=8,processDefinitionKey=orderCoreProcess,processDefinitionId=orderCoreProcess:1:11,createTime=Mon Feb 03 16:34:46 NZDT 2014]
2014-02-03 16:34:46,285 [Scanner-0      ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-02-03 03:34:46)
2014-02-03 16:34:46,285 [Scanner-0      ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-02-03 03:34:46)
2014-02-03 16:34:46,285 [Scanner-0      ] INFO  WorkflowInitialDataSetup       - deploy core process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-02-03 03:34:46) 
2014-02-03 16:34:46,286 [Scanner-0      ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-02-03 16:34:46,288 [Scanner-0      ] INFO  BpmnDeployer                   - Processing resource bpmn/OrderlocalProcess.bpmn20.xml
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-02-03 16:34:46,451 [Scanner-0      ] INFO  RulesDeployer                  - Processing resource bpmn/OrderlocalProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 16:34:46,459 [Scanner-0      ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderlocalProcess:1:15]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-02-03 16:34:46,460 [Scanner-0      ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@47b9cdb[wfId=3,name=orderlocalProcess,deployId=12,processDefinitionKey=orderlocalProcess,processDefinitionId=orderlocalProcess:1:15,createTime=Mon Feb 03 16:34:46 NZDT 2014]
2014-02-03 16:34:46,461 [Scanner-0      ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 03:34:46)
2014-02-03 16:34:46,461 [Scanner-0      ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 03:34:46)
2014-02-03 16:34:46,461 [Scanner-0      ] INFO  WorkflowInitialDataSetup       - deploy local main process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 03:34:46) 
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
2014-02-03 16:34:46,616 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/logout],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LogoutController.logout(javax.servlet.http.HttpSession)
2014-02-03 16:34:46,616 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/login],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LoginController.showLoginPage(org.springframework.ui.Model)
2014-02-03 16:34:46,616 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/login],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LoginController.handleLogin(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws co.nz.pizzashack.AuthenticationException
2014-02-03 16:34:46,617 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/index],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.IndexController.index(org.springframework.ui.Model,co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-02-03 16:34:46,618 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/createUser],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public co.nz.pizzashack.data.dto.UserDto co.nz.pizzashack.controller.UserController.createUser(co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-02-03 16:34:46,618 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/{userId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:34:46,618 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:34:46,619 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/update/{userId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:34:46,619 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/{userId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.deleteUser(java.lang.Long) throws java.lang.Exception
2014-02-03 16:34:46,619 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/check/{userName}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.checkUser(java.lang.String) throws java.lang.Exception
2014-02-03 16:34:46,619 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:34:46,619 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/search],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.search(co.nz.pizzashack.data.dto.UserDto,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:34:46,619 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.create(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 16:34:46,619 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.update(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 16:34:46,620 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/adminIndex],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.AdminIndexController.index(org.springframework.ui.Model,co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-02-03 16:34:46,621 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/{deptId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:34:46,621 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/selectdepts],methods=[GET],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.util.Set<co.nz.pizzashack.data.dto.DepartmentDto> co.nz.pizzashack.controller.DepartmentController.select() throws java.lang.Exception
2014-02-03 16:34:46,621 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:34:46,621 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/update/{deptId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:34:46,621 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:34:46,621 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/{deptId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.delete(java.lang.Long) throws java.lang.Exception
2014-02-03 16:34:46,622 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/search],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.search(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:34:46,622 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.create(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 16:34:46,622 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.update(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 16:34:46,622 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/{orderProcessId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.showOrderProcess(java.lang.Long,org.springframework.ui.Model,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-02-03 16:34:46,623 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/claimReview/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.claimReviewTask(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-02-03 16:34:46,623 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/review],methods=[POST],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.reviewOrder(co.nz.pizzashack.data.dto.OrderReviewRecordDto,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-02-03 16:34:46,623 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderQuery/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderQueryController.show(java.lang.String,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:34:46,623 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderQuery/showHistory/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.util.Set<co.nz.pizzashack.data.dto.ProcessActivityDto> co.nz.pizzashack.controller.OrderQueryController.showHistory(java.lang.String) throws java.lang.Exception
2014-02-03 16:34:46,624 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderQuery/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderQueryController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:34:46,624 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/{staffId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:34:46,625 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:34:46,625 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/update/{staffId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:34:46,626 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:34:46,626 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/{staffId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.delete(java.lang.Long) throws java.lang.Exception
2014-02-03 16:34:46,626 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.create(co.nz.pizzashack.data.dto.StaffDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 16:34:46,626 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.update(co.nz.pizzashack.data.dto.StaffDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 16:34:46,659 [Scanner-0      ] INFO  SimpleUrlHandlerMapping        - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2014-02-03 16:34:46,661 [Scanner-0      ] INFO  SimpleUrlHandlerMapping        - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler]
2014-02-03 16:34:46,892 [Scanner-0      ] INFO  ContextLoader                  - Root WebApplicationContext: initialization completed in 8433 ms
2014-02-03 16:34:46.892:INFO:oejsh.ContextHandler:started o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
Feb 03, 2014 4:34:46 PM com.sun.jersey.api.core.PackagesResourceConfig init
INFO: Scanning for root resource and provider classes in the packages:
  co.nz.pizzashack.integration.api
Feb 03, 2014 4:34:46 PM com.sun.jersey.api.core.ScanningResourceConfig logClasses
INFO: Root resource classes found:
  class co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl
Feb 03, 2014 4:34:46 PM com.sun.jersey.api.core.ScanningResourceConfig init
INFO: No provider classes found.
Feb 03, 2014 4:34:46 PM com.sun.jersey.spi.spring.container.servlet.SpringServlet getContext
INFO: Using default applicationContext
Feb 03, 2014 4:34:46 PM com.sun.jersey.spi.spring.container.SpringComponentProviderFactory registerSpringBeans
INFO: Registering Spring bean, pizzashackAPIImpl, of type co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl as a root resource class
Feb 03, 2014 4:34:46 PM com.sun.jersey.server.impl.application.WebApplicationImpl _initiate
INFO: Initiating Jersey application, version 'Jersey: 1.17.1 02/28/2013 12:47 PM'
Feb 03, 2014 4:34:47 PM com.sun.jersey.spi.inject.Errors processErrorMessages
WARNING: The following warnings have been detected with resource and/or provider classes:
  WARNING: A HTTP GET method, public javax.ws.rs.core.Response co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl.getOrderProcessByOrderNo(java.lang.String), should not consume any entity.
Feb 03, 2014 4:34:47 PM com.sun.jersey.spi.spring.container.servlet.SpringServlet getContext
INFO: Using default applicationContext
Feb 03, 2014 4:34:47 PM com.sun.jersey.spi.spring.container.SpringComponentProviderFactory registerSpringBeans
INFO: Registering Spring bean, pizzashackAPIImpl, of type co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl as a root resource class
Feb 03, 2014 4:34:47 PM com.sun.jersey.server.impl.application.WebApplicationImpl _initiate
INFO: Initiating Jersey application, version 'Jersey: 1.17.1 02/28/2013 12:47 PM'
Feb 03, 2014 4:34:47 PM com.sun.jersey.spi.inject.Errors processErrorMessages
WARNING: The following warnings have been detected with resource and/or provider classes:
  WARNING: A HTTP GET method, public javax.ws.rs.core.Response co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl.getOrderProcessByOrderNo(java.lang.String), should not consume any entity.
2014-02-03 16:34:47.431:INFO:/:Initializing Spring FrameworkServlet 'dispatcher'
2014-02-03 16:34:47,431 [Scanner-0      ] INFO  DispatcherServlet              - FrameworkServlet 'dispatcher': initialization started
2014-02-03 16:34:47,444 [Scanner-0      ] INFO  DispatcherServlet              - FrameworkServlet 'dispatcher': initialization completed in 13 ms
[INFO] Restart completed at Mon Feb 03 16:34:47 NZDT 2014
^C2014-02-03 16:35:20.146:INFO:/:Destroying Spring FrameworkServlet 'dispatcher'
2014-02-03 16:35:20,146 [Thread-1       ] INFO  ionConfigWebApplicationContext - Closing Root WebApplicationContext: startup date [Mon Feb 03 16:34:38 NZDT 2014]; root of context hierarchy
2014-02-03 16:35:20,148 [Thread-1       ] INFO  BusApplicationContext          - Closing org.apache.cxf.bus.spring.BusApplicationContext@2c038d57: startup date [Mon Feb 03 16:34:44 NZDT 2014]; parent: Root WebApplicationContext
2014-02-03 16:35:20,148 [Thread-1       ] INFO  DefaultListableBeanFactory     - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2536589c: defining beans []; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@7e9e7b19
2014-02-03 16:35:20,149 [Thread-1       ] INFO  DefaultListableBeanFactory     - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@7e9e7b19: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,applicationConfiguration,webMvcContextConfiguration,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,viewConfiguration,logoutController,loginController,indexController,userController,adminIndexController,departmentController,orderController,orderQueryController,staffController,billingProcessRespTransformer,billingProcessReqTransformer,orderProcessFormatTransformer,billingVariableTransformer,billingResponseMergeProcessor,billingFormatTransformer,billingInboundProcessor,orderDuplicatedReqProcessor,orderRequestProcessor,billingProcessRoute,billingInboundWsRoute,orderProcessRoute,sleepBean,pizzashackAPIImpl,camelSpringConfig,camelJdbcIdempotentConfig,camelCxfConfig,orderProcessDSImpl,customerDSImpl,workflowDSImpl,pizzashackDSImpl,userDSImpl,orderProcessAccessor,orderProcessQueryDSImpl,staffDSImpl,orderDSImpl,departmentDSImpl,initialDataConfig,pizzashackCaculator,emailExecutionListener,endExecutionListener,caculationMergeExecutionListener,orderMainTransitionExecutionListener,toManualReviewExecutionListener,outOfBillingProcessExecutionListener,outOfCoreProcessExecutionListener,billingRespExecutionListener,customerConverter,orderProcessConverter,staffConverter,userConverter,departmentConverter,workflowConverter,orderReviewRecordConverter,orderConverter,activityDiscountRateConverter,orderDetailConverter,pizzashackDataInitialConfiguration,pizzashackItemBuilder,infrastructureContextConfiguration,activitiFacade,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0,org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0,orderReviewRecordRepository,userRepository,pizzashackRepository,staffRepository,workflowRepository,orderPizzashackRepository,customerRepository,activityDiscountRateRepository,orderRepository,orderProcessRepository,departmentRepository,orderRequestHistoryRepository,staffDepartmentRepository,viewResolver,messageSource,activeMQConnectionFactory,pooledConnectionFactory,jmsComponent,jmsTransactionManager,camelBeanPostProcessor,camelContext,custThreadPoolProfile,sqlComponent,orderJdbcMessageIdRepository,billingInboundEndpoint,loggingOutInterceptor,cxf,org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor,org.apache.cxf.bus.spring.Jsr250BeanPostProcessor,org.apache.cxf.bus.spring.BusExtensionPostProcessor,org.apache.cxf.binding.soap.SoapBindingFactory,org.apache.cxf.binding.soap.SoapTransportFactory,org.apache.cxf.binding.soap.customEditorConfigurer,setupWorkflowData,setupData,org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration,org.springframework.transaction.config.internalTransactionAdvisor,transactionAttributeSource,transactionInterceptor,dataSource,transactionManager,entityManagerFactory,placeholderConfig,processEngineConfiguration,processEngine,repositoryService,runtimeService,taskService,historyService,managementService,identityService,org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration,requestMappingHandlerMapping,mvcContentNegotiationManager,viewControllerHandlerMapping,beanNameHandlerMapping,resourceHandlerMapping,defaultServletHandlerMapping,requestMappingHandlerAdapter,mvcConversionService,mvcValidator,httpRequestHandlerAdapter,simpleControllerHandlerAdapter,handlerExceptionResolver,sessionAttributeProcessor,localeChangeInterceptor,multipartResolver,localeResolver,simpleMappingExceptionResolver]; root of factory hierarchy
2014-02-03 16:35:20,151 [Thread-1       ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) is shutting down
2014-02-03 16:35:20,152 [Thread-1       ] INFO  DefaultShutdownStrategy        - Starting to graceful shutdown 8 routes (timeout 300 seconds)
2014-02-03 16:35:20,157 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: cxf:bean:billingInboundEndpoint shutdown complete, was consuming from: Endpoint[cxf://bean:billingInboundEndpoint]
2014-02-03 16:35:20,157 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:orderRegularProcess shutdown complete, was consuming from: Endpoint[direct://orderRegularProcess]
2014-02-03 16:35:20,157 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:orderDuplicatedProcess shutdown complete, was consuming from: Endpoint[direct://orderDuplicatedProcess]
2014-02-03 16:35:20,519 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: orderProcessRoute shutdown complete, was consuming from: Endpoint[jms://queue:pizzashackOrderInbound]
2014-02-03 16:35:20,519 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: route1 shutdown complete, was consuming from: Endpoint[direct://doBillingIntegration]
2014-02-03 16:35:20,519 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:receiveBillingQueue shutdown complete, was consuming from: Endpoint[direct://receiveBillingQueue]
2014-02-03 16:35:20,519 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:billingIntegration shutdown complete, was consuming from: Endpoint[direct://billingIntegration]
2014-02-03 16:35:20,520 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: activitiBillingProcess shutdown complete, was consuming from: Endpoint[activiti://orderBillingProcess:billingIntegration?copyVariablesToBodyAsMap=true]
2014-02-03 16:35:20,520 [Thread-1       ] INFO  DefaultShutdownStrategy        - Graceful shutdown of 8 routes completed in 0 seconds
2014-02-03 16:35:20,521 [Thread-1       ] INFO  CxfEndpoint                    - shutdown the bus ... org.apache.cxf.bus.spring.SpringBus@1e610a19
2014-02-03 16:35:20,530 [Thread-1       ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) uptime 35.898 seconds
2014-02-03 16:35:20,530 [Thread-1       ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) is shutdown in 0.379 seconds
2014-02-03 16:35:20,539 [Thread-1       ] INFO  tainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2014-02-03 16:35:20,539 [Thread-1       ] INFO  SchemaExport                   - HHH000227: Running hbm2ddl schema export
Hibernate: 
    alter table t_activity_discount_rate 
        drop constraint FKA400C193698FCC4
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE11193A98D65
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE111A27DDA4A
Hibernate: 
    alter table t_order 
        drop constraint FKA0C0C3C3E11F4FCB
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB0883698FCC4
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB088BBCB676E
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F33E99148D
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F3BBCB676E
Hibernate: 
    alter table t_order_request_history 
        drop constraint FK5A6B268BBCB676E
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CA6130105
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CBBCB676E
Hibernate: 
    alter table t_staff 
        drop constraint FKA0F9FF552DC32C06
Hibernate: 
    drop table t_activity_discount_rate if exists
Hibernate: 
    drop table t_customer if exists
Hibernate: 
    drop table t_dept if exists
Hibernate: 
    drop table t_dept_staff if exists
Hibernate: 
    drop table t_order if exists
Hibernate: 
    drop table t_order_pizzashack if exists
Hibernate: 
    drop table t_order_process if exists
Hibernate: 
    drop table t_order_request_history if exists
Hibernate: 
    drop table t_order_review_record if exists
Hibernate: 
    drop table t_pizzashack if exists
Hibernate: 
    drop table t_staff if exists
Hibernate: 
    drop table t_user if exists
Hibernate: 
    drop table t_workflow if exists
2014-02-03 16:35:20,558 [Thread-1       ] INFO  SchemaExport                   - HHH000230: Schema export complete
2014-02-03 16:35:20.561:INFO:/:Closing Spring root WebApplicationContext
2014-02-03 16:35:20.562:INFO:oejsl.ELContextCleaner:javax.el.BeanELResolver purged
2014-02-03 16:35:20.562:INFO:oejsh.ContextHandler:stopped o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
[INFO] Jetty server exiting.
2014-02-03 16:35:20.620:INFO:oejut.ShutdownThread:shutdown already commenced
]0;david@david: ~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-webdavid@david:~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web$ clear
[H[2J]0;david@david: ~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-webdavid@david:~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web$ cd ..
]0;david@david: ~/study/activiti5/code/github/pizzashack-order/pizzashack-distributordavid@david:~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor$ ls
[0m[01;34mpizzashack-distributor-ds[0m  [01;34mpizzashack-distributor-integration[0m  [01;34mpizzashack-distributor-repository[0m  [01;34mpizzashack-distributor-shared[0m  [01;34mpizzashack-distributor-web[0m  pom.xml
]0;david@david: ~/study/activiti5/code/github/pizzashack-order/pizzashack-distributordavid@david:~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor$ mvn clean install
[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Build Order:
[INFO] 
[INFO] pizzashack-distributor
[INFO] pizzashack-distributor-shared
[INFO] pizzashack-distributor-repository
[INFO] pizzashack-distributor-ds
[INFO] pizzashack-distributor-integration
[INFO] pizzashack-distributor-web Maven Webapp
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building pizzashack-distributor 1.0.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:2.4.1:clean (default-clean) @ pizzashack-distributor ---
[INFO] 
[INFO] --- maven-install-plugin:2.3.1:install (default-install) @ pizzashack-distributor ---
[INFO] Installing /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pom.xml to /home/david/.m2/repository/co/nz/pizzashack/pizzashack-distributor/1.0.0-SNAPSHOT/pizzashack-distributor-1.0.0-SNAPSHOT.pom
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building pizzashack-distributor-shared 1.0.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[WARNING] The artifact jdom:jdom:jar:1.1 has been relocated to org.jdom:jdom:jar:1.1
[WARNING] The artifact commons-email:commons-email:jar:1.1 has been relocated to org.apache.commons:commons-email:jar:1.1
[INFO] 
[INFO] --- maven-clean-plugin:2.4.1:clean (default-clean) @ pizzashack-distributor-shared ---
[INFO] Deleting /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-shared/target
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ pizzashack-distributor-shared ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] Copying 4 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ pizzashack-distributor-shared ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ pizzashack-distributor-shared ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-shared/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ pizzashack-distributor-shared ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-surefire-plugin:2.5:test (default-test) @ pizzashack-distributor-shared ---
[INFO] No tests to run.
[INFO] 
[INFO] --- maven-jar-plugin:2.2:jar (default-jar) @ pizzashack-distributor-shared ---
[INFO] Building jar: /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-shared/target/pizzashack-distributor-shared-1.0.0-SNAPSHOT.jar
[INFO] 
[INFO] --- maven-install-plugin:2.3.1:install (default-install) @ pizzashack-distributor-shared ---
[INFO] Installing /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-shared/target/pizzashack-distributor-shared-1.0.0-SNAPSHOT.jar to /home/david/.m2/repository/co/nz/pizzashack/pizzashack-distributor-shared/1.0.0-SNAPSHOT/pizzashack-distributor-shared-1.0.0-SNAPSHOT.jar
[INFO] Installing /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-shared/pom.xml to /home/david/.m2/repository/co/nz/pizzashack/pizzashack-distributor-shared/1.0.0-SNAPSHOT/pizzashack-distributor-shared-1.0.0-SNAPSHOT.pom
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building pizzashack-distributor-repository 1.0.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:2.4.1:clean (default-clean) @ pizzashack-distributor-repository ---
[INFO] Deleting /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-repository/target
[INFO] 
[INFO] --- maven-apt-plugin:1.0.4:process (default) @ pizzashack-distributor-repository ---
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ pizzashack-distributor-repository ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-repository/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ pizzashack-distributor-repository ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ pizzashack-distributor-repository ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-repository/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ pizzashack-distributor-repository ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-surefire-plugin:2.5:test (default-test) @ pizzashack-distributor-repository ---
[INFO] No tests to run.
[INFO] 
[INFO] --- maven-jar-plugin:2.2:jar (default-jar) @ pizzashack-distributor-repository ---
[INFO] Building jar: /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-repository/target/pizzashack-distributor-repository-1.0.0-SNAPSHOT.jar
[INFO] 
[INFO] --- maven-install-plugin:2.3.1:install (default-install) @ pizzashack-distributor-repository ---
[INFO] Installing /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-repository/target/pizzashack-distributor-repository-1.0.0-SNAPSHOT.jar to /home/david/.m2/repository/co/nz/pizzashack/pizzashack-distributor-repository/1.0.0-SNAPSHOT/pizzashack-distributor-repository-1.0.0-SNAPSHOT.jar
[INFO] Installing /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-repository/pom.xml to /home/david/.m2/repository/co/nz/pizzashack/pizzashack-distributor-repository/1.0.0-SNAPSHOT/pizzashack-distributor-repository-1.0.0-SNAPSHOT.pom
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building pizzashack-distributor-ds 1.0.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:2.4.1:clean (default-clean) @ pizzashack-distributor-ds ---
[INFO] Deleting /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-ds/target
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ pizzashack-distributor-ds ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] Copying 11 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ pizzashack-distributor-ds ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ pizzashack-distributor-ds ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-ds/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ pizzashack-distributor-ds ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] --- maven-surefire-plugin:2.5:test (default-test) @ pizzashack-distributor-ds ---
[INFO] Surefire report directory: /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-ds/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running co.nz.pizzashack.test.CustomerMockTest
2014-02-03 17:01:18,308 [main           ] INFO  CustomerDSImpl                 - getCustomerByEmail start:david.yuan@yellow.co.nz 
2014-02-03 17:01:18,339 [main           ] INFO  CustomerDSImpl                 - getCustomerByEmail end:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null) 
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.676 sec
Running co.nz.pizzashack.test.CollectionTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.006 sec

Results :

Tests run: 3, Failures: 0, Errors: 0, Skipped: 1

[INFO] 
[INFO] --- maven-jar-plugin:2.2:jar (default-jar) @ pizzashack-distributor-ds ---
[INFO] Building jar: /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-ds/target/pizzashack-distributor-ds-1.0.0-SNAPSHOT.jar
[INFO] 
[INFO] --- maven-install-plugin:2.3.1:install (default-install) @ pizzashack-distributor-ds ---
[INFO] Installing /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-ds/target/pizzashack-distributor-ds-1.0.0-SNAPSHOT.jar to /home/david/.m2/repository/co/nz/pizzashack/pizzashack-distributor-ds/1.0.0-SNAPSHOT/pizzashack-distributor-ds-1.0.0-SNAPSHOT.jar
[INFO] Installing /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-ds/pom.xml to /home/david/.m2/repository/co/nz/pizzashack/pizzashack-distributor-ds/1.0.0-SNAPSHOT/pizzashack-distributor-ds-1.0.0-SNAPSHOT.pom
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building pizzashack-distributor-integration 1.0.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:2.4.1:clean (default-clean) @ pizzashack-distributor-integration ---
[INFO] Deleting /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-integration/target
[INFO] 
[INFO] --- maven-jaxb2-plugin:0.8.2:generate (generate) @ pizzashack-distributor-integration ---
[INFO] Skipped XJC execution. No schemas to compile.
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ pizzashack-distributor-integration ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] Copying 2 resources
[INFO] skip non existing resourceDirectory /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-integration/target/generated-sources/xjc
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ pizzashack-distributor-integration ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ pizzashack-distributor-integration ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-integration/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ pizzashack-distributor-integration ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] --- maven-surefire-plugin:2.5:test (default-test) @ pizzashack-distributor-integration ---
[INFO] Surefire report directory: /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-integration/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running co.nz.pizzashack.test.BillingSimpleTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.062 sec
Running co.nz.pizzashack.test.BillingActivitiTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.006 sec
Running co.nz.pizzashack.test.OrderXmlFormatTransformerTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.006 sec

Results :

Tests run: 3, Failures: 0, Errors: 0, Skipped: 3

[INFO] 
[INFO] --- maven-jar-plugin:2.2:jar (default-jar) @ pizzashack-distributor-integration ---
[INFO] Building jar: /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-integration/target/pizzashack-distributor-integration-1.0.0-SNAPSHOT.jar
[INFO] 
[INFO] --- maven-install-plugin:2.3.1:install (default-install) @ pizzashack-distributor-integration ---
[INFO] Installing /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-integration/target/pizzashack-distributor-integration-1.0.0-SNAPSHOT.jar to /home/david/.m2/repository/co/nz/pizzashack/pizzashack-distributor-integration/1.0.0-SNAPSHOT/pizzashack-distributor-integration-1.0.0-SNAPSHOT.jar
[INFO] Installing /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-integration/pom.xml to /home/david/.m2/repository/co/nz/pizzashack/pizzashack-distributor-integration/1.0.0-SNAPSHOT/pizzashack-distributor-integration-1.0.0-SNAPSHOT.pom
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building pizzashack-distributor-web Maven Webapp 1.0.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:2.4.1:clean (default-clean) @ pizzashack-distributor-web ---
[INFO] Deleting /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/target
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ pizzashack-distributor-web ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 32 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ pizzashack-distributor-web ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ pizzashack-distributor-web ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ pizzashack-distributor-web ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] --- maven-surefire-plugin:2.5:test (default-test) @ pizzashack-distributor-web ---
[INFO] Surefire report directory: /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running co.nz.pizzashack.test.OrderProcessTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 4, Time elapsed: 0.222 sec

Results :

Tests run: 4, Failures: 0, Errors: 0, Skipped: 4

[INFO] 
[INFO] --- maven-war-plugin:2.1.1:war (default-war) @ pizzashack-distributor-web ---
[INFO] Packaging webapp
[INFO] Assembling webapp [pizzashack-distributor-web] in [/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/target/pizzashack-distributor-web]
[INFO] Processing war project
[INFO] Copying webapp resources [/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp]
[INFO] Webapp assembled in [201 msecs]
[INFO] Building war: /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/target/pizzashack-distributor-web.war
[INFO] 
[INFO] --- maven-install-plugin:2.3.1:install (default-install) @ pizzashack-distributor-web ---
[INFO] Installing /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/target/pizzashack-distributor-web.war to /home/david/.m2/repository/co/nz/pizzashack/pizzashack-distributor-web/1.0.0-SNAPSHOT/pizzashack-distributor-web-1.0.0-SNAPSHOT.war
[INFO] Installing /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/pom.xml to /home/david/.m2/repository/co/nz/pizzashack/pizzashack-distributor-web/1.0.0-SNAPSHOT/pizzashack-distributor-web-1.0.0-SNAPSHOT.pom
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary:
[INFO] 
[INFO] pizzashack-distributor ............................ SUCCESS [0.397s]
[INFO] pizzashack-distributor-shared ..................... SUCCESS [4.820s]
[INFO] pizzashack-distributor-repository ................. SUCCESS [1.784s]
[INFO] pizzashack-distributor-ds ......................... SUCCESS [1.974s]
[INFO] pizzashack-distributor-integration ................ SUCCESS [2.054s]
[INFO] pizzashack-distributor-web Maven Webapp ........... SUCCESS [6.138s]
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 17.367s
[INFO] Finished at: Mon Feb 03 17:01:26 NZDT 2014
[INFO] Final Memory: 46M/647M
[INFO] ------------------------------------------------------------------------
]0;david@david: ~/study/activiti5/code/github/pizzashack-order/pizzashack-distributordavid@david:~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor$ cd pizzashack-distributor-web/
]0;david@david: ~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-webdavid@david:~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web$ mvn jetty:run
[INFO] Scanning for projects...
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building pizzashack-distributor-web Maven Webapp 1.0.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] >>> jetty-maven-plugin:8.1.5.v20120716:run (default-cli) @ pizzashack-distributor-web >>>
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ pizzashack-distributor-web ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 32 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ pizzashack-distributor-web ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ pizzashack-distributor-web ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ pizzashack-distributor-web ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] <<< jetty-maven-plugin:8.1.5.v20120716:run (default-cli) @ pizzashack-distributor-web <<<
[INFO] 
[INFO] --- jetty-maven-plugin:8.1.5.v20120716:run (default-cli) @ pizzashack-distributor-web ---
[INFO] Configuring Jetty for project: pizzashack-distributor-web Maven Webapp
[INFO] webAppSourceDirectory /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp does not exist. Defaulting to /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp
[INFO] Reload Mechanic: automatic
[INFO] Classes = /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/target/classes
[INFO] Context path = /
[INFO] Tmp directory = /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/target/tmp
[INFO] Web defaults = org/eclipse/jetty/webapp/webdefault.xml
[INFO] Web overrides =  none
[INFO] web.xml file = null
[INFO] Webapp directory = /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp
2014-02-03 17:01:40.792:INFO:oejs.Server:jetty-8.1.5.v20120716
2014-02-03 17:01:42.879:INFO:oejpw.PlusConfiguration:No Transaction manager found - if your webapp requires one, please configure one.
2014-02-03 17:02:17.318:INFO:/:Spring WebApplicationInitializers detected on classpath: [co.nz.pizzashack.config.PizzashackDistributorWebInitializer@40bd556e]
2014-02-03 17:02:17.735:INFO:oejsh.ContextHandler:started o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
2014-02-03 17:02:17.736:INFO:oejsh.ContextHandler:started o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
2014-02-03 17:02:17.736:INFO:oejsh.ContextHandler:started o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
2014-02-03 17:02:17.736:INFO:/:Initializing Spring root WebApplicationContext
2014-02-03 17:02:17,736 [main           ] INFO  ContextLoader                  - Root WebApplicationContext: initialization started
2014-02-03 17:02:17,739 [main           ] INFO  ionConfigWebApplicationContext - Refreshing Root WebApplicationContext: startup date [Mon Feb 03 17:02:17 NZDT 2014]; root of context hierarchy
2014-02-03 17:02:17,819 [main           ] INFO  ClassPathBeanDefinitionScanner - JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2014-02-03 17:02:17,819 [main           ] INFO  ClassPathBeanDefinitionScanner - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2014-02-03 17:02:17,820 [main           ] INFO  ionConfigWebApplicationContext - Registering annotated classes: [class co.nz.pizzashack.config.ApplicationConfiguration,class co.nz.pizzashack.config.WebMvcContextConfiguration]
2014-02-03 17:02:17,877 [main           ] INFO  ClassPathBeanDefinitionScanner - JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2014-02-03 17:02:17,877 [main           ] INFO  ClassPathBeanDefinitionScanner - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2014-02-03 17:02:18,988 [main           ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [META-INF/cxf/cxf.xml]
2014-02-03 17:02:19,188 [main           ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [META-INF/cxf/cxf-extension-soap.xml]
2014-02-03 17:02:19,211 [main           ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [META-INF/cxf/cxf-servlet.xml]
2014-02-03 17:02:19,230 [main           ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [activitiAppContext.xml]
2014-02-03 17:02:19,407 [main           ] INFO  PropertyPlaceholderConfigurer  - Loading properties file from class path resource [activiti.properties]
2014-02-03 17:02:19,456 [main           ] INFO  redAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2014-02-03 17:02:19,506 [main           ] INFO  ionConfigWebApplicationContext - Bean 'infrastructureContextConfiguration' of type [class co.nz.pizzashack.config.InfrastructureContextConfiguration$$EnhancerByCGLIB$$4f79376f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:19,533 [main           ] INFO  MLog                           - MLog clients using log4j logging.
2014-02-03 17:02:19,590 [main           ] INFO  C3P0Registry                   - Initializing c3p0-0.9.1.2 [built 21-May-2007 15:04:56; debug? true; trace: 10]
2014-02-03 17:02:19,651 [main           ] INFO  ionConfigWebApplicationContext - Bean 'dataSource' of type [class com.mchange.v2.c3p0.ComboPooledDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:19,750 [main           ] INFO  tainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default'
2014-02-03 17:02:19,871 [main           ] INFO  Version                        - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2014-02-03 17:02:19,877 [main           ] INFO  Version                        - HHH000412: Hibernate Core {4.1.4.Final}
2014-02-03 17:02:19,879 [main           ] INFO  Environment                    - HHH000206: hibernate.properties not found
2014-02-03 17:02:19,880 [main           ] INFO  Environment                    - HHH000021: Bytecode provider name : javassist
2014-02-03 17:02:19,894 [main           ] INFO  Ejb3Configuration              - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2014-02-03 17:02:20,137 [main           ] INFO  ConnectionProviderInitiator    - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2014-02-03 17:02:20,192 [main           ] INFO  AbstractPoolBackedDataSource   - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge1508z1w8c4rnuur4ea|7b6f17f2, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.h2.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge1508z1w8c4rnuur4ea|7b6f17f2, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:h2:mem:pizzashackdistributor;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 600, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 2, numHelperThreads -> 3, numThreadsAwaitingCheckoutDefaultUser -> 0, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2014-02-03 17:02:20,365 [main           ] INFO  Dialect                        - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2014-02-03 17:02:20,371 [main           ] INFO  LobCreatorBuilder              - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2014-02-03 17:02:20,379 [main           ] INFO  TransactionFactoryInitiator    - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2014-02-03 17:02:20,381 [main           ] INFO  ASTQueryTranslatorFactory      - HHH000397: Using ASTQueryTranslatorFactory
2014-02-03 17:02:20,407 [main           ] INFO  Version                        - Hibernate Validator 4.2.0.Final
2014-02-03 17:02:20,623 [main           ] INFO  SchemaExport                   - HHH000227: Running hbm2ddl schema export
Hibernate: 
    alter table t_activity_discount_rate 
        drop constraint FKA400C193698FCC4
2014-02-03 17:02:20,633 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_activity_discount_rate drop constraint FKA400C193698FCC4
2014-02-03 17:02:20,633 [main           ] ERROR SchemaExport                   - Table "T_ACTIVITY_DISCOUNT_RATE" not found; SQL statement:

    alter table t_activity_discount_rate 
        drop constraint FKA400C193698FCC4 [42102-160]
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE11193A98D65
2014-02-03 17:02:20,634 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_dept_staff drop constraint FKBC8AE11193A98D65
2014-02-03 17:02:20,634 [main           ] ERROR SchemaExport                   - Table "T_DEPT_STAFF" not found; SQL statement:

    alter table t_dept_staff 
        drop constraint FKBC8AE11193A98D65 [42102-160]
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE111A27DDA4A
2014-02-03 17:02:20,635 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_dept_staff drop constraint FKBC8AE111A27DDA4A
2014-02-03 17:02:20,635 [main           ] ERROR SchemaExport                   - Table "T_DEPT_STAFF" not found; SQL statement:

    alter table t_dept_staff 
        drop constraint FKBC8AE111A27DDA4A [42102-160]
Hibernate: 
    alter table t_order 
        drop constraint FKA0C0C3C3E11F4FCB
2014-02-03 17:02:20,636 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order drop constraint FKA0C0C3C3E11F4FCB
2014-02-03 17:02:20,636 [main           ] ERROR SchemaExport                   - Table "T_ORDER" not found; SQL statement:

    alter table t_order 
        drop constraint FKA0C0C3C3E11F4FCB [42102-160]
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB0883698FCC4
2014-02-03 17:02:20,637 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_pizzashack drop constraint FKE8ACB0883698FCC4
2014-02-03 17:02:20,637 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PIZZASHACK" not found; SQL statement:

    alter table t_order_pizzashack 
        drop constraint FKE8ACB0883698FCC4 [42102-160]
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB088BBCB676E
2014-02-03 17:02:20,638 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_pizzashack drop constraint FKE8ACB088BBCB676E
2014-02-03 17:02:20,638 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PIZZASHACK" not found; SQL statement:

    alter table t_order_pizzashack 
        drop constraint FKE8ACB088BBCB676E [42102-160]
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F33E99148D
2014-02-03 17:02:20,638 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_process drop constraint FK6B8B15F33E99148D
2014-02-03 17:02:20,638 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PROCESS" not found; SQL statement:

    alter table t_order_process 
        drop constraint FK6B8B15F33E99148D [42102-160]
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F3BBCB676E
2014-02-03 17:02:20,639 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_process drop constraint FK6B8B15F3BBCB676E
2014-02-03 17:02:20,639 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PROCESS" not found; SQL statement:

    alter table t_order_process 
        drop constraint FK6B8B15F3BBCB676E [42102-160]
Hibernate: 
    alter table t_order_request_history 
        drop constraint FK5A6B268BBCB676E
2014-02-03 17:02:20,640 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_request_history drop constraint FK5A6B268BBCB676E
2014-02-03 17:02:20,640 [main           ] ERROR SchemaExport                   - Table "T_ORDER_REQUEST_HISTORY" not found; SQL statement:

    alter table t_order_request_history 
        drop constraint FK5A6B268BBCB676E [42102-160]
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CA6130105
2014-02-03 17:02:20,641 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_review_record drop constraint FKFB7A439CA6130105
2014-02-03 17:02:20,641 [main           ] ERROR SchemaExport                   - Table "T_ORDER_REVIEW_RECORD" not found; SQL statement:

    alter table t_order_review_record 
        drop constraint FKFB7A439CA6130105 [42102-160]
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CBBCB676E
2014-02-03 17:02:20,642 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_review_record drop constraint FKFB7A439CBBCB676E
2014-02-03 17:02:20,642 [main           ] ERROR SchemaExport                   - Table "T_ORDER_REVIEW_RECORD" not found; SQL statement:

    alter table t_order_review_record 
        drop constraint FKFB7A439CBBCB676E [42102-160]
Hibernate: 
    alter table t_staff 
        drop constraint FKA0F9FF552DC32C06
2014-02-03 17:02:20,643 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_staff drop constraint FKA0F9FF552DC32C06
2014-02-03 17:02:20,643 [main           ] ERROR SchemaExport                   - Table "T_STAFF" not found; SQL statement:

    alter table t_staff 
        drop constraint FKA0F9FF552DC32C06 [42102-160]
Hibernate: 
    drop table t_activity_discount_rate if exists
Hibernate: 
    drop table t_customer if exists
Hibernate: 
    drop table t_dept if exists
Hibernate: 
    drop table t_dept_staff if exists
Hibernate: 
    drop table t_order if exists
Hibernate: 
    drop table t_order_pizzashack if exists
Hibernate: 
    drop table t_order_process if exists
Hibernate: 
    drop table t_order_request_history if exists
Hibernate: 
    drop table t_order_review_record if exists
Hibernate: 
    drop table t_pizzashack if exists
Hibernate: 
    drop table t_staff if exists
Hibernate: 
    drop table t_user if exists
Hibernate: 
    drop table t_workflow if exists
Hibernate: 
    create table t_activity_discount_rate (
        activity_rate_id bigint generated by default as identity,
        code varchar(255),
        description varchar(255),
        effective_time timestamp,
        expire_time timestamp,
        rate decimal(19,2),
        pizzashack_id bigint,
        primary key (activity_rate_id)
    )
Hibernate: 
    create table t_customer (
        cust_id bigint generated by default as identity,
        address varchar(255),
        credits integer,
        customer_name varchar(255),
        email varchar(255),
        primary key (cust_id)
    )
Hibernate: 
    create table t_dept (
        dept_id bigint generated by default as identity,
        create_date date,
        dept_name varchar(255),
        primary key (dept_id)
    )
Hibernate: 
    create table t_dept_staff (
        staff_dept_id bigint generated by default as identity,
        join_date date,
        dept_id bigint,
        staff_id bigint,
        primary key (staff_dept_id)
    )
Hibernate: 
    create table t_order (
        order_id bigint generated by default as identity,
        deliver_time timestamp,
        order_no varchar(255),
        order_time timestamp,
        payment_remarks varchar(255),
        payment_status integer,
        quantity integer,
        ship_address varchar(255),
        status integer,
        total_price decimal(19,2),
        cust_id bigint,
        primary key (order_id)
    )
Hibernate: 
    create table t_order_pizzashack (
        order_pizza_id bigint generated by default as identity,
        qty integer,
        total_price decimal(19,2),
        order_id bigint,
        pizzashack_id bigint,
        primary key (order_pizza_id)
    )
Hibernate: 
    create table t_order_process (
        order_process_id bigint generated by default as identity,
        active_process_definition_id varchar(255),
        active_process_instance_id varchar(255),
        complete_time time,
        create_time time,
        execution_id varchar(255),
        main_process_definition_id varchar(255),
        main_process_instance_id varchar(255),
        operator_id bigint,
        order_id bigint,
        primary key (order_process_id)
    )
Hibernate: 
    create table t_order_request_history (
        message_id varchar(255) generated by default as identity,
        created_at time,
        processor_name varchar(255),
        order_id bigint,
        primary key (message_id)
    )
Hibernate: 
    create table t_order_review_record (
        review_record_id bigint generated by default as identity,
        content varchar(255),
        create_time time,
        review_status integer,
        order_id bigint,
        reviewer_id bigint,
        primary key (review_record_id)
    )
Hibernate: 
    create table t_pizzashack (
        pizzashack_id bigint generated by default as identity,
        description varchar(255),
        icon varchar(255),
        name varchar(255),
        price decimal(19,2),
        primary key (pizzashack_id)
    )
Hibernate: 
    create table t_staff (
        staff_id bigint generated by default as identity,
        create_date date,
        email varchar(255),
        first_name varchar(255),
        identity varchar(255),
        last_name varchar(255),
        level integer,
        role integer,
        user_id bigint,
        primary key (staff_id)
    )
Hibernate: 
    create table t_user (
        user_id bigint generated by default as identity,
        create_time time,
        password varchar(255),
        user_name varchar(255),
        primary key (user_id)
    )
Hibernate: 
    create table t_workflow (
        workflow_id bigint generated by default as identity,
        category varchar(255),
        create_time time,
        deploy_id varchar(255),
        workflow_name varchar(255),
        process_definition_id varchar(255),
        process_definition_key varchar(255),
        primary key (workflow_id)
    )
Hibernate: 
    alter table t_activity_discount_rate 
        add constraint FKA400C193698FCC4 
        foreign key (pizzashack_id) 
        references t_pizzashack
Hibernate: 
    alter table t_dept_staff 
        add constraint FKBC8AE11193A98D65 
        foreign key (dept_id) 
        references t_dept
Hibernate: 
    alter table t_dept_staff 
        add constraint FKBC8AE111A27DDA4A 
        foreign key (staff_id) 
        references t_staff
Hibernate: 
    alter table t_order 
        add constraint FKA0C0C3C3E11F4FCB 
        foreign key (cust_id) 
        references t_customer
Hibernate: 
    alter table t_order_pizzashack 
        add constraint FKE8ACB0883698FCC4 
        foreign key (pizzashack_id) 
        references t_pizzashack
Hibernate: 
    alter table t_order_pizzashack 
        add constraint FKE8ACB088BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_process 
        add constraint FK6B8B15F33E99148D 
        foreign key (operator_id) 
        references t_user
Hibernate: 
    alter table t_order_process 
        add constraint FK6B8B15F3BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_request_history 
        add constraint FK5A6B268BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_review_record 
        add constraint FKFB7A439CA6130105 
        foreign key (reviewer_id) 
        references t_staff
Hibernate: 
    alter table t_order_review_record 
        add constraint FKFB7A439CBBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_staff 
        add constraint FKA0F9FF552DC32C06 
        foreign key (user_id) 
        references t_user
2014-02-03 17:02:20,682 [main           ] INFO  SchemaExport                   - HHH000230: Schema export complete
2014-02-03 17:02:20,724 [main           ] INFO  ionConfigWebApplicationContext - Bean 'entityManagerFactory' of type [class org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:20,758 [main           ] INFO  ionConfigWebApplicationContext - Bean 'entityManagerFactory' of type [class com.sun.proxy.$Proxy56] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:20,954 [main           ] INFO  ionConfigWebApplicationContext - Bean 'cxf' of type [class org.apache.cxf.bus.spring.SpringBus] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:20,958 [main           ] WARN  OldSpringSupport               - Import of META-INF/cxf/cxf-extension-soap.xml has been deprecated and is unnecessary.
2014-02-03 17:02:20,964 [main           ] INFO  ionConfigWebApplicationContext - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerByCGLIB$$d1c07216] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:20,994 [main           ] INFO  ionConfigWebApplicationContext - Bean 'transactionAttributeSource' of type [class org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:21,002 [main           ] INFO  ionConfigWebApplicationContext - Bean 'transactionInterceptor' of type [class org.springframework.transaction.interceptor.TransactionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:21,010 [main           ] INFO  ionConfigWebApplicationContext - Bean 'org.springframework.transaction.config.internalTransactionAdvisor' of type [class org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:21,020 [main           ] INFO  ionConfigWebApplicationContext - Bean 'transactionManager' of type [class org.springframework.orm.jpa.JpaTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:21,021 [main           ] INFO  ionConfigWebApplicationContext - Bean 'camelJdbcIdempotentConfig' of type [class co.nz.pizzashack.config.CamelJdbcIdempotentConfig$$EnhancerByCGLIB$$b64a1d9d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:21,037 [main           ] INFO  ionConfigWebApplicationContext - Bean 'sqlComponent' of type [class org.apache.camel.component.sql.SqlComponent] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:21,045 [main           ] INFO  ionConfigWebApplicationContext - Bean 'camelCxfConfig' of type [class co.nz.pizzashack.config.CamelCxfConfig$$EnhancerByCGLIB$$e05234c2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:21,073 [main           ] INFO  ionConfigWebApplicationContext - Bean 'billingInboundEndpoint' of type [class org.apache.camel.component.cxf.CxfEndpoint] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:21,097 [main           ] INFO  ionConfigWebApplicationContext - Bean 'billingVariableTransformer' of type [class co.nz.pizzashack.integration.mapping.BillingVariableTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:21,281 [main           ] INFO  ionConfigWebApplicationContext - Bean 'billingFormatTransformer' of type [class co.nz.pizzashack.integration.mapping.BillingFormatTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:21,285 [main           ] INFO  ionConfigWebApplicationContext - Bean 'billingResponseMergeProcessor' of type [class co.nz.pizzashack.integration.mapping.BillingResponseMergeProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:21,288 [main           ] INFO  ionConfigWebApplicationContext - Bean 'sleepBean' of type [class co.nz.pizzashack.integration.utils.SleepBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:21,288 [main           ] INFO  ionConfigWebApplicationContext - Bean 'billingProcessRoute' of type [class co.nz.pizzashack.integration.route.BillingProcessRoute] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:21,390 [main           ] INFO  ionConfigWebApplicationContext - Bean 'org.activiti.engine.impl.rules.RulesDeployer#4a2ac9f1' of type [class org.activiti.engine.impl.rules.RulesDeployer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:21,391 [main           ] INFO  ionConfigWebApplicationContext - Bean 'processEngineConfiguration' of type [class org.activiti.spring.SpringProcessEngineConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:21,395 [main           ] INFO  ionConfigWebApplicationContext - Bean 'processEngine' of type [class org.activiti.spring.ProcessEngineFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,409 [main           ] INFO  DbSqlSession                   - performing create on engine with resource org/activiti/db/create/activiti.h2.create.engine.sql
2014-02-03 17:02:22,427 [main           ] INFO  DbSqlSession                   - performing create on history with resource org/activiti/db/create/activiti.h2.create.history.sql
2014-02-03 17:02:22,433 [main           ] INFO  DbSqlSession                   - performing create on identity with resource org/activiti/db/create/activiti.h2.create.identity.sql
2014-02-03 17:02:22,436 [main           ] INFO  ProcessEngineImpl              - ProcessEngine default created
2014-02-03 17:02:22,437 [main           ] INFO  ionConfigWebApplicationContext - Bean 'processEngine' of type [class org.activiti.engine.impl.ProcessEngineImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,443 [main           ] INFO  ionConfigWebApplicationContext - Bean 'runtimeService' of type [class org.activiti.engine.impl.RuntimeServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,450 [main           ] INFO  ionConfigWebApplicationContext - Bean 'taskService' of type [class org.activiti.engine.impl.TaskServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,457 [main           ] INFO  ionConfigWebApplicationContext - Bean 'historyService' of type [class org.activiti.engine.impl.HistoryServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,463 [main           ] INFO  ionConfigWebApplicationContext - Bean 'repositoryService' of type [class org.activiti.engine.impl.RepositoryServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,469 [main           ] INFO  ionConfigWebApplicationContext - Bean 'managementService' of type [class org.activiti.engine.impl.ManagementServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,474 [main           ] INFO  ionConfigWebApplicationContext - Bean 'identityService' of type [class org.activiti.engine.impl.IdentityServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,474 [main           ] INFO  ionConfigWebApplicationContext - Bean 'activitiFacade' of type [class co.nz.pizzashack.wf.ActivitiFacade] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,480 [main           ] INFO  ionConfigWebApplicationContext - Bean 'userConverter' of type [class co.nz.pizzashack.data.converter.UserConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,500 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,500 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,504 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,516 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#1' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,576 [main           ] INFO  ionConfigWebApplicationContext - Bean 'workflowRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,615 [main           ] INFO  ionConfigWebApplicationContext - Bean 'workflowRepository' of type [class com.sun.proxy.$Proxy65] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,619 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#2' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,619 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#2' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,620 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#2' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,620 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#3' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,629 [main           ] INFO  ionConfigWebApplicationContext - Bean 'pizzashackRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,641 [main           ] INFO  ionConfigWebApplicationContext - Bean 'pizzashackRepository' of type [class com.sun.proxy.$Proxy68] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,644 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#4' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,644 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#4' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,644 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#4' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,645 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#5' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,655 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,661 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessRepository' of type [class com.sun.proxy.$Proxy69] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,663 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#6' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,664 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#6' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,664 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#6' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,664 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#7' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,675 [main           ] INFO  ionConfigWebApplicationContext - Bean 'userRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,679 [main           ] INFO  ionConfigWebApplicationContext - Bean 'userRepository' of type [class com.sun.proxy.$Proxy70] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,681 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#8' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,682 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#8' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,682 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#8' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,682 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#9' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,691 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,695 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderRepository' of type [class com.sun.proxy.$Proxy71] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,730 [main           ] INFO  ionConfigWebApplicationContext - Bean 'customerConverter' of type [class co.nz.pizzashack.data.converter.CustomerConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,738 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderDetailConverter' of type [class co.nz.pizzashack.data.converter.OrderDetailConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,738 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderConverter' of type [class co.nz.pizzashack.data.converter.OrderConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,739 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessConverter' of type [class co.nz.pizzashack.data.converter.OrderProcessConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,744 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#10' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,744 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#10' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,745 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#10' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,745 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#11' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,754 [main           ] INFO  ionConfigWebApplicationContext - Bean 'departmentRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,758 [main           ] INFO  ionConfigWebApplicationContext - Bean 'departmentRepository' of type [class com.sun.proxy.$Proxy72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,759 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessAccessor' of type [class co.nz.pizzashack.ds.OrderProcessAccessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,765 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderReviewRecordConverter' of type [class co.nz.pizzashack.data.converter.OrderReviewRecordConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,767 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#12' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,767 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#12' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,767 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#12' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,767 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#13' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,775 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderReviewRecordRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,780 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderReviewRecordRepository' of type [class com.sun.proxy.$Proxy73] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,782 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#14' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,783 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#14' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,783 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#14' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,784 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#15' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,791 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderPizzashackRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,796 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderPizzashackRepository' of type [class com.sun.proxy.$Proxy74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,799 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#16' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,799 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#16' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,799 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#16' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,800 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#17' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,810 [main           ] INFO  ionConfigWebApplicationContext - Bean 'customerRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,813 [main           ] INFO  ionConfigWebApplicationContext - Bean 'customerRepository' of type [class com.sun.proxy.$Proxy75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,814 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessDSImpl' of type [class co.nz.pizzashack.ds.OrderProcessDSImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,821 [main           ] INFO  ionConfigWebApplicationContext - Bean 'billingInboundProcessor' of type [class co.nz.pizzashack.integration.processor.BillingInboundProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,821 [main           ] INFO  ionConfigWebApplicationContext - Bean 'billingInboundWsRoute' of type [class co.nz.pizzashack.integration.route.BillingInboundWsRoute] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,843 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderJdbcMessageIdRepository' of type [class org.apache.camel.processor.idempotent.jdbc.JdbcMessageIdRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,851 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessFormatTransformer' of type [class co.nz.pizzashack.integration.mapping.OrderProcessFormatTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,860 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#18' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,861 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#18' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,861 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#18' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,862 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#19' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,869 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderRequestHistoryRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,873 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderRequestHistoryRepository' of type [class com.sun.proxy.$Proxy80] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,874 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderRequestProcessor' of type [class co.nz.pizzashack.integration.processor.OrderRequestProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,877 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderDuplicatedReqProcessor' of type [class co.nz.pizzashack.integration.processor.OrderDuplicatedReqProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,877 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessRoute' of type [class co.nz.pizzashack.integration.route.OrderProcessRoute] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,926 [main           ] INFO  ionConfigWebApplicationContext - Bean 'activeMQConnectionFactory' of type [class org.apache.activemq.ActiveMQConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:23,110 [main           ] INFO  ionConfigWebApplicationContext - Bean 'pooledConnectionFactory' of type [class org.apache.activemq.pool.PooledConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:23,130 [main           ] INFO  ionConfigWebApplicationContext - Bean 'jmsTransactionManager' of type [class org.springframework.jms.connection.JmsTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:23,143 [main           ] INFO  ionConfigWebApplicationContext - Bean 'jmsComponent' of type [class org.apache.camel.component.jms.JmsComponent] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:23,148 [main           ] INFO  ionConfigWebApplicationContext - Bean 'camelSpringConfig' of type [class co.nz.pizzashack.config.CamelSpringConfig$$EnhancerByCGLIB$$1fd22b56] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:23,189 [main           ] INFO  DefaultListableBeanFactory     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@7a5d8b7e: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,applicationConfiguration,webMvcContextConfiguration,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,viewConfiguration,logoutController,loginController,indexController,userController,adminIndexController,departmentController,orderController,orderQueryController,staffController,billingProcessRespTransformer,billingProcessReqTransformer,orderProcessFormatTransformer,billingVariableTransformer,billingResponseMergeProcessor,billingFormatTransformer,billingInboundProcessor,orderDuplicatedReqProcessor,orderRequestProcessor,billingProcessRoute,billingInboundWsRoute,orderProcessRoute,sleepBean,pizzashackAPIImpl,camelSpringConfig,camelJdbcIdempotentConfig,camelCxfConfig,orderProcessDSImpl,customerDSImpl,workflowDSImpl,pizzashackDSImpl,userDSImpl,orderProcessAccessor,orderProcessQueryDSImpl,staffDSImpl,orderDSImpl,departmentDSImpl,initialDataConfig,pizzashackCaculator,emailExecutionListener,endExecutionListener,caculationMergeExecutionListener,orderMainTransitionExecutionListener,toManualReviewExecutionListener,outOfBillingProcessExecutionListener,outOfCoreProcessExecutionListener,billingRespExecutionListener,customerConverter,orderProcessConverter,staffConverter,userConverter,departmentConverter,workflowConverter,orderReviewRecordConverter,orderConverter,activityDiscountRateConverter,orderDetailConverter,pizzashackDataInitialConfiguration,pizzashackItemBuilder,infrastructureContextConfiguration,activitiFacade,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0,org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0,workflowRepository,activityDiscountRateRepository,staffDepartmentRepository,pizzashackRepository,orderReviewRecordRepository,orderRepository,staffRepository,orderProcessRepository,orderRequestHistoryRepository,customerRepository,userRepository,orderPizzashackRepository,departmentRepository,viewResolver,messageSource,activeMQConnectionFactory,pooledConnectionFactory,jmsComponent,jmsTransactionManager,camelBeanPostProcessor,camelContext,custThreadPoolProfile,sqlComponent,orderJdbcMessageIdRepository,billingInboundEndpoint,loggingOutInterceptor,cxf,org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor,org.apache.cxf.bus.spring.Jsr250BeanPostProcessor,org.apache.cxf.bus.spring.BusExtensionPostProcessor,org.apache.cxf.binding.soap.SoapBindingFactory,org.apache.cxf.binding.soap.SoapTransportFactory,org.apache.cxf.binding.soap.customEditorConfigurer,setupWorkflowData,setupData,org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration,org.springframework.transaction.config.internalTransactionAdvisor,transactionAttributeSource,transactionInterceptor,dataSource,transactionManager,entityManagerFactory,placeholderConfig,processEngineConfiguration,processEngine,repositoryService,runtimeService,taskService,historyService,managementService,identityService,org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration,viewControllerHandlerMapping,beanNameHandlerMapping,mvcValidator,resourceHandlerMapping,defaultServletHandlerMapping,requestMappingHandlerAdapter,mvcConversionService,httpRequestHandlerAdapter,simpleControllerHandlerAdapter,requestMappingHandlerMapping,mvcContentNegotiationManager,handlerExceptionResolver,localeResolver,sessionAttributeProcessor,localeChangeInterceptor,simpleMappingExceptionResolver,multipartResolver]; root of factory hierarchy
2014-02-03 17:02:23,664 [main           ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) is starting
2014-02-03 17:02:23,665 [main           ] INFO  ManagedManagementStrategy      - JMX is enabled
2014-02-03 17:02:23,758 [main           ] INFO  DefaultTypeConverter           - Loaded 194 type converters
Hibernate: 
    SELECT
        1 
    FROM
        T_ORDER_REQUEST_HISTORY 
    WHERE
        1 = 0
2014-02-03 17:02:24,131 [main           ] INFO  SpringCamelContext             - StreamCaching is not in use. If using streams then its recommended to enable stream caching. See more details at http://camel.apache.org/stream-caching.html
2014-02-03 17:02:24,344 [main           ] INFO  BusApplicationContext          - Refreshing org.apache.cxf.bus.spring.BusApplicationContext@6b1aaf28: startup date [Mon Feb 03 17:02:24 NZDT 2014]; parent: Root WebApplicationContext
2014-02-03 17:02:24,368 [main           ] INFO  DefaultListableBeanFactory     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@54d3d69c: defining beans []; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@7a5d8b7e
2014-02-03 17:02:24,388 [main           ] INFO  ReflectionServiceFactoryBean   - Creating Service {http://ws.integration.pizzashack.nz.co/}BillingProcessWebServicesService from class co.nz.pizzashack.integration.ws.BillingProcessWebServices
2014-02-03 17:02:24,878 [main           ] INFO  ServerImpl                     - Setting the server's publish address to be /billingWs
2014-02-03 17:02:24,912 [main           ] INFO  SpringCamelContext             - Route: activitiBillingProcess started and consuming from: Endpoint[activiti://orderBillingProcess:billingIntegration?copyVariablesToBodyAsMap=true]
2014-02-03 17:02:24,914 [main           ] INFO  SpringCamelContext             - Route: direct:billingIntegration started and consuming from: Endpoint[direct://billingIntegration]
2014-02-03 17:02:24,920 [main           ] INFO  SpringCamelContext             - Route: direct:receiveBillingQueue started and consuming from: Endpoint[direct://receiveBillingQueue]
2014-02-03 17:02:24,923 [main           ] INFO  SpringCamelContext             - Route: route1 started and consuming from: Endpoint[direct://doBillingIntegration]
2014-02-03 17:02:24,939 [main           ] INFO  SpringCamelContext             - Route: orderProcessRoute started and consuming from: Endpoint[jms://queue:pizzashackOrderInbound]
2014-02-03 17:02:24,941 [main           ] INFO  SpringCamelContext             - Route: direct:orderDuplicatedProcess started and consuming from: Endpoint[direct://orderDuplicatedProcess]
2014-02-03 17:02:24,943 [main           ] INFO  SpringCamelContext             - Route: direct:orderRegularProcess started and consuming from: Endpoint[direct://orderRegularProcess]
2014-02-03 17:02:24,946 [main           ] INFO  SpringCamelContext             - Route: cxf:bean:billingInboundEndpoint started and consuming from: Endpoint[cxf://bean:billingInboundEndpoint]
2014-02-03 17:02:24,973 [main           ] INFO  SpringCamelContext             - Total 8 routes, of which 8 is started.
2014-02-03 17:02:24,973 [main           ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) started in 1.311 seconds
2014-02-03 17:02:24,996 [main           ] INFO  WorkflowInitialDataSetup       - initialize start:{}
2014-02-03 17:02:25,011 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 17:02:25,013 [main           ] INFO  UserDSImpl                     - usernamedavid
2014-02-03 17:02:25,013 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 17:02:25,218 [main           ] INFO  UserDSImpl                     - userId:1 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 17:02:25,275 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@4f56b199[userId=1,username=david,password=MTIzNDU2,createTime=Mon Feb 03 17:02:25 NZDT 2014]
2014-02-03 17:02:25,332 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-03 04:02:25)
2014-02-03 17:02:25,332 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-03 04:02:25)
2014-02-03 17:02:25,335 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 17:02:25,335 [main           ] INFO  UserDSImpl                     - usernamebrad
2014-02-03 17:02:25,335 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 17:02:25,338 [main           ] INFO  UserDSImpl                     - userId:2 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 17:02:25,340 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@2c6f74cd[userId=2,username=brad,password=MTIzNDU2,createTime=Mon Feb 03 17:02:25 NZDT 2014]
2014-02-03 17:02:25,340 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-03 04:02:25)
2014-02-03 17:02:25,340 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-03 04:02:25)
2014-02-03 17:02:25,341 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 17:02:25,341 [main           ] INFO  UserDSImpl                     - usernamejohn
2014-02-03 17:02:25,341 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 17:02:25,344 [main           ] INFO  UserDSImpl                     - userId:3 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 17:02:25,346 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@118f24ab[userId=3,username=john,password=MTIzNDU2,createTime=Mon Feb 03 17:02:25 NZDT 2014]
2014-02-03 17:02:25,346 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-03 04:02:25)
2014-02-03 17:02:25,346 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-03 04:02:25)
2014-02-03 17:02:25,347 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 17:02:25,347 [main           ] INFO  UserDSImpl                     - usernamegeneral
2014-02-03 17:02:25,347 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 17:02:25,350 [main           ] INFO  UserDSImpl                     - userId:4 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 17:02:25,352 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@44734242[userId=4,username=general,password=MTIzNDU2,createTime=Mon Feb 03 17:02:25 NZDT 2014]
2014-02-03 17:02:25,352 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:2014-02-03 04:02:25)
2014-02-03 17:02:25,353 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:2014-02-03 04:02:25)
2014-02-03 17:02:25,369 [main           ] INFO  DepartmentDSImpl               - createDepartment start:co.nz.pizzashack.data.dto.DepartmentDto(deptId:null, deptName:Order manager, createDate:null) 
Hibernate: 
    select
        department0_.dept_id as dept1_8_,
        department0_.create_date as create2_8_,
        department0_.dept_name as dept3_8_ 
    from
        t_dept department0_ 
    where
        department0_.dept_name=? limit ?
2014-02-03 17:02:25,377 [main           ] INFO  DepartmentConverter            - toModel start:{} co.nz.pizzashack.data.dto.DepartmentDto(deptId:null, deptName:Order manager, createDate:null)
2014-02-03 17:02:25,381 [main           ] INFO  DepartmentConverter            - toModel end:{} co.nz.pizzashack.data.model.DepartmentModel@5cfe3a94[deptId=<null>,deptName=Order manager,createDate=<null>,staffDepartments=<null>]
Hibernate: 
    insert 
    into
        t_dept
        (dept_id, create_date, dept_name) 
    values
        (null, ?, ?)
Hibernate: 
    insert 
    into
        ACT_ID_GROUP
        (ID_, REV_, NAME_, TYPE_)     
    values
        (       ?,       1,        ?,       ?     )
2014-02-03 17:02:25,391 [main           ] INFO  DepartmentConverter            - toDto start:{} co.nz.pizzashack.data.model.DepartmentModel@5cfe3a94[deptId=1,deptName=Order manager,createDate=Mon Feb 03 17:02:25 NZDT 2014,staffDepartments=<null>]
2014-02-03 17:02:25,392 [main           ] INFO  DepartmentConverter            - toDto end:{} co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-03)
2014-02-03 17:02:25,392 [main           ] INFO  DepartmentDSImpl               - createDepartment end:co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-03) 
2014-02-03 17:02:25,393 [main           ] INFO  WorkflowInitialDataSetup       - department:co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-03) 
2014-02-03 17:02:25,416 [main           ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:null, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-03 04:02:25)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-02-03 17:02:25,424 [main           ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:null, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-03 04:02:25))
2014-02-03 17:02:25,446 [main           ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@21cff9da[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@5d1c688d[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-02-03 17:02:25,497 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@21cff9da[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@5d1c688d[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=Mon Feb 03 17:02:25 NZDT 2014] 
2014-02-03 17:02:25,497 [main           ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = ?
Hibernate: 
    update
        ACT_GE_PROPERTY      
    SET
        REV_ = ?,
        VALUE_ = ?      
    where
        NAME_ = ?       
        and REV_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-02-03 17:02:25,518 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-02-03 17:02:25,526 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@21cff9da[staffId=1,individual=co.nz.pizzashack.data.model.IndividualModel@5d1c688d[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=Mon Feb 03 17:02:25 NZDT 2014]
2014-02-03 17:02:25,534 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:1, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:2014-02-03, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-02-03 17:02:25,535 [main           ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:1, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:2014-02-03, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-02-03 17:02:25,539 [main           ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:null, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-03 04:02:25)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-02-03 17:02:25,541 [main           ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:null, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-03 04:02:25))
2014-02-03 17:02:25,542 [main           ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@5564e41d[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@52bc57b7[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-02-03 17:02:25,552 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@5564e41d[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@52bc57b7[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=Mon Feb 03 17:02:25 NZDT 2014] 
2014-02-03 17:02:25,552 [main           ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-02-03 17:02:25,556 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-02-03 17:02:25,559 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@5564e41d[staffId=2,individual=co.nz.pizzashack.data.model.IndividualModel@52bc57b7[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=Mon Feb 03 17:02:25 NZDT 2014]
2014-02-03 17:02:25,560 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:2, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:2014-02-03, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-02-03 17:02:25,561 [main           ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:2, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:2014-02-03, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-02-03 17:02:25,562 [main           ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:null, departments:null, role:manager, level:junior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-03 04:02:25)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-02-03 17:02:25,564 [main           ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:null, departments:null, role:manager, level:junior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-03 04:02:25))
2014-02-03 17:02:25,564 [main           ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@14df5cc9[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@54449ad3[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-02-03 17:02:25,571 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@14df5cc9[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@54449ad3[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=Mon Feb 03 17:02:25 NZDT 2014] 
2014-02-03 17:02:25,571 [main           ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-02-03 17:02:25,576 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-02-03 17:02:25,580 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@14df5cc9[staffId=3,individual=co.nz.pizzashack.data.model.IndividualModel@54449ad3[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=Mon Feb 03 17:02:25 NZDT 2014]
2014-02-03 17:02:25,581 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:3, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:2014-02-03, departments:null, role:manager, level:null, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-02-03 17:02:25,581 [main           ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:3, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:2014-02-03, departments:null, role:manager, level:null, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-02-03 17:02:25,582 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-02-03 17:02:25,592 [main           ] INFO  BpmnDeployer                   - Processing resource bpmn/OrderBillingProcess.bpmn20.xml
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 117: Having multiple <family> in <alias> isn't supported and may not work as expected
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-02-03 17:02:29,752 [main           ] INFO  RulesDeployer                  - Processing resource bpmn/OrderBillingProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 17:02:29,763 [main           ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderBillingProcess:1:7]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-02-03 17:02:29,770 [main           ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@2545f798[wfId=1,name=orderBillingProcess,deployId=4,processDefinitionKey=orderBillingProcess,processDefinitionId=orderBillingProcess:1:7,createTime=Mon Feb 03 17:02:25 NZDT 2014]
2014-02-03 17:02:29,783 [main           ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-02-03 04:02:25)
2014-02-03 17:02:29,783 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-02-03 04:02:25)
2014-02-03 17:02:29,783 [main           ] INFO  WorkflowInitialDataSetup       - deploy billing process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-02-03 04:02:25) 
2014-02-03 17:02:29,783 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-02-03 17:02:29,785 [main           ] INFO  BpmnDeployer                   - Processing resource bpmn/OrdercoreProcess.bpmn20.xml
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-02-03 17:02:29,874 [main           ] INFO  RulesDeployer                  - Processing resource bpmn/OrdercoreProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 17:02:29,879 [main           ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderCoreProcess:1:11]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-02-03 17:02:29,881 [main           ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@16c3ea9b[wfId=2,name=orderCoreProcess,deployId=8,processDefinitionKey=orderCoreProcess,processDefinitionId=orderCoreProcess:1:11,createTime=Mon Feb 03 17:02:29 NZDT 2014]
2014-02-03 17:02:29,881 [main           ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-02-03 04:02:29)
2014-02-03 17:02:29,881 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-02-03 04:02:29)
2014-02-03 17:02:29,881 [main           ] INFO  WorkflowInitialDataSetup       - deploy core process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-02-03 04:02:29) 
2014-02-03 17:02:29,882 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-02-03 17:02:29,883 [main           ] INFO  BpmnDeployer                   - Processing resource bpmn/OrderlocalProcess.bpmn20.xml
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-02-03 17:02:30,035 [main           ] INFO  RulesDeployer                  - Processing resource bpmn/OrderlocalProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 17:02:30,043 [main           ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderlocalProcess:1:15]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-02-03 17:02:30,044 [main           ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@692704e9[wfId=3,name=orderlocalProcess,deployId=12,processDefinitionKey=orderlocalProcess,processDefinitionId=orderlocalProcess:1:15,createTime=Mon Feb 03 17:02:29 NZDT 2014]
2014-02-03 17:02:30,045 [main           ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 04:02:29)
2014-02-03 17:02:30,045 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 04:02:29)
2014-02-03 17:02:30,045 [main           ] INFO  WorkflowInitialDataSetup       - deploy local main process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 04:02:29) 
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
2014-02-03 17:02:30,171 [main           ] INFO  SimpleUrlHandlerMapping        - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2014-02-03 17:02:30,173 [main           ] INFO  SimpleUrlHandlerMapping        - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler]
2014-02-03 17:02:30,616 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/logout],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LogoutController.logout(javax.servlet.http.HttpSession)
2014-02-03 17:02:30,616 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/login],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LoginController.showLoginPage(org.springframework.ui.Model)
2014-02-03 17:02:30,616 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/login],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LoginController.handleLogin(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws co.nz.pizzashack.AuthenticationException
2014-02-03 17:02:30,617 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/index],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.IndexController.index(org.springframework.ui.Model,co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-02-03 17:02:30,618 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,618 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/search],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.search(co.nz.pizzashack.data.dto.UserDto,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,618 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.create(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 17:02:30,619 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.update(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 17:02:30,619 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/{userId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,619 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/createUser],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public co.nz.pizzashack.data.dto.UserDto co.nz.pizzashack.controller.UserController.createUser(co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-02-03 17:02:30,619 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,619 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/update/{userId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,619 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/{userId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.deleteUser(java.lang.Long) throws java.lang.Exception
2014-02-03 17:02:30,619 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/check/{userName}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.checkUser(java.lang.String) throws java.lang.Exception
2014-02-03 17:02:30,620 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/adminIndex],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.AdminIndexController.index(org.springframework.ui.Model,co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-02-03 17:02:30,621 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,621 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/{deptId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.delete(java.lang.Long) throws java.lang.Exception
2014-02-03 17:02:30,621 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/search],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.search(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,621 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.create(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 17:02:30,622 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.update(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 17:02:30,622 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/{deptId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,622 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/selectdepts],methods=[GET],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.util.Set<co.nz.pizzashack.data.dto.DepartmentDto> co.nz.pizzashack.controller.DepartmentController.select() throws java.lang.Exception
2014-02-03 17:02:30,622 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,622 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/update/{deptId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,623 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/{orderProcessId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.showOrderProcess(java.lang.Long,org.springframework.ui.Model,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-02-03 17:02:30,623 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/claimReview/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.claimReviewTask(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-02-03 17:02:30,623 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/review],methods=[POST],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.reviewOrder(co.nz.pizzashack.data.dto.OrderReviewRecordDto,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-02-03 17:02:30,624 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderQuery/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderQueryController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,624 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderQuery/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderQueryController.show(java.lang.String,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,624 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderQuery/showHistory/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.util.Set<co.nz.pizzashack.data.dto.ProcessActivityDto> co.nz.pizzashack.controller.OrderQueryController.showHistory(java.lang.String) throws java.lang.Exception
2014-02-03 17:02:30,625 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,625 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/{staffId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.delete(java.lang.Long) throws java.lang.Exception
2014-02-03 17:02:30,626 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.create(co.nz.pizzashack.data.dto.StaffDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 17:02:30,626 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.update(co.nz.pizzashack.data.dto.StaffDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 17:02:30,626 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/{staffId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,626 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,626 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/update/{staffId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,648 [main           ] INFO  ContextLoader                  - Root WebApplicationContext: initialization completed in 12912 ms
2014-02-03 17:02:30.652:INFO:oejsh.ContextHandler:started o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
Feb 03, 2014 5:02:30 PM com.sun.jersey.api.core.PackagesResourceConfig init
INFO: Scanning for root resource and provider classes in the packages:
  co.nz.pizzashack.integration.api
Feb 03, 2014 5:02:30 PM com.sun.jersey.api.core.ScanningResourceConfig logClasses
INFO: Root resource classes found:
  class co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl
Feb 03, 2014 5:02:30 PM com.sun.jersey.api.core.ScanningResourceConfig init
INFO: No provider classes found.
Feb 03, 2014 5:02:30 PM com.sun.jersey.spi.spring.container.servlet.SpringServlet getContext
INFO: Using default applicationContext
Feb 03, 2014 5:02:30 PM com.sun.jersey.spi.spring.container.SpringComponentProviderFactory registerSpringBeans
INFO: Registering Spring bean, pizzashackAPIImpl, of type co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl as a root resource class
Feb 03, 2014 5:02:30 PM com.sun.jersey.server.impl.application.WebApplicationImpl _initiate
INFO: Initiating Jersey application, version 'Jersey: 1.17.1 02/28/2013 12:47 PM'
Feb 03, 2014 5:02:31 PM com.sun.jersey.spi.inject.Errors processErrorMessages
WARNING: The following warnings have been detected with resource and/or provider classes:
  WARNING: A HTTP GET method, public javax.ws.rs.core.Response co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl.getOrderProcessByOrderNo(java.lang.String), should not consume any entity.
Feb 03, 2014 5:02:31 PM com.sun.jersey.spi.spring.container.servlet.SpringServlet getContext
INFO: Using default applicationContext
Feb 03, 2014 5:02:31 PM com.sun.jersey.spi.spring.container.SpringComponentProviderFactory registerSpringBeans
INFO: Registering Spring bean, pizzashackAPIImpl, of type co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl as a root resource class
Feb 03, 2014 5:02:31 PM com.sun.jersey.server.impl.application.WebApplicationImpl _initiate
INFO: Initiating Jersey application, version 'Jersey: 1.17.1 02/28/2013 12:47 PM'
Feb 03, 2014 5:02:31 PM com.sun.jersey.spi.inject.Errors processErrorMessages
WARNING: The following warnings have been detected with resource and/or provider classes:
  WARNING: A HTTP GET method, public javax.ws.rs.core.Response co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl.getOrderProcessByOrderNo(java.lang.String), should not consume any entity.
2014-02-03 17:02:31.336:INFO:/:Initializing Spring FrameworkServlet 'dispatcher'
2014-02-03 17:02:31,336 [main           ] INFO  DispatcherServlet              - FrameworkServlet 'dispatcher': initialization started
2014-02-03 17:02:31,353 [main           ] INFO  DispatcherServlet              - FrameworkServlet 'dispatcher': initialization completed in 17 ms
2014-02-03 17:02:31.365:INFO:oejs.AbstractConnector:Started SelectChannelConnector@0.0.0.0:8111
[INFO] Started Jetty Server
[INFO] Starting scanner at interval of 10 seconds.
2014-02-03 17:04:15,986 [ckOrderInbound]] INFO  orderProcessRoute              - Received message 51837
Hibernate: 
    SELECT
        COUNT(*) 
    FROM
        T_ORDER_REQUEST_HISTORY 
    WHERE
        processor_name = ? 
        AND message_id = ?
Hibernate: 
    INSERT 
    INTO
        T_ORDER_REQUEST_HISTORY
        (processor_name, message_id, created_at) 
    VALUES
        (?, ?, ?)
2014-02-03 17:04:15,999 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlUnmarshal start:{} <order>
  <address>25 mavon downs</address>
  <order-list>
    <order-details>
      <pizza-name>Garden Fresh</pizza-name>
      <quantity>4</quantity>
    </order-details>
    <order-details>
      <pizza-name>Chicken Parmesan</pizza-name>
      <quantity>10</quantity>
    </order-details>
  </order-list>
  <customer>
    <name>david</name>
    <email>david.yuan124@gmail.com</email>
  </customer>
</order>
orderDetailsDto: co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Garden Fresh, qty:4, totalPrice:0)
orderDetailsDto: co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)
2014-02-03 17:04:16,063 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlUnmarshal end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:null, orderNo:null, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:david, customerEmail:david.yuan124@gmail.com, level:null), address:25 mavon downs, status:null, orderTime:null, deliverTime:null)
2014-02-03 17:04:16,063 [ckOrderInbound]] INFO  OrderRequestProcessor          - orderRequestProcessor start:{} 
2014-02-03 17:04:16,064 [ckOrderInbound]] INFO  OrderRequestProcessor          - order request:co.nz.pizzashack.data.dto.OrderDto(orderId:null, orderNo:null, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:david, customerEmail:david.yuan124@gmail.com, level:null), address:25 mavon downs, status:null, orderTime:null, deliverTime:null) 
2014-02-03 17:04:16,064 [ckOrderInbound]] INFO  OrderRequestProcessor          - messageId:51837 
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
2014-02-03 17:04:16,066 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@c8c2fc5[userId=4,username=general,password=MTIzNDU2,createTime=17:02:25]
2014-02-03 17:04:16,070 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)
2014-02-03 17:04:16,070 [ckOrderInbound]] INFO  OrderRequestProcessor          - default operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25) 
2014-02-03 17:04:16,071 [ckOrderInbound]] INFO  OrderProcessDSImpl             - startOrderProcess start:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.process_definition_key=? 
        and workflowmo0_.category=? limit ?
Hibernate: 
    insert 
    into
        t_order
        (order_id, cust_id, deliver_time, order_no, order_time, payment_remarks, payment_status, quantity, ship_address, status, total_price) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 17:04:16,084 [ckOrderInbound]] INFO  ActivitiFacade                 - startProcessInstance start:{}
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
2014-02-03 17:04:16,103 [ckOrderInbound]] INFO  ActivitiFacade                 - startProcessInstance end:{}
Hibernate: 
    insert 
    into
        t_order_process
        (order_process_id, active_process_definition_id, active_process_instance_id, complete_time, create_time, execution_id, main_process_definition_id, main_process_instance_id, operator_id, order_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2014-02-03 17:04:16,110 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@5168c464[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=Mon Feb 03 17:04:16 NZDT 2014,completeTime=<null>]
2014-02-03 17:04:16,127 [ckOrderInbound]] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@a585c32[orderId=1,orderNo=059cbd85-517f-430a-824d-a72c91b87d3e,quantity=<null>,status=0,paymentStatus=0,deliverTime=<null>,totalPrice=<null>,orderTime=Mon Feb 03 17:04:16 NZDT 2014]
2014-02-03 17:04:16,128 [ckOrderInbound]] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 04:04:16, deliverTime:null)
2014-02-03 17:04:16,129 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@1d121057[userId=4,username=general,password=MTIzNDU2,createTime=17:02:25]
2014-02-03 17:04:16,129 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)
2014-02-03 17:04:16,135 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 04:04:16, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 04:04:16, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
2014-02-03 17:04:16,136 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 04:04:16, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 04:04:16, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
2014-02-03 17:04:16,149 [ckOrderInbound]] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 17:04:16,149 [ckOrderInbound]] INFO  ActivitiFacade                 - executionId: 16, processDefinitionId: orderlocalProcess:1:15
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 17:04:16,177 [ckOrderInbound]] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 17:04:16,184 [ckOrderInbound]] INFO  OrderProcessAccessor           - assign operator[4] to task[Data entry]
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    insert 
    into
        ACT_RU_IDENTITYLINK
        (ID_, REV_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_, PROC_DEF_ID_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_IDENTITYLINK
        (ID_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_)     
    values
        (?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_TASK      
    SET
        REV_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        PRIORITY_ = ?,
        CREATE_TIME_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        DELEGATION_ = ?,
        EXECUTION_ID_ = ?,
        PROC_DEF_ID_ = ?,
        DESCRIPTION_ = ?,
        DUE_DATE_ = ?,
        SUSPENSION_STATE_ = ?      
    where
        ID_= ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
2014-02-03 17:04:16,205 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 04:04:16, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 04:04:16, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
2014-02-03 17:04:16,206 [ckOrderInbound]] INFO  OrderProcessDSImpl             - startOrderProcess end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 04:04:16, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 04:04:16, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
2014-02-03 17:04:16,208 [ckOrderInbound]] INFO  OrderRequestProcessor          - after start process:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 04:04:16, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 04:04:16, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
2014-02-03 17:04:16,208 [ckOrderInbound]] INFO  OrderProcessDSImpl             - dataEntry start:059cbd85-517f-430a-824d-a72c91b87d3e
2014-02-03 17:04:16,208 [ckOrderInbound]] INFO  OrderProcessDSImpl             - getOrderProcessByOrderNo start************************************
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 17:04:16,218 [ckOrderInbound]] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@7b6c4980[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=17:04:16,completeTime=<null>] 
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_,
        customermo0_.address as address2_,
        customermo0_.credits as credits2_,
        customermo0_.customer_name as customer4_2_,
        customermo0_.email as email2_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.email=? limit ?
2014-02-03 17:04:16,224 [ckOrderInbound]] INFO  CustomerConverter              - toModel start:{} co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:david, customerEmail:david.yuan124@gmail.com, level:null)
2014-02-03 17:04:16,226 [ckOrderInbound]] INFO  CustomerConverter              - toModel end:{} co.nz.pizzashack.data.model.CustomerModel@23b5ab4c[custId=<null>,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
Hibernate: 
    insert 
    into
        t_customer
        (cust_id, address, credits, customer_name, email) 
    values
        (null, ?, ?, ?, ?)
2014-02-03 17:04:16,229 [ckOrderInbound]] INFO  OrderProcessDSImpl             - orderDetailsSet size:2 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
2014-02-03 17:04:16,238 [ckOrderInbound]] INFO  OrderProcessDSImpl             - added orderPizzashackModel:co.nz.pizzashack.data.model.OrderPizzashackModel@369b4965[orderPizzashackId=<null>,totalPrice=0,qty=4] 
Hibernate: 
    insert 
    into
        t_order_pizzashack
        (order_pizza_id, order_id, pizzashack_id, qty, total_price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
2014-02-03 17:04:16,245 [ckOrderInbound]] INFO  OrderProcessDSImpl             - added orderPizzashackModel:co.nz.pizzashack.data.model.OrderPizzashackModel@2afcc578[orderPizzashackId=<null>,totalPrice=0,qty=10] 
Hibernate: 
    insert 
    into
        t_order_pizzashack
        (order_pizza_id, order_id, pizzashack_id, qty, total_price) 
    values
        (null, ?, ?, ?, ?)
2014-02-03 17:04:16,246 [ckOrderInbound]] INFO  OrderProcessDSImpl             - after add detailsDto, size in model:2 
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        E.BUSINESS_KEY_ = ?                                                                                 
        and RES.PROC_DEF_ID_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                    
        and RES.ASSIGNEE_ = ?                                                                        
        and E.BUSINESS_KEY_ = ?
2014-02-03 17:04:16,251 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@7b6c4980[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=17:04:16,completeTime=<null>]
2014-02-03 17:04:16,256 [ckOrderInbound]] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@3aae94ed[orderId=1,orderNo=059cbd85-517f-430a-824d-a72c91b87d3e,quantity=0,status=0,paymentStatus=0,deliverTime=<null>,totalPrice=0,orderTime=2014-02-03 17:04:16.077]
2014-02-03 17:04:16,259 [ckOrderInbound]] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@23b5ab4c[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 17:04:16,268 [ckOrderInbound]] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-02-03 17:04:16,272 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@369b4965[orderPizzashackId=1,totalPrice=0,qty=4]
2014-02-03 17:04:16,280 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0)
2014-02-03 17:04:16,280 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@2afcc578[orderPizzashackId=2,totalPrice=0,qty=10]
2014-02-03 17:04:16,281 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)
2014-02-03 17:04:16,281 [ckOrderInbound]] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 04:04:16, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 17:04:16,286 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@598c8745[userId=4,username=general,password=MTIzNDU2,createTime=17:02:25]
2014-02-03 17:04:16,287 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)
2014-02-03 17:04:16,287 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 04:04:16, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:16, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        PARENT_TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE 
    where
        TASK_ID_ =     ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
2014-02-03 17:04:16,316 [ckOrderInbound]] INFO  ainTransitionExecutionListener - orderMainUserTaskExecutionListener start:{} 
2014-02-03 17:04:16,316 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity id:orderCoreCallactivity
2014-02-03 17:04:16,316 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity name:Core process
2014-02-03 17:04:16,316 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity type:callActivity
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
start calculate: co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 04:04:16, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:16, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
2014-02-03 17:04:16,519 [ckOrderInbound]] INFO  PizzashackCaculator            - caculate start:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 04:04:16, deliverTime:null) 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 17:04:16,527 [ckOrderInbound]] INFO  PizzashackCaculator            - caculate end:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 04:04:16, deliverTime:null) 
after calculation: co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 04:04:16, deliverTime:null)
2014-02-03 17:04:16,528 [ckOrderInbound]] INFO  culationMergeExecutionListener - CaculationMergeExecutionListener start
2014-02-03 17:04:16,529 [ckOrderInbound]] INFO  culationMergeExecutionListener - after calculation, orderProcess:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 04:04:16, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:16, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
2014-02-03 17:04:16,529 [ckOrderInbound]] INFO  OrderProcessAccessor           - merge calculation result
2014-02-03 17:04:16,529 [ckOrderInbound]] INFO  OrderProcessAccessor           - total price:390.00 
2014-02-03 17:04:16,529 [ckOrderInbound]] INFO  OrderProcessAccessor           - qty:14 
2014-02-03 17:04:16,529 [ckOrderInbound]] INFO  OrderProcessAccessor           - orderDetailsSet.size():2
2014-02-03 17:04:16,529 [ckOrderInbound]] INFO  culationMergeExecutionListener - CaculationMergeExecutionListener end
total qty: 14
after autoreview: 2
reviewTransBean: co.nz.pizzashack.data.dto.OrderReviewRecordDto(reviewRecordId:null, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, content:order number is more than 10 but less than 30, reviewResult:pending, createTime:2014-02-03 04:04:16, reviewer:null)
2014-02-03 17:04:16,605 [ckOrderInbound]] INFO  oManualReviewExecutionListener - ToManualReviewExecutionListener start:{} 
2014-02-03 17:04:16,605 [ckOrderInbound]] INFO  oManualReviewExecutionListener - eventName:take 
2014-02-03 17:04:16,605 [ckOrderInbound]] INFO  oManualReviewExecutionListener - activitiProcessDefinitionId:orderCoreProcess:1:11
2014-02-03 17:04:16,605 [ckOrderInbound]] INFO  oManualReviewExecutionListener - activitiProcesssInstanceId:30
2014-02-03 17:04:16,606 [ckOrderInbound]] INFO  oManualReviewExecutionListener - get orderReviewRecord:co.nz.pizzashack.data.dto.OrderReviewRecordDto(reviewRecordId:null, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, content:order number is more than 10 but less than 30, reviewResult:pending, createTime:2014-02-03 04:04:16, reviewer:null) 
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_IDENTITYLINK
        (ID_, REV_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_, PROC_DEF_ID_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_IDENTITYLINK
        (ID_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_)     
    values
        (?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    update
        ACT_RU_EXECUTION 
    set
        REV_ = ?,
        BUSINESS_KEY_ = ?,
        PROC_DEF_ID_ = ?,
        ACT_ID_ = ?,
        IS_ACTIVE_ = ?,
        IS_CONCURRENT_ = ?,
        IS_SCOPE_ = ?,
        IS_EVENT_SCOPE_ = ?,
        PARENT_ID_ = ?,
        SUPER_EXEC_ = ?,
        SUSPENSION_STATE_ = ?,
        CACHED_ENT_STATE_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_TASK 
    where
        ID_ = ? 
        and REV_ = ?
2014-02-03 17:04:16,647 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 04:04:16, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 05:04:16, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-02-03 17:04:16,659 [ckOrderInbound]] INFO  OrderProcessAccessor           - get OrderProcessDto from flow:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 04:04:16, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 05:04:16, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
2014-02-03 17:04:16,659 [ckOrderInbound]] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 17:04:16,659 [ckOrderInbound]] INFO  ActivitiFacade                 - executionId: 30, processDefinitionId: orderCoreProcess:1:11
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 17:04:16,663 [ckOrderInbound]] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 17:04:16,666 [ckOrderInbound]] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo start:{}
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 17:04:16,667 [ckOrderInbound]] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo end:{}
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
2014-02-03 17:04:16,669 [ckOrderInbound]] INFO  OrderProcessAccessor           - after merge orderProcessModel:co.nz.pizzashack.data.model.OrderProcessModel@7b6c4980[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=17:04:16,completeTime=<null>] 
2014-02-03 17:04:16,670 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 04:04:16, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 05:04:16, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
2014-02-03 17:04:16,671 [ckOrderInbound]] INFO  OrderProcessDSImpl             - dataEntry end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 04:04:16, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 05:04:16, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
Hibernate: 
    update
        t_order_process 
    set
        active_process_definition_id=?,
        active_process_instance_id=?,
        complete_time=?,
        create_time=?,
        execution_id=?,
        main_process_definition_id=?,
        main_process_instance_id=?,
        operator_id=?,
        order_id=? 
    where
        order_process_id=?
Hibernate: 
    update
        t_order 
    set
        cust_id=?,
        deliver_time=?,
        order_no=?,
        order_time=?,
        payment_remarks=?,
        payment_status=?,
        quantity=?,
        ship_address=?,
        status=?,
        total_price=? 
    where
        order_id=?
Hibernate: 
    update
        t_order_pizzashack 
    set
        order_id=?,
        pizzashack_id=?,
        qty=?,
        total_price=? 
    where
        order_pizza_id=?
Hibernate: 
    update
        t_order_pizzashack 
    set
        order_id=?,
        pizzashack_id=?,
        qty=?,
        total_price=? 
    where
        order_pizza_id=?
2014-02-03 17:04:16,684 [ckOrderInbound]] INFO  OrderRequestProcessor          - after dataEntry:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 04:04:16, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 05:04:16, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
2014-02-03 17:04:16,684 [ckOrderInbound]] INFO  OrderConverter                 - toModel start:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 04:04:16, deliverTime:null)
2014-02-03 17:04:16,685 [ckOrderInbound]] INFO  OrderConverter                 - toModel end:{} co.nz.pizzashack.data.model.OrderModel@7898e7e0[orderId=<null>,orderNo=059cbd85-517f-430a-824d-a72c91b87d3e,quantity=14,status=<null>,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=<null>]
Hibernate: 
    select
        orderreque0_.message_id as message1_0_0_,
        orderreque0_.created_at as created2_0_0_,
        orderreque0_.order_id as order4_0_0_,
        orderreque0_.processor_name as processor3_0_0_ 
    from
        t_order_request_history orderreque0_ 
    where
        orderreque0_.message_id=?
2014-02-03 17:04:16,686 [ckOrderInbound]] INFO  OrderRequestProcessor          - orderRequestProcessor end:{} 
2014-02-03 17:04:16,688 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlMarshal start:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 04:04:16, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 05:04:16, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
2014-02-03 17:04:16,697 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - pendingActivity:{} co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
2014-02-03 17:04:16,697 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - customerDto:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-02-03 17:04:16,714 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlMarshal end:{} <order-process>
  <process-id>1</process-id>
  <create-time>1970-01-01 05:04:16</create-time>
  <complete-time>null</complete-time>
  <operator>general</operator>
  <order>
    <order-no>059cbd85-517f-430a-824d-a72c91b87d3e</order-no>
    <address>25 mavon downs</address>
    <quantity>14</quantity>
    <total-price>390.00</total-price>
    <status>pendingOnReview</status>
    <order-time>2014-02-03 04:04:16</order-time>
    <deliver-time>null</deliver-time>
    <order-list>
      <order-details>
        <pizza-name>Garden Fresh</pizza-name>
        <quantity>4</quantity>
        <total-price>140.00</total-price>
      </order-details>
      <order-details>
        <pizza-name>Chicken Parmesan</pizza-name>
        <quantity>10</quantity>
        <total-price>250.00</total-price>
      </order-details>
    </order-list>
  </order>
  <customer>
    <name>david</name>
    <email>david.yuan124@gmail.com</email>
  </customer>
  <pending-activity>
    <name>Manual underwriting</name>
    <type>userTask</type>
    <assignee>null</assignee>
  </pending-activity>
</order-process>
2014-02-03 17:04:16,716 [ckOrderInbound]] INFO  output                         - Exchange[ExchangePattern: InOnly, BodyType: String, Body: <order-process>  <process-id>1</process-id>  <create-time>1970-01-01 05:04:16</create-time>  <complete-time>null</complete-time>  <operator>general</operator>  <order>    <order-no>059cbd85-517f-430a-824d-a72c91b87d3e</order-no>    <address>25 mavon downs</address>    <quantity>14</quantity>    <total-price>390.00</total-price>    <status>pendingOnReview</status>    <order-time>2014-02-03 04:04:16</order-time>    <deliver-time>null</deliver-time>    <order-list>      <order-details>        <pizza-name>Garden Fresh</pizza-name>        <quantity>4</quantity>        <total-price>140.00</total-price>      </order-details>      <order-details>        <pizza-name>Chicken Parmesan</pizza-name>        <quantity>10</quantity>        <total-price>250.00</total-price>      </order-details>    </order-list>  </order>  <customer>    <name>david</name>    <email>david.yuan124@gmail.com</email>  </customer>  <pending-activity>    <name>Manual underwriting</name>    <type>userTask</type>    <assignee>null</assignee>  </pending-activity></order-process>]
2014-02-03 17:04:16,762 [ckOrderInbound]] INFO  orderProcessRoute              - Signalled to stop route
2014-02-03 17:04:24,594 [ckOrderInbound]] INFO  orderProcessRoute              - Received message 55892
Hibernate: 
    SELECT
        COUNT(*) 
    FROM
        T_ORDER_REQUEST_HISTORY 
    WHERE
        processor_name = ? 
        AND message_id = ?
Hibernate: 
    INSERT 
    INTO
        T_ORDER_REQUEST_HISTORY
        (processor_name, message_id, created_at) 
    VALUES
        (?, ?, ?)
2014-02-03 17:04:24,597 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlUnmarshal start:{} <order>
  <address>25 mavon downs</address>
  <order-list>
    <order-details>
      <pizza-name>Chicken Parmesan</pizza-name>
      <quantity>2</quantity>
    </order-details>
    <order-details>
      <pizza-name>Spicy Italian</pizza-name>
      <quantity>4</quantity>
    </order-details>
  </order-list>
  <customer>
    <name>david</name>
    <email>david.yuan124@gmail.com</email>
  </customer>
</order>
orderDetailsDto: co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:2, totalPrice:0)
orderDetailsDto: co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Spicy Italian, qty:4, totalPrice:0)
2014-02-03 17:04:24,600 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlUnmarshal end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:null, orderNo:null, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:david, customerEmail:david.yuan124@gmail.com, level:null), address:25 mavon downs, status:null, orderTime:null, deliverTime:null)
2014-02-03 17:04:24,600 [ckOrderInbound]] INFO  OrderRequestProcessor          - orderRequestProcessor start:{} 
2014-02-03 17:04:24,601 [ckOrderInbound]] INFO  OrderRequestProcessor          - order request:co.nz.pizzashack.data.dto.OrderDto(orderId:null, orderNo:null, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:david, customerEmail:david.yuan124@gmail.com, level:null), address:25 mavon downs, status:null, orderTime:null, deliverTime:null) 
2014-02-03 17:04:24,601 [ckOrderInbound]] INFO  OrderRequestProcessor          - messageId:55892 
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
2014-02-03 17:04:24,603 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@1bbd616a[userId=4,username=general,password=MTIzNDU2,createTime=17:02:25]
2014-02-03 17:04:24,604 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)
2014-02-03 17:04:24,604 [ckOrderInbound]] INFO  OrderRequestProcessor          - default operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25) 
2014-02-03 17:04:24,604 [ckOrderInbound]] INFO  OrderProcessDSImpl             - startOrderProcess start:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.process_definition_key=? 
        and workflowmo0_.category=? limit ?
Hibernate: 
    insert 
    into
        t_order
        (order_id, cust_id, deliver_time, order_no, order_time, payment_remarks, payment_status, quantity, ship_address, status, total_price) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 17:04:24,609 [ckOrderInbound]] INFO  ActivitiFacade                 - startProcessInstance start:{}
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
2014-02-03 17:04:24,614 [ckOrderInbound]] INFO  ActivitiFacade                 - startProcessInstance end:{}
Hibernate: 
    insert 
    into
        t_order_process
        (order_process_id, active_process_definition_id, active_process_instance_id, complete_time, create_time, execution_id, main_process_definition_id, main_process_instance_id, operator_id, order_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2014-02-03 17:04:24,615 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@7289b546[orderProcessId=2,executionId=59,mainProcessInstanceId=59,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=59,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=Mon Feb 03 17:04:24 NZDT 2014,completeTime=<null>]
2014-02-03 17:04:24,615 [ckOrderInbound]] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@7988be1[orderId=2,orderNo=32255c96-f798-42e9-a5f4-6ab18ef9b090,quantity=<null>,status=0,paymentStatus=0,deliverTime=<null>,totalPrice=<null>,orderTime=Mon Feb 03 17:04:24 NZDT 2014]
2014-02-03 17:04:24,616 [ckOrderInbound]] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 04:04:24, deliverTime:null)
2014-02-03 17:04:24,616 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@624f2ad1[userId=4,username=general,password=MTIzNDU2,createTime=17:02:25]
2014-02-03 17:04:24,617 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)
2014-02-03 17:04:24,617 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 04:04:24, completeTime:null, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
2014-02-03 17:04:24,617 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 04:04:24, completeTime:null, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
2014-02-03 17:04:24,620 [ckOrderInbound]] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 17:04:24,620 [ckOrderInbound]] INFO  ActivitiFacade                 - executionId: 59, processDefinitionId: orderlocalProcess:1:15
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 17:04:24,623 [ckOrderInbound]] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 17:04:24,625 [ckOrderInbound]] INFO  OrderProcessAccessor           - assign operator[4] to task[Data entry]
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    insert 
    into
        ACT_RU_IDENTITYLINK
        (ID_, REV_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_, PROC_DEF_ID_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_IDENTITYLINK
        (ID_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_)     
    values
        (?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_TASK      
    SET
        REV_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        PRIORITY_ = ?,
        CREATE_TIME_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        DELEGATION_ = ?,
        EXECUTION_ID_ = ?,
        PROC_DEF_ID_ = ?,
        DESCRIPTION_ = ?,
        DUE_DATE_ = ?,
        SUSPENSION_STATE_ = ?      
    where
        ID_= ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
2014-02-03 17:04:24,634 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 04:04:24, completeTime:null, executionId:59, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
2014-02-03 17:04:24,635 [ckOrderInbound]] INFO  OrderProcessDSImpl             - startOrderProcess end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 04:04:24, completeTime:null, executionId:59, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
2014-02-03 17:04:24,636 [ckOrderInbound]] INFO  OrderRequestProcessor          - after start process:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 04:04:24, completeTime:null, executionId:59, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
2014-02-03 17:04:24,637 [ckOrderInbound]] INFO  OrderProcessDSImpl             - dataEntry start:32255c96-f798-42e9-a5f4-6ab18ef9b090
2014-02-03 17:04:24,637 [ckOrderInbound]] INFO  OrderProcessDSImpl             - getOrderProcessByOrderNo start************************************
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 17:04:24,639 [ckOrderInbound]] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@e1b97ad[orderProcessId=2,executionId=59,mainProcessInstanceId=59,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=59,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=17:04:24,completeTime=<null>] 
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_,
        customermo0_.address as address2_,
        customermo0_.credits as credits2_,
        customermo0_.customer_name as customer4_2_,
        customermo0_.email as email2_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.email=? limit ?
2014-02-03 17:04:24,640 [ckOrderInbound]] INFO  OrderProcessDSImpl             - orderDetailsSet size:2 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
2014-02-03 17:04:24,641 [ckOrderInbound]] INFO  OrderProcessDSImpl             - added orderPizzashackModel:co.nz.pizzashack.data.model.OrderPizzashackModel@3f6aa8e3[orderPizzashackId=<null>,totalPrice=0,qty=2] 
Hibernate: 
    insert 
    into
        t_order_pizzashack
        (order_pizza_id, order_id, pizzashack_id, qty, total_price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
2014-02-03 17:04:24,643 [ckOrderInbound]] INFO  OrderProcessDSImpl             - added orderPizzashackModel:co.nz.pizzashack.data.model.OrderPizzashackModel@7a22cf2b[orderPizzashackId=<null>,totalPrice=0,qty=4] 
Hibernate: 
    insert 
    into
        t_order_pizzashack
        (order_pizza_id, order_id, pizzashack_id, qty, total_price) 
    values
        (null, ?, ?, ?, ?)
2014-02-03 17:04:24,643 [ckOrderInbound]] INFO  OrderProcessDSImpl             - after add detailsDto, size in model:2 
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        E.BUSINESS_KEY_ = ?                                                                                 
        and RES.PROC_DEF_ID_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                    
        and RES.ASSIGNEE_ = ?                                                                        
        and E.BUSINESS_KEY_ = ?
2014-02-03 17:04:24,647 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@e1b97ad[orderProcessId=2,executionId=59,mainProcessInstanceId=59,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=59,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=17:04:24,completeTime=<null>]
2014-02-03 17:04:24,647 [ckOrderInbound]] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@3a74d7e6[orderId=2,orderNo=32255c96-f798-42e9-a5f4-6ab18ef9b090,quantity=0,status=0,paymentStatus=0,deliverTime=<null>,totalPrice=0,orderTime=2014-02-03 17:04:24.607]
2014-02-03 17:04:24,648 [ckOrderInbound]] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@3fbfccfb[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 17:04:24,648 [ckOrderInbound]] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-02-03 17:04:24,648 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@3f6aa8e3[orderPizzashackId=3,totalPrice=0,qty=2]
2014-02-03 17:04:24,648 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:0)
2014-02-03 17:04:24,648 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@7a22cf2b[orderPizzashackId=4,totalPrice=0,qty=4]
2014-02-03 17:04:24,648 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:0)
2014-02-03 17:04:24,649 [ckOrderInbound]] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 04:04:24, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 17:04:24,650 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@2440709b[userId=4,username=general,password=MTIzNDU2,createTime=17:02:25]
2014-02-03 17:04:24,650 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)
2014-02-03 17:04:24,651 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:null, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        PARENT_TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE 
    where
        TASK_ID_ =     ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
2014-02-03 17:04:24,659 [ckOrderInbound]] INFO  ainTransitionExecutionListener - orderMainUserTaskExecutionListener start:{} 
2014-02-03 17:04:24,659 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity id:orderCoreCallactivity
2014-02-03 17:04:24,659 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity name:Core process
2014-02-03 17:04:24,659 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity type:callActivity
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
start calculate: co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:null, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
2014-02-03 17:04:24,676 [ckOrderInbound]] INFO  PizzashackCaculator            - caculate start:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 04:04:24, deliverTime:null) 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 17:04:24,679 [ckOrderInbound]] INFO  PizzashackCaculator            - caculate end:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 04:04:24, deliverTime:null) 
after calculation: co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 04:04:24, deliverTime:null)
2014-02-03 17:04:24,680 [ckOrderInbound]] INFO  culationMergeExecutionListener - CaculationMergeExecutionListener start
2014-02-03 17:04:24,681 [ckOrderInbound]] INFO  culationMergeExecutionListener - after calculation, orderProcess:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:null, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
2014-02-03 17:04:24,681 [ckOrderInbound]] INFO  OrderProcessAccessor           - merge calculation result
2014-02-03 17:04:24,681 [ckOrderInbound]] INFO  OrderProcessAccessor           - total price:162.00 
2014-02-03 17:04:24,681 [ckOrderInbound]] INFO  OrderProcessAccessor           - qty:6 
2014-02-03 17:04:24,681 [ckOrderInbound]] INFO  OrderProcessAccessor           - orderDetailsSet.size():2
2014-02-03 17:04:24,681 [ckOrderInbound]] INFO  culationMergeExecutionListener - CaculationMergeExecutionListener end
total qty: 6
after autoreview: 0
reviewTransBean: co.nz.pizzashack.data.dto.OrderReviewRecordDto(reviewRecordId:null, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, content:null, reviewResult:accept, createTime:2014-02-03 04:04:24, reviewer:null)
Hibernate: 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = ?
Hibernate: 
    update
        ACT_GE_PROPERTY      
    SET
        REV_ = ?,
        VALUE_ = ?      
    where
        NAME_ = ?       
        and REV_ = ?
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RU_JOB J     
    where
        J.EXECUTION_ID_ = ?
Hibernate: 
    select
        *      
    from
        ACT_RU_EVENT_SUBSCR     
    where
        (
            EXECUTION_ID_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
2014-02-03 17:04:24,719 [ckOrderInbound]] INFO  OfCoreProcessExecutionListener - after core process, orderProcess:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:null, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 17:04:24,720 [ckOrderInbound]] INFO  ainTransitionExecutionListener - orderMainUserTaskExecutionListener start:{} 
2014-02-03 17:04:24,720 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity id:billingEntry
2014-02-03 17:04:24,720 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity name:Billing fill in
2014-02-03 17:04:24,720 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity type:userTask
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    update
        ACT_RU_EXECUTION 
    set
        REV_ = ?,
        BUSINESS_KEY_ = ?,
        PROC_DEF_ID_ = ?,
        ACT_ID_ = ?,
        IS_ACTIVE_ = ?,
        IS_CONCURRENT_ = ?,
        IS_SCOPE_ = ?,
        IS_EVENT_SCOPE_ = ?,
        PARENT_ID_ = ?,
        SUPER_EXEC_ = ?,
        SUSPENSION_STATE_ = ?,
        CACHED_ENT_STATE_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_TASK 
    where
        ID_ = ? 
        and REV_ = ?
2014-02-03 17:04:24,757 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:null, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-02-03 17:04:24,763 [ckOrderInbound]] INFO  OrderProcessAccessor           - get OrderProcessDto from flow:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:null, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
2014-02-03 17:04:24,763 [ckOrderInbound]] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 17:04:24,763 [ckOrderInbound]] INFO  ActivitiFacade                 - executionId: 59, processDefinitionId: orderlocalProcess:1:15
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 17:04:24,769 [ckOrderInbound]] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 17:04:24,772 [ckOrderInbound]] INFO  OrderProcessAccessor           - assign operator[4] to task[Billing fill in]
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_TASK      
    SET
        REV_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        PRIORITY_ = ?,
        CREATE_TIME_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        DELEGATION_ = ?,
        EXECUTION_ID_ = ?,
        PROC_DEF_ID_ = ?,
        DESCRIPTION_ = ?,
        DUE_DATE_ = ?,
        SUSPENSION_STATE_ = ?      
    where
        ID_= ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
2014-02-03 17:04:24,778 [ckOrderInbound]] INFO  OrderProcessAccessor           - after merge orderProcessModel:co.nz.pizzashack.data.model.OrderProcessModel@e1b97ad[orderProcessId=2,executionId=59,mainProcessInstanceId=59,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=59,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=17:04:24,completeTime=<null>] 
2014-02-03 17:04:24,780 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:null, executionId:59, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
2014-02-03 17:04:24,781 [ckOrderInbound]] INFO  OrderProcessDSImpl             - dataEntry end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:null, executionId:59, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
Hibernate: 
    update
        t_order 
    set
        cust_id=?,
        deliver_time=?,
        order_no=?,
        order_time=?,
        payment_remarks=?,
        payment_status=?,
        quantity=?,
        ship_address=?,
        status=?,
        total_price=? 
    where
        order_id=?
Hibernate: 
    update
        t_order_pizzashack 
    set
        order_id=?,
        pizzashack_id=?,
        qty=?,
        total_price=? 
    where
        order_pizza_id=?
Hibernate: 
    update
        t_order_pizzashack 
    set
        order_id=?,
        pizzashack_id=?,
        qty=?,
        total_price=? 
    where
        order_pizza_id=?
2014-02-03 17:04:24,784 [ckOrderInbound]] INFO  OrderRequestProcessor          - after dataEntry:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:null, executionId:59, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
2014-02-03 17:04:24,784 [ckOrderInbound]] INFO  OrderConverter                 - toModel start:{} co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-03 04:04:24, deliverTime:null)
2014-02-03 17:04:24,785 [ckOrderInbound]] INFO  OrderConverter                 - toModel end:{} co.nz.pizzashack.data.model.OrderModel@a35ae9b[orderId=<null>,orderNo=32255c96-f798-42e9-a5f4-6ab18ef9b090,quantity=6,status=<null>,paymentStatus=0,deliverTime=<null>,totalPrice=162.00,orderTime=<null>]
Hibernate: 
    select
        orderreque0_.message_id as message1_0_0_,
        orderreque0_.created_at as created2_0_0_,
        orderreque0_.order_id as order4_0_0_,
        orderreque0_.processor_name as processor3_0_0_ 
    from
        t_order_request_history orderreque0_ 
    where
        orderreque0_.message_id=?
2014-02-03 17:04:24,787 [ckOrderInbound]] INFO  OrderRequestProcessor          - orderRequestProcessor end:{} 
2014-02-03 17:04:24,789 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlMarshal start:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:null, executionId:59, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
2014-02-03 17:04:24,790 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - pendingActivity:{} co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
2014-02-03 17:04:24,790 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - customerDto:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-02-03 17:04:24,793 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlMarshal end:{} <order-process>
  <process-id>2</process-id>
  <create-time>1970-01-01 05:04:24</create-time>
  <complete-time>null</complete-time>
  <operator>general</operator>
  <order>
    <order-no>32255c96-f798-42e9-a5f4-6ab18ef9b090</order-no>
    <address>25 mavon downs</address>
    <quantity>6</quantity>
    <total-price>162.00</total-price>
    <status>pendingOnBilling</status>
    <order-time>2014-02-03 04:04:24</order-time>
    <deliver-time>null</deliver-time>
    <order-list>
      <order-details>
        <pizza-name>Chicken Parmesan</pizza-name>
        <quantity>2</quantity>
        <total-price>50.00</total-price>
      </order-details>
      <order-details>
        <pizza-name>Spicy Italian</pizza-name>
        <quantity>4</quantity>
        <total-price>112.00</total-price>
      </order-details>
    </order-list>
  </order>
  <customer>
    <name>david</name>
    <email>david.yuan124@gmail.com</email>
  </customer>
  <pending-activity>
    <name>Billing fill in</name>
    <type>userTask</type>
    <assignee>general</assignee>
  </pending-activity>
</order-process>
2014-02-03 17:04:24,793 [ckOrderInbound]] INFO  output                         - Exchange[ExchangePattern: InOnly, BodyType: String, Body: <order-process>  <process-id>2</process-id>  <create-time>1970-01-01 05:04:24</create-time>  <complete-time>null</complete-time>  <operator>general</operator>  <order>    <order-no>32255c96-f798-42e9-a5f4-6ab18ef9b090</order-no>    <address>25 mavon downs</address>    <quantity>6</quantity>    <total-price>162.00</total-price>    <status>pendingOnBilling</status>    <order-time>2014-02-03 04:04:24</order-time>    <deliver-time>null</deliver-time>    <order-list>      <order-details>        <pizza-name>Chicken Parmesan</pizza-name>        <quantity>2</quantity>        <total-price>50.00</total-price>      </order-details>      <order-details>        <pizza-name>Spicy Italian</pizza-name>        <quantity>4</quantity>        <total-price>112.00</total-price>      </order-details>    </order-list>  </order>  <customer>    <name>david</name>    <email>david.yuan124@gmail.com</email>  </customer>  <pending-activity>    <name>Billing fill in</name>    <type>userTask</type>    <assignee>general</assignee>  </pending-activity></order-process>]
2014-02-03 17:04:24,838 [ckOrderInbound]] INFO  orderProcessRoute              - Signalled to stop route
2014-02-03 17:04:25,721 [qtp793057417-39] INFO  input                          - Exchange[ExchangePattern: InOut, BodyType: org.apache.cxf.message.MessageContentsList, Body: [co.nz.pizzashack.data.dto.BillingDto(billingRequestId:null, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, billingCode:null, billingMessage:null, billingTime:null, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111))]]
2014-02-03 17:04:25,721 [qtp793057417-39] INFO  BillingInboundProcessor        - BillingInboundProcessor start:{} 
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
2014-02-03 17:04:25,728 [qtp793057417-39] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@5dc7f2b7[userId=4,username=general,password=MTIzNDU2,createTime=17:02:25]
2014-02-03 17:04:25,728 [qtp793057417-39] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)
2014-02-03 17:04:25,728 [qtp793057417-39] INFO  BillingInboundProcessor        - default operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25) 
2014-02-03 17:04:25,729 [qtp793057417-39] INFO  OrderProcessDSImpl             - fillinBillingAccount start:co.nz.pizzashack.data.dto.BillingDto(billingRequestId:50480, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, billingCode:null, billingMessage:null, billingTime:2014-02-03 04:04:25, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111))
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 17:04:25,733 [qtp793057417-39] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@1b98d3f2[orderProcessId=2,executionId=59,mainProcessInstanceId=59,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=59,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=17:04:24,completeTime=<null>] 
2014-02-03 17:04:25,734 [qtp793057417-39] INFO  OrderProcessDSImpl             - doFillinBillingAccount start:{} 
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        E.BUSINESS_KEY_ = ?                                                                                 
        and RES.PROC_DEF_ID_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 17:04:25,736 [qtp793057417-39] INFO  OrderProcessDSImpl             - current task:Billing fill in 
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                    
        and RES.ASSIGNEE_ = ?                                                                        
        and E.BUSINESS_KEY_ = ?
2014-02-03 17:04:25,738 [qtp793057417-39] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@1b98d3f2[orderProcessId=2,executionId=59,mainProcessInstanceId=59,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=59,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=17:04:24,completeTime=<null>]
2014-02-03 17:04:25,738 [qtp793057417-39] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@374bdc15[orderId=2,orderNo=32255c96-f798-42e9-a5f4-6ab18ef9b090,quantity=6,status=5,paymentStatus=0,deliverTime=<null>,totalPrice=162.00,orderTime=2014-02-03 17:04:24.607]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 17:04:25,746 [qtp793057417-39] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@47707b55[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 17:04:25,747 [qtp793057417-39] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 17:04:25,754 [qtp793057417-39] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@7a984c97[orderPizzashackId=3,totalPrice=50.00,qty=2]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 17:04:25,757 [qtp793057417-39] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00)
2014-02-03 17:04:25,758 [qtp793057417-39] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@24cc8c62[orderPizzashackId=4,totalPrice=112.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 17:04:25,758 [qtp793057417-39] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)
2014-02-03 17:04:25,758 [qtp793057417-39] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-03 04:04:24, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 17:04:25,759 [qtp793057417-39] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@68fd8a41[userId=4,username=general,password=MTIzNDU2,createTime=17:02:25]
2014-02-03 17:04:25,759 [qtp793057417-39] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)
2014-02-03 17:04:25,760 [qtp793057417-39] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:null, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        PARENT_TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE 
    where
        TASK_ID_ =     ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
2014-02-03 17:04:25,774 [qtp793057417-39] INFO  ainTransitionExecutionListener - orderMainUserTaskExecutionListener start:{} 
2014-02-03 17:04:25,774 [qtp793057417-39] INFO  ainTransitionExecutionListener - nextActivity id:billingCallactivity
2014-02-03 17:04:25,774 [qtp793057417-39] INFO  ainTransitionExecutionListener - nextActivity name:Billing
2014-02-03 17:04:25,774 [qtp793057417-39] INFO  ainTransitionExecutionListener - nextActivity type:callActivity
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
2014-02-03 17:04:25,779 [qtp793057417-39] INFO  input                          - Exchange[ExchangePattern: InOnly, BodyType: java.util.HashMap, Body: {orderTransBean=co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:null, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)), billingTransBean=co.nz.pizzashack.data.dto.BillingDto(billingRequestId:50480, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, billingCode:null, billingMessage:null, billingTime:2014-02-03 04:04:25, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111)), indenpendentProcess=false}]
2014-02-03 17:04:25,779 [qtp793057417-39] INFO  BillingVariableTransformer     - after transform billing:co.nz.pizzashack.data.dto.BillingDto(billingRequestId:50480, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, billingCode:null, billingMessage:null, billingTime:2014-02-03 04:04:25, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111)) 
2014-02-03 17:04:25,790 [qtp793057417-39] INFO  BillingFormatTransformer       - billingReqXmlMarshal start:{} co.nz.pizzashack.data.dto.BillingDto(billingRequestId:50480, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, billingCode:null, billingMessage:null, billingTime:2014-02-03 04:04:25, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111))
2014-02-03 17:04:25,793 [qtp793057417-39] INFO  BillingFormatTransformer       - billingReqXmlMarshal end:{} <billing>
  <account>
    <account-no>111111</account-no>
    <security-no>111</security-no>
    <expire-date>2019-06-24</expire-date>
    <account-type>credit</account-type>
  </account>
  <billing-amount>162.00</billing-amount>
  <create-time>2014-02-03 04:04:25</create-time>
</billing>
2014-02-03 17:04:25,794 [qtp793057417-39] INFO  myLog                          - Exchange[Id: ID-david-59132-1391400143467-0-6, ExchangePattern: InOut, Properties: {BillingRequest=co.nz.pizzashack.data.dto.BillingDto(billingRequestId:50480, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, billingCode:null, billingMessage:null, billingTime:2014-02-03 04:04:25, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111)), CamelCreatedTimestamp=Mon Feb 03 17:04:25 NZDT 2014, CamelMessageHistory=[DefaultMessageHistory[routeId=activitiBillingProcess, node=to1], DefaultMessageHistory[routeId=activitiBillingProcess, node=setHeader1], DefaultMessageHistory[routeId=activitiBillingProcess, node=to2], DefaultMessageHistory[routeId=direct:billingIntegration, node=transform1], DefaultMessageHistory[routeId=direct:billingIntegration, node=setHeader2], DefaultMessageHistory[routeId=direct:billingIntegration, node=to3], DefaultMessageHistory[routeId=route1, node=setExchangePattern1], DefaultMessageHistory[routeId=route1, node=setProperty1], DefaultMessageHistory[routeId=route1, node=bean1], DefaultMessageHistory[routeId=route1, node=to5]], CamelToEndpoint=log://myLog?showAll=true, PROCESS_ID_PROPERTY=123}, Headers: {breadcrumbId=ID-david-59132-1391400143467-0-5, destination=activiti:orderBillingProcess:receiveBillingResult, messageId=50480}, BodyType: String, Body: <billing>  <account>    <account-no>111111</account-no>    <security-no>111</security-no>    <expire-date>2019-06-24</expire-date>    <account-type>credit</account-type>  </account>  <billing-amount>162.00</billing-amount>  <create-time>2014-02-03 04:04:25</create-time></billing>, Out: null: ]
2014-02-03 17:04:26,111 [illingOutbound]] INFO  route1                         - jmsMsgId set = ID:david-60622-1391379770476-1:20392:1:1:1
2014-02-03 17:04:26,112 [illingOutbound]] INFO  myLog                          - Exchange[Id: ID-david-59132-1391400143467-0-6, ExchangePattern: InOut, Properties: {BillingRequest=co.nz.pizzashack.data.dto.BillingDto(billingRequestId:50480, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, billingCode:null, billingMessage:null, billingTime:2014-02-03 04:04:25, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111)), CamelCreatedTimestamp=Mon Feb 03 17:04:25 NZDT 2014, CamelExternalRedelivered=false, CamelMessageHistory=[DefaultMessageHistory[routeId=activitiBillingProcess, node=to1], DefaultMessageHistory[routeId=activitiBillingProcess, node=setHeader1], DefaultMessageHistory[routeId=activitiBillingProcess, node=to2], DefaultMessageHistory[routeId=direct:billingIntegration, node=transform1], DefaultMessageHistory[routeId=direct:billingIntegration, node=setHeader2], DefaultMessageHistory[routeId=direct:billingIntegration, node=to3], DefaultMessageHistory[routeId=route1, node=setExchangePattern1], DefaultMessageHistory[routeId=route1, node=setProperty1], DefaultMessageHistory[routeId=route1, node=bean1], DefaultMessageHistory[routeId=route1, node=to5], DefaultMessageHistory[routeId=route1, node=to6], DefaultMessageHistory[routeId=route1, node=log1], DefaultMessageHistory[routeId=route1, node=to7]], CamelToEndpoint=log://myLog?showAll=true, PROCESS_ID_PROPERTY=123}, Headers: {accountNo=111111, breadcrumbId=ID-david-59132-1391400143467-0-5, CamelJmsDeliveryMode=2, CamelSqlUpdateCount=1, code=000, destination=activiti:orderBillingProcess:receiveBillingResult, JMSCorrelationID=Camel-ID-david-59132-1391400143467-0-7, JMSDeliveryMode=2, JMSDestination=queue://pizzashackBillingOutbound, JMSExpiration=0, JMSMessageID=ID:david-60622-1391379770476-1:20392:1:1:1, JMSPriority=4, JMSRedelivered=false, JMSReplyTo=null, JMSTimestamp=1391400266105, JMSType=null, JMSXGroupID=null, JMSXUserID=null, messageId=50480, transactionNo=2afd47d8-3275-4a85-9398-a6168ac2f992}, BodyType: String, Body: <account-transaction>  <transaction-no>2afd47d8-3275-4a85-9398-a6168ac2f992</transaction-no>  <account-no>111111</account-no>  <code>000</code>  <reasons>null</reasons>  <create-time>2014-02-03 04:04:26</create-time></account-transaction>, Out: null: ]
2014-02-03 17:04:26,112 [illingOutbound]] INFO  BillingFormatTransformer       - billingRespXmalUnmarshal start:{} <account-transaction>
  <transaction-no>2afd47d8-3275-4a85-9398-a6168ac2f992</transaction-no>
  <account-no>111111</account-no>
  <code>000</code>
  <reasons>null</reasons>
  <create-time>2014-02-03 04:04:26</create-time>
</account-transaction>
2014-02-03 17:04:26,115 [illingOutbound]] INFO  BillingFormatTransformer       - billingRespXmalUnmarshal end:{} co.nz.pizzashack.data.dto.BillingDto(billingRequestId:null, orderNo:null, billingCode:000, billingMessage:null, billingTime:null, billingAmount:null, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:null, expireDate:null, securityNo:null))
2014-02-03 17:04:26,115 [illingOutbound]] INFO  BillingResponseMergeProcessor  - billingReq:co.nz.pizzashack.data.dto.BillingDto(billingRequestId:50480, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, billingCode:null, billingMessage:null, billingTime:2014-02-03 04:04:25, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111)) 
2014-02-03 17:04:26,116 [illingOutbound]] INFO  BillingResponseMergeProcessor  - billingResp:co.nz.pizzashack.data.dto.BillingDto(billingRequestId:null, orderNo:null, billingCode:000, billingMessage:null, billingTime:null, billingAmount:null, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:null, expireDate:null, securityNo:null)) 
2014-02-03 17:04:26,119 [qtp793057417-39] INFO  BillingRespExecutionListener   - BillingRespExecutionListener execute start:{}
2014-02-03 17:04:26,119 [qtp793057417-39] INFO  BillingRespExecutionListener   - get billing after integration:co.nz.pizzashack.data.dto.BillingDto(billingRequestId:50480, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, billingCode:000, billingMessage:null, billingTime:2014-02-03 04:04:25, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111))
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 17:04:26,121 [qtp793057417-39] INFO  BillingRespExecutionListener   - activitiProcessDefinitionId:orderBillingProcess:1:7
2014-02-03 17:04:26,121 [qtp793057417-39] INFO  BillingRespExecutionListener   - activitiProcesssInstanceId:123
2014-02-03 17:04:26,121 [qtp793057417-39] INFO  BillingRespExecutionListener   - Key : camelBody Value : co.nz.pizzashack.data.dto.BillingDto(billingRequestId:50480, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, billingCode:000, billingMessage:null, billingTime:2014-02-03 04:04:25, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111))
2014-02-03 17:04:26,121 [qtp793057417-39] INFO  BillingRespExecutionListener   - Key : billingProcessStatus Value : 0
2014-02-03 17:04:26,121 [qtp793057417-39] INFO  BillingRespExecutionListener   - Key : billingTransBean Value : co.nz.pizzashack.data.dto.BillingDto(billingRequestId:50480, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, billingCode:000, billingMessage:null, billingTime:2014-02-03 04:04:25, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111))
2014-02-03 17:04:26,122 [qtp793057417-39] INFO  BillingRespExecutionListener   - Key : orderTransBean Value : co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:123, activeProcessDefinitionId:orderBillingProcess:1:7, createTime:1970-01-01 05:04:24, completeTime:null, executionId:123, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
2014-02-03 17:04:26,122 [qtp793057417-39] INFO  BillingRespExecutionListener   - Key : indenpendentProcess Value : false
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
2014-02-03 17:04:26,129 [ad #4 - WireTap] INFO  input                          - Exchange[ExchangePattern: InOnly, BodyType: co.nz.pizzashack.data.dto.BillingDto, Body: <?xml version="1.0" encoding="UTF-8" standalone="yes"?><billingRequest>    <billingRequestId>50480</billingRequestId>    <orderNo>32255c96-f798-42e9-a5f4-6ab18ef9b090</orderNo>    <billingCode>000</billingCode>    <billingMessage>null</billingMessage>    <billingTime>2014-02-03 04:04:25</billingTime>    <billingAmount>162.00</billingAmount>    <account>        <paymode>credit</paymode>        <accountNo>111111</accountNo>        <expireDate>2019-06-24</expireDate>        <securityNo>111</securityNo>    </account></billingRequest>]
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
2014-02-03 17:04:26,147 [ad #4 - WireTap] ERROR DefaultErrorHandler            - Failed delivery for (MessageId: ID-david-59132-1391400143467-0-8 on ExchangeId: ID-david-59132-1391400143467-0-10). Exhausted after delivery attempt: 1 caught: java.lang.NullPointerException

Message History
---------------------------------------------------------------------------------------------------------------------------------------
RouteId              ProcessorId          Processor                                                                        Elapsed (ms)
[activitiBillingPro] [activitiBillingPro] [                                                                              ] [       366]
[activitiBillingPro] [to1               ] [log:input                                                                     ] [         1]
[activitiBillingPro] [setHeader1        ] [setHeader[destination]                                                        ] [         0]
[activitiBillingPro] [to2               ] [direct:billingIntegration                                                     ] [       338]
[direct:billingInte] [transform1        ] [transform[{co.nz.pizzashack.integration.mapping.BillingVariableTransformer@30a] [         0]
[direct:billingInte] [setHeader2        ] [setHeader[messageId]                                                          ] [        10]
[direct:billingInte] [to3               ] [direct:doBillingIntegration                                                   ] [       327]
[route1            ] [setExchangePattern] [setExchangePattern[InOut]                                                     ] [         0]
[route1            ] [setProperty1      ] [setProperty[BillingRequest]                                                   ] [         0]
[route1            ] [bean1             ] [bean[co.nz.pizzashack.integration.mapping.BillingFormatTransformer@3e817a89]  ] [         3]
[route1            ] [to5               ] [log:myLog?showAll=true                                                        ] [         1]
[route1            ] [to6               ] [jms:queue:pizzashackBillingInbound?transacted=true&replyTo=pizzashackBillingOu] [       317]
[route1            ] [log1              ] [log                                                                           ] [         0]
[route1            ] [to7               ] [log:myLog?showAll=true                                                        ] [         1]
[route1            ] [bean2             ] [bean[co.nz.pizzashack.integration.mapping.BillingFormatTransformer@3e817a89]  ] [         3]
[route1            ] [process1          ] [co.nz.pizzashack.integration.mapping.BillingResponseMergeProcessor@2693d86e   ] [         1]
[direct:billingInte] [wireTap1          ] [wireTap[direct:receiveBillingQueue]                                           ] [         1]
[direct:receiveBill] [to4               ] [log:input                                                                     ] [        19]
[direct:receiveBill] [recipientList1    ] [recipientList[header{header(destination)}]                                    ] [         9]

Exchange
---------------------------------------------------------------------------------------------------------------------------------------
Exchange[
	Id                  ID-david-59132-1391400143467-0-10
	ExchangePattern     InOnly
	Headers             {accountNo=111111, breadcrumbId=ID-david-59132-1391400143467-0-5, CamelJmsDeliveryMode=2, CamelRedelivered=false, CamelRedeliveryCounter=0, CamelSqlUpdateCount=1, code=000, destination=activiti:orderBillingProcess:receiveBillingResult, JMSCorrelationID=Camel-ID-david-59132-1391400143467-0-7, JMSDeliveryMode=2, JMSDestination=queue://pizzashackBillingOutbound, JMSExpiration=0, JMSMessageID=ID:david-60622-1391379770476-1:20392:1:1:1, JMSPriority=4, JMSRedelivered=false, JMSReplyTo=null, JMSTimestamp=1391400266105, JMSType=null, JMSXGroupID=null, JMSXUserID=null, messageId=50480, transactionNo=2afd47d8-3275-4a85-9398-a6168ac2f992}
	BodyType            co.nz.pizzashack.data.dto.BillingDto
	Body                <?xml version="1.0" encoding="UTF-8" standalone="yes"?><billingRequest>    <billingRequestId>50480</billingRequestId>    <orderNo>32255c96-f798-42e9-a5f4-6ab18ef9b090</orderNo>    <billingCode>000</billingCode>    <billingMessage>null</billingMessage>    <billingTime>2014-02-03 04:04:25</billingTime>    <billingAmount>162.00</billingAmount>    <account>        <paymode>credit</paymode>        <accountNo>111111</accountNo>        <expireDate>2019-06-24</expireDate>        <securityNo>111</securityNo>    </account></billingRequest>
]

Stacktrace
---------------------------------------------------------------------------------------------------------------------------------------
java.lang.NullPointerException
	at org.activiti.camel.ActivitiProducer.signal(ActivitiProducer.java:76)[activiti-camel-5.14.jar:5.14]
	at org.activiti.camel.ActivitiProducer.process(ActivitiProducer.java:60)[activiti-camel-5.14.jar:5.14]
	at org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge.process(AsyncProcessorConverterHelper.java:61)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:398)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:191)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.MulticastProcessor.doProcessSequential(MulticastProcessor.java:573)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.MulticastProcessor.doProcessSequential(MulticastProcessor.java:506)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.MulticastProcessor.process(MulticastProcessor.java:215)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.RecipientList.sendToRecipientList(RecipientList.java:153)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.RecipientList.process(RecipientList.java:112)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.Pipeline.process(Pipeline.java:118)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.Pipeline.process(Pipeline.java:80)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:72)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:398)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:191)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.Pipeline.process(Pipeline.java:118)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.Pipeline.process(Pipeline.java:80)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:191)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.component.direct.DirectProducer.process(DirectProducer.java:51)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:398)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:191)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.util.AsyncProcessorHelper.process(AsyncProcessorHelper.java:105)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:87)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.WireTapProcessor$1.call(WireTapProcessor.java:98)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.WireTapProcessor$1.call(WireTapProcessor.java:94)[camel-core-2.12.2.jar:2.12.2]
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)[:1.7.0_45]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)[:1.7.0_45]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)[:1.7.0_45]
	at java.lang.Thread.run(Thread.java:744)[:1.7.0_45]
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_RU_EXECUTION 
    set
        REV_ = ?,
        BUSINESS_KEY_ = ?,
        PROC_DEF_ID_ = ?,
        ACT_ID_ = ?,
        IS_ACTIVE_ = ?,
        IS_CONCURRENT_ = ?,
        IS_SCOPE_ = ?,
        IS_EVENT_SCOPE_ = ?,
        PARENT_ID_ = ?,
        SUPER_EXEC_ = ?,
        SUSPENSION_STATE_ = ?,
        CACHED_ENT_STATE_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_TASK 
    where
        ID_ = ? 
        and REV_ = ?
2014-02-03 17:04:26,179 [qtp793057417-39] INFO  OrderProcessDSImpl             - doFillinBillingAccount end:{} 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 17:04:26,181 [qtp793057417-39] INFO  OrderProcessDSImpl             - process pending, build pending Activity:{} 
2014-02-03 17:04:26,183 [qtp793057417-39] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:123, activeProcessDefinitionId:orderBillingProcess:1:7, createTime:1970-01-01 05:04:24, completeTime:null, executionId:123, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-02-03 17:04:26,191 [qtp793057417-39] INFO  OrderProcessAccessor           - get OrderProcessDto from flow:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:123, activeProcessDefinitionId:orderBillingProcess:1:7, createTime:1970-01-01 05:04:24, completeTime:null, executionId:123, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
2014-02-03 17:04:26,191 [qtp793057417-39] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 17:04:26,191 [qtp793057417-39] INFO  ActivitiFacade                 - executionId: 123, processDefinitionId: orderBillingProcess:1:7
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 17:04:26,196 [qtp793057417-39] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:receiveBillingResult, name:Receive Billing Result, type:receiveTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway1, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow12:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:receiveBillingResult, name:Receive Billing Result, type:receiveTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
2014-02-03 17:04:26,196 [qtp793057417-39] INFO  OrderProcessAccessor           - *************************pending on receiveBillingResponse task:{}
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 17:04:26,208 [qtp793057417-39] INFO  BillingRespExecutionListener   - BillingRespExecutionListener execute start:{}
2014-02-03 17:04:26,210 [qtp793057417-39] INFO  BillingRespExecutionListener   - get billing after integration:co.nz.pizzashack.data.dto.BillingDto(billingRequestId:50480, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, billingCode:000, billingMessage:null, billingTime:2014-02-03 04:04:25, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111))
2014-02-03 17:04:26,210 [qtp793057417-39] INFO  BillingRespExecutionListener   - activitiProcessDefinitionId:orderBillingProcess:1:7
2014-02-03 17:04:26,210 [qtp793057417-39] INFO  BillingRespExecutionListener   - activitiProcesssInstanceId:123
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-02-03 17:04:26,220 [qtp793057417-39] INFO  BillingRespExecutionListener   - Key : camelBody Value : co.nz.pizzashack.data.dto.BillingDto(billingRequestId:50480, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, billingCode:000, billingMessage:null, billingTime:2014-02-03 04:04:25, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111))
2014-02-03 17:04:26,221 [qtp793057417-39] INFO  BillingRespExecutionListener   - Key : billingProcessStatus Value : 0
2014-02-03 17:04:26,221 [qtp793057417-39] INFO  BillingRespExecutionListener   - Key : billingTransBean Value : co.nz.pizzashack.data.dto.BillingDto(billingRequestId:50480, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, billingCode:000, billingMessage:null, billingTime:2014-02-03 04:04:25, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111))
2014-02-03 17:04:26,221 [qtp793057417-39] INFO  BillingRespExecutionListener   - Key : orderTransBean Value : co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:123, activeProcessDefinitionId:orderBillingProcess:1:7, createTime:1970-01-01 05:04:24, completeTime:null, executionId:123, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
2014-02-03 17:04:26,221 [qtp793057417-39] INFO  BillingRespExecutionListener   - Key : indenpendentProcess Value : false
Hibernate: 
    select
        * 
    from
        ACT_HI_PROCINST 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RU_JOB J     
    where
        J.EXECUTION_ID_ = ?
Hibernate: 
    select
        *      
    from
        ACT_RU_EVENT_SUBSCR     
    where
        (
            EXECUTION_ID_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
2014-02-03 17:04:26,237 [qtp793057417-39] INFO  illingProcessExecutionListener - **********************after billing process, billingDto:co.nz.pizzashack.data.dto.BillingDto(billingRequestId:50480, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, billingCode:000, billingMessage:null, billingTime:2014-02-03 04:04:25, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111)) 
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-02-03 17:04:26,243 [qtp793057417-39] INFO  illingProcessExecutionListener - after core process, orderProcess:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:123, activeProcessDefinitionId:orderBillingProcess:1:7, createTime:1970-01-01 05:04:24, completeTime:null, executionId:123, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
after delivered: co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:delivered, orderTime:2014-02-03 04:04:24, deliverTime:2014-02-03 04:04:26)
2014-02-03 17:04:26,286 [qtp793057417-39] INFO  EmailExecutionListener         - EmailExecutionListener start:{} 
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 17:04:26,288 [qtp793057417-39] INFO  EmailExecutionListener         - prepare email info for delivered case:{} 
2014-02-03 17:04:26,289 [qtp793057417-39] INFO  EmailExecutionListener         - EmailExecutionListener end:{} 
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
2014-02-03 17:04:31,706 [qtp793057417-39] INFO  EndExecutionListener           - EndExecutionListener start:{} 
2014-02-03 17:04:31,708 [qtp793057417-39] INFO  EndExecutionListener           - update order as delivered:{} 
2014-02-03 17:04:31,708 [qtp793057417-39] INFO  EndExecutionListener           - EndExecutionListener end:{} 
Hibernate: 
    select
        * 
    from
        ACT_HI_PROCINST 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_PROCINST 
    set
        PROC_DEF_ID_ = ?,
        BUSINESS_KEY_ = ?,
        START_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        END_ACT_ID_ = ?,
        DELETE_REASON_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_PROCINST 
    set
        PROC_DEF_ID_ = ?,
        BUSINESS_KEY_ = ?,
        START_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        END_ACT_ID_ = ?,
        DELETE_REASON_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_IDENTITYLINK 
    where
        ID_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ? 
        and REV_ = ?
2014-02-03 17:04:31,749 [qtp793057417-39] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:delivered, orderTime:2014-02-03 04:04:24, deliverTime:2014-02-03 04:04:26), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:2014-02-03 04:04:31, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        t_order_process 
    set
        active_process_definition_id=?,
        active_process_instance_id=?,
        complete_time=?,
        create_time=?,
        execution_id=?,
        main_process_definition_id=?,
        main_process_instance_id=?,
        operator_id=?,
        order_id=? 
    where
        order_process_id=?
Hibernate: 
    update
        t_order 
    set
        cust_id=?,
        deliver_time=?,
        order_no=?,
        order_time=?,
        payment_remarks=?,
        payment_status=?,
        quantity=?,
        ship_address=?,
        status=?,
        total_price=? 
    where
        order_id=?
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
2014-02-03 17:04:31,754 [qtp793057417-39] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@1b98d3f2[orderProcessId=2,executionId=59,mainProcessInstanceId=59,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=59,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=17:04:24,completeTime=Mon Feb 03 17:04:31 NZDT 2014] 
2014-02-03 17:04:31,754 [qtp793057417-39] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@1b98d3f2[orderProcessId=2,executionId=59,mainProcessInstanceId=59,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=59,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=17:04:24,completeTime=Mon Feb 03 17:04:31 NZDT 2014]
2014-02-03 17:04:31,754 [qtp793057417-39] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@374bdc15[orderId=2,orderNo=32255c96-f798-42e9-a5f4-6ab18ef9b090,quantity=6,status=7,paymentStatus=1,deliverTime=<null>,totalPrice=162.00,orderTime=2014-02-03 17:04:24.607]
2014-02-03 17:04:31,755 [qtp793057417-39] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@47707b55[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 17:04:31,755 [qtp793057417-39] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-02-03 17:04:31,755 [qtp793057417-39] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@7a984c97[orderPizzashackId=3,totalPrice=50.00,qty=2]
2014-02-03 17:04:31,755 [qtp793057417-39] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00)
2014-02-03 17:04:31,755 [qtp793057417-39] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@24cc8c62[orderPizzashackId=4,totalPrice=112.00,qty=4]
2014-02-03 17:04:31,755 [qtp793057417-39] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)
2014-02-03 17:04:31,756 [qtp793057417-39] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:delivered, orderTime:2014-02-03 04:04:24, deliverTime:null)
2014-02-03 17:04:31,756 [qtp793057417-39] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@68fd8a41[userId=4,username=general,password=MTIzNDU2,createTime=17:02:25]
2014-02-03 17:04:31,756 [qtp793057417-39] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)
2014-02-03 17:04:31,756 [qtp793057417-39] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:delivered, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:2014-02-03 04:04:31, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
2014-02-03 17:04:31,757 [qtp793057417-39] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:delivered, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:2014-02-03 04:04:31, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
2014-02-03 17:04:31,757 [qtp793057417-39] INFO  OrderProcessAccessor           - after merge orderProcessModel:co.nz.pizzashack.data.model.OrderProcessModel@1b98d3f2[orderProcessId=2,executionId=59,mainProcessInstanceId=59,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=59,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=17:04:24,completeTime=Mon Feb 03 17:04:31 NZDT 2014] 
2014-02-03 17:04:31,758 [qtp793057417-39] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:delivered, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:2014-02-03 04:04:31, executionId:59, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:receiveBillingResult, name:Receive Billing Result, type:receiveTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway1, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow12:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:receiveBillingResult, name:Receive Billing Result, type:receiveTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
2014-02-03 17:04:31,758 [qtp793057417-39] INFO  OrderProcessDSImpl             - fillinBillingAccount end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:delivered, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:2014-02-03 04:04:31, executionId:59, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:receiveBillingResult, name:Receive Billing Result, type:receiveTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway1, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow12:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:receiveBillingResult, name:Receive Billing Result, type:receiveTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
2014-02-03 17:04:31,760 [qtp793057417-39] INFO  BillingInboundProcessor        - get pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:receiveBillingResult, name:Receive Billing Result, type:receiveTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway1, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow12:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:receiveBillingResult, name:Receive Billing Result, type:receiveTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
2014-02-03 17:04:31,760 [qtp793057417-39] INFO  BillingInboundProcessor        - billingResponse:co.nz.pizzashack.integration.ws.BillingResponse@2ad05ace[orderNo=32255c96-f798-42e9-a5f4-6ab18ef9b090,billingCode=000,billingMessage=<null>] 
2014-02-03 17:04:31,760 [qtp793057417-39] INFO  BillingInboundProcessor        - BillingInboundProcessor end:{} 
2014-02-03 17:04:48,389 [qtp793057417-35] INFO  PizzashackAPIImpl              - getOrdersforCustomer start:david.yuan124@gmail.com
2014-02-03 17:04:48,390 [qtp793057417-35] INFO  OrderDSImpl                    - getOrderByCustomer start:david.yuan124@gmail.com 
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_,
        ordermodel0_.cust_id as cust11_4_,
        ordermodel0_.deliver_time as deliver2_4_,
        ordermodel0_.order_no as order3_4_,
        ordermodel0_.order_time as order4_4_,
        ordermodel0_.payment_remarks as payment5_4_,
        ordermodel0_.payment_status as payment6_4_,
        ordermodel0_.quantity as quantity4_,
        ordermodel0_.ship_address as ship8_4_,
        ordermodel0_.status as status4_,
        ordermodel0_.total_price as total10_4_ 
    from
        t_order ordermodel0_ cross 
    join
        t_customer customermo1_ 
    where
        ordermodel0_.cust_id=customermo1_.cust_id 
        and customermo1_.email=?
2014-02-03 17:04:48,404 [qtp793057417-35] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@6ef42238[orderId=1,orderNo=059cbd85-517f-430a-824d-a72c91b87d3e,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 17:04:16.077]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 17:04:48,406 [qtp793057417-35] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@65f4f55b[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 17:04:48,406 [qtp793057417-35] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-02-03 17:04:48,406 [qtp793057417-35] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:null, qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 04:04:16, deliverTime:null)
2014-02-03 17:04:48,407 [qtp793057417-35] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@5df2c370[orderId=2,orderNo=32255c96-f798-42e9-a5f4-6ab18ef9b090,quantity=6,status=7,paymentStatus=1,deliverTime=<null>,totalPrice=162.00,orderTime=2014-02-03 17:04:24.607]
2014-02-03 17:04:48,408 [qtp793057417-35] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@65f4f55b[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 17:04:48,408 [qtp793057417-35] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-02-03 17:04:48,408 [qtp793057417-35] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:null, qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:delivered, orderTime:2014-02-03 04:04:24, deliverTime:null)
2014-02-03 17:04:48,408 [qtp793057417-35] INFO  OrderDSImpl                    - getOrderByCustomer end:{} 
2014-02-03 17:04:48,409 [qtp793057417-35] INFO  PizzashackAPIImpl              - getOrdersforCustomer end:{}
2014-02-03 16:27:36,151 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - pendingActivity:{} co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
2014-02-03 16:27:36,152 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - customerDto:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-02-03 16:27:36,170 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlMarshal end:{} <order-process>
  <process-id>1</process-id>
  <create-time>1970-01-01 04:27:35</create-time>
  <complete-time>null</complete-time>
  <operator>general</operator>
  <order>
    <order-no>6a0ad17b-f050-4fb5-964c-bd3b163b0ce8</order-no>
    <address>25 mavon downs</address>
    <quantity>14</quantity>
    <total-price>390.00</total-price>
    <status>pendingOnReview</status>
    <order-time>2014-02-03 03:27:35</order-time>
    <deliver-time>null</deliver-time>
    <order-list>
      <order-details>
        <pizza-name>Garden Fresh</pizza-name>
        <quantity>4</quantity>
        <total-price>140.00</total-price>
      </order-details>
      <order-details>
        <pizza-name>Chicken Parmesan</pizza-name>
        <quantity>10</quantity>
        <total-price>250.00</total-price>
      </order-details>
    </order-list>
  </order>
  <customer>
    <name>david</name>
    <email>david.yuan124@gmail.com</email>
  </customer>
  <pending-activity>
    <name>Manual underwriting</name>
    <type>userTask</type>
    <assignee>null</assignee>
  </pending-activity>
</order-process>
2014-02-03 16:27:36,171 [ckOrderInbound]] INFO  output                         - Exchange[ExchangePattern: InOnly, BodyType: String, Body: <order-process>  <process-id>1</process-id>  <create-time>1970-01-01 04:27:35</create-time>  <complete-time>null</complete-time>  <operator>general</operator>  <order>    <order-no>6a0ad17b-f050-4fb5-964c-bd3b163b0ce8</order-no>    <address>25 mavon downs</address>    <quantity>14</quantity>    <total-price>390.00</total-price>    <status>pendingOnReview</status>    <order-time>2014-02-03 03:27:35</order-time>    <deliver-time>null</deliver-time>    <order-list>      <order-details>        <pizza-name>Garden Fresh</pizza-name>        <quantity>4</quantity>        <total-price>140.00</total-price>      </order-details>      <order-details>        <pizza-name>Chicken Parmesan</pizza-name>        <quantity>10</quantity>        <total-price>250.00</total-price>      </order-details>    </order-list>  </order>  <customer>    <name>david</name>    <email>david.yuan124@gmail.com</email>  </customer>  <pending-activity>    <name>Manual underwriting</name>    <type>userTask</type>    <assignee>null</assignee>  </pending-activity></order-process>]
2014-02-03 16:27:36,218 [ckOrderInbound]] INFO  orderProcessRoute              - Signalled to stop route
2014-02-03 16:27:40,260 [qtp935945395-40] INFO  OrderQueryController           - userIndex start: {}
2014-02-03 16:27:40,261 [qtp935945395-40] INFO  OrderProcessQueryDSImpl        - getAllOrderProcesses start:{} 
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 16:27:40,266 [qtp935945395-40] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@4ced6e83[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=16:27:35,completeTime=<null>]
2014-02-03 16:27:40,267 [qtp935945395-40] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@3dde6e03[orderId=1,orderNo=6a0ad17b-f050-4fb5-964c-bd3b163b0ce8,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 16:27:35.471]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 16:27:40,277 [qtp935945395-40] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@5de1410a[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 16:27:40,278 [qtp935945395-40] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 16:27:40,285 [qtp935945395-40] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@5e690abe[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 16:27:40,292 [qtp935945395-40] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 16:27:40,292 [qtp935945395-40] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@4240705e[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 16:27:40,293 [qtp935945395-40] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 16:27:40,294 [qtp935945395-40] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:27:35, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 16:27:40,295 [qtp935945395-40] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@4f26a631[userId=4,username=general,password=MTIzNDU2,createTime=16:21:37]
2014-02-03 16:27:40,295 [qtp935945395-40] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 04:21:37)
2014-02-03 16:27:40,296 [qtp935945395-40] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:27:35, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 04:27:35, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 04:21:37))
2014-02-03 16:27:40,296 [qtp935945395-40] INFO  OrderProcessQueryDSImpl        - getAllOrderProcesses end:{} 
2014-02-03 16:27:56,576 [qtp935945395-38] INFO  PizzashackAPIImpl              - getOrderByNo start:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8
2014-02-03 16:27:56,576 [qtp935945395-38] INFO  OrderDSImpl                    - getOrderByOrderNo start:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8 
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_,
        ordermodel0_.cust_id as cust11_4_,
        ordermodel0_.deliver_time as deliver2_4_,
        ordermodel0_.order_no as order3_4_,
        ordermodel0_.order_time as order4_4_,
        ordermodel0_.payment_remarks as payment5_4_,
        ordermodel0_.payment_status as payment6_4_,
        ordermodel0_.quantity as quantity4_,
        ordermodel0_.ship_address as ship8_4_,
        ordermodel0_.status as status4_,
        ordermodel0_.total_price as total10_4_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_no=? limit ?
2014-02-03 16:27:56,578 [qtp935945395-38] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@4ff0608e[orderId=1,orderNo=6a0ad17b-f050-4fb5-964c-bd3b163b0ce8,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 16:27:35.471]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 16:27:56,579 [qtp935945395-38] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@1ebab7e5[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 16:27:56,579 [qtp935945395-38] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 16:27:56,580 [qtp935945395-38] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@775db1c[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 16:27:56,581 [qtp935945395-38] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 16:27:56,581 [qtp935945395-38] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@4a840f17[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 16:27:56,582 [qtp935945395-38] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 16:27:56,582 [qtp935945395-38] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:27:35, deliverTime:null)
2014-02-03 16:27:56,582 [qtp935945395-38] INFO  OrderDSImpl                    - getOrderByOrderNo end:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:27:35, deliverTime:null) 
2014-02-03 16:27:56,582 [qtp935945395-38] INFO  PizzashackAPIImpl              - getOrderByNo end:{}
2014-02-03 16:30:02,701 [qtp935945395-40] INFO  PizzashackAPIImpl              - getOrderByNo start:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8
2014-02-03 16:30:02,702 [qtp935945395-40] INFO  OrderDSImpl                    - getOrderByOrderNo start:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8 
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_,
        ordermodel0_.cust_id as cust11_4_,
        ordermodel0_.deliver_time as deliver2_4_,
        ordermodel0_.order_no as order3_4_,
        ordermodel0_.order_time as order4_4_,
        ordermodel0_.payment_remarks as payment5_4_,
        ordermodel0_.payment_status as payment6_4_,
        ordermodel0_.quantity as quantity4_,
        ordermodel0_.ship_address as ship8_4_,
        ordermodel0_.status as status4_,
        ordermodel0_.total_price as total10_4_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_no=? limit ?
2014-02-03 16:30:02,703 [qtp935945395-40] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@1eef3269[orderId=1,orderNo=6a0ad17b-f050-4fb5-964c-bd3b163b0ce8,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 16:27:35.471]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 16:30:02,704 [qtp935945395-40] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@d06c567[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 16:30:02,704 [qtp935945395-40] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 16:30:02,705 [qtp935945395-40] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@2aa1df40[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 16:30:02,706 [qtp935945395-40] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 16:30:02,706 [qtp935945395-40] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@6947f89d[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 16:30:02,707 [qtp935945395-40] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 16:30:02,707 [qtp935945395-40] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:27:35, deliverTime:null)
2014-02-03 16:30:02,707 [qtp935945395-40] INFO  OrderDSImpl                    - getOrderByOrderNo end:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:27:35, deliverTime:null) 
2014-02-03 16:30:02,707 [qtp935945395-40] INFO  PizzashackAPIImpl              - getOrderByNo end:{}
2014-02-03 16:31:17,830 [qtp935945395-61] INFO  OrderQueryController           - show start: 6a0ad17b-f050-4fb5-964c-bd3b163b0ce8
2014-02-03 16:31:17,831 [qtp935945395-61] INFO  OrderProcessQueryDSImpl        - getOrderProcessByOrderNo start:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8 
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 16:31:17,836 [qtp935945395-61] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@2694b52e[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=16:27:35,completeTime=<null>] 
2014-02-03 16:31:17,837 [qtp935945395-61] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@2694b52e[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=16:27:35,completeTime=<null>]
2014-02-03 16:31:17,837 [qtp935945395-61] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@6f0e1353[orderId=1,orderNo=6a0ad17b-f050-4fb5-964c-bd3b163b0ce8,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 16:27:35.471]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 16:31:17,840 [qtp935945395-61] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@787dcfb6[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 16:31:17,841 [qtp935945395-61] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 16:31:17,842 [qtp935945395-61] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@41ab3986[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 16:31:17,843 [qtp935945395-61] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 16:31:17,843 [qtp935945395-61] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@504dae18[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 16:31:17,844 [qtp935945395-61] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 16:31:17,844 [qtp935945395-61] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:27:35, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 16:31:17,845 [qtp935945395-61] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@640fc2ab[userId=4,username=general,password=MTIzNDU2,createTime=16:21:37]
2014-02-03 16:31:17,845 [qtp935945395-61] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 04:21:37)
2014-02-03 16:31:17,845 [qtp935945395-61] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:27:35, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 04:27:35, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 04:21:37))
2014-02-03 16:31:17,845 [qtp935945395-61] INFO  OrderProcessQueryDSImpl        - buildPendingActivity start:{}
2014-02-03 16:31:17,845 [qtp935945395-61] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 16:31:17,845 [qtp935945395-61] INFO  ActivitiFacade                 - executionId: 30, processDefinitionId: orderCoreProcess:1:11
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 16:31:17,850 [qtp935945395-61] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo start:{}
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 16:31:17,851 [qtp935945395-61] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo end:{}
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
2014-02-03 16:31:17,851 [qtp935945395-61] INFO  OrderProcessQueryDSImpl        - buildPendingActivity end:{}
2014-02-03 16:31:17,852 [qtp935945395-61] INFO  OrderProcessQueryDSImpl        - getOrderProcessByOrderNo end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:27:35, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 04:27:35, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:null), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 04:21:37)) 
2014-02-03 16:31:17,853 [qtp935945395-61] INFO  OrderQueryController           - Found user: co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:27:35, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 04:27:35, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:null), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 04:21:37))
2014-02-03 16:31:42,948 [qtp935945395-39] INFO  OrderQueryController           - showHistory start: {}
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.PROC_INST_ID_ = ?                                     
        and RES.PROC_DEF_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 16:32:03,733 [qtp935945395-37] INFO  OrderQueryController           - showHistory start: {}
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.PROC_INST_ID_ = ?                                     
        and RES.PROC_DEF_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 16:32:06,790 [qtp935945395-39] INFO  OrderQueryController           - userIndex start: {}
2014-02-03 16:32:06,790 [qtp935945395-39] INFO  OrderProcessQueryDSImpl        - getAllOrderProcesses start:{} 
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 16:32:06,794 [qtp935945395-39] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@19d8d368[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=16:27:35,completeTime=<null>]
2014-02-03 16:32:06,795 [qtp935945395-39] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@267558f9[orderId=1,orderNo=6a0ad17b-f050-4fb5-964c-bd3b163b0ce8,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 16:27:35.471]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 16:32:06,798 [qtp935945395-39] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@49260741[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 16:32:06,798 [qtp935945395-39] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 16:32:06,801 [qtp935945395-39] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@aac5b17[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 16:32:06,801 [qtp935945395-39] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 16:32:06,802 [qtp935945395-39] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@3990487a[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 16:32:06,802 [qtp935945395-39] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 16:32:06,803 [qtp935945395-39] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:27:35, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 16:32:06,803 [qtp935945395-39] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@4d00fd7b[userId=4,username=general,password=MTIzNDU2,createTime=16:21:37]
2014-02-03 16:32:06,804 [qtp935945395-39] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 04:21:37)
2014-02-03 16:32:06,804 [qtp935945395-39] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:27:35, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 04:27:35, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 04:21:37))
2014-02-03 16:32:06,804 [qtp935945395-39] INFO  OrderProcessQueryDSImpl        - getAllOrderProcesses end:{} 
2014-02-03 16:32:07,976 [qtp935945395-40] INFO  IndexController                - index: {}
2014-02-03 16:32:07,978 [qtp935945395-40] INFO  OrderProcessDSImpl             - getAllTransTaskForCurrentUser start:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:1970-01-01 04:21:37) 
2014-02-03 16:32:07,978 [qtp935945395-40] INFO  ActivitiFacade                 - getAllTasksForUser start:1
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                    
    WHERE
        RES.ASSIGNEE_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        g.*     
    from
        ACT_ID_GROUP g,
        ACT_ID_MEMBERSHIP membership     
    where
        g.ID_ = membership.GROUP_ID_       
        and membership.USER_ID_ = ?
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                   
    inner join
        ACT_RU_IDENTITYLINK I 
            on I.TASK_ID_ = RES.ID_                              
    WHERE
        RES.ASSIGNEE_ is null         
        and I.TYPE_ = 'candidate'         
        and          (
            I.USER_ID_ = ?                                             
            or                                   I.GROUP_ID_ IN             (
                ?             
            )                    
        )                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_GROUP RES             
    inner join
        ACT_ID_MEMBERSHIP M 
            on RES.ID_ = M.GROUP_ID_       
    inner join
        ACT_ID_USER U 
            on M.USER_ID_ = U.ID_            
    WHERE
        U.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                   
    inner join
        ACT_RU_IDENTITYLINK I 
            on I.TASK_ID_ = RES.ID_                              
    WHERE
        RES.ASSIGNEE_ is null         
        and I.TYPE_ = 'candidate'         
        and          (
            I.GROUP_ID_ IN             (
                ?             
            )                    
        )                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 16:32:07,993 [qtp935945395-40] INFO  OrderProcessDSImpl             - tasks size:2
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ 
    where
        orderproce0_.execution_id=?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 16:32:08,005 [qtp935945395-40] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@6663e9df[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=16:27:35,completeTime=<null>]
2014-02-03 16:32:08,005 [qtp935945395-40] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@1e0e61d[orderId=1,orderNo=6a0ad17b-f050-4fb5-964c-bd3b163b0ce8,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 16:27:35.471]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 16:32:08,006 [qtp935945395-40] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@7b9328de[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 16:32:08,006 [qtp935945395-40] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 16:32:08,008 [qtp935945395-40] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@eb01a90[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 16:32:08,008 [qtp935945395-40] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 16:32:08,008 [qtp935945395-40] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@4b9feb78[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 16:32:08,009 [qtp935945395-40] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 16:32:08,010 [qtp935945395-40] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:27:35, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 16:32:08,010 [qtp935945395-40] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@24be57b7[userId=4,username=general,password=MTIzNDU2,createTime=16:21:37]
2014-02-03 16:32:08,011 [qtp935945395-40] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 04:21:37)
2014-02-03 16:32:08,011 [qtp935945395-40] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:6a0ad17b-f050-4fb5-964c-bd3b163b0ce8, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 03:27:35, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 04:27:35, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 04:21:37))
2014-02-03 16:32:08,011 [qtp935945395-40] INFO  OrderProcessDSImpl             - getAllTransTaskForCurrentUser end:{} 
[INFO] restarting o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
2014-02-03 16:32:56.048:INFO:/:Destroying Spring FrameworkServlet 'dispatcher'
2014-02-03 16:32:56,048 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Closing Root WebApplicationContext: startup date [Mon Feb 03 16:21:30 NZDT 2014]; root of context hierarchy
2014-02-03 16:32:56,048 [Scanner-0      ] INFO  BusApplicationContext          - Closing org.apache.cxf.bus.spring.BusApplicationContext@7fab506b: startup date [Mon Feb 03 16:21:36 NZDT 2014]; parent: Root WebApplicationContext
2014-02-03 16:32:56,049 [Scanner-0      ] INFO  DefaultListableBeanFactory     - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@22ce147b: defining beans []; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@4c8113bf
2014-02-03 16:32:56,049 [Scanner-0      ] INFO  DefaultListableBeanFactory     - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4c8113bf: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,applicationConfiguration,webMvcContextConfiguration,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,viewConfiguration,logoutController,loginController,indexController,userController,adminIndexController,departmentController,orderController,orderQueryController,staffController,billingProcessRespTransformer,billingProcessReqTransformer,orderProcessFormatTransformer,billingVariableTransformer,billingResponseMergeProcessor,billingFormatTransformer,billingInboundProcessor,orderDuplicatedReqProcessor,orderRequestProcessor,billingProcessRoute,billingInboundWsRoute,orderProcessRoute,sleepBean,pizzashackAPIImpl,camelSpringConfig,camelJdbcIdempotentConfig,camelCxfConfig,orderProcessDSImpl,customerDSImpl,workflowDSImpl,pizzashackDSImpl,userDSImpl,orderProcessAccessor,orderProcessQueryDSImpl,staffDSImpl,orderDSImpl,departmentDSImpl,initialDataConfig,pizzashackCaculator,emailExecutionListener,endExecutionListener,caculationMergeExecutionListener,orderMainTransitionExecutionListener,toManualReviewExecutionListener,outOfBillingProcessExecutionListener,outOfCoreProcessExecutionListener,billingRespExecutionListener,customerConverter,orderProcessConverter,staffConverter,userConverter,departmentConverter,workflowConverter,orderReviewRecordConverter,orderConverter,activityDiscountRateConverter,orderDetailConverter,pizzashackDataInitialConfiguration,pizzashackItemBuilder,infrastructureContextConfiguration,activitiFacade,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0,org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0,departmentRepository,workflowRepository,orderRepository,customerRepository,staffDepartmentRepository,orderRequestHistoryRepository,activityDiscountRateRepository,orderPizzashackRepository,pizzashackRepository,userRepository,staffRepository,orderReviewRecordRepository,orderProcessRepository,viewResolver,messageSource,activeMQConnectionFactory,pooledConnectionFactory,jmsComponent,jmsTransactionManager,camelBeanPostProcessor,camelContext,custThreadPoolProfile,sqlComponent,orderJdbcMessageIdRepository,billingInboundEndpoint,loggingOutInterceptor,cxf,org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor,org.apache.cxf.bus.spring.Jsr250BeanPostProcessor,org.apache.cxf.bus.spring.BusExtensionPostProcessor,org.apache.cxf.binding.soap.SoapBindingFactory,org.apache.cxf.binding.soap.SoapTransportFactory,org.apache.cxf.binding.soap.customEditorConfigurer,setupWorkflowData,setupData,org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration,org.springframework.transaction.config.internalTransactionAdvisor,transactionAttributeSource,transactionInterceptor,dataSource,transactionManager,entityManagerFactory,placeholderConfig,processEngineConfiguration,processEngine,repositoryService,runtimeService,taskService,historyService,managementService,identityService,org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration,requestMappingHandlerMapping,mvcContentNegotiationManager,viewControllerHandlerMapping,beanNameHandlerMapping,resourceHandlerMapping,defaultServletHandlerMapping,requestMappingHandlerAdapter,mvcConversionService,mvcValidator,httpRequestHandlerAdapter,simpleControllerHandlerAdapter,handlerExceptionResolver,sessionAttributeProcessor,localeChangeInterceptor,multipartResolver,localeResolver,simpleMappingExceptionResolver]; root of factory hierarchy
2014-02-03 16:32:56,050 [Scanner-0      ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) is shutting down
2014-02-03 16:32:56,050 [Scanner-0      ] INFO  DefaultShutdownStrategy        - Starting to graceful shutdown 8 routes (timeout 300 seconds)
2014-02-03 16:32:56,053 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: cxf:bean:billingInboundEndpoint shutdown complete, was consuming from: Endpoint[cxf://bean:billingInboundEndpoint]
2014-02-03 16:32:56,053 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:orderRegularProcess shutdown complete, was consuming from: Endpoint[direct://orderRegularProcess]
2014-02-03 16:32:56,053 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:orderDuplicatedProcess shutdown complete, was consuming from: Endpoint[direct://orderDuplicatedProcess]
2014-02-03 16:32:56,396 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: orderProcessRoute shutdown complete, was consuming from: Endpoint[jms://queue:pizzashackOrderInbound]
2014-02-03 16:32:56,396 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: route1 shutdown complete, was consuming from: Endpoint[direct://doBillingIntegration]
2014-02-03 16:32:56,396 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:receiveBillingQueue shutdown complete, was consuming from: Endpoint[direct://receiveBillingQueue]
2014-02-03 16:32:56,396 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:billingIntegration shutdown complete, was consuming from: Endpoint[direct://billingIntegration]
2014-02-03 16:32:56,397 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: activitiBillingProcess shutdown complete, was consuming from: Endpoint[activiti://orderBillingProcess:billingIntegration?copyVariablesToBodyAsMap=true]
2014-02-03 16:32:56,397 [Scanner-0      ] INFO  DefaultShutdownStrategy        - Graceful shutdown of 8 routes completed in 0 seconds
2014-02-03 16:32:56,398 [Scanner-0      ] INFO  CxfEndpoint                    - shutdown the bus ... org.apache.cxf.bus.spring.SpringBus@254cb3f1
2014-02-03 16:32:56,404 [Scanner-0      ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) uptime 11 minutes
2014-02-03 16:32:56,405 [Scanner-0      ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) is shutdown in 0.354 seconds
2014-02-03 16:32:56,415 [Scanner-0      ] INFO  tainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2014-02-03 16:32:56,415 [Scanner-0      ] INFO  SchemaExport                   - HHH000227: Running hbm2ddl schema export
Hibernate: 
    alter table t_activity_discount_rate 
        drop constraint FKA400C193698FCC4
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE11193A98D65
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE111A27DDA4A
Hibernate: 
    alter table t_order 
        drop constraint FKA0C0C3C3E11F4FCB
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB0883698FCC4
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB088BBCB676E
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F33E99148D
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F3BBCB676E
Hibernate: 
    alter table t_order_request_history 
        drop constraint FK5A6B268BBCB676E
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CA6130105
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CBBCB676E
Hibernate: 
    alter table t_staff 
        drop constraint FKA0F9FF552DC32C06
Hibernate: 
    drop table t_activity_discount_rate if exists
Hibernate: 
    drop table t_customer if exists
Hibernate: 
    drop table t_dept if exists
Hibernate: 
    drop table t_dept_staff if exists
Hibernate: 
    drop table t_order if exists
Hibernate: 
    drop table t_order_pizzashack if exists
Hibernate: 
    drop table t_order_process if exists
Hibernate: 
    drop table t_order_request_history if exists
Hibernate: 
    drop table t_order_review_record if exists
Hibernate: 
    drop table t_pizzashack if exists
Hibernate: 
    drop table t_staff if exists
Hibernate: 
    drop table t_user if exists
Hibernate: 
    drop table t_workflow if exists
2014-02-03 16:32:56,429 [Scanner-0      ] INFO  SchemaExport                   - HHH000230: Schema export complete
2014-02-03 16:32:56.433:INFO:/:Closing Spring root WebApplicationContext
2014-02-03 16:32:56.434:INFO:oejsl.ELContextCleaner:Clazz: class co.nz.pizzashack.data.dto.OrderDto loaded by WebAppClassLoader=1494953301@591b2d55
2014-02-03 16:32:56.434:INFO:oejsl.ELContextCleaner:removed
2014-02-03 16:32:56.434:INFO:oejsl.ELContextCleaner:Clazz: class co.nz.pizzashack.data.dto.UserDto loaded by WebAppClassLoader=1494953301@591b2d55
2014-02-03 16:32:56.434:INFO:oejsl.ELContextCleaner:removed
2014-02-03 16:32:56.434:INFO:oejsl.ELContextCleaner:Clazz: class co.nz.pizzashack.data.dto.ProcessActivityDto loaded by WebAppClassLoader=1494953301@591b2d55
2014-02-03 16:32:56.435:INFO:oejsl.ELContextCleaner:removed
2014-02-03 16:32:56.435:INFO:oejsl.ELContextCleaner:Clazz: class co.nz.pizzashack.data.dto.OrderDetailsDto loaded by WebAppClassLoader=1494953301@591b2d55
2014-02-03 16:32:56.435:INFO:oejsl.ELContextCleaner:removed
2014-02-03 16:32:56.435:INFO:oejsl.ELContextCleaner:Clazz: class co.nz.pizzashack.data.dto.OrderProcessDto loaded by WebAppClassLoader=1494953301@591b2d55
2014-02-03 16:32:56.435:INFO:oejsl.ELContextCleaner:removed
2014-02-03 16:32:56.435:INFO:oejsl.ELContextCleaner:javax.el.BeanELResolver purged
2014-02-03 16:32:56.435:INFO:oejsh.ContextHandler:stopped o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
[INFO] Webapp source directory = /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp
[INFO] Reload Mechanic: automatic
[INFO] Classes = /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/target/classes
[INFO] Context path = /
[INFO] Tmp directory = /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/target/tmp
[INFO] Web defaults = org/eclipse/jetty/webapp/webdefault.xml
[INFO] Web overrides =  none
[INFO] web.xml file = null
[INFO] Webapp directory = /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp
2014-02-03 16:33:03.030:INFO:oejpw.PlusConfiguration:No Transaction manager found - if your webapp requires one, please configure one.
2014-02-03 16:34:38.311:INFO:/:Spring WebApplicationInitializers detected on classpath: [co.nz.pizzashack.config.PizzashackDistributorWebInitializer@23d507e]
2014-02-03 16:34:38.458:INFO:oejsh.ContextHandler:started o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
2014-02-03 16:34:38.458:INFO:oejsh.ContextHandler:started o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
2014-02-03 16:34:38.458:INFO:oejsh.ContextHandler:started o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
2014-02-03 16:34:38.458:INFO:/:Initializing Spring root WebApplicationContext
2014-02-03 16:34:38,458 [Scanner-0      ] INFO  ContextLoader                  - Root WebApplicationContext: initialization started
2014-02-03 16:34:38,459 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Refreshing Root WebApplicationContext: startup date [Mon Feb 03 16:34:38 NZDT 2014]; root of context hierarchy
2014-02-03 16:34:38,515 [Scanner-0      ] INFO  ClassPathBeanDefinitionScanner - JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2014-02-03 16:34:38,515 [Scanner-0      ] INFO  ClassPathBeanDefinitionScanner - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2014-02-03 16:34:38,516 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Registering annotated classes: [class co.nz.pizzashack.config.ApplicationConfiguration,class co.nz.pizzashack.config.WebMvcContextConfiguration]
2014-02-03 16:34:38,561 [Scanner-0      ] INFO  ClassPathBeanDefinitionScanner - JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2014-02-03 16:34:38,561 [Scanner-0      ] INFO  ClassPathBeanDefinitionScanner - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2014-02-03 16:34:39,548 [Scanner-0      ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [META-INF/cxf/cxf.xml]
2014-02-03 16:34:39,753 [Scanner-0      ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [META-INF/cxf/cxf-extension-soap.xml]
2014-02-03 16:34:39,777 [Scanner-0      ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [META-INF/cxf/cxf-servlet.xml]
2014-02-03 16:34:39,794 [Scanner-0      ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [activitiAppContext.xml]
2014-02-03 16:34:39,964 [Scanner-0      ] INFO  PropertyPlaceholderConfigurer  - Loading properties file from class path resource [activiti.properties]
2014-02-03 16:34:39,997 [Scanner-0      ] INFO  redAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2014-02-03 16:34:40,041 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'infrastructureContextConfiguration' of type [class co.nz.pizzashack.config.InfrastructureContextConfiguration$$EnhancerByCGLIB$$5fadd085] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:40,082 [Scanner-0      ] INFO  MLog                           - MLog clients using log4j logging.
2014-02-03 16:34:40,105 [Scanner-0      ] INFO  C3P0Registry                   - Initializing c3p0-0.9.1.2 [built 21-May-2007 15:04:56; debug? true; trace: 10]
2014-02-03 16:34:40,139 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'dataSource' of type [class com.mchange.v2.c3p0.ComboPooledDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:40,212 [Scanner-0      ] INFO  tainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default'
2014-02-03 16:34:40,292 [Scanner-0      ] INFO  Version                        - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2014-02-03 16:34:40,300 [Scanner-0      ] INFO  Version                        - HHH000412: Hibernate Core {4.1.4.Final}
2014-02-03 16:34:40,301 [Scanner-0      ] INFO  Environment                    - HHH000206: hibernate.properties not found
2014-02-03 16:34:40,302 [Scanner-0      ] INFO  Environment                    - HHH000021: Bytecode provider name : javassist
2014-02-03 16:34:40,317 [Scanner-0      ] INFO  Ejb3Configuration              - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2014-02-03 16:34:40,531 [Scanner-0      ] INFO  ConnectionProviderInitiator    - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2014-02-03 16:34:40,575 [Scanner-0      ] INFO  AbstractPoolBackedDataSource   - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge1508z1w7ckbny4zg6e|5d1784eb, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.h2.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge1508z1w7ckbny4zg6e|5d1784eb, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:h2:mem:pizzashackdistributor;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 600, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 2, numHelperThreads -> 3, numThreadsAwaitingCheckoutDefaultUser -> 0, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2014-02-03 16:34:40,719 [Scanner-0      ] INFO  Dialect                        - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2014-02-03 16:34:40,725 [Scanner-0      ] INFO  LobCreatorBuilder              - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2014-02-03 16:34:40,731 [Scanner-0      ] INFO  TransactionFactoryInitiator    - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2014-02-03 16:34:40,734 [Scanner-0      ] INFO  ASTQueryTranslatorFactory      - HHH000397: Using ASTQueryTranslatorFactory
2014-02-03 16:34:40,759 [Scanner-0      ] INFO  Version                        - Hibernate Validator 4.2.0.Final
2014-02-03 16:34:40,966 [Scanner-0      ] INFO  SchemaExport                   - HHH000227: Running hbm2ddl schema export
Hibernate: 
    alter table t_activity_discount_rate 
        drop constraint FKA400C193698FCC4
2014-02-03 16:34:40,976 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_activity_discount_rate drop constraint FKA400C193698FCC4
2014-02-03 16:34:40,976 [Scanner-0      ] ERROR SchemaExport                   - Table "T_ACTIVITY_DISCOUNT_RATE" not found; SQL statement:

    alter table t_activity_discount_rate 
        drop constraint FKA400C193698FCC4 [42102-160]
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE11193A98D65
2014-02-03 16:34:40,976 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_dept_staff drop constraint FKBC8AE11193A98D65
2014-02-03 16:34:40,976 [Scanner-0      ] ERROR SchemaExport                   - Table "T_DEPT_STAFF" not found; SQL statement:

    alter table t_dept_staff 
        drop constraint FKBC8AE11193A98D65 [42102-160]
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE111A27DDA4A
2014-02-03 16:34:40,977 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_dept_staff drop constraint FKBC8AE111A27DDA4A
2014-02-03 16:34:40,977 [Scanner-0      ] ERROR SchemaExport                   - Table "T_DEPT_STAFF" not found; SQL statement:

    alter table t_dept_staff 
        drop constraint FKBC8AE111A27DDA4A [42102-160]
Hibernate: 
    alter table t_order 
        drop constraint FKA0C0C3C3E11F4FCB
2014-02-03 16:34:40,978 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order drop constraint FKA0C0C3C3E11F4FCB
2014-02-03 16:34:40,978 [Scanner-0      ] ERROR SchemaExport                   - Table "T_ORDER" not found; SQL statement:

    alter table t_order 
        drop constraint FKA0C0C3C3E11F4FCB [42102-160]
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB0883698FCC4
2014-02-03 16:34:40,979 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_pizzashack drop constraint FKE8ACB0883698FCC4
2014-02-03 16:34:40,979 [Scanner-0      ] ERROR SchemaExport                   - Table "T_ORDER_PIZZASHACK" not found; SQL statement:

    alter table t_order_pizzashack 
        drop constraint FKE8ACB0883698FCC4 [42102-160]
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB088BBCB676E
2014-02-03 16:34:40,979 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_pizzashack drop constraint FKE8ACB088BBCB676E
2014-02-03 16:34:40,979 [Scanner-0      ] ERROR SchemaExport                   - Table "T_ORDER_PIZZASHACK" not found; SQL statement:

    alter table t_order_pizzashack 
        drop constraint FKE8ACB088BBCB676E [42102-160]
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F33E99148D
2014-02-03 16:34:40,980 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_process drop constraint FK6B8B15F33E99148D
2014-02-03 16:34:40,980 [Scanner-0      ] ERROR SchemaExport                   - Table "T_ORDER_PROCESS" not found; SQL statement:

    alter table t_order_process 
        drop constraint FK6B8B15F33E99148D [42102-160]
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F3BBCB676E
2014-02-03 16:34:40,981 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_process drop constraint FK6B8B15F3BBCB676E
2014-02-03 16:34:40,981 [Scanner-0      ] ERROR SchemaExport                   - Table "T_ORDER_PROCESS" not found; SQL statement:

    alter table t_order_process 
        drop constraint FK6B8B15F3BBCB676E [42102-160]
Hibernate: 
    alter table t_order_request_history 
        drop constraint FK5A6B268BBCB676E
2014-02-03 16:34:40,981 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_request_history drop constraint FK5A6B268BBCB676E
2014-02-03 16:34:40,982 [Scanner-0      ] ERROR SchemaExport                   - Table "T_ORDER_REQUEST_HISTORY" not found; SQL statement:

    alter table t_order_request_history 
        drop constraint FK5A6B268BBCB676E [42102-160]
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CA6130105
2014-02-03 16:34:40,982 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_review_record drop constraint FKFB7A439CA6130105
2014-02-03 16:34:40,982 [Scanner-0      ] ERROR SchemaExport                   - Table "T_ORDER_REVIEW_RECORD" not found; SQL statement:

    alter table t_order_review_record 
        drop constraint FKFB7A439CA6130105 [42102-160]
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CBBCB676E
2014-02-03 16:34:40,983 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_review_record drop constraint FKFB7A439CBBCB676E
2014-02-03 16:34:40,983 [Scanner-0      ] ERROR SchemaExport                   - Table "T_ORDER_REVIEW_RECORD" not found; SQL statement:

    alter table t_order_review_record 
        drop constraint FKFB7A439CBBCB676E [42102-160]
Hibernate: 
    alter table t_staff 
        drop constraint FKA0F9FF552DC32C06
2014-02-03 16:34:40,984 [Scanner-0      ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_staff drop constraint FKA0F9FF552DC32C06
2014-02-03 16:34:40,984 [Scanner-0      ] ERROR SchemaExport                   - Table "T_STAFF" not found; SQL statement:

    alter table t_staff 
        drop constraint FKA0F9FF552DC32C06 [42102-160]
Hibernate: 
    drop table t_activity_discount_rate if exists
Hibernate: 
    drop table t_customer if exists
Hibernate: 
    drop table t_dept if exists
Hibernate: 
    drop table t_dept_staff if exists
Hibernate: 
    drop table t_order if exists
Hibernate: 
    drop table t_order_pizzashack if exists
Hibernate: 
    drop table t_order_process if exists
Hibernate: 
    drop table t_order_request_history if exists
Hibernate: 
    drop table t_order_review_record if exists
Hibernate: 
    drop table t_pizzashack if exists
Hibernate: 
    drop table t_staff if exists
Hibernate: 
    drop table t_user if exists
Hibernate: 
    drop table t_workflow if exists
Hibernate: 
    create table t_activity_discount_rate (
        activity_rate_id bigint generated by default as identity,
        code varchar(255),
        description varchar(255),
        effective_time timestamp,
        expire_time timestamp,
        rate decimal(19,2),
        pizzashack_id bigint,
        primary key (activity_rate_id)
    )
Hibernate: 
    create table t_customer (
        cust_id bigint generated by default as identity,
        address varchar(255),
        credits integer,
        customer_name varchar(255),
        email varchar(255),
        primary key (cust_id)
    )
Hibernate: 
    create table t_dept (
        dept_id bigint generated by default as identity,
        create_date date,
        dept_name varchar(255),
        primary key (dept_id)
    )
Hibernate: 
    create table t_dept_staff (
        staff_dept_id bigint generated by default as identity,
        join_date date,
        dept_id bigint,
        staff_id bigint,
        primary key (staff_dept_id)
    )
Hibernate: 
    create table t_order (
        order_id bigint generated by default as identity,
        deliver_time timestamp,
        order_no varchar(255),
        order_time timestamp,
        payment_remarks varchar(255),
        payment_status integer,
        quantity integer,
        ship_address varchar(255),
        status integer,
        total_price decimal(19,2),
        cust_id bigint,
        primary key (order_id)
    )
Hibernate: 
    create table t_order_pizzashack (
        order_pizza_id bigint generated by default as identity,
        qty integer,
        total_price decimal(19,2),
        order_id bigint,
        pizzashack_id bigint,
        primary key (order_pizza_id)
    )
Hibernate: 
    create table t_order_process (
        order_process_id bigint generated by default as identity,
        active_process_definition_id varchar(255),
        active_process_instance_id varchar(255),
        complete_time time,
        create_time time,
        execution_id varchar(255),
        main_process_definition_id varchar(255),
        main_process_instance_id varchar(255),
        operator_id bigint,
        order_id bigint,
        primary key (order_process_id)
    )
Hibernate: 
    create table t_order_request_history (
        message_id varchar(255) generated by default as identity,
        created_at time,
        processor_name varchar(255),
        order_id bigint,
        primary key (message_id)
    )
Hibernate: 
    create table t_order_review_record (
        review_record_id bigint generated by default as identity,
        content varchar(255),
        create_time time,
        review_status integer,
        order_id bigint,
        reviewer_id bigint,
        primary key (review_record_id)
    )
Hibernate: 
    create table t_pizzashack (
        pizzashack_id bigint generated by default as identity,
        description varchar(255),
        icon varchar(255),
        name varchar(255),
        price decimal(19,2),
        primary key (pizzashack_id)
    )
Hibernate: 
    create table t_staff (
        staff_id bigint generated by default as identity,
        create_date date,
        email varchar(255),
        first_name varchar(255),
        identity varchar(255),
        last_name varchar(255),
        level integer,
        role integer,
        user_id bigint,
        primary key (staff_id)
    )
Hibernate: 
    create table t_user (
        user_id bigint generated by default as identity,
        create_time time,
        password varchar(255),
        user_name varchar(255),
        primary key (user_id)
    )
Hibernate: 
    create table t_workflow (
        workflow_id bigint generated by default as identity,
        category varchar(255),
        create_time time,
        deploy_id varchar(255),
        workflow_name varchar(255),
        process_definition_id varchar(255),
        process_definition_key varchar(255),
        primary key (workflow_id)
    )
Hibernate: 
    alter table t_activity_discount_rate 
        add constraint FKA400C193698FCC4 
        foreign key (pizzashack_id) 
        references t_pizzashack
Hibernate: 
    alter table t_dept_staff 
        add constraint FKBC8AE11193A98D65 
        foreign key (dept_id) 
        references t_dept
Hibernate: 
    alter table t_dept_staff 
        add constraint FKBC8AE111A27DDA4A 
        foreign key (staff_id) 
        references t_staff
Hibernate: 
    alter table t_order 
        add constraint FKA0C0C3C3E11F4FCB 
        foreign key (cust_id) 
        references t_customer
Hibernate: 
    alter table t_order_pizzashack 
        add constraint FKE8ACB0883698FCC4 
        foreign key (pizzashack_id) 
        references t_pizzashack
Hibernate: 
    alter table t_order_pizzashack 
        add constraint FKE8ACB088BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_process 
        add constraint FK6B8B15F33E99148D 
        foreign key (operator_id) 
        references t_user
Hibernate: 
    alter table t_order_process 
        add constraint FK6B8B15F3BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_request_history 
        add constraint FK5A6B268BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_review_record 
        add constraint FKFB7A439CA6130105 
        foreign key (reviewer_id) 
        references t_staff
Hibernate: 
    alter table t_order_review_record 
        add constraint FKFB7A439CBBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_staff 
        add constraint FKA0F9FF552DC32C06 
        foreign key (user_id) 
        references t_user
2014-02-03 16:34:41,429 [Scanner-0      ] INFO  SchemaExport                   - HHH000230: Schema export complete
2014-02-03 16:34:41,468 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'entityManagerFactory' of type [class org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:41,498 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'entityManagerFactory' of type [class com.sun.proxy.$Proxy513] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:41,699 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'cxf' of type [class org.apache.cxf.bus.spring.SpringBus] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:41,703 [Scanner-0      ] WARN  OldSpringSupport               - Import of META-INF/cxf/cxf-extension-soap.xml has been deprecated and is unnecessary.
2014-02-03 16:34:41,709 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerByCGLIB$$e1f50b2c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:41,722 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'transactionAttributeSource' of type [class org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:41,729 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'transactionInterceptor' of type [class org.springframework.transaction.interceptor.TransactionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:41,735 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'org.springframework.transaction.config.internalTransactionAdvisor' of type [class org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:41,743 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'transactionManager' of type [class org.springframework.orm.jpa.JpaTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:41,744 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'camelJdbcIdempotentConfig' of type [class co.nz.pizzashack.config.CamelJdbcIdempotentConfig$$EnhancerByCGLIB$$c67eb6b3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:41,758 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'sqlComponent' of type [class org.apache.camel.component.sql.SqlComponent] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:41,763 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'camelCxfConfig' of type [class co.nz.pizzashack.config.CamelCxfConfig$$EnhancerByCGLIB$$f086cdd8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:41,787 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'billingInboundEndpoint' of type [class org.apache.camel.component.cxf.CxfEndpoint] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:41,808 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'billingVariableTransformer' of type [class co.nz.pizzashack.integration.mapping.BillingVariableTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:41,974 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'billingFormatTransformer' of type [class co.nz.pizzashack.integration.mapping.BillingFormatTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:41,976 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'billingResponseMergeProcessor' of type [class co.nz.pizzashack.integration.mapping.BillingResponseMergeProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:41,979 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'sleepBean' of type [class co.nz.pizzashack.integration.utils.SleepBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:41,979 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'billingProcessRoute' of type [class co.nz.pizzashack.integration.route.BillingProcessRoute] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:42,048 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'org.activiti.engine.impl.rules.RulesDeployer#2ab85492' of type [class org.activiti.engine.impl.rules.RulesDeployer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:42,049 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'processEngineConfiguration' of type [class org.activiti.spring.SpringProcessEngineConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:42,052 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'processEngine' of type [class org.activiti.spring.ProcessEngineFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,531 [Scanner-0      ] INFO  DbSqlSession                   - performing create on engine with resource org/activiti/db/create/activiti.h2.create.engine.sql
2014-02-03 16:34:43,549 [Scanner-0      ] INFO  DbSqlSession                   - performing create on history with resource org/activiti/db/create/activiti.h2.create.history.sql
2014-02-03 16:34:43,555 [Scanner-0      ] INFO  DbSqlSession                   - performing create on identity with resource org/activiti/db/create/activiti.h2.create.identity.sql
2014-02-03 16:34:43,557 [Scanner-0      ] INFO  ProcessEngineImpl              - ProcessEngine default created
2014-02-03 16:34:43,558 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'processEngine' of type [class org.activiti.engine.impl.ProcessEngineImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,564 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'runtimeService' of type [class org.activiti.engine.impl.RuntimeServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,568 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'taskService' of type [class org.activiti.engine.impl.TaskServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,573 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'historyService' of type [class org.activiti.engine.impl.HistoryServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,578 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'repositoryService' of type [class org.activiti.engine.impl.RepositoryServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,583 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'managementService' of type [class org.activiti.engine.impl.ManagementServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,587 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'identityService' of type [class org.activiti.engine.impl.IdentityServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,587 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'activitiFacade' of type [class co.nz.pizzashack.wf.ActivitiFacade] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,593 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'userConverter' of type [class co.nz.pizzashack.data.converter.UserConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,609 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,609 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,612 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,622 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#1' of type [class com.sun.proxy.$Proxy520] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,679 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'workflowRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,711 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'workflowRepository' of type [class com.sun.proxy.$Proxy521] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,714 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#2' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,714 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#2' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,714 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#2' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,715 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#3' of type [class com.sun.proxy.$Proxy520] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,723 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'pizzashackRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,732 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'pizzashackRepository' of type [class com.sun.proxy.$Proxy524] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,734 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#4' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,734 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#4' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,735 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#4' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,735 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#5' of type [class com.sun.proxy.$Proxy520] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,743 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,748 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessRepository' of type [class com.sun.proxy.$Proxy525] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,750 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#6' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,750 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#6' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,750 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#6' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,750 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#7' of type [class com.sun.proxy.$Proxy520] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,759 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'userRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,762 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'userRepository' of type [class com.sun.proxy.$Proxy526] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,764 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#8' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,764 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#8' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,764 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#8' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,765 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#9' of type [class com.sun.proxy.$Proxy520] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,773 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,776 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderRepository' of type [class com.sun.proxy.$Proxy527] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,805 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'customerConverter' of type [class co.nz.pizzashack.data.converter.CustomerConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,811 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderDetailConverter' of type [class co.nz.pizzashack.data.converter.OrderDetailConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,811 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderConverter' of type [class co.nz.pizzashack.data.converter.OrderConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,812 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessConverter' of type [class co.nz.pizzashack.data.converter.OrderProcessConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,816 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#10' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,816 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#10' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,817 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#10' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,817 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#11' of type [class com.sun.proxy.$Proxy520] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,826 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'departmentRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,829 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'departmentRepository' of type [class com.sun.proxy.$Proxy528] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,830 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessAccessor' of type [class co.nz.pizzashack.ds.OrderProcessAccessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,835 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderReviewRecordConverter' of type [class co.nz.pizzashack.data.converter.OrderReviewRecordConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,836 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#12' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,837 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#12' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,837 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#12' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,837 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#13' of type [class com.sun.proxy.$Proxy520] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,845 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderReviewRecordRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,849 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderReviewRecordRepository' of type [class com.sun.proxy.$Proxy529] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,851 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#14' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,851 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#14' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,851 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#14' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,852 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#15' of type [class com.sun.proxy.$Proxy520] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,860 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderPizzashackRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,863 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderPizzashackRepository' of type [class com.sun.proxy.$Proxy530] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,865 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#16' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,865 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#16' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,866 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#16' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,866 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#17' of type [class com.sun.proxy.$Proxy520] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,873 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'customerRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,876 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'customerRepository' of type [class com.sun.proxy.$Proxy531] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,877 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessDSImpl' of type [class co.nz.pizzashack.ds.OrderProcessDSImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,883 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'billingInboundProcessor' of type [class co.nz.pizzashack.integration.processor.BillingInboundProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,884 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'billingInboundWsRoute' of type [class co.nz.pizzashack.integration.route.BillingInboundWsRoute] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,902 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderJdbcMessageIdRepository' of type [class org.apache.camel.processor.idempotent.jdbc.JdbcMessageIdRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,909 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessFormatTransformer' of type [class co.nz.pizzashack.integration.mapping.OrderProcessFormatTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,918 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#18' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,918 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#18' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,918 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#18' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,919 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#19' of type [class com.sun.proxy.$Proxy520] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,925 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderRequestHistoryRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,929 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderRequestHistoryRepository' of type [class com.sun.proxy.$Proxy536] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,930 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderRequestProcessor' of type [class co.nz.pizzashack.integration.processor.OrderRequestProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,933 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderDuplicatedReqProcessor' of type [class co.nz.pizzashack.integration.processor.OrderDuplicatedReqProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:43,933 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessRoute' of type [class co.nz.pizzashack.integration.route.OrderProcessRoute] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:44,022 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'activeMQConnectionFactory' of type [class org.apache.activemq.ActiveMQConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:44,175 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'pooledConnectionFactory' of type [class org.apache.activemq.pool.PooledConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:44,197 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'jmsTransactionManager' of type [class org.springframework.jms.connection.JmsTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:44,207 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'jmsComponent' of type [class org.apache.camel.component.jms.JmsComponent] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:44,212 [Scanner-0      ] INFO  ionConfigWebApplicationContext - Bean 'camelSpringConfig' of type [class co.nz.pizzashack.config.CamelSpringConfig$$EnhancerByCGLIB$$3006c46c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 16:34:44,248 [Scanner-0      ] INFO  DefaultListableBeanFactory     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@7e9e7b19: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,applicationConfiguration,webMvcContextConfiguration,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,viewConfiguration,logoutController,loginController,indexController,userController,adminIndexController,departmentController,orderController,orderQueryController,staffController,billingProcessRespTransformer,billingProcessReqTransformer,orderProcessFormatTransformer,billingVariableTransformer,billingResponseMergeProcessor,billingFormatTransformer,billingInboundProcessor,orderDuplicatedReqProcessor,orderRequestProcessor,billingProcessRoute,billingInboundWsRoute,orderProcessRoute,sleepBean,pizzashackAPIImpl,camelSpringConfig,camelJdbcIdempotentConfig,camelCxfConfig,orderProcessDSImpl,customerDSImpl,workflowDSImpl,pizzashackDSImpl,userDSImpl,orderProcessAccessor,orderProcessQueryDSImpl,staffDSImpl,orderDSImpl,departmentDSImpl,initialDataConfig,pizzashackCaculator,emailExecutionListener,endExecutionListener,caculationMergeExecutionListener,orderMainTransitionExecutionListener,toManualReviewExecutionListener,outOfBillingProcessExecutionListener,outOfCoreProcessExecutionListener,billingRespExecutionListener,customerConverter,orderProcessConverter,staffConverter,userConverter,departmentConverter,workflowConverter,orderReviewRecordConverter,orderConverter,activityDiscountRateConverter,orderDetailConverter,pizzashackDataInitialConfiguration,pizzashackItemBuilder,infrastructureContextConfiguration,activitiFacade,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0,org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0,orderReviewRecordRepository,userRepository,pizzashackRepository,staffRepository,workflowRepository,orderPizzashackRepository,customerRepository,activityDiscountRateRepository,orderRepository,orderProcessRepository,departmentRepository,orderRequestHistoryRepository,staffDepartmentRepository,viewResolver,messageSource,activeMQConnectionFactory,pooledConnectionFactory,jmsComponent,jmsTransactionManager,camelBeanPostProcessor,camelContext,custThreadPoolProfile,sqlComponent,orderJdbcMessageIdRepository,billingInboundEndpoint,loggingOutInterceptor,cxf,org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor,org.apache.cxf.bus.spring.Jsr250BeanPostProcessor,org.apache.cxf.bus.spring.BusExtensionPostProcessor,org.apache.cxf.binding.soap.SoapBindingFactory,org.apache.cxf.binding.soap.SoapTransportFactory,org.apache.cxf.binding.soap.customEditorConfigurer,setupWorkflowData,setupData,org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration,org.springframework.transaction.config.internalTransactionAdvisor,transactionAttributeSource,transactionInterceptor,dataSource,transactionManager,entityManagerFactory,placeholderConfig,processEngineConfiguration,processEngine,repositoryService,runtimeService,taskService,historyService,managementService,identityService,org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration,requestMappingHandlerMapping,mvcContentNegotiationManager,viewControllerHandlerMapping,beanNameHandlerMapping,resourceHandlerMapping,defaultServletHandlerMapping,requestMappingHandlerAdapter,mvcConversionService,mvcValidator,httpRequestHandlerAdapter,simpleControllerHandlerAdapter,handlerExceptionResolver,sessionAttributeProcessor,localeChangeInterceptor,multipartResolver,localeResolver,simpleMappingExceptionResolver]; root of factory hierarchy
2014-02-03 16:34:44,634 [Scanner-0      ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) is starting
2014-02-03 16:34:44,634 [Scanner-0      ] INFO  ManagedManagementStrategy      - JMX is enabled
2014-02-03 16:34:44,700 [Scanner-0      ] INFO  DefaultTypeConverter           - Loaded 194 type converters
Hibernate: 
    SELECT
        1 
    FROM
        T_ORDER_REQUEST_HISTORY 
    WHERE
        1 = 0
2014-02-03 16:34:44,894 [Scanner-0      ] INFO  SpringCamelContext             - StreamCaching is not in use. If using streams then its recommended to enable stream caching. See more details at http://camel.apache.org/stream-caching.html
2014-02-03 16:34:44,993 [Scanner-0      ] INFO  BusApplicationContext          - Refreshing org.apache.cxf.bus.spring.BusApplicationContext@2c038d57: startup date [Mon Feb 03 16:34:44 NZDT 2014]; parent: Root WebApplicationContext
2014-02-03 16:34:45,015 [Scanner-0      ] INFO  DefaultListableBeanFactory     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2536589c: defining beans []; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@7e9e7b19
2014-02-03 16:34:45,027 [Scanner-0      ] INFO  ReflectionServiceFactoryBean   - Creating Service {http://ws.integration.pizzashack.nz.co/}BillingProcessWebServicesService from class co.nz.pizzashack.integration.ws.BillingProcessWebServices
2014-02-03 16:34:45,397 [Scanner-0      ] INFO  ServerImpl                     - Setting the server's publish address to be /billingWs
2014-02-03 16:34:45,413 [Scanner-0      ] INFO  SpringCamelContext             - Route: activitiBillingProcess started and consuming from: Endpoint[activiti://orderBillingProcess:billingIntegration?copyVariablesToBodyAsMap=true]
2014-02-03 16:34:45,414 [Scanner-0      ] INFO  SpringCamelContext             - Route: direct:billingIntegration started and consuming from: Endpoint[direct://billingIntegration]
2014-02-03 16:34:45,415 [Scanner-0      ] INFO  SpringCamelContext             - Route: direct:receiveBillingQueue started and consuming from: Endpoint[direct://receiveBillingQueue]
2014-02-03 16:34:45,415 [Scanner-0      ] INFO  SpringCamelContext             - Route: route1 started and consuming from: Endpoint[direct://doBillingIntegration]
2014-02-03 16:34:45,420 [Scanner-0      ] INFO  SpringCamelContext             - Route: orderProcessRoute started and consuming from: Endpoint[jms://queue:pizzashackOrderInbound]
2014-02-03 16:34:45,421 [Scanner-0      ] INFO  SpringCamelContext             - Route: direct:orderDuplicatedProcess started and consuming from: Endpoint[direct://orderDuplicatedProcess]
2014-02-03 16:34:45,422 [Scanner-0      ] INFO  SpringCamelContext             - Route: direct:orderRegularProcess started and consuming from: Endpoint[direct://orderRegularProcess]
2014-02-03 16:34:45,424 [Scanner-0      ] INFO  SpringCamelContext             - Route: cxf:bean:billingInboundEndpoint started and consuming from: Endpoint[cxf://bean:billingInboundEndpoint]
2014-02-03 16:34:45,432 [Scanner-0      ] INFO  SpringCamelContext             - Total 8 routes, of which 8 is started.
2014-02-03 16:34:45,434 [Scanner-0      ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) started in 0.800 seconds
2014-02-03 16:34:45,458 [Scanner-0      ] INFO  WorkflowInitialDataSetup       - initialize start:{}
2014-02-03 16:34:45,469 [Scanner-0      ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 16:34:45,469 [Scanner-0      ] INFO  UserDSImpl                     - usernamedavid
2014-02-03 16:34:45,469 [Scanner-0      ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 16:34:45,637 [Scanner-0      ] INFO  UserDSImpl                     - userId:1 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 16:34:45,684 [Scanner-0      ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@1721d79[userId=1,username=david,password=MTIzNDU2,createTime=Mon Feb 03 16:34:45 NZDT 2014]
2014-02-03 16:34:45,729 [Scanner-0      ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-03 03:34:45)
2014-02-03 16:34:45,729 [Scanner-0      ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-03 03:34:45)
2014-02-03 16:34:45,731 [Scanner-0      ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 16:34:45,731 [Scanner-0      ] INFO  UserDSImpl                     - usernamebrad
2014-02-03 16:34:45,731 [Scanner-0      ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 16:34:45,734 [Scanner-0      ] INFO  UserDSImpl                     - userId:2 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 16:34:45,735 [Scanner-0      ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@1834d38a[userId=2,username=brad,password=MTIzNDU2,createTime=Mon Feb 03 16:34:45 NZDT 2014]
2014-02-03 16:34:45,736 [Scanner-0      ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-03 03:34:45)
2014-02-03 16:34:45,736 [Scanner-0      ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-03 03:34:45)
2014-02-03 16:34:45,736 [Scanner-0      ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 16:34:45,736 [Scanner-0      ] INFO  UserDSImpl                     - usernamejohn
2014-02-03 16:34:45,736 [Scanner-0      ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 16:34:45,739 [Scanner-0      ] INFO  UserDSImpl                     - userId:3 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 16:34:45,740 [Scanner-0      ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@29d1f8f9[userId=3,username=john,password=MTIzNDU2,createTime=Mon Feb 03 16:34:45 NZDT 2014]
2014-02-03 16:34:45,741 [Scanner-0      ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-03 03:34:45)
2014-02-03 16:34:45,741 [Scanner-0      ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-03 03:34:45)
2014-02-03 16:34:45,741 [Scanner-0      ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 16:34:45,741 [Scanner-0      ] INFO  UserDSImpl                     - usernamegeneral
2014-02-03 16:34:45,741 [Scanner-0      ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 16:34:45,744 [Scanner-0      ] INFO  UserDSImpl                     - userId:4 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 16:34:45,746 [Scanner-0      ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@7dce4f28[userId=4,username=general,password=MTIzNDU2,createTime=Mon Feb 03 16:34:45 NZDT 2014]
2014-02-03 16:34:45,746 [Scanner-0      ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:2014-02-03 03:34:45)
2014-02-03 16:34:45,746 [Scanner-0      ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:2014-02-03 03:34:45)
2014-02-03 16:34:45,757 [Scanner-0      ] INFO  DepartmentDSImpl               - createDepartment start:co.nz.pizzashack.data.dto.DepartmentDto(deptId:null, deptName:Order manager, createDate:null) 
Hibernate: 
    select
        department0_.dept_id as dept1_8_,
        department0_.create_date as create2_8_,
        department0_.dept_name as dept3_8_ 
    from
        t_dept department0_ 
    where
        department0_.dept_name=? limit ?
2014-02-03 16:34:45,762 [Scanner-0      ] INFO  DepartmentConverter            - toModel start:{} co.nz.pizzashack.data.dto.DepartmentDto(deptId:null, deptName:Order manager, createDate:null)
2014-02-03 16:34:45,766 [Scanner-0      ] INFO  DepartmentConverter            - toModel end:{} co.nz.pizzashack.data.model.DepartmentModel@59eb9078[deptId=<null>,deptName=Order manager,createDate=<null>,staffDepartments=<null>]
Hibernate: 
    insert 
    into
        t_dept
        (dept_id, create_date, dept_name) 
    values
        (null, ?, ?)
Hibernate: 
    insert 
    into
        ACT_ID_GROUP
        (ID_, REV_, NAME_, TYPE_)     
    values
        (       ?,       1,        ?,       ?     )
2014-02-03 16:34:45,773 [Scanner-0      ] INFO  DepartmentConverter            - toDto start:{} co.nz.pizzashack.data.model.DepartmentModel@59eb9078[deptId=1,deptName=Order manager,createDate=Mon Feb 03 16:34:45 NZDT 2014,staffDepartments=<null>]
2014-02-03 16:34:45,774 [Scanner-0      ] INFO  DepartmentConverter            - toDto end:{} co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-03)
2014-02-03 16:34:45,774 [Scanner-0      ] INFO  DepartmentDSImpl               - createDepartment end:co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-03) 
2014-02-03 16:34:45,775 [Scanner-0      ] INFO  WorkflowInitialDataSetup       - department:co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-03) 
2014-02-03 16:34:45,795 [Scanner-0      ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:null, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-03 03:34:45)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-02-03 16:34:45,802 [Scanner-0      ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:null, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-03 03:34:45))
2014-02-03 16:34:45,820 [Scanner-0      ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@749a6e02[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@46ac811c[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-02-03 16:34:45,864 [Scanner-0      ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@749a6e02[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@46ac811c[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=Mon Feb 03 16:34:45 NZDT 2014] 
2014-02-03 16:34:45,864 [Scanner-0      ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = ?
Hibernate: 
    update
        ACT_GE_PROPERTY      
    SET
        REV_ = ?,
        VALUE_ = ?      
    where
        NAME_ = ?       
        and REV_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-02-03 16:34:45,886 [Scanner-0      ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-02-03 16:34:45,893 [Scanner-0      ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@749a6e02[staffId=1,individual=co.nz.pizzashack.data.model.IndividualModel@46ac811c[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=Mon Feb 03 16:34:45 NZDT 2014]
2014-02-03 16:34:45,900 [Scanner-0      ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:1, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:2014-02-03, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-02-03 16:34:45,901 [Scanner-0      ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:1, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:2014-02-03, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-02-03 16:34:45,905 [Scanner-0      ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:null, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-03 03:34:45)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-02-03 16:34:45,906 [Scanner-0      ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:null, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-03 03:34:45))
2014-02-03 16:34:45,907 [Scanner-0      ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@557d410a[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@1239235f[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-02-03 16:34:45,915 [Scanner-0      ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@557d410a[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@1239235f[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=Mon Feb 03 16:34:45 NZDT 2014] 
2014-02-03 16:34:45,915 [Scanner-0      ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-02-03 16:34:45,919 [Scanner-0      ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-02-03 16:34:45,922 [Scanner-0      ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@557d410a[staffId=2,individual=co.nz.pizzashack.data.model.IndividualModel@1239235f[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=Mon Feb 03 16:34:45 NZDT 2014]
2014-02-03 16:34:45,923 [Scanner-0      ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:2, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:2014-02-03, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-02-03 16:34:45,923 [Scanner-0      ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:2, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:2014-02-03, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-02-03 16:34:45,924 [Scanner-0      ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:null, departments:null, role:manager, level:junior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-03 03:34:45)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-02-03 16:34:45,926 [Scanner-0      ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:null, departments:null, role:manager, level:junior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-03 03:34:45))
2014-02-03 16:34:45,926 [Scanner-0      ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@2225d77f[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@6266e45c[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-02-03 16:34:45,932 [Scanner-0      ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@2225d77f[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@6266e45c[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=Mon Feb 03 16:34:45 NZDT 2014] 
2014-02-03 16:34:45,932 [Scanner-0      ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-02-03 16:34:45,938 [Scanner-0      ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-02-03 16:34:45,941 [Scanner-0      ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@2225d77f[staffId=3,individual=co.nz.pizzashack.data.model.IndividualModel@6266e45c[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=Mon Feb 03 16:34:45 NZDT 2014]
2014-02-03 16:34:45,942 [Scanner-0      ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:3, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:2014-02-03, departments:null, role:manager, level:null, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-02-03 16:34:45,942 [Scanner-0      ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:3, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:2014-02-03, departments:null, role:manager, level:null, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-02-03 16:34:45,943 [Scanner-0      ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-02-03 16:34:45,952 [Scanner-0      ] INFO  BpmnDeployer                   - Processing resource bpmn/OrderBillingProcess.bpmn20.xml
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-02-03 16:34:46,144 [Scanner-0      ] INFO  RulesDeployer                  - Processing resource bpmn/OrderBillingProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 16:34:46,154 [Scanner-0      ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderBillingProcess:1:7]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-02-03 16:34:46,160 [Scanner-0      ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@ca7e889[wfId=1,name=orderBillingProcess,deployId=4,processDefinitionKey=orderBillingProcess,processDefinitionId=orderBillingProcess:1:7,createTime=Mon Feb 03 16:34:45 NZDT 2014]
2014-02-03 16:34:46,172 [Scanner-0      ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-02-03 03:34:45)
2014-02-03 16:34:46,172 [Scanner-0      ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-02-03 03:34:45)
2014-02-03 16:34:46,173 [Scanner-0      ] INFO  WorkflowInitialDataSetup       - deploy billing process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-02-03 03:34:45) 
2014-02-03 16:34:46,173 [Scanner-0      ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-02-03 16:34:46,175 [Scanner-0      ] INFO  BpmnDeployer                   - Processing resource bpmn/OrdercoreProcess.bpmn20.xml
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-02-03 16:34:46,276 [Scanner-0      ] INFO  RulesDeployer                  - Processing resource bpmn/OrdercoreProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 16:34:46,283 [Scanner-0      ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderCoreProcess:1:11]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-02-03 16:34:46,284 [Scanner-0      ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@3e7cc289[wfId=2,name=orderCoreProcess,deployId=8,processDefinitionKey=orderCoreProcess,processDefinitionId=orderCoreProcess:1:11,createTime=Mon Feb 03 16:34:46 NZDT 2014]
2014-02-03 16:34:46,285 [Scanner-0      ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-02-03 03:34:46)
2014-02-03 16:34:46,285 [Scanner-0      ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-02-03 03:34:46)
2014-02-03 16:34:46,285 [Scanner-0      ] INFO  WorkflowInitialDataSetup       - deploy core process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-02-03 03:34:46) 
2014-02-03 16:34:46,286 [Scanner-0      ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-02-03 16:34:46,288 [Scanner-0      ] INFO  BpmnDeployer                   - Processing resource bpmn/OrderlocalProcess.bpmn20.xml
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-02-03 16:34:46,451 [Scanner-0      ] INFO  RulesDeployer                  - Processing resource bpmn/OrderlocalProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 16:34:46,459 [Scanner-0      ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderlocalProcess:1:15]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-02-03 16:34:46,460 [Scanner-0      ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@47b9cdb[wfId=3,name=orderlocalProcess,deployId=12,processDefinitionKey=orderlocalProcess,processDefinitionId=orderlocalProcess:1:15,createTime=Mon Feb 03 16:34:46 NZDT 2014]
2014-02-03 16:34:46,461 [Scanner-0      ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 03:34:46)
2014-02-03 16:34:46,461 [Scanner-0      ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 03:34:46)
2014-02-03 16:34:46,461 [Scanner-0      ] INFO  WorkflowInitialDataSetup       - deploy local main process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 03:34:46) 
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
2014-02-03 16:34:46,616 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/logout],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LogoutController.logout(javax.servlet.http.HttpSession)
2014-02-03 16:34:46,616 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/login],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LoginController.showLoginPage(org.springframework.ui.Model)
2014-02-03 16:34:46,616 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/login],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LoginController.handleLogin(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws co.nz.pizzashack.AuthenticationException
2014-02-03 16:34:46,617 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/index],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.IndexController.index(org.springframework.ui.Model,co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-02-03 16:34:46,618 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/createUser],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public co.nz.pizzashack.data.dto.UserDto co.nz.pizzashack.controller.UserController.createUser(co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-02-03 16:34:46,618 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/{userId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:34:46,618 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:34:46,619 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/update/{userId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:34:46,619 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/{userId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.deleteUser(java.lang.Long) throws java.lang.Exception
2014-02-03 16:34:46,619 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/check/{userName}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.checkUser(java.lang.String) throws java.lang.Exception
2014-02-03 16:34:46,619 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:34:46,619 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/search],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.search(co.nz.pizzashack.data.dto.UserDto,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:34:46,619 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.create(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 16:34:46,619 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.update(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 16:34:46,620 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/adminIndex],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.AdminIndexController.index(org.springframework.ui.Model,co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-02-03 16:34:46,621 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/{deptId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:34:46,621 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/selectdepts],methods=[GET],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.util.Set<co.nz.pizzashack.data.dto.DepartmentDto> co.nz.pizzashack.controller.DepartmentController.select() throws java.lang.Exception
2014-02-03 16:34:46,621 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:34:46,621 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/update/{deptId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:34:46,621 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:34:46,621 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/{deptId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.delete(java.lang.Long) throws java.lang.Exception
2014-02-03 16:34:46,622 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/search],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.search(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:34:46,622 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.create(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 16:34:46,622 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.update(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 16:34:46,622 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/{orderProcessId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.showOrderProcess(java.lang.Long,org.springframework.ui.Model,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-02-03 16:34:46,623 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/claimReview/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.claimReviewTask(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-02-03 16:34:46,623 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/review],methods=[POST],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.reviewOrder(co.nz.pizzashack.data.dto.OrderReviewRecordDto,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-02-03 16:34:46,623 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderQuery/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderQueryController.show(java.lang.String,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:34:46,623 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderQuery/showHistory/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.util.Set<co.nz.pizzashack.data.dto.ProcessActivityDto> co.nz.pizzashack.controller.OrderQueryController.showHistory(java.lang.String) throws java.lang.Exception
2014-02-03 16:34:46,624 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderQuery/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderQueryController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:34:46,624 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/{staffId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:34:46,625 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:34:46,625 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/update/{staffId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:34:46,626 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 16:34:46,626 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/{staffId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.delete(java.lang.Long) throws java.lang.Exception
2014-02-03 16:34:46,626 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.create(co.nz.pizzashack.data.dto.StaffDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 16:34:46,626 [Scanner-0      ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.update(co.nz.pizzashack.data.dto.StaffDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 16:34:46,659 [Scanner-0      ] INFO  SimpleUrlHandlerMapping        - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2014-02-03 16:34:46,661 [Scanner-0      ] INFO  SimpleUrlHandlerMapping        - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler]
2014-02-03 16:34:46,892 [Scanner-0      ] INFO  ContextLoader                  - Root WebApplicationContext: initialization completed in 8433 ms
2014-02-03 16:34:46.892:INFO:oejsh.ContextHandler:started o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
Feb 03, 2014 4:34:46 PM com.sun.jersey.api.core.PackagesResourceConfig init
INFO: Scanning for root resource and provider classes in the packages:
  co.nz.pizzashack.integration.api
Feb 03, 2014 4:34:46 PM com.sun.jersey.api.core.ScanningResourceConfig logClasses
INFO: Root resource classes found:
  class co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl
Feb 03, 2014 4:34:46 PM com.sun.jersey.api.core.ScanningResourceConfig init
INFO: No provider classes found.
Feb 03, 2014 4:34:46 PM com.sun.jersey.spi.spring.container.servlet.SpringServlet getContext
INFO: Using default applicationContext
Feb 03, 2014 4:34:46 PM com.sun.jersey.spi.spring.container.SpringComponentProviderFactory registerSpringBeans
INFO: Registering Spring bean, pizzashackAPIImpl, of type co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl as a root resource class
Feb 03, 2014 4:34:46 PM com.sun.jersey.server.impl.application.WebApplicationImpl _initiate
INFO: Initiating Jersey application, version 'Jersey: 1.17.1 02/28/2013 12:47 PM'
Feb 03, 2014 4:34:47 PM com.sun.jersey.spi.inject.Errors processErrorMessages
WARNING: The following warnings have been detected with resource and/or provider classes:
  WARNING: A HTTP GET method, public javax.ws.rs.core.Response co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl.getOrderProcessByOrderNo(java.lang.String), should not consume any entity.
Feb 03, 2014 4:34:47 PM com.sun.jersey.spi.spring.container.servlet.SpringServlet getContext
INFO: Using default applicationContext
Feb 03, 2014 4:34:47 PM com.sun.jersey.spi.spring.container.SpringComponentProviderFactory registerSpringBeans
INFO: Registering Spring bean, pizzashackAPIImpl, of type co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl as a root resource class
Feb 03, 2014 4:34:47 PM com.sun.jersey.server.impl.application.WebApplicationImpl _initiate
INFO: Initiating Jersey application, version 'Jersey: 1.17.1 02/28/2013 12:47 PM'
Feb 03, 2014 4:34:47 PM com.sun.jersey.spi.inject.Errors processErrorMessages
WARNING: The following warnings have been detected with resource and/or provider classes:
  WARNING: A HTTP GET method, public javax.ws.rs.core.Response co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl.getOrderProcessByOrderNo(java.lang.String), should not consume any entity.
2014-02-03 16:34:47.431:INFO:/:Initializing Spring FrameworkServlet 'dispatcher'
2014-02-03 16:34:47,431 [Scanner-0      ] INFO  DispatcherServlet              - FrameworkServlet 'dispatcher': initialization started
2014-02-03 16:34:47,444 [Scanner-0      ] INFO  DispatcherServlet              - FrameworkServlet 'dispatcher': initialization completed in 13 ms
[INFO] Restart completed at Mon Feb 03 16:34:47 NZDT 2014
^C2014-02-03 16:35:20.146:INFO:/:Destroying Spring FrameworkServlet 'dispatcher'
2014-02-03 16:35:20,146 [Thread-1       ] INFO  ionConfigWebApplicationContext - Closing Root WebApplicationContext: startup date [Mon Feb 03 16:34:38 NZDT 2014]; root of context hierarchy
2014-02-03 16:35:20,148 [Thread-1       ] INFO  BusApplicationContext          - Closing org.apache.cxf.bus.spring.BusApplicationContext@2c038d57: startup date [Mon Feb 03 16:34:44 NZDT 2014]; parent: Root WebApplicationContext
2014-02-03 16:35:20,148 [Thread-1       ] INFO  DefaultListableBeanFactory     - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2536589c: defining beans []; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@7e9e7b19
2014-02-03 16:35:20,149 [Thread-1       ] INFO  DefaultListableBeanFactory     - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@7e9e7b19: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,applicationConfiguration,webMvcContextConfiguration,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,viewConfiguration,logoutController,loginController,indexController,userController,adminIndexController,departmentController,orderController,orderQueryController,staffController,billingProcessRespTransformer,billingProcessReqTransformer,orderProcessFormatTransformer,billingVariableTransformer,billingResponseMergeProcessor,billingFormatTransformer,billingInboundProcessor,orderDuplicatedReqProcessor,orderRequestProcessor,billingProcessRoute,billingInboundWsRoute,orderProcessRoute,sleepBean,pizzashackAPIImpl,camelSpringConfig,camelJdbcIdempotentConfig,camelCxfConfig,orderProcessDSImpl,customerDSImpl,workflowDSImpl,pizzashackDSImpl,userDSImpl,orderProcessAccessor,orderProcessQueryDSImpl,staffDSImpl,orderDSImpl,departmentDSImpl,initialDataConfig,pizzashackCaculator,emailExecutionListener,endExecutionListener,caculationMergeExecutionListener,orderMainTransitionExecutionListener,toManualReviewExecutionListener,outOfBillingProcessExecutionListener,outOfCoreProcessExecutionListener,billingRespExecutionListener,customerConverter,orderProcessConverter,staffConverter,userConverter,departmentConverter,workflowConverter,orderReviewRecordConverter,orderConverter,activityDiscountRateConverter,orderDetailConverter,pizzashackDataInitialConfiguration,pizzashackItemBuilder,infrastructureContextConfiguration,activitiFacade,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0,org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0,orderReviewRecordRepository,userRepository,pizzashackRepository,staffRepository,workflowRepository,orderPizzashackRepository,customerRepository,activityDiscountRateRepository,orderRepository,orderProcessRepository,departmentRepository,orderRequestHistoryRepository,staffDepartmentRepository,viewResolver,messageSource,activeMQConnectionFactory,pooledConnectionFactory,jmsComponent,jmsTransactionManager,camelBeanPostProcessor,camelContext,custThreadPoolProfile,sqlComponent,orderJdbcMessageIdRepository,billingInboundEndpoint,loggingOutInterceptor,cxf,org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor,org.apache.cxf.bus.spring.Jsr250BeanPostProcessor,org.apache.cxf.bus.spring.BusExtensionPostProcessor,org.apache.cxf.binding.soap.SoapBindingFactory,org.apache.cxf.binding.soap.SoapTransportFactory,org.apache.cxf.binding.soap.customEditorConfigurer,setupWorkflowData,setupData,org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration,org.springframework.transaction.config.internalTransactionAdvisor,transactionAttributeSource,transactionInterceptor,dataSource,transactionManager,entityManagerFactory,placeholderConfig,processEngineConfiguration,processEngine,repositoryService,runtimeService,taskService,historyService,managementService,identityService,org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration,requestMappingHandlerMapping,mvcContentNegotiationManager,viewControllerHandlerMapping,beanNameHandlerMapping,resourceHandlerMapping,defaultServletHandlerMapping,requestMappingHandlerAdapter,mvcConversionService,mvcValidator,httpRequestHandlerAdapter,simpleControllerHandlerAdapter,handlerExceptionResolver,sessionAttributeProcessor,localeChangeInterceptor,multipartResolver,localeResolver,simpleMappingExceptionResolver]; root of factory hierarchy
2014-02-03 16:35:20,151 [Thread-1       ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) is shutting down
2014-02-03 16:35:20,152 [Thread-1       ] INFO  DefaultShutdownStrategy        - Starting to graceful shutdown 8 routes (timeout 300 seconds)
2014-02-03 16:35:20,157 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: cxf:bean:billingInboundEndpoint shutdown complete, was consuming from: Endpoint[cxf://bean:billingInboundEndpoint]
2014-02-03 16:35:20,157 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:orderRegularProcess shutdown complete, was consuming from: Endpoint[direct://orderRegularProcess]
2014-02-03 16:35:20,157 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:orderDuplicatedProcess shutdown complete, was consuming from: Endpoint[direct://orderDuplicatedProcess]
2014-02-03 16:35:20,519 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: orderProcessRoute shutdown complete, was consuming from: Endpoint[jms://queue:pizzashackOrderInbound]
2014-02-03 16:35:20,519 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: route1 shutdown complete, was consuming from: Endpoint[direct://doBillingIntegration]
2014-02-03 16:35:20,519 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:receiveBillingQueue shutdown complete, was consuming from: Endpoint[direct://receiveBillingQueue]
2014-02-03 16:35:20,519 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:billingIntegration shutdown complete, was consuming from: Endpoint[direct://billingIntegration]
2014-02-03 16:35:20,520 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: activitiBillingProcess shutdown complete, was consuming from: Endpoint[activiti://orderBillingProcess:billingIntegration?copyVariablesToBodyAsMap=true]
2014-02-03 16:35:20,520 [Thread-1       ] INFO  DefaultShutdownStrategy        - Graceful shutdown of 8 routes completed in 0 seconds
2014-02-03 16:35:20,521 [Thread-1       ] INFO  CxfEndpoint                    - shutdown the bus ... org.apache.cxf.bus.spring.SpringBus@1e610a19
2014-02-03 16:35:20,530 [Thread-1       ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) uptime 35.898 seconds
2014-02-03 16:35:20,530 [Thread-1       ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) is shutdown in 0.379 seconds
2014-02-03 16:35:20,539 [Thread-1       ] INFO  tainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2014-02-03 16:35:20,539 [Thread-1       ] INFO  SchemaExport                   - HHH000227: Running hbm2ddl schema export
Hibernate: 
    alter table t_activity_discount_rate 
        drop constraint FKA400C193698FCC4
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE11193A98D65
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE111A27DDA4A
Hibernate: 
    alter table t_order 
        drop constraint FKA0C0C3C3E11F4FCB
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB0883698FCC4
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB088BBCB676E
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F33E99148D
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F3BBCB676E
Hibernate: 
    alter table t_order_request_history 
        drop constraint FK5A6B268BBCB676E
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CA6130105
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CBBCB676E
Hibernate: 
    alter table t_staff 
        drop constraint FKA0F9FF552DC32C06
Hibernate: 
    drop table t_activity_discount_rate if exists
Hibernate: 
    drop table t_customer if exists
Hibernate: 
    drop table t_dept if exists
Hibernate: 
    drop table t_dept_staff if exists
Hibernate: 
    drop table t_order if exists
Hibernate: 
    drop table t_order_pizzashack if exists
Hibernate: 
    drop table t_order_process if exists
Hibernate: 
    drop table t_order_request_history if exists
Hibernate: 
    drop table t_order_review_record if exists
Hibernate: 
    drop table t_pizzashack if exists
Hibernate: 
    drop table t_staff if exists
Hibernate: 
    drop table t_user if exists
Hibernate: 
    drop table t_workflow if exists
2014-02-03 16:35:20,558 [Thread-1       ] INFO  SchemaExport                   - HHH000230: Schema export complete
2014-02-03 16:35:20.561:INFO:/:Closing Spring root WebApplicationContext
2014-02-03 16:35:20.562:INFO:oejsl.ELContextCleaner:javax.el.BeanELResolver purged
2014-02-03 16:35:20.562:INFO:oejsh.ContextHandler:stopped o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
[INFO] Jetty server exiting.
2014-02-03 16:35:20.620:INFO:oejut.ShutdownThread:shutdown already commenced
]0;david@david: ~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-webdavid@david:~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web$ clear
[H[2J]0;david@david: ~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-webdavid@david:~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web$ cd ..
]0;david@david: ~/study/activiti5/code/github/pizzashack-order/pizzashack-distributordavid@david:~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor$ ls
[0m[01;34mpizzashack-distributor-ds[0m  [01;34mpizzashack-distributor-integration[0m  [01;34mpizzashack-distributor-repository[0m  [01;34mpizzashack-distributor-shared[0m  [01;34mpizzashack-distributor-web[0m  pom.xml
]0;david@david: ~/study/activiti5/code/github/pizzashack-order/pizzashack-distributordavid@david:~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor$ mvn clean install
[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Build Order:
[INFO] 
[INFO] pizzashack-distributor
[INFO] pizzashack-distributor-shared
[INFO] pizzashack-distributor-repository
[INFO] pizzashack-distributor-ds
[INFO] pizzashack-distributor-integration
[INFO] pizzashack-distributor-web Maven Webapp
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building pizzashack-distributor 1.0.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:2.4.1:clean (default-clean) @ pizzashack-distributor ---
[INFO] 
[INFO] --- maven-install-plugin:2.3.1:install (default-install) @ pizzashack-distributor ---
[INFO] Installing /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pom.xml to /home/david/.m2/repository/co/nz/pizzashack/pizzashack-distributor/1.0.0-SNAPSHOT/pizzashack-distributor-1.0.0-SNAPSHOT.pom
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building pizzashack-distributor-shared 1.0.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[WARNING] The artifact jdom:jdom:jar:1.1 has been relocated to org.jdom:jdom:jar:1.1
[WARNING] The artifact commons-email:commons-email:jar:1.1 has been relocated to org.apache.commons:commons-email:jar:1.1
[INFO] 
[INFO] --- maven-clean-plugin:2.4.1:clean (default-clean) @ pizzashack-distributor-shared ---
[INFO] Deleting /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-shared/target
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ pizzashack-distributor-shared ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] Copying 4 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ pizzashack-distributor-shared ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ pizzashack-distributor-shared ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-shared/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ pizzashack-distributor-shared ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-surefire-plugin:2.5:test (default-test) @ pizzashack-distributor-shared ---
[INFO] No tests to run.
[INFO] 
[INFO] --- maven-jar-plugin:2.2:jar (default-jar) @ pizzashack-distributor-shared ---
[INFO] Building jar: /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-shared/target/pizzashack-distributor-shared-1.0.0-SNAPSHOT.jar
[INFO] 
[INFO] --- maven-install-plugin:2.3.1:install (default-install) @ pizzashack-distributor-shared ---
[INFO] Installing /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-shared/target/pizzashack-distributor-shared-1.0.0-SNAPSHOT.jar to /home/david/.m2/repository/co/nz/pizzashack/pizzashack-distributor-shared/1.0.0-SNAPSHOT/pizzashack-distributor-shared-1.0.0-SNAPSHOT.jar
[INFO] Installing /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-shared/pom.xml to /home/david/.m2/repository/co/nz/pizzashack/pizzashack-distributor-shared/1.0.0-SNAPSHOT/pizzashack-distributor-shared-1.0.0-SNAPSHOT.pom
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building pizzashack-distributor-repository 1.0.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:2.4.1:clean (default-clean) @ pizzashack-distributor-repository ---
[INFO] Deleting /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-repository/target
[INFO] 
[INFO] --- maven-apt-plugin:1.0.4:process (default) @ pizzashack-distributor-repository ---
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ pizzashack-distributor-repository ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-repository/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ pizzashack-distributor-repository ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ pizzashack-distributor-repository ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-repository/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ pizzashack-distributor-repository ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-surefire-plugin:2.5:test (default-test) @ pizzashack-distributor-repository ---
[INFO] No tests to run.
[INFO] 
[INFO] --- maven-jar-plugin:2.2:jar (default-jar) @ pizzashack-distributor-repository ---
[INFO] Building jar: /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-repository/target/pizzashack-distributor-repository-1.0.0-SNAPSHOT.jar
[INFO] 
[INFO] --- maven-install-plugin:2.3.1:install (default-install) @ pizzashack-distributor-repository ---
[INFO] Installing /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-repository/target/pizzashack-distributor-repository-1.0.0-SNAPSHOT.jar to /home/david/.m2/repository/co/nz/pizzashack/pizzashack-distributor-repository/1.0.0-SNAPSHOT/pizzashack-distributor-repository-1.0.0-SNAPSHOT.jar
[INFO] Installing /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-repository/pom.xml to /home/david/.m2/repository/co/nz/pizzashack/pizzashack-distributor-repository/1.0.0-SNAPSHOT/pizzashack-distributor-repository-1.0.0-SNAPSHOT.pom
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building pizzashack-distributor-ds 1.0.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:2.4.1:clean (default-clean) @ pizzashack-distributor-ds ---
[INFO] Deleting /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-ds/target
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ pizzashack-distributor-ds ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] Copying 11 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ pizzashack-distributor-ds ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ pizzashack-distributor-ds ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-ds/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ pizzashack-distributor-ds ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] --- maven-surefire-plugin:2.5:test (default-test) @ pizzashack-distributor-ds ---
[INFO] Surefire report directory: /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-ds/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running co.nz.pizzashack.test.CustomerMockTest
2014-02-03 17:01:18,308 [main           ] INFO  CustomerDSImpl                 - getCustomerByEmail start:david.yuan@yellow.co.nz 
2014-02-03 17:01:18,339 [main           ] INFO  CustomerDSImpl                 - getCustomerByEmail end:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null) 
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.676 sec
Running co.nz.pizzashack.test.CollectionTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.006 sec

Results :

Tests run: 3, Failures: 0, Errors: 0, Skipped: 1

[INFO] 
[INFO] --- maven-jar-plugin:2.2:jar (default-jar) @ pizzashack-distributor-ds ---
[INFO] Building jar: /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-ds/target/pizzashack-distributor-ds-1.0.0-SNAPSHOT.jar
[INFO] 
[INFO] --- maven-install-plugin:2.3.1:install (default-install) @ pizzashack-distributor-ds ---
[INFO] Installing /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-ds/target/pizzashack-distributor-ds-1.0.0-SNAPSHOT.jar to /home/david/.m2/repository/co/nz/pizzashack/pizzashack-distributor-ds/1.0.0-SNAPSHOT/pizzashack-distributor-ds-1.0.0-SNAPSHOT.jar
[INFO] Installing /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-ds/pom.xml to /home/david/.m2/repository/co/nz/pizzashack/pizzashack-distributor-ds/1.0.0-SNAPSHOT/pizzashack-distributor-ds-1.0.0-SNAPSHOT.pom
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building pizzashack-distributor-integration 1.0.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:2.4.1:clean (default-clean) @ pizzashack-distributor-integration ---
[INFO] Deleting /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-integration/target
[INFO] 
[INFO] --- maven-jaxb2-plugin:0.8.2:generate (generate) @ pizzashack-distributor-integration ---
[INFO] Skipped XJC execution. No schemas to compile.
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ pizzashack-distributor-integration ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] Copying 2 resources
[INFO] skip non existing resourceDirectory /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-integration/target/generated-sources/xjc
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ pizzashack-distributor-integration ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ pizzashack-distributor-integration ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-integration/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ pizzashack-distributor-integration ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] --- maven-surefire-plugin:2.5:test (default-test) @ pizzashack-distributor-integration ---
[INFO] Surefire report directory: /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-integration/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running co.nz.pizzashack.test.BillingSimpleTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.062 sec
Running co.nz.pizzashack.test.BillingActivitiTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.006 sec
Running co.nz.pizzashack.test.OrderXmlFormatTransformerTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.006 sec

Results :

Tests run: 3, Failures: 0, Errors: 0, Skipped: 3

[INFO] 
[INFO] --- maven-jar-plugin:2.2:jar (default-jar) @ pizzashack-distributor-integration ---
[INFO] Building jar: /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-integration/target/pizzashack-distributor-integration-1.0.0-SNAPSHOT.jar
[INFO] 
[INFO] --- maven-install-plugin:2.3.1:install (default-install) @ pizzashack-distributor-integration ---
[INFO] Installing /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-integration/target/pizzashack-distributor-integration-1.0.0-SNAPSHOT.jar to /home/david/.m2/repository/co/nz/pizzashack/pizzashack-distributor-integration/1.0.0-SNAPSHOT/pizzashack-distributor-integration-1.0.0-SNAPSHOT.jar
[INFO] Installing /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-integration/pom.xml to /home/david/.m2/repository/co/nz/pizzashack/pizzashack-distributor-integration/1.0.0-SNAPSHOT/pizzashack-distributor-integration-1.0.0-SNAPSHOT.pom
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building pizzashack-distributor-web Maven Webapp 1.0.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:2.4.1:clean (default-clean) @ pizzashack-distributor-web ---
[INFO] Deleting /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/target
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ pizzashack-distributor-web ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 32 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ pizzashack-distributor-web ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ pizzashack-distributor-web ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ pizzashack-distributor-web ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] --- maven-surefire-plugin:2.5:test (default-test) @ pizzashack-distributor-web ---
[INFO] Surefire report directory: /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running co.nz.pizzashack.test.OrderProcessTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 4, Time elapsed: 0.222 sec

Results :

Tests run: 4, Failures: 0, Errors: 0, Skipped: 4

[INFO] 
[INFO] --- maven-war-plugin:2.1.1:war (default-war) @ pizzashack-distributor-web ---
[INFO] Packaging webapp
[INFO] Assembling webapp [pizzashack-distributor-web] in [/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/target/pizzashack-distributor-web]
[INFO] Processing war project
[INFO] Copying webapp resources [/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp]
[INFO] Webapp assembled in [201 msecs]
[INFO] Building war: /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/target/pizzashack-distributor-web.war
[INFO] 
[INFO] --- maven-install-plugin:2.3.1:install (default-install) @ pizzashack-distributor-web ---
[INFO] Installing /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/target/pizzashack-distributor-web.war to /home/david/.m2/repository/co/nz/pizzashack/pizzashack-distributor-web/1.0.0-SNAPSHOT/pizzashack-distributor-web-1.0.0-SNAPSHOT.war
[INFO] Installing /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/pom.xml to /home/david/.m2/repository/co/nz/pizzashack/pizzashack-distributor-web/1.0.0-SNAPSHOT/pizzashack-distributor-web-1.0.0-SNAPSHOT.pom
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary:
[INFO] 
[INFO] pizzashack-distributor ............................ SUCCESS [0.397s]
[INFO] pizzashack-distributor-shared ..................... SUCCESS [4.820s]
[INFO] pizzashack-distributor-repository ................. SUCCESS [1.784s]
[INFO] pizzashack-distributor-ds ......................... SUCCESS [1.974s]
[INFO] pizzashack-distributor-integration ................ SUCCESS [2.054s]
[INFO] pizzashack-distributor-web Maven Webapp ........... SUCCESS [6.138s]
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 17.367s
[INFO] Finished at: Mon Feb 03 17:01:26 NZDT 2014
[INFO] Final Memory: 46M/647M
[INFO] ------------------------------------------------------------------------
]0;david@david: ~/study/activiti5/code/github/pizzashack-order/pizzashack-distributordavid@david:~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor$ cd pizzashack-distributor-web/
]0;david@david: ~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-webdavid@david:~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web$ mvn jetty:run
[INFO] Scanning for projects...
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building pizzashack-distributor-web Maven Webapp 1.0.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] >>> jetty-maven-plugin:8.1.5.v20120716:run (default-cli) @ pizzashack-distributor-web >>>
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ pizzashack-distributor-web ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 32 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ pizzashack-distributor-web ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ pizzashack-distributor-web ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ pizzashack-distributor-web ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] <<< jetty-maven-plugin:8.1.5.v20120716:run (default-cli) @ pizzashack-distributor-web <<<
[INFO] 
[INFO] --- jetty-maven-plugin:8.1.5.v20120716:run (default-cli) @ pizzashack-distributor-web ---
[INFO] Configuring Jetty for project: pizzashack-distributor-web Maven Webapp
[INFO] webAppSourceDirectory /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp does not exist. Defaulting to /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp
[INFO] Reload Mechanic: automatic
[INFO] Classes = /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/target/classes
[INFO] Context path = /
[INFO] Tmp directory = /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/target/tmp
[INFO] Web defaults = org/eclipse/jetty/webapp/webdefault.xml
[INFO] Web overrides =  none
[INFO] web.xml file = null
[INFO] Webapp directory = /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp
2014-02-03 17:01:40.792:INFO:oejs.Server:jetty-8.1.5.v20120716
2014-02-03 17:01:42.879:INFO:oejpw.PlusConfiguration:No Transaction manager found - if your webapp requires one, please configure one.
2014-02-03 17:02:17.318:INFO:/:Spring WebApplicationInitializers detected on classpath: [co.nz.pizzashack.config.PizzashackDistributorWebInitializer@40bd556e]
2014-02-03 17:02:17.735:INFO:oejsh.ContextHandler:started o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
2014-02-03 17:02:17.736:INFO:oejsh.ContextHandler:started o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
2014-02-03 17:02:17.736:INFO:oejsh.ContextHandler:started o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
2014-02-03 17:02:17.736:INFO:/:Initializing Spring root WebApplicationContext
2014-02-03 17:02:17,736 [main           ] INFO  ContextLoader                  - Root WebApplicationContext: initialization started
2014-02-03 17:02:17,739 [main           ] INFO  ionConfigWebApplicationContext - Refreshing Root WebApplicationContext: startup date [Mon Feb 03 17:02:17 NZDT 2014]; root of context hierarchy
2014-02-03 17:02:17,819 [main           ] INFO  ClassPathBeanDefinitionScanner - JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2014-02-03 17:02:17,819 [main           ] INFO  ClassPathBeanDefinitionScanner - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2014-02-03 17:02:17,820 [main           ] INFO  ionConfigWebApplicationContext - Registering annotated classes: [class co.nz.pizzashack.config.ApplicationConfiguration,class co.nz.pizzashack.config.WebMvcContextConfiguration]
2014-02-03 17:02:17,877 [main           ] INFO  ClassPathBeanDefinitionScanner - JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2014-02-03 17:02:17,877 [main           ] INFO  ClassPathBeanDefinitionScanner - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2014-02-03 17:02:18,988 [main           ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [META-INF/cxf/cxf.xml]
2014-02-03 17:02:19,188 [main           ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [META-INF/cxf/cxf-extension-soap.xml]
2014-02-03 17:02:19,211 [main           ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [META-INF/cxf/cxf-servlet.xml]
2014-02-03 17:02:19,230 [main           ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [activitiAppContext.xml]
2014-02-03 17:02:19,407 [main           ] INFO  PropertyPlaceholderConfigurer  - Loading properties file from class path resource [activiti.properties]
2014-02-03 17:02:19,456 [main           ] INFO  redAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2014-02-03 17:02:19,506 [main           ] INFO  ionConfigWebApplicationContext - Bean 'infrastructureContextConfiguration' of type [class co.nz.pizzashack.config.InfrastructureContextConfiguration$$EnhancerByCGLIB$$4f79376f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:19,533 [main           ] INFO  MLog                           - MLog clients using log4j logging.
2014-02-03 17:02:19,590 [main           ] INFO  C3P0Registry                   - Initializing c3p0-0.9.1.2 [built 21-May-2007 15:04:56; debug? true; trace: 10]
2014-02-03 17:02:19,651 [main           ] INFO  ionConfigWebApplicationContext - Bean 'dataSource' of type [class com.mchange.v2.c3p0.ComboPooledDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:19,750 [main           ] INFO  tainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default'
2014-02-03 17:02:19,871 [main           ] INFO  Version                        - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2014-02-03 17:02:19,877 [main           ] INFO  Version                        - HHH000412: Hibernate Core {4.1.4.Final}
2014-02-03 17:02:19,879 [main           ] INFO  Environment                    - HHH000206: hibernate.properties not found
2014-02-03 17:02:19,880 [main           ] INFO  Environment                    - HHH000021: Bytecode provider name : javassist
2014-02-03 17:02:19,894 [main           ] INFO  Ejb3Configuration              - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2014-02-03 17:02:20,137 [main           ] INFO  ConnectionProviderInitiator    - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2014-02-03 17:02:20,192 [main           ] INFO  AbstractPoolBackedDataSource   - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge1508z1w8c4rnuur4ea|7b6f17f2, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.h2.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge1508z1w8c4rnuur4ea|7b6f17f2, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:h2:mem:pizzashackdistributor;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 600, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 2, numHelperThreads -> 3, numThreadsAwaitingCheckoutDefaultUser -> 0, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2014-02-03 17:02:20,365 [main           ] INFO  Dialect                        - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2014-02-03 17:02:20,371 [main           ] INFO  LobCreatorBuilder              - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2014-02-03 17:02:20,379 [main           ] INFO  TransactionFactoryInitiator    - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2014-02-03 17:02:20,381 [main           ] INFO  ASTQueryTranslatorFactory      - HHH000397: Using ASTQueryTranslatorFactory
2014-02-03 17:02:20,407 [main           ] INFO  Version                        - Hibernate Validator 4.2.0.Final
2014-02-03 17:02:20,623 [main           ] INFO  SchemaExport                   - HHH000227: Running hbm2ddl schema export
Hibernate: 
    alter table t_activity_discount_rate 
        drop constraint FKA400C193698FCC4
2014-02-03 17:02:20,633 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_activity_discount_rate drop constraint FKA400C193698FCC4
2014-02-03 17:02:20,633 [main           ] ERROR SchemaExport                   - Table "T_ACTIVITY_DISCOUNT_RATE" not found; SQL statement:

    alter table t_activity_discount_rate 
        drop constraint FKA400C193698FCC4 [42102-160]
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE11193A98D65
2014-02-03 17:02:20,634 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_dept_staff drop constraint FKBC8AE11193A98D65
2014-02-03 17:02:20,634 [main           ] ERROR SchemaExport                   - Table "T_DEPT_STAFF" not found; SQL statement:

    alter table t_dept_staff 
        drop constraint FKBC8AE11193A98D65 [42102-160]
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE111A27DDA4A
2014-02-03 17:02:20,635 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_dept_staff drop constraint FKBC8AE111A27DDA4A
2014-02-03 17:02:20,635 [main           ] ERROR SchemaExport                   - Table "T_DEPT_STAFF" not found; SQL statement:

    alter table t_dept_staff 
        drop constraint FKBC8AE111A27DDA4A [42102-160]
Hibernate: 
    alter table t_order 
        drop constraint FKA0C0C3C3E11F4FCB
2014-02-03 17:02:20,636 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order drop constraint FKA0C0C3C3E11F4FCB
2014-02-03 17:02:20,636 [main           ] ERROR SchemaExport                   - Table "T_ORDER" not found; SQL statement:

    alter table t_order 
        drop constraint FKA0C0C3C3E11F4FCB [42102-160]
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB0883698FCC4
2014-02-03 17:02:20,637 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_pizzashack drop constraint FKE8ACB0883698FCC4
2014-02-03 17:02:20,637 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PIZZASHACK" not found; SQL statement:

    alter table t_order_pizzashack 
        drop constraint FKE8ACB0883698FCC4 [42102-160]
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB088BBCB676E
2014-02-03 17:02:20,638 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_pizzashack drop constraint FKE8ACB088BBCB676E
2014-02-03 17:02:20,638 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PIZZASHACK" not found; SQL statement:

    alter table t_order_pizzashack 
        drop constraint FKE8ACB088BBCB676E [42102-160]
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F33E99148D
2014-02-03 17:02:20,638 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_process drop constraint FK6B8B15F33E99148D
2014-02-03 17:02:20,638 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PROCESS" not found; SQL statement:

    alter table t_order_process 
        drop constraint FK6B8B15F33E99148D [42102-160]
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F3BBCB676E
2014-02-03 17:02:20,639 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_process drop constraint FK6B8B15F3BBCB676E
2014-02-03 17:02:20,639 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PROCESS" not found; SQL statement:

    alter table t_order_process 
        drop constraint FK6B8B15F3BBCB676E [42102-160]
Hibernate: 
    alter table t_order_request_history 
        drop constraint FK5A6B268BBCB676E
2014-02-03 17:02:20,640 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_request_history drop constraint FK5A6B268BBCB676E
2014-02-03 17:02:20,640 [main           ] ERROR SchemaExport                   - Table "T_ORDER_REQUEST_HISTORY" not found; SQL statement:

    alter table t_order_request_history 
        drop constraint FK5A6B268BBCB676E [42102-160]
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CA6130105
2014-02-03 17:02:20,641 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_review_record drop constraint FKFB7A439CA6130105
2014-02-03 17:02:20,641 [main           ] ERROR SchemaExport                   - Table "T_ORDER_REVIEW_RECORD" not found; SQL statement:

    alter table t_order_review_record 
        drop constraint FKFB7A439CA6130105 [42102-160]
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CBBCB676E
2014-02-03 17:02:20,642 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_review_record drop constraint FKFB7A439CBBCB676E
2014-02-03 17:02:20,642 [main           ] ERROR SchemaExport                   - Table "T_ORDER_REVIEW_RECORD" not found; SQL statement:

    alter table t_order_review_record 
        drop constraint FKFB7A439CBBCB676E [42102-160]
Hibernate: 
    alter table t_staff 
        drop constraint FKA0F9FF552DC32C06
2014-02-03 17:02:20,643 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_staff drop constraint FKA0F9FF552DC32C06
2014-02-03 17:02:20,643 [main           ] ERROR SchemaExport                   - Table "T_STAFF" not found; SQL statement:

    alter table t_staff 
        drop constraint FKA0F9FF552DC32C06 [42102-160]
Hibernate: 
    drop table t_activity_discount_rate if exists
Hibernate: 
    drop table t_customer if exists
Hibernate: 
    drop table t_dept if exists
Hibernate: 
    drop table t_dept_staff if exists
Hibernate: 
    drop table t_order if exists
Hibernate: 
    drop table t_order_pizzashack if exists
Hibernate: 
    drop table t_order_process if exists
Hibernate: 
    drop table t_order_request_history if exists
Hibernate: 
    drop table t_order_review_record if exists
Hibernate: 
    drop table t_pizzashack if exists
Hibernate: 
    drop table t_staff if exists
Hibernate: 
    drop table t_user if exists
Hibernate: 
    drop table t_workflow if exists
Hibernate: 
    create table t_activity_discount_rate (
        activity_rate_id bigint generated by default as identity,
        code varchar(255),
        description varchar(255),
        effective_time timestamp,
        expire_time timestamp,
        rate decimal(19,2),
        pizzashack_id bigint,
        primary key (activity_rate_id)
    )
Hibernate: 
    create table t_customer (
        cust_id bigint generated by default as identity,
        address varchar(255),
        credits integer,
        customer_name varchar(255),
        email varchar(255),
        primary key (cust_id)
    )
Hibernate: 
    create table t_dept (
        dept_id bigint generated by default as identity,
        create_date date,
        dept_name varchar(255),
        primary key (dept_id)
    )
Hibernate: 
    create table t_dept_staff (
        staff_dept_id bigint generated by default as identity,
        join_date date,
        dept_id bigint,
        staff_id bigint,
        primary key (staff_dept_id)
    )
Hibernate: 
    create table t_order (
        order_id bigint generated by default as identity,
        deliver_time timestamp,
        order_no varchar(255),
        order_time timestamp,
        payment_remarks varchar(255),
        payment_status integer,
        quantity integer,
        ship_address varchar(255),
        status integer,
        total_price decimal(19,2),
        cust_id bigint,
        primary key (order_id)
    )
Hibernate: 
    create table t_order_pizzashack (
        order_pizza_id bigint generated by default as identity,
        qty integer,
        total_price decimal(19,2),
        order_id bigint,
        pizzashack_id bigint,
        primary key (order_pizza_id)
    )
Hibernate: 
    create table t_order_process (
        order_process_id bigint generated by default as identity,
        active_process_definition_id varchar(255),
        active_process_instance_id varchar(255),
        complete_time time,
        create_time time,
        execution_id varchar(255),
        main_process_definition_id varchar(255),
        main_process_instance_id varchar(255),
        operator_id bigint,
        order_id bigint,
        primary key (order_process_id)
    )
Hibernate: 
    create table t_order_request_history (
        message_id varchar(255) generated by default as identity,
        created_at time,
        processor_name varchar(255),
        order_id bigint,
        primary key (message_id)
    )
Hibernate: 
    create table t_order_review_record (
        review_record_id bigint generated by default as identity,
        content varchar(255),
        create_time time,
        review_status integer,
        order_id bigint,
        reviewer_id bigint,
        primary key (review_record_id)
    )
Hibernate: 
    create table t_pizzashack (
        pizzashack_id bigint generated by default as identity,
        description varchar(255),
        icon varchar(255),
        name varchar(255),
        price decimal(19,2),
        primary key (pizzashack_id)
    )
Hibernate: 
    create table t_staff (
        staff_id bigint generated by default as identity,
        create_date date,
        email varchar(255),
        first_name varchar(255),
        identity varchar(255),
        last_name varchar(255),
        level integer,
        role integer,
        user_id bigint,
        primary key (staff_id)
    )
Hibernate: 
    create table t_user (
        user_id bigint generated by default as identity,
        create_time time,
        password varchar(255),
        user_name varchar(255),
        primary key (user_id)
    )
Hibernate: 
    create table t_workflow (
        workflow_id bigint generated by default as identity,
        category varchar(255),
        create_time time,
        deploy_id varchar(255),
        workflow_name varchar(255),
        process_definition_id varchar(255),
        process_definition_key varchar(255),
        primary key (workflow_id)
    )
Hibernate: 
    alter table t_activity_discount_rate 
        add constraint FKA400C193698FCC4 
        foreign key (pizzashack_id) 
        references t_pizzashack
Hibernate: 
    alter table t_dept_staff 
        add constraint FKBC8AE11193A98D65 
        foreign key (dept_id) 
        references t_dept
Hibernate: 
    alter table t_dept_staff 
        add constraint FKBC8AE111A27DDA4A 
        foreign key (staff_id) 
        references t_staff
Hibernate: 
    alter table t_order 
        add constraint FKA0C0C3C3E11F4FCB 
        foreign key (cust_id) 
        references t_customer
Hibernate: 
    alter table t_order_pizzashack 
        add constraint FKE8ACB0883698FCC4 
        foreign key (pizzashack_id) 
        references t_pizzashack
Hibernate: 
    alter table t_order_pizzashack 
        add constraint FKE8ACB088BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_process 
        add constraint FK6B8B15F33E99148D 
        foreign key (operator_id) 
        references t_user
Hibernate: 
    alter table t_order_process 
        add constraint FK6B8B15F3BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_request_history 
        add constraint FK5A6B268BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_review_record 
        add constraint FKFB7A439CA6130105 
        foreign key (reviewer_id) 
        references t_staff
Hibernate: 
    alter table t_order_review_record 
        add constraint FKFB7A439CBBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_staff 
        add constraint FKA0F9FF552DC32C06 
        foreign key (user_id) 
        references t_user
2014-02-03 17:02:20,682 [main           ] INFO  SchemaExport                   - HHH000230: Schema export complete
2014-02-03 17:02:20,724 [main           ] INFO  ionConfigWebApplicationContext - Bean 'entityManagerFactory' of type [class org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:20,758 [main           ] INFO  ionConfigWebApplicationContext - Bean 'entityManagerFactory' of type [class com.sun.proxy.$Proxy56] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:20,954 [main           ] INFO  ionConfigWebApplicationContext - Bean 'cxf' of type [class org.apache.cxf.bus.spring.SpringBus] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:20,958 [main           ] WARN  OldSpringSupport               - Import of META-INF/cxf/cxf-extension-soap.xml has been deprecated and is unnecessary.
2014-02-03 17:02:20,964 [main           ] INFO  ionConfigWebApplicationContext - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerByCGLIB$$d1c07216] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:20,994 [main           ] INFO  ionConfigWebApplicationContext - Bean 'transactionAttributeSource' of type [class org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:21,002 [main           ] INFO  ionConfigWebApplicationContext - Bean 'transactionInterceptor' of type [class org.springframework.transaction.interceptor.TransactionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:21,010 [main           ] INFO  ionConfigWebApplicationContext - Bean 'org.springframework.transaction.config.internalTransactionAdvisor' of type [class org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:21,020 [main           ] INFO  ionConfigWebApplicationContext - Bean 'transactionManager' of type [class org.springframework.orm.jpa.JpaTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:21,021 [main           ] INFO  ionConfigWebApplicationContext - Bean 'camelJdbcIdempotentConfig' of type [class co.nz.pizzashack.config.CamelJdbcIdempotentConfig$$EnhancerByCGLIB$$b64a1d9d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:21,037 [main           ] INFO  ionConfigWebApplicationContext - Bean 'sqlComponent' of type [class org.apache.camel.component.sql.SqlComponent] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:21,045 [main           ] INFO  ionConfigWebApplicationContext - Bean 'camelCxfConfig' of type [class co.nz.pizzashack.config.CamelCxfConfig$$EnhancerByCGLIB$$e05234c2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:21,073 [main           ] INFO  ionConfigWebApplicationContext - Bean 'billingInboundEndpoint' of type [class org.apache.camel.component.cxf.CxfEndpoint] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:21,097 [main           ] INFO  ionConfigWebApplicationContext - Bean 'billingVariableTransformer' of type [class co.nz.pizzashack.integration.mapping.BillingVariableTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:21,281 [main           ] INFO  ionConfigWebApplicationContext - Bean 'billingFormatTransformer' of type [class co.nz.pizzashack.integration.mapping.BillingFormatTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:21,285 [main           ] INFO  ionConfigWebApplicationContext - Bean 'billingResponseMergeProcessor' of type [class co.nz.pizzashack.integration.mapping.BillingResponseMergeProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:21,288 [main           ] INFO  ionConfigWebApplicationContext - Bean 'sleepBean' of type [class co.nz.pizzashack.integration.utils.SleepBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:21,288 [main           ] INFO  ionConfigWebApplicationContext - Bean 'billingProcessRoute' of type [class co.nz.pizzashack.integration.route.BillingProcessRoute] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:21,390 [main           ] INFO  ionConfigWebApplicationContext - Bean 'org.activiti.engine.impl.rules.RulesDeployer#4a2ac9f1' of type [class org.activiti.engine.impl.rules.RulesDeployer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:21,391 [main           ] INFO  ionConfigWebApplicationContext - Bean 'processEngineConfiguration' of type [class org.activiti.spring.SpringProcessEngineConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:21,395 [main           ] INFO  ionConfigWebApplicationContext - Bean 'processEngine' of type [class org.activiti.spring.ProcessEngineFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,409 [main           ] INFO  DbSqlSession                   - performing create on engine with resource org/activiti/db/create/activiti.h2.create.engine.sql
2014-02-03 17:02:22,427 [main           ] INFO  DbSqlSession                   - performing create on history with resource org/activiti/db/create/activiti.h2.create.history.sql
2014-02-03 17:02:22,433 [main           ] INFO  DbSqlSession                   - performing create on identity with resource org/activiti/db/create/activiti.h2.create.identity.sql
2014-02-03 17:02:22,436 [main           ] INFO  ProcessEngineImpl              - ProcessEngine default created
2014-02-03 17:02:22,437 [main           ] INFO  ionConfigWebApplicationContext - Bean 'processEngine' of type [class org.activiti.engine.impl.ProcessEngineImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,443 [main           ] INFO  ionConfigWebApplicationContext - Bean 'runtimeService' of type [class org.activiti.engine.impl.RuntimeServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,450 [main           ] INFO  ionConfigWebApplicationContext - Bean 'taskService' of type [class org.activiti.engine.impl.TaskServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,457 [main           ] INFO  ionConfigWebApplicationContext - Bean 'historyService' of type [class org.activiti.engine.impl.HistoryServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,463 [main           ] INFO  ionConfigWebApplicationContext - Bean 'repositoryService' of type [class org.activiti.engine.impl.RepositoryServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,469 [main           ] INFO  ionConfigWebApplicationContext - Bean 'managementService' of type [class org.activiti.engine.impl.ManagementServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,474 [main           ] INFO  ionConfigWebApplicationContext - Bean 'identityService' of type [class org.activiti.engine.impl.IdentityServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,474 [main           ] INFO  ionConfigWebApplicationContext - Bean 'activitiFacade' of type [class co.nz.pizzashack.wf.ActivitiFacade] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,480 [main           ] INFO  ionConfigWebApplicationContext - Bean 'userConverter' of type [class co.nz.pizzashack.data.converter.UserConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,500 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,500 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,504 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,516 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#1' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,576 [main           ] INFO  ionConfigWebApplicationContext - Bean 'workflowRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,615 [main           ] INFO  ionConfigWebApplicationContext - Bean 'workflowRepository' of type [class com.sun.proxy.$Proxy65] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,619 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#2' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,619 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#2' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,620 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#2' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,620 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#3' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,629 [main           ] INFO  ionConfigWebApplicationContext - Bean 'pizzashackRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,641 [main           ] INFO  ionConfigWebApplicationContext - Bean 'pizzashackRepository' of type [class com.sun.proxy.$Proxy68] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,644 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#4' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,644 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#4' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,644 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#4' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,645 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#5' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,655 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,661 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessRepository' of type [class com.sun.proxy.$Proxy69] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,663 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#6' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,664 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#6' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,664 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#6' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,664 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#7' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,675 [main           ] INFO  ionConfigWebApplicationContext - Bean 'userRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,679 [main           ] INFO  ionConfigWebApplicationContext - Bean 'userRepository' of type [class com.sun.proxy.$Proxy70] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,681 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#8' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,682 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#8' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,682 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#8' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,682 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#9' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,691 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,695 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderRepository' of type [class com.sun.proxy.$Proxy71] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,730 [main           ] INFO  ionConfigWebApplicationContext - Bean 'customerConverter' of type [class co.nz.pizzashack.data.converter.CustomerConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,738 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderDetailConverter' of type [class co.nz.pizzashack.data.converter.OrderDetailConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,738 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderConverter' of type [class co.nz.pizzashack.data.converter.OrderConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,739 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessConverter' of type [class co.nz.pizzashack.data.converter.OrderProcessConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,744 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#10' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,744 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#10' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,745 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#10' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,745 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#11' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,754 [main           ] INFO  ionConfigWebApplicationContext - Bean 'departmentRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,758 [main           ] INFO  ionConfigWebApplicationContext - Bean 'departmentRepository' of type [class com.sun.proxy.$Proxy72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,759 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessAccessor' of type [class co.nz.pizzashack.ds.OrderProcessAccessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,765 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderReviewRecordConverter' of type [class co.nz.pizzashack.data.converter.OrderReviewRecordConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,767 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#12' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,767 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#12' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,767 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#12' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,767 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#13' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,775 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderReviewRecordRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,780 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderReviewRecordRepository' of type [class com.sun.proxy.$Proxy73] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,782 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#14' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,783 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#14' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,783 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#14' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,784 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#15' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,791 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderPizzashackRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,796 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderPizzashackRepository' of type [class com.sun.proxy.$Proxy74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,799 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#16' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,799 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#16' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,799 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#16' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,800 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#17' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,810 [main           ] INFO  ionConfigWebApplicationContext - Bean 'customerRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,813 [main           ] INFO  ionConfigWebApplicationContext - Bean 'customerRepository' of type [class com.sun.proxy.$Proxy75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,814 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessDSImpl' of type [class co.nz.pizzashack.ds.OrderProcessDSImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,821 [main           ] INFO  ionConfigWebApplicationContext - Bean 'billingInboundProcessor' of type [class co.nz.pizzashack.integration.processor.BillingInboundProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,821 [main           ] INFO  ionConfigWebApplicationContext - Bean 'billingInboundWsRoute' of type [class co.nz.pizzashack.integration.route.BillingInboundWsRoute] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,843 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderJdbcMessageIdRepository' of type [class org.apache.camel.processor.idempotent.jdbc.JdbcMessageIdRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,851 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessFormatTransformer' of type [class co.nz.pizzashack.integration.mapping.OrderProcessFormatTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,860 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#18' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,861 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#18' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,861 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#18' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,862 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#19' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,869 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderRequestHistoryRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,873 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderRequestHistoryRepository' of type [class com.sun.proxy.$Proxy80] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,874 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderRequestProcessor' of type [class co.nz.pizzashack.integration.processor.OrderRequestProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,877 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderDuplicatedReqProcessor' of type [class co.nz.pizzashack.integration.processor.OrderDuplicatedReqProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,877 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessRoute' of type [class co.nz.pizzashack.integration.route.OrderProcessRoute] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:22,926 [main           ] INFO  ionConfigWebApplicationContext - Bean 'activeMQConnectionFactory' of type [class org.apache.activemq.ActiveMQConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:23,110 [main           ] INFO  ionConfigWebApplicationContext - Bean 'pooledConnectionFactory' of type [class org.apache.activemq.pool.PooledConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:23,130 [main           ] INFO  ionConfigWebApplicationContext - Bean 'jmsTransactionManager' of type [class org.springframework.jms.connection.JmsTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:23,143 [main           ] INFO  ionConfigWebApplicationContext - Bean 'jmsComponent' of type [class org.apache.camel.component.jms.JmsComponent] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:23,148 [main           ] INFO  ionConfigWebApplicationContext - Bean 'camelSpringConfig' of type [class co.nz.pizzashack.config.CamelSpringConfig$$EnhancerByCGLIB$$1fd22b56] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 17:02:23,189 [main           ] INFO  DefaultListableBeanFactory     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@7a5d8b7e: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,applicationConfiguration,webMvcContextConfiguration,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,viewConfiguration,logoutController,loginController,indexController,userController,adminIndexController,departmentController,orderController,orderQueryController,staffController,billingProcessRespTransformer,billingProcessReqTransformer,orderProcessFormatTransformer,billingVariableTransformer,billingResponseMergeProcessor,billingFormatTransformer,billingInboundProcessor,orderDuplicatedReqProcessor,orderRequestProcessor,billingProcessRoute,billingInboundWsRoute,orderProcessRoute,sleepBean,pizzashackAPIImpl,camelSpringConfig,camelJdbcIdempotentConfig,camelCxfConfig,orderProcessDSImpl,customerDSImpl,workflowDSImpl,pizzashackDSImpl,userDSImpl,orderProcessAccessor,orderProcessQueryDSImpl,staffDSImpl,orderDSImpl,departmentDSImpl,initialDataConfig,pizzashackCaculator,emailExecutionListener,endExecutionListener,caculationMergeExecutionListener,orderMainTransitionExecutionListener,toManualReviewExecutionListener,outOfBillingProcessExecutionListener,outOfCoreProcessExecutionListener,billingRespExecutionListener,customerConverter,orderProcessConverter,staffConverter,userConverter,departmentConverter,workflowConverter,orderReviewRecordConverter,orderConverter,activityDiscountRateConverter,orderDetailConverter,pizzashackDataInitialConfiguration,pizzashackItemBuilder,infrastructureContextConfiguration,activitiFacade,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0,org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0,workflowRepository,activityDiscountRateRepository,staffDepartmentRepository,pizzashackRepository,orderReviewRecordRepository,orderRepository,staffRepository,orderProcessRepository,orderRequestHistoryRepository,customerRepository,userRepository,orderPizzashackRepository,departmentRepository,viewResolver,messageSource,activeMQConnectionFactory,pooledConnectionFactory,jmsComponent,jmsTransactionManager,camelBeanPostProcessor,camelContext,custThreadPoolProfile,sqlComponent,orderJdbcMessageIdRepository,billingInboundEndpoint,loggingOutInterceptor,cxf,org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor,org.apache.cxf.bus.spring.Jsr250BeanPostProcessor,org.apache.cxf.bus.spring.BusExtensionPostProcessor,org.apache.cxf.binding.soap.SoapBindingFactory,org.apache.cxf.binding.soap.SoapTransportFactory,org.apache.cxf.binding.soap.customEditorConfigurer,setupWorkflowData,setupData,org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration,org.springframework.transaction.config.internalTransactionAdvisor,transactionAttributeSource,transactionInterceptor,dataSource,transactionManager,entityManagerFactory,placeholderConfig,processEngineConfiguration,processEngine,repositoryService,runtimeService,taskService,historyService,managementService,identityService,org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration,viewControllerHandlerMapping,beanNameHandlerMapping,mvcValidator,resourceHandlerMapping,defaultServletHandlerMapping,requestMappingHandlerAdapter,mvcConversionService,httpRequestHandlerAdapter,simpleControllerHandlerAdapter,requestMappingHandlerMapping,mvcContentNegotiationManager,handlerExceptionResolver,localeResolver,sessionAttributeProcessor,localeChangeInterceptor,simpleMappingExceptionResolver,multipartResolver]; root of factory hierarchy
2014-02-03 17:02:23,664 [main           ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) is starting
2014-02-03 17:02:23,665 [main           ] INFO  ManagedManagementStrategy      - JMX is enabled
2014-02-03 17:02:23,758 [main           ] INFO  DefaultTypeConverter           - Loaded 194 type converters
Hibernate: 
    SELECT
        1 
    FROM
        T_ORDER_REQUEST_HISTORY 
    WHERE
        1 = 0
2014-02-03 17:02:24,131 [main           ] INFO  SpringCamelContext             - StreamCaching is not in use. If using streams then its recommended to enable stream caching. See more details at http://camel.apache.org/stream-caching.html
2014-02-03 17:02:24,344 [main           ] INFO  BusApplicationContext          - Refreshing org.apache.cxf.bus.spring.BusApplicationContext@6b1aaf28: startup date [Mon Feb 03 17:02:24 NZDT 2014]; parent: Root WebApplicationContext
2014-02-03 17:02:24,368 [main           ] INFO  DefaultListableBeanFactory     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@54d3d69c: defining beans []; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@7a5d8b7e
2014-02-03 17:02:24,388 [main           ] INFO  ReflectionServiceFactoryBean   - Creating Service {http://ws.integration.pizzashack.nz.co/}BillingProcessWebServicesService from class co.nz.pizzashack.integration.ws.BillingProcessWebServices
2014-02-03 17:02:24,878 [main           ] INFO  ServerImpl                     - Setting the server's publish address to be /billingWs
2014-02-03 17:02:24,912 [main           ] INFO  SpringCamelContext             - Route: activitiBillingProcess started and consuming from: Endpoint[activiti://orderBillingProcess:billingIntegration?copyVariablesToBodyAsMap=true]
2014-02-03 17:02:24,914 [main           ] INFO  SpringCamelContext             - Route: direct:billingIntegration started and consuming from: Endpoint[direct://billingIntegration]
2014-02-03 17:02:24,920 [main           ] INFO  SpringCamelContext             - Route: direct:receiveBillingQueue started and consuming from: Endpoint[direct://receiveBillingQueue]
2014-02-03 17:02:24,923 [main           ] INFO  SpringCamelContext             - Route: route1 started and consuming from: Endpoint[direct://doBillingIntegration]
2014-02-03 17:02:24,939 [main           ] INFO  SpringCamelContext             - Route: orderProcessRoute started and consuming from: Endpoint[jms://queue:pizzashackOrderInbound]
2014-02-03 17:02:24,941 [main           ] INFO  SpringCamelContext             - Route: direct:orderDuplicatedProcess started and consuming from: Endpoint[direct://orderDuplicatedProcess]
2014-02-03 17:02:24,943 [main           ] INFO  SpringCamelContext             - Route: direct:orderRegularProcess started and consuming from: Endpoint[direct://orderRegularProcess]
2014-02-03 17:02:24,946 [main           ] INFO  SpringCamelContext             - Route: cxf:bean:billingInboundEndpoint started and consuming from: Endpoint[cxf://bean:billingInboundEndpoint]
2014-02-03 17:02:24,973 [main           ] INFO  SpringCamelContext             - Total 8 routes, of which 8 is started.
2014-02-03 17:02:24,973 [main           ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) started in 1.311 seconds
2014-02-03 17:02:24,996 [main           ] INFO  WorkflowInitialDataSetup       - initialize start:{}
2014-02-03 17:02:25,011 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 17:02:25,013 [main           ] INFO  UserDSImpl                     - usernamedavid
2014-02-03 17:02:25,013 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 17:02:25,218 [main           ] INFO  UserDSImpl                     - userId:1 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 17:02:25,275 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@4f56b199[userId=1,username=david,password=MTIzNDU2,createTime=Mon Feb 03 17:02:25 NZDT 2014]
2014-02-03 17:02:25,332 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-03 04:02:25)
2014-02-03 17:02:25,332 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-03 04:02:25)
2014-02-03 17:02:25,335 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 17:02:25,335 [main           ] INFO  UserDSImpl                     - usernamebrad
2014-02-03 17:02:25,335 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 17:02:25,338 [main           ] INFO  UserDSImpl                     - userId:2 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 17:02:25,340 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@2c6f74cd[userId=2,username=brad,password=MTIzNDU2,createTime=Mon Feb 03 17:02:25 NZDT 2014]
2014-02-03 17:02:25,340 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-03 04:02:25)
2014-02-03 17:02:25,340 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-03 04:02:25)
2014-02-03 17:02:25,341 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 17:02:25,341 [main           ] INFO  UserDSImpl                     - usernamejohn
2014-02-03 17:02:25,341 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 17:02:25,344 [main           ] INFO  UserDSImpl                     - userId:3 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 17:02:25,346 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@118f24ab[userId=3,username=john,password=MTIzNDU2,createTime=Mon Feb 03 17:02:25 NZDT 2014]
2014-02-03 17:02:25,346 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-03 04:02:25)
2014-02-03 17:02:25,346 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-03 04:02:25)
2014-02-03 17:02:25,347 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 17:02:25,347 [main           ] INFO  UserDSImpl                     - usernamegeneral
2014-02-03 17:02:25,347 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 17:02:25,350 [main           ] INFO  UserDSImpl                     - userId:4 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 17:02:25,352 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@44734242[userId=4,username=general,password=MTIzNDU2,createTime=Mon Feb 03 17:02:25 NZDT 2014]
2014-02-03 17:02:25,352 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:2014-02-03 04:02:25)
2014-02-03 17:02:25,353 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:2014-02-03 04:02:25)
2014-02-03 17:02:25,369 [main           ] INFO  DepartmentDSImpl               - createDepartment start:co.nz.pizzashack.data.dto.DepartmentDto(deptId:null, deptName:Order manager, createDate:null) 
Hibernate: 
    select
        department0_.dept_id as dept1_8_,
        department0_.create_date as create2_8_,
        department0_.dept_name as dept3_8_ 
    from
        t_dept department0_ 
    where
        department0_.dept_name=? limit ?
2014-02-03 17:02:25,377 [main           ] INFO  DepartmentConverter            - toModel start:{} co.nz.pizzashack.data.dto.DepartmentDto(deptId:null, deptName:Order manager, createDate:null)
2014-02-03 17:02:25,381 [main           ] INFO  DepartmentConverter            - toModel end:{} co.nz.pizzashack.data.model.DepartmentModel@5cfe3a94[deptId=<null>,deptName=Order manager,createDate=<null>,staffDepartments=<null>]
Hibernate: 
    insert 
    into
        t_dept
        (dept_id, create_date, dept_name) 
    values
        (null, ?, ?)
Hibernate: 
    insert 
    into
        ACT_ID_GROUP
        (ID_, REV_, NAME_, TYPE_)     
    values
        (       ?,       1,        ?,       ?     )
2014-02-03 17:02:25,391 [main           ] INFO  DepartmentConverter            - toDto start:{} co.nz.pizzashack.data.model.DepartmentModel@5cfe3a94[deptId=1,deptName=Order manager,createDate=Mon Feb 03 17:02:25 NZDT 2014,staffDepartments=<null>]
2014-02-03 17:02:25,392 [main           ] INFO  DepartmentConverter            - toDto end:{} co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-03)
2014-02-03 17:02:25,392 [main           ] INFO  DepartmentDSImpl               - createDepartment end:co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-03) 
2014-02-03 17:02:25,393 [main           ] INFO  WorkflowInitialDataSetup       - department:co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-03) 
2014-02-03 17:02:25,416 [main           ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:null, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-03 04:02:25)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-02-03 17:02:25,424 [main           ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:null, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-03 04:02:25))
2014-02-03 17:02:25,446 [main           ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@21cff9da[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@5d1c688d[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-02-03 17:02:25,497 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@21cff9da[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@5d1c688d[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=Mon Feb 03 17:02:25 NZDT 2014] 
2014-02-03 17:02:25,497 [main           ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = ?
Hibernate: 
    update
        ACT_GE_PROPERTY      
    SET
        REV_ = ?,
        VALUE_ = ?      
    where
        NAME_ = ?       
        and REV_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-02-03 17:02:25,518 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-02-03 17:02:25,526 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@21cff9da[staffId=1,individual=co.nz.pizzashack.data.model.IndividualModel@5d1c688d[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=Mon Feb 03 17:02:25 NZDT 2014]
2014-02-03 17:02:25,534 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:1, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:2014-02-03, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-02-03 17:02:25,535 [main           ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:1, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:2014-02-03, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-02-03 17:02:25,539 [main           ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:null, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-03 04:02:25)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-02-03 17:02:25,541 [main           ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:null, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-03 04:02:25))
2014-02-03 17:02:25,542 [main           ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@5564e41d[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@52bc57b7[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-02-03 17:02:25,552 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@5564e41d[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@52bc57b7[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=Mon Feb 03 17:02:25 NZDT 2014] 
2014-02-03 17:02:25,552 [main           ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-02-03 17:02:25,556 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-02-03 17:02:25,559 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@5564e41d[staffId=2,individual=co.nz.pizzashack.data.model.IndividualModel@52bc57b7[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=Mon Feb 03 17:02:25 NZDT 2014]
2014-02-03 17:02:25,560 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:2, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:2014-02-03, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-02-03 17:02:25,561 [main           ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:2, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:2014-02-03, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-02-03 17:02:25,562 [main           ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:null, departments:null, role:manager, level:junior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-03 04:02:25)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-02-03 17:02:25,564 [main           ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:null, departments:null, role:manager, level:junior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-03 04:02:25))
2014-02-03 17:02:25,564 [main           ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@14df5cc9[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@54449ad3[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-02-03 17:02:25,571 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@14df5cc9[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@54449ad3[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=Mon Feb 03 17:02:25 NZDT 2014] 
2014-02-03 17:02:25,571 [main           ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-02-03 17:02:25,576 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-02-03 17:02:25,580 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@14df5cc9[staffId=3,individual=co.nz.pizzashack.data.model.IndividualModel@54449ad3[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=Mon Feb 03 17:02:25 NZDT 2014]
2014-02-03 17:02:25,581 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:3, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:2014-02-03, departments:null, role:manager, level:null, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-02-03 17:02:25,581 [main           ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:3, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:2014-02-03, departments:null, role:manager, level:null, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-02-03 17:02:25,582 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-02-03 17:02:25,592 [main           ] INFO  BpmnDeployer                   - Processing resource bpmn/OrderBillingProcess.bpmn20.xml
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 117: Having multiple <family> in <alias> isn't supported and may not work as expected
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-02-03 17:02:29,752 [main           ] INFO  RulesDeployer                  - Processing resource bpmn/OrderBillingProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 17:02:29,763 [main           ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderBillingProcess:1:7]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-02-03 17:02:29,770 [main           ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@2545f798[wfId=1,name=orderBillingProcess,deployId=4,processDefinitionKey=orderBillingProcess,processDefinitionId=orderBillingProcess:1:7,createTime=Mon Feb 03 17:02:25 NZDT 2014]
2014-02-03 17:02:29,783 [main           ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-02-03 04:02:25)
2014-02-03 17:02:29,783 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-02-03 04:02:25)
2014-02-03 17:02:29,783 [main           ] INFO  WorkflowInitialDataSetup       - deploy billing process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-02-03 04:02:25) 
2014-02-03 17:02:29,783 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-02-03 17:02:29,785 [main           ] INFO  BpmnDeployer                   - Processing resource bpmn/OrdercoreProcess.bpmn20.xml
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-02-03 17:02:29,874 [main           ] INFO  RulesDeployer                  - Processing resource bpmn/OrdercoreProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 17:02:29,879 [main           ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderCoreProcess:1:11]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-02-03 17:02:29,881 [main           ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@16c3ea9b[wfId=2,name=orderCoreProcess,deployId=8,processDefinitionKey=orderCoreProcess,processDefinitionId=orderCoreProcess:1:11,createTime=Mon Feb 03 17:02:29 NZDT 2014]
2014-02-03 17:02:29,881 [main           ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-02-03 04:02:29)
2014-02-03 17:02:29,881 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-02-03 04:02:29)
2014-02-03 17:02:29,881 [main           ] INFO  WorkflowInitialDataSetup       - deploy core process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-02-03 04:02:29) 
2014-02-03 17:02:29,882 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-02-03 17:02:29,883 [main           ] INFO  BpmnDeployer                   - Processing resource bpmn/OrderlocalProcess.bpmn20.xml
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-02-03 17:02:30,035 [main           ] INFO  RulesDeployer                  - Processing resource bpmn/OrderlocalProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 17:02:30,043 [main           ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderlocalProcess:1:15]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-02-03 17:02:30,044 [main           ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@692704e9[wfId=3,name=orderlocalProcess,deployId=12,processDefinitionKey=orderlocalProcess,processDefinitionId=orderlocalProcess:1:15,createTime=Mon Feb 03 17:02:29 NZDT 2014]
2014-02-03 17:02:30,045 [main           ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 04:02:29)
2014-02-03 17:02:30,045 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 04:02:29)
2014-02-03 17:02:30,045 [main           ] INFO  WorkflowInitialDataSetup       - deploy local main process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 04:02:29) 
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
2014-02-03 17:02:30,171 [main           ] INFO  SimpleUrlHandlerMapping        - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2014-02-03 17:02:30,173 [main           ] INFO  SimpleUrlHandlerMapping        - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler]
2014-02-03 17:02:30,616 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/logout],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LogoutController.logout(javax.servlet.http.HttpSession)
2014-02-03 17:02:30,616 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/login],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LoginController.showLoginPage(org.springframework.ui.Model)
2014-02-03 17:02:30,616 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/login],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LoginController.handleLogin(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws co.nz.pizzashack.AuthenticationException
2014-02-03 17:02:30,617 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/index],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.IndexController.index(org.springframework.ui.Model,co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-02-03 17:02:30,618 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,618 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/search],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.search(co.nz.pizzashack.data.dto.UserDto,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,618 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.create(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 17:02:30,619 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.update(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 17:02:30,619 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/{userId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,619 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/createUser],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public co.nz.pizzashack.data.dto.UserDto co.nz.pizzashack.controller.UserController.createUser(co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-02-03 17:02:30,619 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,619 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/update/{userId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,619 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/{userId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.deleteUser(java.lang.Long) throws java.lang.Exception
2014-02-03 17:02:30,619 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/check/{userName}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.checkUser(java.lang.String) throws java.lang.Exception
2014-02-03 17:02:30,620 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/adminIndex],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.AdminIndexController.index(org.springframework.ui.Model,co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-02-03 17:02:30,621 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,621 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/{deptId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.delete(java.lang.Long) throws java.lang.Exception
2014-02-03 17:02:30,621 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/search],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.search(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,621 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.create(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 17:02:30,622 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.update(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 17:02:30,622 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/{deptId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,622 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/selectdepts],methods=[GET],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.util.Set<co.nz.pizzashack.data.dto.DepartmentDto> co.nz.pizzashack.controller.DepartmentController.select() throws java.lang.Exception
2014-02-03 17:02:30,622 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,622 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/update/{deptId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,623 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/{orderProcessId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.showOrderProcess(java.lang.Long,org.springframework.ui.Model,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-02-03 17:02:30,623 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/claimReview/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.claimReviewTask(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-02-03 17:02:30,623 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/review],methods=[POST],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.reviewOrder(co.nz.pizzashack.data.dto.OrderReviewRecordDto,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-02-03 17:02:30,624 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderQuery/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderQueryController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,624 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderQuery/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderQueryController.show(java.lang.String,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,624 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderQuery/showHistory/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.util.Set<co.nz.pizzashack.data.dto.ProcessActivityDto> co.nz.pizzashack.controller.OrderQueryController.showHistory(java.lang.String) throws java.lang.Exception
2014-02-03 17:02:30,625 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,625 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/{staffId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.delete(java.lang.Long) throws java.lang.Exception
2014-02-03 17:02:30,626 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.create(co.nz.pizzashack.data.dto.StaffDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 17:02:30,626 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.update(co.nz.pizzashack.data.dto.StaffDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 17:02:30,626 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/{staffId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,626 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,626 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/update/{staffId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,648 [main           ] INFO  ContextLoader                  - Root WebApplicationContext: initialization completed in 12912 ms
2014-02-03 17:02:30.652:INFO:oejsh.ContextHandler:started o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
Feb 03, 2014 5:02:30 PM com.sun.jersey.api.core.PackagesResourceConfig init
INFO: Scanning for root resource and provider classes in the packages:
  co.nz.pizzashack.integration.api
Feb 03, 2014 5:02:30 PM com.sun.jersey.api.core.ScanningResourceConfig logClasses
INFO: Root resource classes found:
  class co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl
Feb 03, 2014 5:02:30 PM com.sun.jersey.api.core.ScanningResourceConfig init
INFO: No provider classes found.
Feb 03, 2014 5:02:30 PM com.sun.jersey.spi.spring.container.servlet.SpringServlet getContext
INFO: Using default applicationContext
Feb 03, 2014 5:02:30 PM com.sun.jersey.spi.spring.container.SpringComponentProviderFactory registerSpringBeans
INFO: Registering Spring bean, pizzashackAPIImpl, of type co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl as a root resource class
Feb 03, 2014 5:02:30 PM com.sun.jersey.server.impl.application.WebApplicationImpl _initiate
INFO: Initiating Jersey application, version 'Jersey: 1.17.1 02/28/2013 12:47 PM'
Feb 03, 2014 5:02:31 PM com.sun.jersey.spi.inject.Errors processErrorMessages
WARNING: The following warnings have been detected with resource and/or provider classes:
  WARNING: A HTTP GET method, public javax.ws.rs.core.Response co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl.getOrderProcessByOrderNo(java.lang.String), should not consume any entity.
Feb 03, 2014 5:02:31 PM com.sun.jersey.spi.spring.container.servlet.SpringServlet getContext
INFO: Using default applicationContext
Feb 03, 2014 5:02:31 PM com.sun.jersey.spi.spring.container.SpringComponentProviderFactory registerSpringBeans
INFO: Registering Spring bean, pizzashackAPIImpl, of type co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl as a root resource class
Feb 03, 2014 5:02:31 PM com.sun.jersey.server.impl.application.WebApplicationImpl _initiate
INFO: Initiating Jersey application, version 'Jersey: 1.17.1 02/28/2013 12:47 PM'
Feb 03, 2014 5:02:31 PM com.sun.jersey.spi.inject.Errors processErrorMessages
WARNING: The following warnings have been detected with resource and/or provider classes:
  WARNING: A HTTP GET method, public javax.ws.rs.core.Response co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl.getOrderProcessByOrderNo(java.lang.String), should not consume any entity.
2014-02-03 17:02:31.336:INFO:/:Initializing Spring FrameworkServlet 'dispatcher'
2014-02-03 17:02:31,336 [main           ] INFO  DispatcherServlet              - FrameworkServlet 'dispatcher': initialization started
2014-02-03 17:02:31,353 [main           ] INFO  DispatcherServlet              - FrameworkServlet 'dispatcher': initialization completed in 17 ms
2014-02-03 17:02:31.365:INFO:oejs.AbstractConnector:Started SelectChannelConnector@0.0.0.0:8111
[INFO] Started Jetty Server
[INFO] Starting scanner at interval of 10 seconds.
2014-02-03 17:04:15,986 [ckOrderInbound]] INFO  orderProcessRoute              - Received message 51837
Hibernate: 
    SELECT
        COUNT(*) 
    FROM
        T_ORDER_REQUEST_HISTORY 
    WHERE
        processor_name = ? 
        AND message_id = ?
Hibernate: 
    INSERT 
    INTO
        T_ORDER_REQUEST_HISTORY
        (processor_name, message_id, created_at) 
    VALUES
        (?, ?, ?)
2014-02-03 17:04:15,999 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlUnmarshal start:{} <order>
  <address>25 mavon downs</address>
  <order-list>
    <order-details>
      <pizza-name>Garden Fresh</pizza-name>
      <quantity>4</quantity>
    </order-details>
    <order-details>
      <pizza-name>Chicken Parmesan</pizza-name>
      <quantity>10</quantity>
    </order-details>
  </order-list>
  <customer>
    <name>david</name>
    <email>david.yuan124@gmail.com</email>
  </customer>
</order>
orderDetailsDto: co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Garden Fresh, qty:4, totalPrice:0)
orderDetailsDto: co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)
2014-02-03 17:04:16,063 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlUnmarshal end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:null, orderNo:null, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:david, customerEmail:david.yuan124@gmail.com, level:null), address:25 mavon downs, status:null, orderTime:null, deliverTime:null)
2014-02-03 17:04:16,063 [ckOrderInbound]] INFO  OrderRequestProcessor          - orderRequestProcessor start:{} 
2014-02-03 17:04:16,064 [ckOrderInbound]] INFO  OrderRequestProcessor          - order request:co.nz.pizzashack.data.dto.OrderDto(orderId:null, orderNo:null, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:david, customerEmail:david.yuan124@gmail.com, level:null), address:25 mavon downs, status:null, orderTime:null, deliverTime:null) 
2014-02-03 17:04:16,064 [ckOrderInbound]] INFO  OrderRequestProcessor          - messageId:51837 
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
2014-02-03 17:04:16,066 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@c8c2fc5[userId=4,username=general,password=MTIzNDU2,createTime=17:02:25]
2014-02-03 17:04:16,070 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)
2014-02-03 17:04:16,070 [ckOrderInbound]] INFO  OrderRequestProcessor          - default operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25) 
2014-02-03 17:04:16,071 [ckOrderInbound]] INFO  OrderProcessDSImpl             - startOrderProcess start:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.process_definition_key=? 
        and workflowmo0_.category=? limit ?
Hibernate: 
    insert 
    into
        t_order
        (order_id, cust_id, deliver_time, order_no, order_time, payment_remarks, payment_status, quantity, ship_address, status, total_price) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 17:04:16,084 [ckOrderInbound]] INFO  ActivitiFacade                 - startProcessInstance start:{}
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
2014-02-03 17:04:16,103 [ckOrderInbound]] INFO  ActivitiFacade                 - startProcessInstance end:{}
Hibernate: 
    insert 
    into
        t_order_process
        (order_process_id, active_process_definition_id, active_process_instance_id, complete_time, create_time, execution_id, main_process_definition_id, main_process_instance_id, operator_id, order_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2014-02-03 17:04:16,110 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@5168c464[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=Mon Feb 03 17:04:16 NZDT 2014,completeTime=<null>]
2014-02-03 17:04:16,127 [ckOrderInbound]] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@a585c32[orderId=1,orderNo=059cbd85-517f-430a-824d-a72c91b87d3e,quantity=<null>,status=0,paymentStatus=0,deliverTime=<null>,totalPrice=<null>,orderTime=Mon Feb 03 17:04:16 NZDT 2014]
2014-02-03 17:04:16,128 [ckOrderInbound]] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 04:04:16, deliverTime:null)
2014-02-03 17:04:16,129 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@1d121057[userId=4,username=general,password=MTIzNDU2,createTime=17:02:25]
2014-02-03 17:04:16,129 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)
2014-02-03 17:04:16,135 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 04:04:16, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 04:04:16, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
2014-02-03 17:04:16,136 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 04:04:16, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 04:04:16, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
2014-02-03 17:04:16,149 [ckOrderInbound]] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 17:04:16,149 [ckOrderInbound]] INFO  ActivitiFacade                 - executionId: 16, processDefinitionId: orderlocalProcess:1:15
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 17:04:16,177 [ckOrderInbound]] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 17:04:16,184 [ckOrderInbound]] INFO  OrderProcessAccessor           - assign operator[4] to task[Data entry]
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    insert 
    into
        ACT_RU_IDENTITYLINK
        (ID_, REV_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_, PROC_DEF_ID_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_IDENTITYLINK
        (ID_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_)     
    values
        (?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_TASK      
    SET
        REV_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        PRIORITY_ = ?,
        CREATE_TIME_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        DELEGATION_ = ?,
        EXECUTION_ID_ = ?,
        PROC_DEF_ID_ = ?,
        DESCRIPTION_ = ?,
        DUE_DATE_ = ?,
        SUSPENSION_STATE_ = ?      
    where
        ID_= ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
2014-02-03 17:04:16,205 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 04:04:16, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 04:04:16, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
2014-02-03 17:04:16,206 [ckOrderInbound]] INFO  OrderProcessDSImpl             - startOrderProcess end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 04:04:16, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 04:04:16, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
2014-02-03 17:04:16,208 [ckOrderInbound]] INFO  OrderRequestProcessor          - after start process:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 04:04:16, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 04:04:16, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
2014-02-03 17:04:16,208 [ckOrderInbound]] INFO  OrderProcessDSImpl             - dataEntry start:059cbd85-517f-430a-824d-a72c91b87d3e
2014-02-03 17:04:16,208 [ckOrderInbound]] INFO  OrderProcessDSImpl             - getOrderProcessByOrderNo start************************************
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 17:04:16,218 [ckOrderInbound]] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@7b6c4980[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=17:04:16,completeTime=<null>] 
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_,
        customermo0_.address as address2_,
        customermo0_.credits as credits2_,
        customermo0_.customer_name as customer4_2_,
        customermo0_.email as email2_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.email=? limit ?
2014-02-03 17:04:16,224 [ckOrderInbound]] INFO  CustomerConverter              - toModel start:{} co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:david, customerEmail:david.yuan124@gmail.com, level:null)
2014-02-03 17:04:16,226 [ckOrderInbound]] INFO  CustomerConverter              - toModel end:{} co.nz.pizzashack.data.model.CustomerModel@23b5ab4c[custId=<null>,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
Hibernate: 
    insert 
    into
        t_customer
        (cust_id, address, credits, customer_name, email) 
    values
        (null, ?, ?, ?, ?)
2014-02-03 17:04:16,229 [ckOrderInbound]] INFO  OrderProcessDSImpl             - orderDetailsSet size:2 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
2014-02-03 17:04:16,238 [ckOrderInbound]] INFO  OrderProcessDSImpl             - added orderPizzashackModel:co.nz.pizzashack.data.model.OrderPizzashackModel@369b4965[orderPizzashackId=<null>,totalPrice=0,qty=4] 
Hibernate: 
    insert 
    into
        t_order_pizzashack
        (order_pizza_id, order_id, pizzashack_id, qty, total_price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
2014-02-03 17:04:16,245 [ckOrderInbound]] INFO  OrderProcessDSImpl             - added orderPizzashackModel:co.nz.pizzashack.data.model.OrderPizzashackModel@2afcc578[orderPizzashackId=<null>,totalPrice=0,qty=10] 
Hibernate: 
    insert 
    into
        t_order_pizzashack
        (order_pizza_id, order_id, pizzashack_id, qty, total_price) 
    values
        (null, ?, ?, ?, ?)
2014-02-03 17:04:16,246 [ckOrderInbound]] INFO  OrderProcessDSImpl             - after add detailsDto, size in model:2 
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        E.BUSINESS_KEY_ = ?                                                                                 
        and RES.PROC_DEF_ID_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                    
        and RES.ASSIGNEE_ = ?                                                                        
        and E.BUSINESS_KEY_ = ?
2014-02-03 17:04:16,251 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@7b6c4980[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=17:04:16,completeTime=<null>]
2014-02-03 17:04:16,256 [ckOrderInbound]] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@3aae94ed[orderId=1,orderNo=059cbd85-517f-430a-824d-a72c91b87d3e,quantity=0,status=0,paymentStatus=0,deliverTime=<null>,totalPrice=0,orderTime=2014-02-03 17:04:16.077]
2014-02-03 17:04:16,259 [ckOrderInbound]] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@23b5ab4c[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 17:04:16,268 [ckOrderInbound]] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-02-03 17:04:16,272 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@369b4965[orderPizzashackId=1,totalPrice=0,qty=4]
2014-02-03 17:04:16,280 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0)
2014-02-03 17:04:16,280 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@2afcc578[orderPizzashackId=2,totalPrice=0,qty=10]
2014-02-03 17:04:16,281 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)
2014-02-03 17:04:16,281 [ckOrderInbound]] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 04:04:16, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 17:04:16,286 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@598c8745[userId=4,username=general,password=MTIzNDU2,createTime=17:02:25]
2014-02-03 17:04:16,287 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)
2014-02-03 17:04:16,287 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 04:04:16, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:16, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        PARENT_TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE 
    where
        TASK_ID_ =     ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
2014-02-03 17:04:16,316 [ckOrderInbound]] INFO  ainTransitionExecutionListener - orderMainUserTaskExecutionListener start:{} 
2014-02-03 17:04:16,316 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity id:orderCoreCallactivity
2014-02-03 17:04:16,316 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity name:Core process
2014-02-03 17:04:16,316 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity type:callActivity
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
start calculate: co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 04:04:16, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:16, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
2014-02-03 17:04:16,519 [ckOrderInbound]] INFO  PizzashackCaculator            - caculate start:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 04:04:16, deliverTime:null) 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 17:04:16,527 [ckOrderInbound]] INFO  PizzashackCaculator            - caculate end:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 04:04:16, deliverTime:null) 
after calculation: co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 04:04:16, deliverTime:null)
2014-02-03 17:04:16,528 [ckOrderInbound]] INFO  culationMergeExecutionListener - CaculationMergeExecutionListener start
2014-02-03 17:04:16,529 [ckOrderInbound]] INFO  culationMergeExecutionListener - after calculation, orderProcess:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 04:04:16, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:16, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
2014-02-03 17:04:16,529 [ckOrderInbound]] INFO  OrderProcessAccessor           - merge calculation result
2014-02-03 17:04:16,529 [ckOrderInbound]] INFO  OrderProcessAccessor           - total price:390.00 
2014-02-03 17:04:16,529 [ckOrderInbound]] INFO  OrderProcessAccessor           - qty:14 
2014-02-03 17:04:16,529 [ckOrderInbound]] INFO  OrderProcessAccessor           - orderDetailsSet.size():2
2014-02-03 17:04:16,529 [ckOrderInbound]] INFO  culationMergeExecutionListener - CaculationMergeExecutionListener end
total qty: 14
after autoreview: 2
reviewTransBean: co.nz.pizzashack.data.dto.OrderReviewRecordDto(reviewRecordId:null, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, content:order number is more than 10 but less than 30, reviewResult:pending, createTime:2014-02-03 04:04:16, reviewer:null)
2014-02-03 17:04:16,605 [ckOrderInbound]] INFO  oManualReviewExecutionListener - ToManualReviewExecutionListener start:{} 
2014-02-03 17:04:16,605 [ckOrderInbound]] INFO  oManualReviewExecutionListener - eventName:take 
2014-02-03 17:04:16,605 [ckOrderInbound]] INFO  oManualReviewExecutionListener - activitiProcessDefinitionId:orderCoreProcess:1:11
2014-02-03 17:04:16,605 [ckOrderInbound]] INFO  oManualReviewExecutionListener - activitiProcesssInstanceId:30
2014-02-03 17:04:16,606 [ckOrderInbound]] INFO  oManualReviewExecutionListener - get orderReviewRecord:co.nz.pizzashack.data.dto.OrderReviewRecordDto(reviewRecordId:null, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, content:order number is more than 10 but less than 30, reviewResult:pending, createTime:2014-02-03 04:04:16, reviewer:null) 
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_IDENTITYLINK
        (ID_, REV_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_, PROC_DEF_ID_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_IDENTITYLINK
        (ID_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_)     
    values
        (?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    update
        ACT_RU_EXECUTION 
    set
        REV_ = ?,
        BUSINESS_KEY_ = ?,
        PROC_DEF_ID_ = ?,
        ACT_ID_ = ?,
        IS_ACTIVE_ = ?,
        IS_CONCURRENT_ = ?,
        IS_SCOPE_ = ?,
        IS_EVENT_SCOPE_ = ?,
        PARENT_ID_ = ?,
        SUPER_EXEC_ = ?,
        SUSPENSION_STATE_ = ?,
        CACHED_ENT_STATE_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_TASK 
    where
        ID_ = ? 
        and REV_ = ?
2014-02-03 17:04:16,647 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 04:04:16, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 05:04:16, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-02-03 17:04:16,659 [ckOrderInbound]] INFO  OrderProcessAccessor           - get OrderProcessDto from flow:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 04:04:16, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 05:04:16, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
2014-02-03 17:04:16,659 [ckOrderInbound]] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 17:04:16,659 [ckOrderInbound]] INFO  ActivitiFacade                 - executionId: 30, processDefinitionId: orderCoreProcess:1:11
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 17:04:16,663 [ckOrderInbound]] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 17:04:16,666 [ckOrderInbound]] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo start:{}
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 17:04:16,667 [ckOrderInbound]] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo end:{}
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
2014-02-03 17:04:16,669 [ckOrderInbound]] INFO  OrderProcessAccessor           - after merge orderProcessModel:co.nz.pizzashack.data.model.OrderProcessModel@7b6c4980[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=17:04:16,completeTime=<null>] 
2014-02-03 17:04:16,670 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 04:04:16, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 05:04:16, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
2014-02-03 17:04:16,671 [ckOrderInbound]] INFO  OrderProcessDSImpl             - dataEntry end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 04:04:16, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 05:04:16, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
Hibernate: 
    update
        t_order_process 
    set
        active_process_definition_id=?,
        active_process_instance_id=?,
        complete_time=?,
        create_time=?,
        execution_id=?,
        main_process_definition_id=?,
        main_process_instance_id=?,
        operator_id=?,
        order_id=? 
    where
        order_process_id=?
Hibernate: 
    update
        t_order 
    set
        cust_id=?,
        deliver_time=?,
        order_no=?,
        order_time=?,
        payment_remarks=?,
        payment_status=?,
        quantity=?,
        ship_address=?,
        status=?,
        total_price=? 
    where
        order_id=?
Hibernate: 
    update
        t_order_pizzashack 
    set
        order_id=?,
        pizzashack_id=?,
        qty=?,
        total_price=? 
    where
        order_pizza_id=?
Hibernate: 
    update
        t_order_pizzashack 
    set
        order_id=?,
        pizzashack_id=?,
        qty=?,
        total_price=? 
    where
        order_pizza_id=?
2014-02-03 17:04:16,684 [ckOrderInbound]] INFO  OrderRequestProcessor          - after dataEntry:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 04:04:16, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 05:04:16, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
2014-02-03 17:04:16,684 [ckOrderInbound]] INFO  OrderConverter                 - toModel start:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 04:04:16, deliverTime:null)
2014-02-03 17:04:16,685 [ckOrderInbound]] INFO  OrderConverter                 - toModel end:{} co.nz.pizzashack.data.model.OrderModel@7898e7e0[orderId=<null>,orderNo=059cbd85-517f-430a-824d-a72c91b87d3e,quantity=14,status=<null>,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=<null>]
Hibernate: 
    select
        orderreque0_.message_id as message1_0_0_,
        orderreque0_.created_at as created2_0_0_,
        orderreque0_.order_id as order4_0_0_,
        orderreque0_.processor_name as processor3_0_0_ 
    from
        t_order_request_history orderreque0_ 
    where
        orderreque0_.message_id=?
2014-02-03 17:04:16,686 [ckOrderInbound]] INFO  OrderRequestProcessor          - orderRequestProcessor end:{} 
2014-02-03 17:04:16,688 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlMarshal start:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 04:04:16, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 05:04:16, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
2014-02-03 17:04:16,697 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - pendingActivity:{} co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
2014-02-03 17:04:16,697 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - customerDto:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-02-03 17:04:16,714 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlMarshal end:{} <order-process>
  <process-id>1</process-id>
  <create-time>1970-01-01 05:04:16</create-time>
  <complete-time>null</complete-time>
  <operator>general</operator>
  <order>
    <order-no>059cbd85-517f-430a-824d-a72c91b87d3e</order-no>
    <address>25 mavon downs</address>
    <quantity>14</quantity>
    <total-price>390.00</total-price>
    <status>pendingOnReview</status>
    <order-time>2014-02-03 04:04:16</order-time>
    <deliver-time>null</deliver-time>
    <order-list>
      <order-details>
        <pizza-name>Garden Fresh</pizza-name>
        <quantity>4</quantity>
        <total-price>140.00</total-price>
      </order-details>
      <order-details>
        <pizza-name>Chicken Parmesan</pizza-name>
        <quantity>10</quantity>
        <total-price>250.00</total-price>
      </order-details>
    </order-list>
  </order>
  <customer>
    <name>david</name>
    <email>david.yuan124@gmail.com</email>
  </customer>
  <pending-activity>
    <name>Manual underwriting</name>
    <type>userTask</type>
    <assignee>null</assignee>
  </pending-activity>
</order-process>
2014-02-03 17:04:16,716 [ckOrderInbound]] INFO  output                         - Exchange[ExchangePattern: InOnly, BodyType: String, Body: <order-process>  <process-id>1</process-id>  <create-time>1970-01-01 05:04:16</create-time>  <complete-time>null</complete-time>  <operator>general</operator>  <order>    <order-no>059cbd85-517f-430a-824d-a72c91b87d3e</order-no>    <address>25 mavon downs</address>    <quantity>14</quantity>    <total-price>390.00</total-price>    <status>pendingOnReview</status>    <order-time>2014-02-03 04:04:16</order-time>    <deliver-time>null</deliver-time>    <order-list>      <order-details>        <pizza-name>Garden Fresh</pizza-name>        <quantity>4</quantity>        <total-price>140.00</total-price>      </order-details>      <order-details>        <pizza-name>Chicken Parmesan</pizza-name>        <quantity>10</quantity>        <total-price>250.00</total-price>      </order-details>    </order-list>  </order>  <customer>    <name>david</name>    <email>david.yuan124@gmail.com</email>  </customer>  <pending-activity>    <name>Manual underwriting</name>    <type>userTask</type>    <assignee>null</assignee>  </pending-activity></order-process>]
2014-02-03 17:04:16,762 [ckOrderInbound]] INFO  orderProcessRoute              - Signalled to stop route
2014-02-03 17:04:24,594 [ckOrderInbound]] INFO  orderProcessRoute              - Received message 55892
Hibernate: 
    SELECT
        COUNT(*) 
    FROM
        T_ORDER_REQUEST_HISTORY 
    WHERE
        processor_name = ? 
        AND message_id = ?
Hibernate: 
    INSERT 
    INTO
        T_ORDER_REQUEST_HISTORY
        (processor_name, message_id, created_at) 
    VALUES
        (?, ?, ?)
2014-02-03 17:04:24,597 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlUnmarshal start:{} <order>
  <address>25 mavon downs</address>
  <order-list>
    <order-details>
      <pizza-name>Chicken Parmesan</pizza-name>
      <quantity>2</quantity>
    </order-details>
    <order-details>
      <pizza-name>Spicy Italian</pizza-name>
      <quantity>4</quantity>
    </order-details>
  </order-list>
  <customer>
    <name>david</name>
    <email>david.yuan124@gmail.com</email>
  </customer>
</order>
orderDetailsDto: co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:2, totalPrice:0)
orderDetailsDto: co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Spicy Italian, qty:4, totalPrice:0)
2014-02-03 17:04:24,600 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlUnmarshal end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:null, orderNo:null, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:david, customerEmail:david.yuan124@gmail.com, level:null), address:25 mavon downs, status:null, orderTime:null, deliverTime:null)
2014-02-03 17:04:24,600 [ckOrderInbound]] INFO  OrderRequestProcessor          - orderRequestProcessor start:{} 
2014-02-03 17:04:24,601 [ckOrderInbound]] INFO  OrderRequestProcessor          - order request:co.nz.pizzashack.data.dto.OrderDto(orderId:null, orderNo:null, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:david, customerEmail:david.yuan124@gmail.com, level:null), address:25 mavon downs, status:null, orderTime:null, deliverTime:null) 
2014-02-03 17:04:24,601 [ckOrderInbound]] INFO  OrderRequestProcessor          - messageId:55892 
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
2014-02-03 17:04:24,603 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@1bbd616a[userId=4,username=general,password=MTIzNDU2,createTime=17:02:25]
2014-02-03 17:04:24,604 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)
2014-02-03 17:04:24,604 [ckOrderInbound]] INFO  OrderRequestProcessor          - default operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25) 
2014-02-03 17:04:24,604 [ckOrderInbound]] INFO  OrderProcessDSImpl             - startOrderProcess start:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.process_definition_key=? 
        and workflowmo0_.category=? limit ?
Hibernate: 
    insert 
    into
        t_order
        (order_id, cust_id, deliver_time, order_no, order_time, payment_remarks, payment_status, quantity, ship_address, status, total_price) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 17:04:24,609 [ckOrderInbound]] INFO  ActivitiFacade                 - startProcessInstance start:{}
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
2014-02-03 17:04:24,614 [ckOrderInbound]] INFO  ActivitiFacade                 - startProcessInstance end:{}
Hibernate: 
    insert 
    into
        t_order_process
        (order_process_id, active_process_definition_id, active_process_instance_id, complete_time, create_time, execution_id, main_process_definition_id, main_process_instance_id, operator_id, order_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2014-02-03 17:04:24,615 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@7289b546[orderProcessId=2,executionId=59,mainProcessInstanceId=59,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=59,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=Mon Feb 03 17:04:24 NZDT 2014,completeTime=<null>]
2014-02-03 17:04:24,615 [ckOrderInbound]] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@7988be1[orderId=2,orderNo=32255c96-f798-42e9-a5f4-6ab18ef9b090,quantity=<null>,status=0,paymentStatus=0,deliverTime=<null>,totalPrice=<null>,orderTime=Mon Feb 03 17:04:24 NZDT 2014]
2014-02-03 17:04:24,616 [ckOrderInbound]] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 04:04:24, deliverTime:null)
2014-02-03 17:04:24,616 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@624f2ad1[userId=4,username=general,password=MTIzNDU2,createTime=17:02:25]
2014-02-03 17:04:24,617 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)
2014-02-03 17:04:24,617 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 04:04:24, completeTime:null, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
2014-02-03 17:04:24,617 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 04:04:24, completeTime:null, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
2014-02-03 17:04:24,620 [ckOrderInbound]] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 17:04:24,620 [ckOrderInbound]] INFO  ActivitiFacade                 - executionId: 59, processDefinitionId: orderlocalProcess:1:15
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 17:04:24,623 [ckOrderInbound]] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 17:04:24,625 [ckOrderInbound]] INFO  OrderProcessAccessor           - assign operator[4] to task[Data entry]
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    insert 
    into
        ACT_RU_IDENTITYLINK
        (ID_, REV_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_, PROC_DEF_ID_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_IDENTITYLINK
        (ID_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_)     
    values
        (?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_TASK      
    SET
        REV_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        PRIORITY_ = ?,
        CREATE_TIME_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        DELEGATION_ = ?,
        EXECUTION_ID_ = ?,
        PROC_DEF_ID_ = ?,
        DESCRIPTION_ = ?,
        DUE_DATE_ = ?,
        SUSPENSION_STATE_ = ?      
    where
        ID_= ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
2014-02-03 17:04:24,634 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 04:04:24, completeTime:null, executionId:59, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
2014-02-03 17:04:24,635 [ckOrderInbound]] INFO  OrderProcessDSImpl             - startOrderProcess end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 04:04:24, completeTime:null, executionId:59, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
2014-02-03 17:04:24,636 [ckOrderInbound]] INFO  OrderRequestProcessor          - after start process:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 04:04:24, completeTime:null, executionId:59, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
2014-02-03 17:04:24,637 [ckOrderInbound]] INFO  OrderProcessDSImpl             - dataEntry start:32255c96-f798-42e9-a5f4-6ab18ef9b090
2014-02-03 17:04:24,637 [ckOrderInbound]] INFO  OrderProcessDSImpl             - getOrderProcessByOrderNo start************************************
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 17:04:24,639 [ckOrderInbound]] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@e1b97ad[orderProcessId=2,executionId=59,mainProcessInstanceId=59,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=59,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=17:04:24,completeTime=<null>] 
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_,
        customermo0_.address as address2_,
        customermo0_.credits as credits2_,
        customermo0_.customer_name as customer4_2_,
        customermo0_.email as email2_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.email=? limit ?
2014-02-03 17:04:24,640 [ckOrderInbound]] INFO  OrderProcessDSImpl             - orderDetailsSet size:2 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
2014-02-03 17:04:24,641 [ckOrderInbound]] INFO  OrderProcessDSImpl             - added orderPizzashackModel:co.nz.pizzashack.data.model.OrderPizzashackModel@3f6aa8e3[orderPizzashackId=<null>,totalPrice=0,qty=2] 
Hibernate: 
    insert 
    into
        t_order_pizzashack
        (order_pizza_id, order_id, pizzashack_id, qty, total_price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
2014-02-03 17:04:24,643 [ckOrderInbound]] INFO  OrderProcessDSImpl             - added orderPizzashackModel:co.nz.pizzashack.data.model.OrderPizzashackModel@7a22cf2b[orderPizzashackId=<null>,totalPrice=0,qty=4] 
Hibernate: 
    insert 
    into
        t_order_pizzashack
        (order_pizza_id, order_id, pizzashack_id, qty, total_price) 
    values
        (null, ?, ?, ?, ?)
2014-02-03 17:04:24,643 [ckOrderInbound]] INFO  OrderProcessDSImpl             - after add detailsDto, size in model:2 
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        E.BUSINESS_KEY_ = ?                                                                                 
        and RES.PROC_DEF_ID_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                    
        and RES.ASSIGNEE_ = ?                                                                        
        and E.BUSINESS_KEY_ = ?
2014-02-03 17:04:24,647 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@e1b97ad[orderProcessId=2,executionId=59,mainProcessInstanceId=59,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=59,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=17:04:24,completeTime=<null>]
2014-02-03 17:04:24,647 [ckOrderInbound]] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@3a74d7e6[orderId=2,orderNo=32255c96-f798-42e9-a5f4-6ab18ef9b090,quantity=0,status=0,paymentStatus=0,deliverTime=<null>,totalPrice=0,orderTime=2014-02-03 17:04:24.607]
2014-02-03 17:04:24,648 [ckOrderInbound]] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@3fbfccfb[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 17:04:24,648 [ckOrderInbound]] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-02-03 17:04:24,648 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@3f6aa8e3[orderPizzashackId=3,totalPrice=0,qty=2]
2014-02-03 17:04:24,648 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:0)
2014-02-03 17:04:24,648 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@7a22cf2b[orderPizzashackId=4,totalPrice=0,qty=4]
2014-02-03 17:04:24,648 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:0)
2014-02-03 17:04:24,649 [ckOrderInbound]] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 04:04:24, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 17:04:24,650 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@2440709b[userId=4,username=general,password=MTIzNDU2,createTime=17:02:25]
2014-02-03 17:04:24,650 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)
2014-02-03 17:04:24,651 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:null, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        PARENT_TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE 
    where
        TASK_ID_ =     ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
2014-02-03 17:04:24,659 [ckOrderInbound]] INFO  ainTransitionExecutionListener - orderMainUserTaskExecutionListener start:{} 
2014-02-03 17:04:24,659 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity id:orderCoreCallactivity
2014-02-03 17:04:24,659 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity name:Core process
2014-02-03 17:04:24,659 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity type:callActivity
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
start calculate: co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:null, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
2014-02-03 17:04:24,676 [ckOrderInbound]] INFO  PizzashackCaculator            - caculate start:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 04:04:24, deliverTime:null) 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 17:04:24,679 [ckOrderInbound]] INFO  PizzashackCaculator            - caculate end:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 04:04:24, deliverTime:null) 
after calculation: co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 04:04:24, deliverTime:null)
2014-02-03 17:04:24,680 [ckOrderInbound]] INFO  culationMergeExecutionListener - CaculationMergeExecutionListener start
2014-02-03 17:04:24,681 [ckOrderInbound]] INFO  culationMergeExecutionListener - after calculation, orderProcess:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:null, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
2014-02-03 17:04:24,681 [ckOrderInbound]] INFO  OrderProcessAccessor           - merge calculation result
2014-02-03 17:04:24,681 [ckOrderInbound]] INFO  OrderProcessAccessor           - total price:162.00 
2014-02-03 17:04:24,681 [ckOrderInbound]] INFO  OrderProcessAccessor           - qty:6 
2014-02-03 17:04:24,681 [ckOrderInbound]] INFO  OrderProcessAccessor           - orderDetailsSet.size():2
2014-02-03 17:04:24,681 [ckOrderInbound]] INFO  culationMergeExecutionListener - CaculationMergeExecutionListener end
total qty: 6
after autoreview: 0
reviewTransBean: co.nz.pizzashack.data.dto.OrderReviewRecordDto(reviewRecordId:null, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, content:null, reviewResult:accept, createTime:2014-02-03 04:04:24, reviewer:null)
Hibernate: 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = ?
Hibernate: 
    update
        ACT_GE_PROPERTY      
    SET
        REV_ = ?,
        VALUE_ = ?      
    where
        NAME_ = ?       
        and REV_ = ?
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RU_JOB J     
    where
        J.EXECUTION_ID_ = ?
Hibernate: 
    select
        *      
    from
        ACT_RU_EVENT_SUBSCR     
    where
        (
            EXECUTION_ID_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
2014-02-03 17:04:24,719 [ckOrderInbound]] INFO  OfCoreProcessExecutionListener - after core process, orderProcess:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:null, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 17:04:24,720 [ckOrderInbound]] INFO  ainTransitionExecutionListener - orderMainUserTaskExecutionListener start:{} 
2014-02-03 17:04:24,720 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity id:billingEntry
2014-02-03 17:04:24,720 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity name:Billing fill in
2014-02-03 17:04:24,720 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity type:userTask
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    update
        ACT_RU_EXECUTION 
    set
        REV_ = ?,
        BUSINESS_KEY_ = ?,
        PROC_DEF_ID_ = ?,
        ACT_ID_ = ?,
        IS_ACTIVE_ = ?,
        IS_CONCURRENT_ = ?,
        IS_SCOPE_ = ?,
        IS_EVENT_SCOPE_ = ?,
        PARENT_ID_ = ?,
        SUPER_EXEC_ = ?,
        SUSPENSION_STATE_ = ?,
        CACHED_ENT_STATE_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_TASK 
    where
        ID_ = ? 
        and REV_ = ?
2014-02-03 17:04:24,757 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:null, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-02-03 17:04:24,763 [ckOrderInbound]] INFO  OrderProcessAccessor           - get OrderProcessDto from flow:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:null, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
2014-02-03 17:04:24,763 [ckOrderInbound]] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 17:04:24,763 [ckOrderInbound]] INFO  ActivitiFacade                 - executionId: 59, processDefinitionId: orderlocalProcess:1:15
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 17:04:24,769 [ckOrderInbound]] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 17:04:24,772 [ckOrderInbound]] INFO  OrderProcessAccessor           - assign operator[4] to task[Billing fill in]
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_TASK      
    SET
        REV_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        PRIORITY_ = ?,
        CREATE_TIME_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        DELEGATION_ = ?,
        EXECUTION_ID_ = ?,
        PROC_DEF_ID_ = ?,
        DESCRIPTION_ = ?,
        DUE_DATE_ = ?,
        SUSPENSION_STATE_ = ?      
    where
        ID_= ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
2014-02-03 17:04:24,778 [ckOrderInbound]] INFO  OrderProcessAccessor           - after merge orderProcessModel:co.nz.pizzashack.data.model.OrderProcessModel@e1b97ad[orderProcessId=2,executionId=59,mainProcessInstanceId=59,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=59,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=17:04:24,completeTime=<null>] 
2014-02-03 17:04:24,780 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:null, executionId:59, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
2014-02-03 17:04:24,781 [ckOrderInbound]] INFO  OrderProcessDSImpl             - dataEntry end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:null, executionId:59, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
Hibernate: 
    update
        t_order 
    set
        cust_id=?,
        deliver_time=?,
        order_no=?,
        order_time=?,
        payment_remarks=?,
        payment_status=?,
        quantity=?,
        ship_address=?,
        status=?,
        total_price=? 
    where
        order_id=?
Hibernate: 
    update
        t_order_pizzashack 
    set
        order_id=?,
        pizzashack_id=?,
        qty=?,
        total_price=? 
    where
        order_pizza_id=?
Hibernate: 
    update
        t_order_pizzashack 
    set
        order_id=?,
        pizzashack_id=?,
        qty=?,
        total_price=? 
    where
        order_pizza_id=?
2014-02-03 17:04:24,784 [ckOrderInbound]] INFO  OrderRequestProcessor          - after dataEntry:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:null, executionId:59, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
2014-02-03 17:04:24,784 [ckOrderInbound]] INFO  OrderConverter                 - toModel start:{} co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-03 04:04:24, deliverTime:null)
2014-02-03 17:04:24,785 [ckOrderInbound]] INFO  OrderConverter                 - toModel end:{} co.nz.pizzashack.data.model.OrderModel@a35ae9b[orderId=<null>,orderNo=32255c96-f798-42e9-a5f4-6ab18ef9b090,quantity=6,status=<null>,paymentStatus=0,deliverTime=<null>,totalPrice=162.00,orderTime=<null>]
Hibernate: 
    select
        orderreque0_.message_id as message1_0_0_,
        orderreque0_.created_at as created2_0_0_,
        orderreque0_.order_id as order4_0_0_,
        orderreque0_.processor_name as processor3_0_0_ 
    from
        t_order_request_history orderreque0_ 
    where
        orderreque0_.message_id=?
2014-02-03 17:04:24,787 [ckOrderInbound]] INFO  OrderRequestProcessor          - orderRequestProcessor end:{} 
2014-02-03 17:04:24,789 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlMarshal start:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:null, executionId:59, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
2014-02-03 17:04:24,790 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - pendingActivity:{} co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
2014-02-03 17:04:24,790 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - customerDto:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-02-03 17:04:24,793 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlMarshal end:{} <order-process>
  <process-id>2</process-id>
  <create-time>1970-01-01 05:04:24</create-time>
  <complete-time>null</complete-time>
  <operator>general</operator>
  <order>
    <order-no>32255c96-f798-42e9-a5f4-6ab18ef9b090</order-no>
    <address>25 mavon downs</address>
    <quantity>6</quantity>
    <total-price>162.00</total-price>
    <status>pendingOnBilling</status>
    <order-time>2014-02-03 04:04:24</order-time>
    <deliver-time>null</deliver-time>
    <order-list>
      <order-details>
        <pizza-name>Chicken Parmesan</pizza-name>
        <quantity>2</quantity>
        <total-price>50.00</total-price>
      </order-details>
      <order-details>
        <pizza-name>Spicy Italian</pizza-name>
        <quantity>4</quantity>
        <total-price>112.00</total-price>
      </order-details>
    </order-list>
  </order>
  <customer>
    <name>david</name>
    <email>david.yuan124@gmail.com</email>
  </customer>
  <pending-activity>
    <name>Billing fill in</name>
    <type>userTask</type>
    <assignee>general</assignee>
  </pending-activity>
</order-process>
2014-02-03 17:04:24,793 [ckOrderInbound]] INFO  output                         - Exchange[ExchangePattern: InOnly, BodyType: String, Body: <order-process>  <process-id>2</process-id>  <create-time>1970-01-01 05:04:24</create-time>  <complete-time>null</complete-time>  <operator>general</operator>  <order>    <order-no>32255c96-f798-42e9-a5f4-6ab18ef9b090</order-no>    <address>25 mavon downs</address>    <quantity>6</quantity>    <total-price>162.00</total-price>    <status>pendingOnBilling</status>    <order-time>2014-02-03 04:04:24</order-time>    <deliver-time>null</deliver-time>    <order-list>      <order-details>        <pizza-name>Chicken Parmesan</pizza-name>        <quantity>2</quantity>        <total-price>50.00</total-price>      </order-details>      <order-details>        <pizza-name>Spicy Italian</pizza-name>        <quantity>4</quantity>        <total-price>112.00</total-price>      </order-details>    </order-list>  </order>  <customer>    <name>david</name>    <email>david.yuan124@gmail.com</email>  </customer>  <pending-activity>    <name>Billing fill in</name>    <type>userTask</type>    <assignee>general</assignee>  </pending-activity></order-process>]
2014-02-03 17:04:24,838 [ckOrderInbound]] INFO  orderProcessRoute              - Signalled to stop route
2014-02-03 17:04:25,721 [qtp793057417-39] INFO  input                          - Exchange[ExchangePattern: InOut, BodyType: org.apache.cxf.message.MessageContentsList, Body: [co.nz.pizzashack.data.dto.BillingDto(billingRequestId:null, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, billingCode:null, billingMessage:null, billingTime:null, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111))]]
2014-02-03 17:04:25,721 [qtp793057417-39] INFO  BillingInboundProcessor        - BillingInboundProcessor start:{} 
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
2014-02-03 17:04:25,728 [qtp793057417-39] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@5dc7f2b7[userId=4,username=general,password=MTIzNDU2,createTime=17:02:25]
2014-02-03 17:04:25,728 [qtp793057417-39] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)
2014-02-03 17:04:25,728 [qtp793057417-39] INFO  BillingInboundProcessor        - default operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25) 
2014-02-03 17:04:25,729 [qtp793057417-39] INFO  OrderProcessDSImpl             - fillinBillingAccount start:co.nz.pizzashack.data.dto.BillingDto(billingRequestId:50480, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, billingCode:null, billingMessage:null, billingTime:2014-02-03 04:04:25, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111))
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 17:04:25,733 [qtp793057417-39] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@1b98d3f2[orderProcessId=2,executionId=59,mainProcessInstanceId=59,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=59,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=17:04:24,completeTime=<null>] 
2014-02-03 17:04:25,734 [qtp793057417-39] INFO  OrderProcessDSImpl             - doFillinBillingAccount start:{} 
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        E.BUSINESS_KEY_ = ?                                                                                 
        and RES.PROC_DEF_ID_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 17:04:25,736 [qtp793057417-39] INFO  OrderProcessDSImpl             - current task:Billing fill in 
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                    
        and RES.ASSIGNEE_ = ?                                                                        
        and E.BUSINESS_KEY_ = ?
2014-02-03 17:04:25,738 [qtp793057417-39] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@1b98d3f2[orderProcessId=2,executionId=59,mainProcessInstanceId=59,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=59,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=17:04:24,completeTime=<null>]
2014-02-03 17:04:25,738 [qtp793057417-39] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@374bdc15[orderId=2,orderNo=32255c96-f798-42e9-a5f4-6ab18ef9b090,quantity=6,status=5,paymentStatus=0,deliverTime=<null>,totalPrice=162.00,orderTime=2014-02-03 17:04:24.607]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 17:04:25,746 [qtp793057417-39] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@47707b55[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 17:04:25,747 [qtp793057417-39] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 17:04:25,754 [qtp793057417-39] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@7a984c97[orderPizzashackId=3,totalPrice=50.00,qty=2]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 17:04:25,757 [qtp793057417-39] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00)
2014-02-03 17:04:25,758 [qtp793057417-39] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@24cc8c62[orderPizzashackId=4,totalPrice=112.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 17:04:25,758 [qtp793057417-39] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)
2014-02-03 17:04:25,758 [qtp793057417-39] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-03 04:04:24, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 17:04:25,759 [qtp793057417-39] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@68fd8a41[userId=4,username=general,password=MTIzNDU2,createTime=17:02:25]
2014-02-03 17:04:25,759 [qtp793057417-39] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)
2014-02-03 17:04:25,760 [qtp793057417-39] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:null, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        PARENT_TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE 
    where
        TASK_ID_ =     ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
2014-02-03 17:04:25,774 [qtp793057417-39] INFO  ainTransitionExecutionListener - orderMainUserTaskExecutionListener start:{} 
2014-02-03 17:04:25,774 [qtp793057417-39] INFO  ainTransitionExecutionListener - nextActivity id:billingCallactivity
2014-02-03 17:04:25,774 [qtp793057417-39] INFO  ainTransitionExecutionListener - nextActivity name:Billing
2014-02-03 17:04:25,774 [qtp793057417-39] INFO  ainTransitionExecutionListener - nextActivity type:callActivity
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
2014-02-03 17:04:25,779 [qtp793057417-39] INFO  input                          - Exchange[ExchangePattern: InOnly, BodyType: java.util.HashMap, Body: {orderTransBean=co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:null, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)), billingTransBean=co.nz.pizzashack.data.dto.BillingDto(billingRequestId:50480, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, billingCode:null, billingMessage:null, billingTime:2014-02-03 04:04:25, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111)), indenpendentProcess=false}]
2014-02-03 17:04:25,779 [qtp793057417-39] INFO  BillingVariableTransformer     - after transform billing:co.nz.pizzashack.data.dto.BillingDto(billingRequestId:50480, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, billingCode:null, billingMessage:null, billingTime:2014-02-03 04:04:25, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111)) 
2014-02-03 17:04:25,790 [qtp793057417-39] INFO  BillingFormatTransformer       - billingReqXmlMarshal start:{} co.nz.pizzashack.data.dto.BillingDto(billingRequestId:50480, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, billingCode:null, billingMessage:null, billingTime:2014-02-03 04:04:25, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111))
2014-02-03 17:04:25,793 [qtp793057417-39] INFO  BillingFormatTransformer       - billingReqXmlMarshal end:{} <billing>
  <account>
    <account-no>111111</account-no>
    <security-no>111</security-no>
    <expire-date>2019-06-24</expire-date>
    <account-type>credit</account-type>
  </account>
  <billing-amount>162.00</billing-amount>
  <create-time>2014-02-03 04:04:25</create-time>
</billing>
2014-02-03 17:04:25,794 [qtp793057417-39] INFO  myLog                          - Exchange[Id: ID-david-59132-1391400143467-0-6, ExchangePattern: InOut, Properties: {BillingRequest=co.nz.pizzashack.data.dto.BillingDto(billingRequestId:50480, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, billingCode:null, billingMessage:null, billingTime:2014-02-03 04:04:25, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111)), CamelCreatedTimestamp=Mon Feb 03 17:04:25 NZDT 2014, CamelMessageHistory=[DefaultMessageHistory[routeId=activitiBillingProcess, node=to1], DefaultMessageHistory[routeId=activitiBillingProcess, node=setHeader1], DefaultMessageHistory[routeId=activitiBillingProcess, node=to2], DefaultMessageHistory[routeId=direct:billingIntegration, node=transform1], DefaultMessageHistory[routeId=direct:billingIntegration, node=setHeader2], DefaultMessageHistory[routeId=direct:billingIntegration, node=to3], DefaultMessageHistory[routeId=route1, node=setExchangePattern1], DefaultMessageHistory[routeId=route1, node=setProperty1], DefaultMessageHistory[routeId=route1, node=bean1], DefaultMessageHistory[routeId=route1, node=to5]], CamelToEndpoint=log://myLog?showAll=true, PROCESS_ID_PROPERTY=123}, Headers: {breadcrumbId=ID-david-59132-1391400143467-0-5, destination=activiti:orderBillingProcess:receiveBillingResult, messageId=50480}, BodyType: String, Body: <billing>  <account>    <account-no>111111</account-no>    <security-no>111</security-no>    <expire-date>2019-06-24</expire-date>    <account-type>credit</account-type>  </account>  <billing-amount>162.00</billing-amount>  <create-time>2014-02-03 04:04:25</create-time></billing>, Out: null: ]
2014-02-03 17:04:26,111 [illingOutbound]] INFO  route1                         - jmsMsgId set = ID:david-60622-1391379770476-1:20392:1:1:1
2014-02-03 17:04:26,112 [illingOutbound]] INFO  myLog                          - Exchange[Id: ID-david-59132-1391400143467-0-6, ExchangePattern: InOut, Properties: {BillingRequest=co.nz.pizzashack.data.dto.BillingDto(billingRequestId:50480, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, billingCode:null, billingMessage:null, billingTime:2014-02-03 04:04:25, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111)), CamelCreatedTimestamp=Mon Feb 03 17:04:25 NZDT 2014, CamelExternalRedelivered=false, CamelMessageHistory=[DefaultMessageHistory[routeId=activitiBillingProcess, node=to1], DefaultMessageHistory[routeId=activitiBillingProcess, node=setHeader1], DefaultMessageHistory[routeId=activitiBillingProcess, node=to2], DefaultMessageHistory[routeId=direct:billingIntegration, node=transform1], DefaultMessageHistory[routeId=direct:billingIntegration, node=setHeader2], DefaultMessageHistory[routeId=direct:billingIntegration, node=to3], DefaultMessageHistory[routeId=route1, node=setExchangePattern1], DefaultMessageHistory[routeId=route1, node=setProperty1], DefaultMessageHistory[routeId=route1, node=bean1], DefaultMessageHistory[routeId=route1, node=to5], DefaultMessageHistory[routeId=route1, node=to6], DefaultMessageHistory[routeId=route1, node=log1], DefaultMessageHistory[routeId=route1, node=to7]], CamelToEndpoint=log://myLog?showAll=true, PROCESS_ID_PROPERTY=123}, Headers: {accountNo=111111, breadcrumbId=ID-david-59132-1391400143467-0-5, CamelJmsDeliveryMode=2, CamelSqlUpdateCount=1, code=000, destination=activiti:orderBillingProcess:receiveBillingResult, JMSCorrelationID=Camel-ID-david-59132-1391400143467-0-7, JMSDeliveryMode=2, JMSDestination=queue://pizzashackBillingOutbound, JMSExpiration=0, JMSMessageID=ID:david-60622-1391379770476-1:20392:1:1:1, JMSPriority=4, JMSRedelivered=false, JMSReplyTo=null, JMSTimestamp=1391400266105, JMSType=null, JMSXGroupID=null, JMSXUserID=null, messageId=50480, transactionNo=2afd47d8-3275-4a85-9398-a6168ac2f992}, BodyType: String, Body: <account-transaction>  <transaction-no>2afd47d8-3275-4a85-9398-a6168ac2f992</transaction-no>  <account-no>111111</account-no>  <code>000</code>  <reasons>null</reasons>  <create-time>2014-02-03 04:04:26</create-time></account-transaction>, Out: null: ]
2014-02-03 17:04:26,112 [illingOutbound]] INFO  BillingFormatTransformer       - billingRespXmalUnmarshal start:{} <account-transaction>
  <transaction-no>2afd47d8-3275-4a85-9398-a6168ac2f992</transaction-no>
  <account-no>111111</account-no>
  <code>000</code>
  <reasons>null</reasons>
  <create-time>2014-02-03 04:04:26</create-time>
</account-transaction>
2014-02-03 17:04:26,115 [illingOutbound]] INFO  BillingFormatTransformer       - billingRespXmalUnmarshal end:{} co.nz.pizzashack.data.dto.BillingDto(billingRequestId:null, orderNo:null, billingCode:000, billingMessage:null, billingTime:null, billingAmount:null, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:null, expireDate:null, securityNo:null))
2014-02-03 17:04:26,115 [illingOutbound]] INFO  BillingResponseMergeProcessor  - billingReq:co.nz.pizzashack.data.dto.BillingDto(billingRequestId:50480, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, billingCode:null, billingMessage:null, billingTime:2014-02-03 04:04:25, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111)) 
2014-02-03 17:04:26,116 [illingOutbound]] INFO  BillingResponseMergeProcessor  - billingResp:co.nz.pizzashack.data.dto.BillingDto(billingRequestId:null, orderNo:null, billingCode:000, billingMessage:null, billingTime:null, billingAmount:null, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:null, expireDate:null, securityNo:null)) 
2014-02-03 17:04:26,119 [qtp793057417-39] INFO  BillingRespExecutionListener   - BillingRespExecutionListener execute start:{}
2014-02-03 17:04:26,119 [qtp793057417-39] INFO  BillingRespExecutionListener   - get billing after integration:co.nz.pizzashack.data.dto.BillingDto(billingRequestId:50480, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, billingCode:000, billingMessage:null, billingTime:2014-02-03 04:04:25, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111))
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 17:04:26,121 [qtp793057417-39] INFO  BillingRespExecutionListener   - activitiProcessDefinitionId:orderBillingProcess:1:7
2014-02-03 17:04:26,121 [qtp793057417-39] INFO  BillingRespExecutionListener   - activitiProcesssInstanceId:123
2014-02-03 17:04:26,121 [qtp793057417-39] INFO  BillingRespExecutionListener   - Key : camelBody Value : co.nz.pizzashack.data.dto.BillingDto(billingRequestId:50480, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, billingCode:000, billingMessage:null, billingTime:2014-02-03 04:04:25, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111))
2014-02-03 17:04:26,121 [qtp793057417-39] INFO  BillingRespExecutionListener   - Key : billingProcessStatus Value : 0
2014-02-03 17:04:26,121 [qtp793057417-39] INFO  BillingRespExecutionListener   - Key : billingTransBean Value : co.nz.pizzashack.data.dto.BillingDto(billingRequestId:50480, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, billingCode:000, billingMessage:null, billingTime:2014-02-03 04:04:25, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111))
2014-02-03 17:04:26,122 [qtp793057417-39] INFO  BillingRespExecutionListener   - Key : orderTransBean Value : co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:123, activeProcessDefinitionId:orderBillingProcess:1:7, createTime:1970-01-01 05:04:24, completeTime:null, executionId:123, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
2014-02-03 17:04:26,122 [qtp793057417-39] INFO  BillingRespExecutionListener   - Key : indenpendentProcess Value : false
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
2014-02-03 17:04:26,129 [ad #4 - WireTap] INFO  input                          - Exchange[ExchangePattern: InOnly, BodyType: co.nz.pizzashack.data.dto.BillingDto, Body: <?xml version="1.0" encoding="UTF-8" standalone="yes"?><billingRequest>    <billingRequestId>50480</billingRequestId>    <orderNo>32255c96-f798-42e9-a5f4-6ab18ef9b090</orderNo>    <billingCode>000</billingCode>    <billingMessage>null</billingMessage>    <billingTime>2014-02-03 04:04:25</billingTime>    <billingAmount>162.00</billingAmount>    <account>        <paymode>credit</paymode>        <accountNo>111111</accountNo>        <expireDate>2019-06-24</expireDate>        <securityNo>111</securityNo>    </account></billingRequest>]
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
2014-02-03 17:04:26,147 [ad #4 - WireTap] ERROR DefaultErrorHandler            - Failed delivery for (MessageId: ID-david-59132-1391400143467-0-8 on ExchangeId: ID-david-59132-1391400143467-0-10). Exhausted after delivery attempt: 1 caught: java.lang.NullPointerException

Message History
---------------------------------------------------------------------------------------------------------------------------------------
RouteId              ProcessorId          Processor                                                                        Elapsed (ms)
[activitiBillingPro] [activitiBillingPro] [                                                                              ] [       366]
[activitiBillingPro] [to1               ] [log:input                                                                     ] [         1]
[activitiBillingPro] [setHeader1        ] [setHeader[destination]                                                        ] [         0]
[activitiBillingPro] [to2               ] [direct:billingIntegration                                                     ] [       338]
[direct:billingInte] [transform1        ] [transform[{co.nz.pizzashack.integration.mapping.BillingVariableTransformer@30a] [         0]
[direct:billingInte] [setHeader2        ] [setHeader[messageId]                                                          ] [        10]
[direct:billingInte] [to3               ] [direct:doBillingIntegration                                                   ] [       327]
[route1            ] [setExchangePattern] [setExchangePattern[InOut]                                                     ] [         0]
[route1            ] [setProperty1      ] [setProperty[BillingRequest]                                                   ] [         0]
[route1            ] [bean1             ] [bean[co.nz.pizzashack.integration.mapping.BillingFormatTransformer@3e817a89]  ] [         3]
[route1            ] [to5               ] [log:myLog?showAll=true                                                        ] [         1]
[route1            ] [to6               ] [jms:queue:pizzashackBillingInbound?transacted=true&replyTo=pizzashackBillingOu] [       317]
[route1            ] [log1              ] [log                                                                           ] [         0]
[route1            ] [to7               ] [log:myLog?showAll=true                                                        ] [         1]
[route1            ] [bean2             ] [bean[co.nz.pizzashack.integration.mapping.BillingFormatTransformer@3e817a89]  ] [         3]
[route1            ] [process1          ] [co.nz.pizzashack.integration.mapping.BillingResponseMergeProcessor@2693d86e   ] [         1]
[direct:billingInte] [wireTap1          ] [wireTap[direct:receiveBillingQueue]                                           ] [         1]
[direct:receiveBill] [to4               ] [log:input                                                                     ] [        19]
[direct:receiveBill] [recipientList1    ] [recipientList[header{header(destination)}]                                    ] [         9]

Exchange
---------------------------------------------------------------------------------------------------------------------------------------
Exchange[
	Id                  ID-david-59132-1391400143467-0-10
	ExchangePattern     InOnly
	Headers             {accountNo=111111, breadcrumbId=ID-david-59132-1391400143467-0-5, CamelJmsDeliveryMode=2, CamelRedelivered=false, CamelRedeliveryCounter=0, CamelSqlUpdateCount=1, code=000, destination=activiti:orderBillingProcess:receiveBillingResult, JMSCorrelationID=Camel-ID-david-59132-1391400143467-0-7, JMSDeliveryMode=2, JMSDestination=queue://pizzashackBillingOutbound, JMSExpiration=0, JMSMessageID=ID:david-60622-1391379770476-1:20392:1:1:1, JMSPriority=4, JMSRedelivered=false, JMSReplyTo=null, JMSTimestamp=1391400266105, JMSType=null, JMSXGroupID=null, JMSXUserID=null, messageId=50480, transactionNo=2afd47d8-3275-4a85-9398-a6168ac2f992}
	BodyType            co.nz.pizzashack.data.dto.BillingDto
	Body                <?xml version="1.0" encoding="UTF-8" standalone="yes"?><billingRequest>    <billingRequestId>50480</billingRequestId>    <orderNo>32255c96-f798-42e9-a5f4-6ab18ef9b090</orderNo>    <billingCode>000</billingCode>    <billingMessage>null</billingMessage>    <billingTime>2014-02-03 04:04:25</billingTime>    <billingAmount>162.00</billingAmount>    <account>        <paymode>credit</paymode>        <accountNo>111111</accountNo>        <expireDate>2019-06-24</expireDate>        <securityNo>111</securityNo>    </account></billingRequest>
]

Stacktrace
---------------------------------------------------------------------------------------------------------------------------------------
java.lang.NullPointerException
	at org.activiti.camel.ActivitiProducer.signal(ActivitiProducer.java:76)[activiti-camel-5.14.jar:5.14]
	at org.activiti.camel.ActivitiProducer.process(ActivitiProducer.java:60)[activiti-camel-5.14.jar:5.14]
	at org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge.process(AsyncProcessorConverterHelper.java:61)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:398)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:191)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.MulticastProcessor.doProcessSequential(MulticastProcessor.java:573)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.MulticastProcessor.doProcessSequential(MulticastProcessor.java:506)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.MulticastProcessor.process(MulticastProcessor.java:215)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.RecipientList.sendToRecipientList(RecipientList.java:153)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.RecipientList.process(RecipientList.java:112)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.Pipeline.process(Pipeline.java:118)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.Pipeline.process(Pipeline.java:80)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:72)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:398)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:191)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.Pipeline.process(Pipeline.java:118)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.Pipeline.process(Pipeline.java:80)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:191)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.component.direct.DirectProducer.process(DirectProducer.java:51)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:398)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:191)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.util.AsyncProcessorHelper.process(AsyncProcessorHelper.java:105)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:87)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.WireTapProcessor$1.call(WireTapProcessor.java:98)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.WireTapProcessor$1.call(WireTapProcessor.java:94)[camel-core-2.12.2.jar:2.12.2]
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)[:1.7.0_45]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)[:1.7.0_45]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)[:1.7.0_45]
	at java.lang.Thread.run(Thread.java:744)[:1.7.0_45]
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_RU_EXECUTION 
    set
        REV_ = ?,
        BUSINESS_KEY_ = ?,
        PROC_DEF_ID_ = ?,
        ACT_ID_ = ?,
        IS_ACTIVE_ = ?,
        IS_CONCURRENT_ = ?,
        IS_SCOPE_ = ?,
        IS_EVENT_SCOPE_ = ?,
        PARENT_ID_ = ?,
        SUPER_EXEC_ = ?,
        SUSPENSION_STATE_ = ?,
        CACHED_ENT_STATE_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_TASK 
    where
        ID_ = ? 
        and REV_ = ?
2014-02-03 17:04:26,179 [qtp793057417-39] INFO  OrderProcessDSImpl             - doFillinBillingAccount end:{} 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 17:04:26,181 [qtp793057417-39] INFO  OrderProcessDSImpl             - process pending, build pending Activity:{} 
2014-02-03 17:04:26,183 [qtp793057417-39] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:123, activeProcessDefinitionId:orderBillingProcess:1:7, createTime:1970-01-01 05:04:24, completeTime:null, executionId:123, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-02-03 17:04:26,191 [qtp793057417-39] INFO  OrderProcessAccessor           - get OrderProcessDto from flow:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:123, activeProcessDefinitionId:orderBillingProcess:1:7, createTime:1970-01-01 05:04:24, completeTime:null, executionId:123, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
2014-02-03 17:04:26,191 [qtp793057417-39] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 17:04:26,191 [qtp793057417-39] INFO  ActivitiFacade                 - executionId: 123, processDefinitionId: orderBillingProcess:1:7
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 17:04:26,196 [qtp793057417-39] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:receiveBillingResult, name:Receive Billing Result, type:receiveTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway1, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow12:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:receiveBillingResult, name:Receive Billing Result, type:receiveTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
2014-02-03 17:04:26,196 [qtp793057417-39] INFO  OrderProcessAccessor           - *************************pending on receiveBillingResponse task:{}
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 17:04:26,208 [qtp793057417-39] INFO  BillingRespExecutionListener   - BillingRespExecutionListener execute start:{}
2014-02-03 17:04:26,210 [qtp793057417-39] INFO  BillingRespExecutionListener   - get billing after integration:co.nz.pizzashack.data.dto.BillingDto(billingRequestId:50480, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, billingCode:000, billingMessage:null, billingTime:2014-02-03 04:04:25, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111))
2014-02-03 17:04:26,210 [qtp793057417-39] INFO  BillingRespExecutionListener   - activitiProcessDefinitionId:orderBillingProcess:1:7
2014-02-03 17:04:26,210 [qtp793057417-39] INFO  BillingRespExecutionListener   - activitiProcesssInstanceId:123
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-02-03 17:04:26,220 [qtp793057417-39] INFO  BillingRespExecutionListener   - Key : camelBody Value : co.nz.pizzashack.data.dto.BillingDto(billingRequestId:50480, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, billingCode:000, billingMessage:null, billingTime:2014-02-03 04:04:25, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111))
2014-02-03 17:04:26,221 [qtp793057417-39] INFO  BillingRespExecutionListener   - Key : billingProcessStatus Value : 0
2014-02-03 17:04:26,221 [qtp793057417-39] INFO  BillingRespExecutionListener   - Key : billingTransBean Value : co.nz.pizzashack.data.dto.BillingDto(billingRequestId:50480, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, billingCode:000, billingMessage:null, billingTime:2014-02-03 04:04:25, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111))
2014-02-03 17:04:26,221 [qtp793057417-39] INFO  BillingRespExecutionListener   - Key : orderTransBean Value : co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:123, activeProcessDefinitionId:orderBillingProcess:1:7, createTime:1970-01-01 05:04:24, completeTime:null, executionId:123, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
2014-02-03 17:04:26,221 [qtp793057417-39] INFO  BillingRespExecutionListener   - Key : indenpendentProcess Value : false
Hibernate: 
    select
        * 
    from
        ACT_HI_PROCINST 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RU_JOB J     
    where
        J.EXECUTION_ID_ = ?
Hibernate: 
    select
        *      
    from
        ACT_RU_EVENT_SUBSCR     
    where
        (
            EXECUTION_ID_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
2014-02-03 17:04:26,237 [qtp793057417-39] INFO  illingProcessExecutionListener - **********************after billing process, billingDto:co.nz.pizzashack.data.dto.BillingDto(billingRequestId:50480, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, billingCode:000, billingMessage:null, billingTime:2014-02-03 04:04:25, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111)) 
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-02-03 17:04:26,243 [qtp793057417-39] INFO  illingProcessExecutionListener - after core process, orderProcess:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:123, activeProcessDefinitionId:orderBillingProcess:1:7, createTime:1970-01-01 05:04:24, completeTime:null, executionId:123, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
after delivered: co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:delivered, orderTime:2014-02-03 04:04:24, deliverTime:2014-02-03 04:04:26)
2014-02-03 17:04:26,286 [qtp793057417-39] INFO  EmailExecutionListener         - EmailExecutionListener start:{} 
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 17:04:26,288 [qtp793057417-39] INFO  EmailExecutionListener         - prepare email info for delivered case:{} 
2014-02-03 17:04:26,289 [qtp793057417-39] INFO  EmailExecutionListener         - EmailExecutionListener end:{} 
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
2014-02-03 17:04:31,706 [qtp793057417-39] INFO  EndExecutionListener           - EndExecutionListener start:{} 
2014-02-03 17:04:31,708 [qtp793057417-39] INFO  EndExecutionListener           - update order as delivered:{} 
2014-02-03 17:04:31,708 [qtp793057417-39] INFO  EndExecutionListener           - EndExecutionListener end:{} 
Hibernate: 
    select
        * 
    from
        ACT_HI_PROCINST 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_PROCINST 
    set
        PROC_DEF_ID_ = ?,
        BUSINESS_KEY_ = ?,
        START_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        END_ACT_ID_ = ?,
        DELETE_REASON_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_PROCINST 
    set
        PROC_DEF_ID_ = ?,
        BUSINESS_KEY_ = ?,
        START_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        END_ACT_ID_ = ?,
        DELETE_REASON_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_IDENTITYLINK 
    where
        ID_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ? 
        and REV_ = ?
2014-02-03 17:04:31,749 [qtp793057417-39] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:delivered, orderTime:2014-02-03 04:04:24, deliverTime:2014-02-03 04:04:26), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:2014-02-03 04:04:31, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        t_order_process 
    set
        active_process_definition_id=?,
        active_process_instance_id=?,
        complete_time=?,
        create_time=?,
        execution_id=?,
        main_process_definition_id=?,
        main_process_instance_id=?,
        operator_id=?,
        order_id=? 
    where
        order_process_id=?
Hibernate: 
    update
        t_order 
    set
        cust_id=?,
        deliver_time=?,
        order_no=?,
        order_time=?,
        payment_remarks=?,
        payment_status=?,
        quantity=?,
        ship_address=?,
        status=?,
        total_price=? 
    where
        order_id=?
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
2014-02-03 17:04:31,754 [qtp793057417-39] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@1b98d3f2[orderProcessId=2,executionId=59,mainProcessInstanceId=59,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=59,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=17:04:24,completeTime=Mon Feb 03 17:04:31 NZDT 2014] 
2014-02-03 17:04:31,754 [qtp793057417-39] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@1b98d3f2[orderProcessId=2,executionId=59,mainProcessInstanceId=59,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=59,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=17:04:24,completeTime=Mon Feb 03 17:04:31 NZDT 2014]
2014-02-03 17:04:31,754 [qtp793057417-39] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@374bdc15[orderId=2,orderNo=32255c96-f798-42e9-a5f4-6ab18ef9b090,quantity=6,status=7,paymentStatus=1,deliverTime=<null>,totalPrice=162.00,orderTime=2014-02-03 17:04:24.607]
2014-02-03 17:04:31,755 [qtp793057417-39] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@47707b55[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 17:04:31,755 [qtp793057417-39] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-02-03 17:04:31,755 [qtp793057417-39] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@7a984c97[orderPizzashackId=3,totalPrice=50.00,qty=2]
2014-02-03 17:04:31,755 [qtp793057417-39] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00)
2014-02-03 17:04:31,755 [qtp793057417-39] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@24cc8c62[orderPizzashackId=4,totalPrice=112.00,qty=4]
2014-02-03 17:04:31,755 [qtp793057417-39] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)
2014-02-03 17:04:31,756 [qtp793057417-39] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:delivered, orderTime:2014-02-03 04:04:24, deliverTime:null)
2014-02-03 17:04:31,756 [qtp793057417-39] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@68fd8a41[userId=4,username=general,password=MTIzNDU2,createTime=17:02:25]
2014-02-03 17:04:31,756 [qtp793057417-39] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)
2014-02-03 17:04:31,756 [qtp793057417-39] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:delivered, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:2014-02-03 04:04:31, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
2014-02-03 17:04:31,757 [qtp793057417-39] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:delivered, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:2014-02-03 04:04:31, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
2014-02-03 17:04:31,757 [qtp793057417-39] INFO  OrderProcessAccessor           - after merge orderProcessModel:co.nz.pizzashack.data.model.OrderProcessModel@1b98d3f2[orderProcessId=2,executionId=59,mainProcessInstanceId=59,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=59,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=17:04:24,completeTime=Mon Feb 03 17:04:31 NZDT 2014] 
2014-02-03 17:04:31,758 [qtp793057417-39] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:delivered, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:2014-02-03 04:04:31, executionId:59, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:receiveBillingResult, name:Receive Billing Result, type:receiveTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway1, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow12:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:receiveBillingResult, name:Receive Billing Result, type:receiveTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
2014-02-03 17:04:31,758 [qtp793057417-39] INFO  OrderProcessDSImpl             - fillinBillingAccount end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:delivered, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:2014-02-03 04:04:31, executionId:59, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:receiveBillingResult, name:Receive Billing Result, type:receiveTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway1, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow12:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:receiveBillingResult, name:Receive Billing Result, type:receiveTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
2014-02-03 17:04:31,760 [qtp793057417-39] INFO  BillingInboundProcessor        - get pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:receiveBillingResult, name:Receive Billing Result, type:receiveTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway1, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow12:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:receiveBillingResult, name:Receive Billing Result, type:receiveTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
2014-02-03 17:04:31,760 [qtp793057417-39] INFO  BillingInboundProcessor        - billingResponse:co.nz.pizzashack.integration.ws.BillingResponse@2ad05ace[orderNo=32255c96-f798-42e9-a5f4-6ab18ef9b090,billingCode=000,billingMessage=<null>] 
2014-02-03 17:04:31,760 [qtp793057417-39] INFO  BillingInboundProcessor        - BillingInboundProcessor end:{} 
2014-02-03 17:04:48,389 [qtp793057417-35] INFO  PizzashackAPIImpl              - getOrdersforCustomer start:david.yuan124@gmail.com
2014-02-03 17:04:48,390 [qtp793057417-35] INFO  OrderDSImpl                    - getOrderByCustomer start:david.yuan124@gmail.com 
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_,
        ordermodel0_.cust_id as cust11_4_,
        ordermodel0_.deliver_time as deliver2_4_,
        ordermodel0_.order_no as order3_4_,
        ordermodel0_.order_time as order4_4_,
        ordermodel0_.payment_remarks as payment5_4_,
        ordermodel0_.payment_status as payment6_4_,
        ordermodel0_.quantity as quantity4_,
        ordermodel0_.ship_address as ship8_4_,
        ordermodel0_.status as status4_,
        ordermodel0_.total_price as total10_4_ 
    from
        t_order ordermodel0_ cross 
    join
        t_customer customermo1_ 
    where
        ordermodel0_.cust_id=customermo1_.cust_id 
        and customermo1_.email=?
2014-02-03 17:04:48,404 [qtp793057417-35] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@6ef42238[orderId=1,orderNo=059cbd85-517f-430a-824d-a72c91b87d3e,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 17:04:16.077]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 17:04:48,406 [qtp793057417-35] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@65f4f55b[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 17:04:48,406 [qtp793057417-35] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-02-03 17:04:48,406 [qtp793057417-35] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:null, qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 04:04:16, deliverTime:null)
2014-02-03 17:04:48,407 [qtp793057417-35] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@5df2c370[orderId=2,orderNo=32255c96-f798-42e9-a5f4-6ab18ef9b090,quantity=6,status=7,paymentStatus=1,deliverTime=<null>,totalPrice=162.00,orderTime=2014-02-03 17:04:24.607]
2014-02-03 17:04:48,408 [qtp793057417-35] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@65f4f55b[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 17:04:48,408 [qtp793057417-35] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-02-03 17:04:48,408 [qtp793057417-35] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:null, qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:delivered, orderTime:2014-02-03 04:04:24, deliverTime:null)
2014-02-03 17:04:48,408 [qtp793057417-35] INFO  OrderDSImpl                    - getOrderByCustomer end:{} 
2014-02-03 17:04:48,409 [qtp793057417-35] INFO  PizzashackAPIImpl              - getOrdersforCustomer end:{}
, createTime:2014-02-03 04:02:29)
2014-02-03 17:02:29,881 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-02-03 04:02:29)
2014-02-03 17:02:29,881 [main           ] INFO  WorkflowInitialDataSetup       - deploy core process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-02-03 04:02:29) 
2014-02-03 17:02:29,882 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-02-03 17:02:29,883 [main           ] INFO  BpmnDeployer                   - Processing resource bpmn/OrderlocalProcess.bpmn20.xml
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-02-03 17:02:30,035 [main           ] INFO  RulesDeployer                  - Processing resource bpmn/OrderlocalProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 17:02:30,043 [main           ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderlocalProcess:1:15]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-02-03 17:02:30,044 [main           ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@692704e9[wfId=3,name=orderlocalProcess,deployId=12,processDefinitionKey=orderlocalProcess,processDefinitionId=orderlocalProcess:1:15,createTime=Mon Feb 03 17:02:29 NZDT 2014]
2014-02-03 17:02:30,045 [main           ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 04:02:29)
2014-02-03 17:02:30,045 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 04:02:29)
2014-02-03 17:02:30,045 [main           ] INFO  WorkflowInitialDataSetup       - deploy local main process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 04:02:29) 
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
2014-02-03 17:02:30,171 [main           ] INFO  SimpleUrlHandlerMapping        - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2014-02-03 17:02:30,173 [main           ] INFO  SimpleUrlHandlerMapping        - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler]
2014-02-03 17:02:30,616 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/logout],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LogoutController.logout(javax.servlet.http.HttpSession)
2014-02-03 17:02:30,616 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/login],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LoginController.showLoginPage(org.springframework.ui.Model)
2014-02-03 17:02:30,616 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/login],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LoginController.handleLogin(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws co.nz.pizzashack.AuthenticationException
2014-02-03 17:02:30,617 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/index],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.IndexController.index(org.springframework.ui.Model,co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-02-03 17:02:30,618 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,618 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/search],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.search(co.nz.pizzashack.data.dto.UserDto,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,618 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.create(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 17:02:30,619 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.update(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 17:02:30,619 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/{userId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,619 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/createUser],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public co.nz.pizzashack.data.dto.UserDto co.nz.pizzashack.controller.UserController.createUser(co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-02-03 17:02:30,619 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,619 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/update/{userId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,619 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/{userId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.deleteUser(java.lang.Long) throws java.lang.Exception
2014-02-03 17:02:30,619 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/check/{userName}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.checkUser(java.lang.String) throws java.lang.Exception
2014-02-03 17:02:30,620 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/adminIndex],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.AdminIndexController.index(org.springframework.ui.Model,co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-02-03 17:02:30,621 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,621 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/{deptId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.delete(java.lang.Long) throws java.lang.Exception
2014-02-03 17:02:30,621 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/search],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.search(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,621 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.create(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 17:02:30,622 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.update(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 17:02:30,622 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/{deptId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,622 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/selectdepts],methods=[GET],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.util.Set<co.nz.pizzashack.data.dto.DepartmentDto> co.nz.pizzashack.controller.DepartmentController.select() throws java.lang.Exception
2014-02-03 17:02:30,622 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,622 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/update/{deptId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,623 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/{orderProcessId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.showOrderProcess(java.lang.Long,org.springframework.ui.Model,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-02-03 17:02:30,623 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/claimReview/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.claimReviewTask(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-02-03 17:02:30,623 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/review],methods=[POST],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.reviewOrder(co.nz.pizzashack.data.dto.OrderReviewRecordDto,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-02-03 17:02:30,624 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderQuery/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderQueryController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,624 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderQuery/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderQueryController.show(java.lang.String,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,624 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderQuery/showHistory/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.util.Set<co.nz.pizzashack.data.dto.ProcessActivityDto> co.nz.pizzashack.controller.OrderQueryController.showHistory(java.lang.String) throws java.lang.Exception
2014-02-03 17:02:30,625 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,625 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/{staffId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.delete(java.lang.Long) throws java.lang.Exception
2014-02-03 17:02:30,626 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.create(co.nz.pizzashack.data.dto.StaffDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 17:02:30,626 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.update(co.nz.pizzashack.data.dto.StaffDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 17:02:30,626 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/{staffId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,626 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,626 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/update/{staffId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 17:02:30,648 [main           ] INFO  ContextLoader                  - Root WebApplicationContext: initialization completed in 12912 ms
2014-02-03 17:02:30.652:INFO:oejsh.ContextHandler:started o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
Feb 03, 2014 5:02:30 PM com.sun.jersey.api.core.PackagesResourceConfig init
INFO: Scanning for root resource and provider classes in the packages:
  co.nz.pizzashack.integration.api
Feb 03, 2014 5:02:30 PM com.sun.jersey.api.core.ScanningResourceConfig logClasses
INFO: Root resource classes found:
  class co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl
Feb 03, 2014 5:02:30 PM com.sun.jersey.api.core.ScanningResourceConfig init
INFO: No provider classes found.
Feb 03, 2014 5:02:30 PM com.sun.jersey.spi.spring.container.servlet.SpringServlet getContext
INFO: Using default applicationContext
Feb 03, 2014 5:02:30 PM com.sun.jersey.spi.spring.container.SpringComponentProviderFactory registerSpringBeans
INFO: Registering Spring bean, pizzashackAPIImpl, of type co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl as a root resource class
Feb 03, 2014 5:02:30 PM com.sun.jersey.server.impl.application.WebApplicationImpl _initiate
INFO: Initiating Jersey application, version 'Jersey: 1.17.1 02/28/2013 12:47 PM'
Feb 03, 2014 5:02:31 PM com.sun.jersey.spi.inject.Errors processErrorMessages
WARNING: The following warnings have been detected with resource and/or provider classes:
  WARNING: A HTTP GET method, public javax.ws.rs.core.Response co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl.getOrderProcessByOrderNo(java.lang.String), should not consume any entity.
Feb 03, 2014 5:02:31 PM com.sun.jersey.spi.spring.container.servlet.SpringServlet getContext
INFO: Using default applicationContext
Feb 03, 2014 5:02:31 PM com.sun.jersey.spi.spring.container.SpringComponentProviderFactory registerSpringBeans
INFO: Registering Spring bean, pizzashackAPIImpl, of type co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl as a root resource class
Feb 03, 2014 5:02:31 PM com.sun.jersey.server.impl.application.WebApplicationImpl _initiate
INFO: Initiating Jersey application, version 'Jersey: 1.17.1 02/28/2013 12:47 PM'
Feb 03, 2014 5:02:31 PM com.sun.jersey.spi.inject.Errors processErrorMessages
WARNING: The following warnings have been detected with resource and/or provider classes:
  WARNING: A HTTP GET method, public javax.ws.rs.core.Response co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl.getOrderProcessByOrderNo(java.lang.String), should not consume any entity.
2014-02-03 17:02:31.336:INFO:/:Initializing Spring FrameworkServlet 'dispatcher'
2014-02-03 17:02:31,336 [main           ] INFO  DispatcherServlet              - FrameworkServlet 'dispatcher': initialization started
2014-02-03 17:02:31,353 [main           ] INFO  DispatcherServlet              - FrameworkServlet 'dispatcher': initialization completed in 17 ms
2014-02-03 17:02:31.365:INFO:oejs.AbstractConnector:Started SelectChannelConnector@0.0.0.0:8111
[INFO] Started Jetty Server
[INFO] Starting scanner at interval of 10 seconds.
2014-02-03 17:04:15,986 [ckOrderInbound]] INFO  orderProcessRoute              - Received message 51837
Hibernate: 
    SELECT
        COUNT(*) 
    FROM
        T_ORDER_REQUEST_HISTORY 
    WHERE
        processor_name = ? 
        AND message_id = ?
Hibernate: 
    INSERT 
    INTO
        T_ORDER_REQUEST_HISTORY
        (processor_name, message_id, created_at) 
    VALUES
        (?, ?, ?)
2014-02-03 17:04:15,999 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlUnmarshal start:{} <order>
  <address>25 mavon downs</address>
  <order-list>
    <order-details>
      <pizza-name>Garden Fresh</pizza-name>
      <quantity>4</quantity>
    </order-details>
    <order-details>
      <pizza-name>Chicken Parmesan</pizza-name>
      <quantity>10</quantity>
    </order-details>
  </order-list>
  <customer>
    <name>david</name>
    <email>david.yuan124@gmail.com</email>
  </customer>
</order>
orderDetailsDto: co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Garden Fresh, qty:4, totalPrice:0)
orderDetailsDto: co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)
2014-02-03 17:04:16,063 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlUnmarshal end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:null, orderNo:null, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:david, customerEmail:david.yuan124@gmail.com, level:null), address:25 mavon downs, status:null, orderTime:null, deliverTime:null)
2014-02-03 17:04:16,063 [ckOrderInbound]] INFO  OrderRequestProcessor          - orderRequestProcessor start:{} 
2014-02-03 17:04:16,064 [ckOrderInbound]] INFO  OrderRequestProcessor          - order request:co.nz.pizzashack.data.dto.OrderDto(orderId:null, orderNo:null, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:david, customerEmail:david.yuan124@gmail.com, level:null), address:25 mavon downs, status:null, orderTime:null, deliverTime:null) 
2014-02-03 17:04:16,064 [ckOrderInbound]] INFO  OrderRequestProcessor          - messageId:51837 
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
2014-02-03 17:04:16,066 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@c8c2fc5[userId=4,username=general,password=MTIzNDU2,createTime=17:02:25]
2014-02-03 17:04:16,070 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)
2014-02-03 17:04:16,070 [ckOrderInbound]] INFO  OrderRequestProcessor          - default operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25) 
2014-02-03 17:04:16,071 [ckOrderInbound]] INFO  OrderProcessDSImpl             - startOrderProcess start:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.process_definition_key=? 
        and workflowmo0_.category=? limit ?
Hibernate: 
    insert 
    into
        t_order
        (order_id, cust_id, deliver_time, order_no, order_time, payment_remarks, payment_status, quantity, ship_address, status, total_price) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 17:04:16,084 [ckOrderInbound]] INFO  ActivitiFacade                 - startProcessInstance start:{}
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
2014-02-03 17:04:16,103 [ckOrderInbound]] INFO  ActivitiFacade                 - startProcessInstance end:{}
Hibernate: 
    insert 
    into
        t_order_process
        (order_process_id, active_process_definition_id, active_process_instance_id, complete_time, create_time, execution_id, main_process_definition_id, main_process_instance_id, operator_id, order_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2014-02-03 17:04:16,110 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@5168c464[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=Mon Feb 03 17:04:16 NZDT 2014,completeTime=<null>]
2014-02-03 17:04:16,127 [ckOrderInbound]] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@a585c32[orderId=1,orderNo=059cbd85-517f-430a-824d-a72c91b87d3e,quantity=<null>,status=0,paymentStatus=0,deliverTime=<null>,totalPrice=<null>,orderTime=Mon Feb 03 17:04:16 NZDT 2014]
2014-02-03 17:04:16,128 [ckOrderInbound]] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 04:04:16, deliverTime:null)
2014-02-03 17:04:16,129 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@1d121057[userId=4,username=general,password=MTIzNDU2,createTime=17:02:25]
2014-02-03 17:04:16,129 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)
2014-02-03 17:04:16,135 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 04:04:16, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 04:04:16, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
2014-02-03 17:04:16,136 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 04:04:16, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 04:04:16, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
2014-02-03 17:04:16,149 [ckOrderInbound]] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 17:04:16,149 [ckOrderInbound]] INFO  ActivitiFacade                 - executionId: 16, processDefinitionId: orderlocalProcess:1:15
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 17:04:16,177 [ckOrderInbound]] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 17:04:16,184 [ckOrderInbound]] INFO  OrderProcessAccessor           - assign operator[4] to task[Data entry]
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    insert 
    into
        ACT_RU_IDENTITYLINK
        (ID_, REV_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_, PROC_DEF_ID_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_IDENTITYLINK
        (ID_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_)     
    values
        (?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_TASK      
    SET
        REV_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        PRIORITY_ = ?,
        CREATE_TIME_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        DELEGATION_ = ?,
        EXECUTION_ID_ = ?,
        PROC_DEF_ID_ = ?,
        DESCRIPTION_ = ?,
        DUE_DATE_ = ?,
        SUSPENSION_STATE_ = ?      
    where
        ID_= ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
2014-02-03 17:04:16,205 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 04:04:16, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 04:04:16, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
2014-02-03 17:04:16,206 [ckOrderInbound]] INFO  OrderProcessDSImpl             - startOrderProcess end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 04:04:16, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 04:04:16, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
2014-02-03 17:04:16,208 [ckOrderInbound]] INFO  OrderRequestProcessor          - after start process:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 04:04:16, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 04:04:16, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
2014-02-03 17:04:16,208 [ckOrderInbound]] INFO  OrderProcessDSImpl             - dataEntry start:059cbd85-517f-430a-824d-a72c91b87d3e
2014-02-03 17:04:16,208 [ckOrderInbound]] INFO  OrderProcessDSImpl             - getOrderProcessByOrderNo start************************************
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 17:04:16,218 [ckOrderInbound]] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@7b6c4980[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=17:04:16,completeTime=<null>] 
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_,
        customermo0_.address as address2_,
        customermo0_.credits as credits2_,
        customermo0_.customer_name as customer4_2_,
        customermo0_.email as email2_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.email=? limit ?
2014-02-03 17:04:16,224 [ckOrderInbound]] INFO  CustomerConverter              - toModel start:{} co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:david, customerEmail:david.yuan124@gmail.com, level:null)
2014-02-03 17:04:16,226 [ckOrderInbound]] INFO  CustomerConverter              - toModel end:{} co.nz.pizzashack.data.model.CustomerModel@23b5ab4c[custId=<null>,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
Hibernate: 
    insert 
    into
        t_customer
        (cust_id, address, credits, customer_name, email) 
    values
        (null, ?, ?, ?, ?)
2014-02-03 17:04:16,229 [ckOrderInbound]] INFO  OrderProcessDSImpl             - orderDetailsSet size:2 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
2014-02-03 17:04:16,238 [ckOrderInbound]] INFO  OrderProcessDSImpl             - added orderPizzashackModel:co.nz.pizzashack.data.model.OrderPizzashackModel@369b4965[orderPizzashackId=<null>,totalPrice=0,qty=4] 
Hibernate: 
    insert 
    into
        t_order_pizzashack
        (order_pizza_id, order_id, pizzashack_id, qty, total_price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
2014-02-03 17:04:16,245 [ckOrderInbound]] INFO  OrderProcessDSImpl             - added orderPizzashackModel:co.nz.pizzashack.data.model.OrderPizzashackModel@2afcc578[orderPizzashackId=<null>,totalPrice=0,qty=10] 
Hibernate: 
    insert 
    into
        t_order_pizzashack
        (order_pizza_id, order_id, pizzashack_id, qty, total_price) 
    values
        (null, ?, ?, ?, ?)
2014-02-03 17:04:16,246 [ckOrderInbound]] INFO  OrderProcessDSImpl             - after add detailsDto, size in model:2 
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        E.BUSINESS_KEY_ = ?                                                                                 
        and RES.PROC_DEF_ID_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                    
        and RES.ASSIGNEE_ = ?                                                                        
        and E.BUSINESS_KEY_ = ?
2014-02-03 17:04:16,251 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@7b6c4980[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=17:04:16,completeTime=<null>]
2014-02-03 17:04:16,256 [ckOrderInbound]] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@3aae94ed[orderId=1,orderNo=059cbd85-517f-430a-824d-a72c91b87d3e,quantity=0,status=0,paymentStatus=0,deliverTime=<null>,totalPrice=0,orderTime=2014-02-03 17:04:16.077]
2014-02-03 17:04:16,259 [ckOrderInbound]] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@23b5ab4c[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 17:04:16,268 [ckOrderInbound]] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-02-03 17:04:16,272 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@369b4965[orderPizzashackId=1,totalPrice=0,qty=4]
2014-02-03 17:04:16,280 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0)
2014-02-03 17:04:16,280 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@2afcc578[orderPizzashackId=2,totalPrice=0,qty=10]
2014-02-03 17:04:16,281 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)
2014-02-03 17:04:16,281 [ckOrderInbound]] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 04:04:16, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 17:04:16,286 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@598c8745[userId=4,username=general,password=MTIzNDU2,createTime=17:02:25]
2014-02-03 17:04:16,287 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)
2014-02-03 17:04:16,287 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 04:04:16, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:16, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        PARENT_TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE 
    where
        TASK_ID_ =     ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
2014-02-03 17:04:16,316 [ckOrderInbound]] INFO  ainTransitionExecutionListener - orderMainUserTaskExecutionListener start:{} 
2014-02-03 17:04:16,316 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity id:orderCoreCallactivity
2014-02-03 17:04:16,316 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity name:Core process
2014-02-03 17:04:16,316 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity type:callActivity
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
start calculate: co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 04:04:16, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:16, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
2014-02-03 17:04:16,519 [ckOrderInbound]] INFO  PizzashackCaculator            - caculate start:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 04:04:16, deliverTime:null) 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 17:04:16,527 [ckOrderInbound]] INFO  PizzashackCaculator            - caculate end:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 04:04:16, deliverTime:null) 
after calculation: co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 04:04:16, deliverTime:null)
2014-02-03 17:04:16,528 [ckOrderInbound]] INFO  culationMergeExecutionListener - CaculationMergeExecutionListener start
2014-02-03 17:04:16,529 [ckOrderInbound]] INFO  culationMergeExecutionListener - after calculation, orderProcess:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 04:04:16, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:16, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
2014-02-03 17:04:16,529 [ckOrderInbound]] INFO  OrderProcessAccessor           - merge calculation result
2014-02-03 17:04:16,529 [ckOrderInbound]] INFO  OrderProcessAccessor           - total price:390.00 
2014-02-03 17:04:16,529 [ckOrderInbound]] INFO  OrderProcessAccessor           - qty:14 
2014-02-03 17:04:16,529 [ckOrderInbound]] INFO  OrderProcessAccessor           - orderDetailsSet.size():2
2014-02-03 17:04:16,529 [ckOrderInbound]] INFO  culationMergeExecutionListener - CaculationMergeExecutionListener end
total qty: 14
after autoreview: 2
reviewTransBean: co.nz.pizzashack.data.dto.OrderReviewRecordDto(reviewRecordId:null, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, content:order number is more than 10 but less than 30, reviewResult:pending, createTime:2014-02-03 04:04:16, reviewer:null)
2014-02-03 17:04:16,605 [ckOrderInbound]] INFO  oManualReviewExecutionListener - ToManualReviewExecutionListener start:{} 
2014-02-03 17:04:16,605 [ckOrderInbound]] INFO  oManualReviewExecutionListener - eventName:take 
2014-02-03 17:04:16,605 [ckOrderInbound]] INFO  oManualReviewExecutionListener - activitiProcessDefinitionId:orderCoreProcess:1:11
2014-02-03 17:04:16,605 [ckOrderInbound]] INFO  oManualReviewExecutionListener - activitiProcesssInstanceId:30
2014-02-03 17:04:16,606 [ckOrderInbound]] INFO  oManualReviewExecutionListener - get orderReviewRecord:co.nz.pizzashack.data.dto.OrderReviewRecordDto(reviewRecordId:null, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, content:order number is more than 10 but less than 30, reviewResult:pending, createTime:2014-02-03 04:04:16, reviewer:null) 
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_IDENTITYLINK
        (ID_, REV_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_, PROC_DEF_ID_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_IDENTITYLINK
        (ID_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_)     
    values
        (?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    update
        ACT_RU_EXECUTION 
    set
        REV_ = ?,
        BUSINESS_KEY_ = ?,
        PROC_DEF_ID_ = ?,
        ACT_ID_ = ?,
        IS_ACTIVE_ = ?,
        IS_CONCURRENT_ = ?,
        IS_SCOPE_ = ?,
        IS_EVENT_SCOPE_ = ?,
        PARENT_ID_ = ?,
        SUPER_EXEC_ = ?,
        SUSPENSION_STATE_ = ?,
        CACHED_ENT_STATE_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_TASK 
    where
        ID_ = ? 
        and REV_ = ?
2014-02-03 17:04:16,647 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 04:04:16, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 05:04:16, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-02-03 17:04:16,659 [ckOrderInbound]] INFO  OrderProcessAccessor           - get OrderProcessDto from flow:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 04:04:16, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 05:04:16, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
2014-02-03 17:04:16,659 [ckOrderInbound]] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 17:04:16,659 [ckOrderInbound]] INFO  ActivitiFacade                 - executionId: 30, processDefinitionId: orderCoreProcess:1:11
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 17:04:16,663 [ckOrderInbound]] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 17:04:16,666 [ckOrderInbound]] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo start:{}
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 17:04:16,667 [ckOrderInbound]] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo end:{}
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
2014-02-03 17:04:16,669 [ckOrderInbound]] INFO  OrderProcessAccessor           - after merge orderProcessModel:co.nz.pizzashack.data.model.OrderProcessModel@7b6c4980[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=17:04:16,completeTime=<null>] 
2014-02-03 17:04:16,670 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 04:04:16, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 05:04:16, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
2014-02-03 17:04:16,671 [ckOrderInbound]] INFO  OrderProcessDSImpl             - dataEntry end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 04:04:16, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 05:04:16, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
Hibernate: 
    update
        t_order_process 
    set
        active_process_definition_id=?,
        active_process_instance_id=?,
        complete_time=?,
        create_time=?,
        execution_id=?,
        main_process_definition_id=?,
        main_process_instance_id=?,
        operator_id=?,
        order_id=? 
    where
        order_process_id=?
Hibernate: 
    update
        t_order 
    set
        cust_id=?,
        deliver_time=?,
        order_no=?,
        order_time=?,
        payment_remarks=?,
        payment_status=?,
        quantity=?,
        ship_address=?,
        status=?,
        total_price=? 
    where
        order_id=?
Hibernate: 
    update
        t_order_pizzashack 
    set
        order_id=?,
        pizzashack_id=?,
        qty=?,
        total_price=? 
    where
        order_pizza_id=?
Hibernate: 
    update
        t_order_pizzashack 
    set
        order_id=?,
        pizzashack_id=?,
        qty=?,
        total_price=? 
    where
        order_pizza_id=?
2014-02-03 17:04:16,684 [ckOrderInbound]] INFO  OrderRequestProcessor          - after dataEntry:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 04:04:16, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 05:04:16, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
2014-02-03 17:04:16,684 [ckOrderInbound]] INFO  OrderConverter                 - toModel start:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 04:04:16, deliverTime:null)
2014-02-03 17:04:16,685 [ckOrderInbound]] INFO  OrderConverter                 - toModel end:{} co.nz.pizzashack.data.model.OrderModel@7898e7e0[orderId=<null>,orderNo=059cbd85-517f-430a-824d-a72c91b87d3e,quantity=14,status=<null>,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=<null>]
Hibernate: 
    select
        orderreque0_.message_id as message1_0_0_,
        orderreque0_.created_at as created2_0_0_,
        orderreque0_.order_id as order4_0_0_,
        orderreque0_.processor_name as processor3_0_0_ 
    from
        t_order_request_history orderreque0_ 
    where
        orderreque0_.message_id=?
2014-02-03 17:04:16,686 [ckOrderInbound]] INFO  OrderRequestProcessor          - orderRequestProcessor end:{} 
2014-02-03 17:04:16,688 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlMarshal start:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 04:04:16, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 05:04:16, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
2014-02-03 17:04:16,697 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - pendingActivity:{} co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
2014-02-03 17:04:16,697 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - customerDto:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-02-03 17:04:16,714 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlMarshal end:{} <order-process>
  <process-id>1</process-id>
  <create-time>1970-01-01 05:04:16</create-time>
  <complete-time>null</complete-time>
  <operator>general</operator>
  <order>
    <order-no>059cbd85-517f-430a-824d-a72c91b87d3e</order-no>
    <address>25 mavon downs</address>
    <quantity>14</quantity>
    <total-price>390.00</total-price>
    <status>pendingOnReview</status>
    <order-time>2014-02-03 04:04:16</order-time>
    <deliver-time>null</deliver-time>
    <order-list>
      <order-details>
        <pizza-name>Garden Fresh</pizza-name>
        <quantity>4</quantity>
        <total-price>140.00</total-price>
      </order-details>
      <order-details>
        <pizza-name>Chicken Parmesan</pizza-name>
        <quantity>10</quantity>
        <total-price>250.00</total-price>
      </order-details>
    </order-list>
  </order>
  <customer>
    <name>david</name>
    <email>david.yuan124@gmail.com</email>
  </customer>
  <pending-activity>
    <name>Manual underwriting</name>
    <type>userTask</type>
    <assignee>null</assignee>
  </pending-activity>
</order-process>
2014-02-03 17:04:16,716 [ckOrderInbound]] INFO  output                         - Exchange[ExchangePattern: InOnly, BodyType: String, Body: <order-process>  <process-id>1</process-id>  <create-time>1970-01-01 05:04:16</create-time>  <complete-time>null</complete-time>  <operator>general</operator>  <order>    <order-no>059cbd85-517f-430a-824d-a72c91b87d3e</order-no>    <address>25 mavon downs</address>    <quantity>14</quantity>    <total-price>390.00</total-price>    <status>pendingOnReview</status>    <order-time>2014-02-03 04:04:16</order-time>    <deliver-time>null</deliver-time>    <order-list>      <order-details>        <pizza-name>Garden Fresh</pizza-name>        <quantity>4</quantity>        <total-price>140.00</total-price>      </order-details>      <order-details>        <pizza-name>Chicken Parmesan</pizza-name>        <quantity>10</quantity>        <total-price>250.00</total-price>      </order-details>    </order-list>  </order>  <customer>    <name>david</name>    <email>david.yuan124@gmail.com</email>  </customer>  <pending-activity>    <name>Manual underwriting</name>    <type>userTask</type>    <assignee>null</assignee>  </pending-activity></order-process>]
2014-02-03 17:04:16,762 [ckOrderInbound]] INFO  orderProcessRoute              - Signalled to stop route
2014-02-03 17:04:24,594 [ckOrderInbound]] INFO  orderProcessRoute              - Received message 55892
Hibernate: 
    SELECT
        COUNT(*) 
    FROM
        T_ORDER_REQUEST_HISTORY 
    WHERE
        processor_name = ? 
        AND message_id = ?
Hibernate: 
    INSERT 
    INTO
        T_ORDER_REQUEST_HISTORY
        (processor_name, message_id, created_at) 
    VALUES
        (?, ?, ?)
2014-02-03 17:04:24,597 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlUnmarshal start:{} <order>
  <address>25 mavon downs</address>
  <order-list>
    <order-details>
      <pizza-name>Chicken Parmesan</pizza-name>
      <quantity>2</quantity>
    </order-details>
    <order-details>
      <pizza-name>Spicy Italian</pizza-name>
      <quantity>4</quantity>
    </order-details>
  </order-list>
  <customer>
    <name>david</name>
    <email>david.yuan124@gmail.com</email>
  </customer>
</order>
orderDetailsDto: co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:2, totalPrice:0)
orderDetailsDto: co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Spicy Italian, qty:4, totalPrice:0)
2014-02-03 17:04:24,600 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlUnmarshal end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:null, orderNo:null, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:david, customerEmail:david.yuan124@gmail.com, level:null), address:25 mavon downs, status:null, orderTime:null, deliverTime:null)
2014-02-03 17:04:24,600 [ckOrderInbound]] INFO  OrderRequestProcessor          - orderRequestProcessor start:{} 
2014-02-03 17:04:24,601 [ckOrderInbound]] INFO  OrderRequestProcessor          - order request:co.nz.pizzashack.data.dto.OrderDto(orderId:null, orderNo:null, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:david, customerEmail:david.yuan124@gmail.com, level:null), address:25 mavon downs, status:null, orderTime:null, deliverTime:null) 
2014-02-03 17:04:24,601 [ckOrderInbound]] INFO  OrderRequestProcessor          - messageId:55892 
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
2014-02-03 17:04:24,603 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@1bbd616a[userId=4,username=general,password=MTIzNDU2,createTime=17:02:25]
2014-02-03 17:04:24,604 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)
2014-02-03 17:04:24,604 [ckOrderInbound]] INFO  OrderRequestProcessor          - default operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25) 
2014-02-03 17:04:24,604 [ckOrderInbound]] INFO  OrderProcessDSImpl             - startOrderProcess start:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.process_definition_key=? 
        and workflowmo0_.category=? limit ?
Hibernate: 
    insert 
    into
        t_order
        (order_id, cust_id, deliver_time, order_no, order_time, payment_remarks, payment_status, quantity, ship_address, status, total_price) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 17:04:24,609 [ckOrderInbound]] INFO  ActivitiFacade                 - startProcessInstance start:{}
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
2014-02-03 17:04:24,614 [ckOrderInbound]] INFO  ActivitiFacade                 - startProcessInstance end:{}
Hibernate: 
    insert 
    into
        t_order_process
        (order_process_id, active_process_definition_id, active_process_instance_id, complete_time, create_time, execution_id, main_process_definition_id, main_process_instance_id, operator_id, order_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2014-02-03 17:04:24,615 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@7289b546[orderProcessId=2,executionId=59,mainProcessInstanceId=59,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=59,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=Mon Feb 03 17:04:24 NZDT 2014,completeTime=<null>]
2014-02-03 17:04:24,615 [ckOrderInbound]] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@7988be1[orderId=2,orderNo=32255c96-f798-42e9-a5f4-6ab18ef9b090,quantity=<null>,status=0,paymentStatus=0,deliverTime=<null>,totalPrice=<null>,orderTime=Mon Feb 03 17:04:24 NZDT 2014]
2014-02-03 17:04:24,616 [ckOrderInbound]] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 04:04:24, deliverTime:null)
2014-02-03 17:04:24,616 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@624f2ad1[userId=4,username=general,password=MTIzNDU2,createTime=17:02:25]
2014-02-03 17:04:24,617 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)
2014-02-03 17:04:24,617 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 04:04:24, completeTime:null, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
2014-02-03 17:04:24,617 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 04:04:24, completeTime:null, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
2014-02-03 17:04:24,620 [ckOrderInbound]] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 17:04:24,620 [ckOrderInbound]] INFO  ActivitiFacade                 - executionId: 59, processDefinitionId: orderlocalProcess:1:15
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 17:04:24,623 [ckOrderInbound]] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 17:04:24,625 [ckOrderInbound]] INFO  OrderProcessAccessor           - assign operator[4] to task[Data entry]
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    insert 
    into
        ACT_RU_IDENTITYLINK
        (ID_, REV_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_, PROC_DEF_ID_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_IDENTITYLINK
        (ID_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_)     
    values
        (?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_TASK      
    SET
        REV_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        PRIORITY_ = ?,
        CREATE_TIME_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        DELEGATION_ = ?,
        EXECUTION_ID_ = ?,
        PROC_DEF_ID_ = ?,
        DESCRIPTION_ = ?,
        DUE_DATE_ = ?,
        SUSPENSION_STATE_ = ?      
    where
        ID_= ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
2014-02-03 17:04:24,634 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 04:04:24, completeTime:null, executionId:59, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
2014-02-03 17:04:24,635 [ckOrderInbound]] INFO  OrderProcessDSImpl             - startOrderProcess end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 04:04:24, completeTime:null, executionId:59, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
2014-02-03 17:04:24,636 [ckOrderInbound]] INFO  OrderRequestProcessor          - after start process:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-03 04:04:24, completeTime:null, executionId:59, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
2014-02-03 17:04:24,637 [ckOrderInbound]] INFO  OrderProcessDSImpl             - dataEntry start:32255c96-f798-42e9-a5f4-6ab18ef9b090
2014-02-03 17:04:24,637 [ckOrderInbound]] INFO  OrderProcessDSImpl             - getOrderProcessByOrderNo start************************************
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 17:04:24,639 [ckOrderInbound]] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@e1b97ad[orderProcessId=2,executionId=59,mainProcessInstanceId=59,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=59,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=17:04:24,completeTime=<null>] 
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_,
        customermo0_.address as address2_,
        customermo0_.credits as credits2_,
        customermo0_.customer_name as customer4_2_,
        customermo0_.email as email2_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.email=? limit ?
2014-02-03 17:04:24,640 [ckOrderInbound]] INFO  OrderProcessDSImpl             - orderDetailsSet size:2 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
2014-02-03 17:04:24,641 [ckOrderInbound]] INFO  OrderProcessDSImpl             - added orderPizzashackModel:co.nz.pizzashack.data.model.OrderPizzashackModel@3f6aa8e3[orderPizzashackId=<null>,totalPrice=0,qty=2] 
Hibernate: 
    insert 
    into
        t_order_pizzashack
        (order_pizza_id, order_id, pizzashack_id, qty, total_price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
2014-02-03 17:04:24,643 [ckOrderInbound]] INFO  OrderProcessDSImpl             - added orderPizzashackModel:co.nz.pizzashack.data.model.OrderPizzashackModel@7a22cf2b[orderPizzashackId=<null>,totalPrice=0,qty=4] 
Hibernate: 
    insert 
    into
        t_order_pizzashack
        (order_pizza_id, order_id, pizzashack_id, qty, total_price) 
    values
        (null, ?, ?, ?, ?)
2014-02-03 17:04:24,643 [ckOrderInbound]] INFO  OrderProcessDSImpl             - after add detailsDto, size in model:2 
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        E.BUSINESS_KEY_ = ?                                                                                 
        and RES.PROC_DEF_ID_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                    
        and RES.ASSIGNEE_ = ?                                                                        
        and E.BUSINESS_KEY_ = ?
2014-02-03 17:04:24,647 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@e1b97ad[orderProcessId=2,executionId=59,mainProcessInstanceId=59,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=59,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=17:04:24,completeTime=<null>]
2014-02-03 17:04:24,647 [ckOrderInbound]] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@3a74d7e6[orderId=2,orderNo=32255c96-f798-42e9-a5f4-6ab18ef9b090,quantity=0,status=0,paymentStatus=0,deliverTime=<null>,totalPrice=0,orderTime=2014-02-03 17:04:24.607]
2014-02-03 17:04:24,648 [ckOrderInbound]] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@3fbfccfb[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 17:04:24,648 [ckOrderInbound]] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-02-03 17:04:24,648 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@3f6aa8e3[orderPizzashackId=3,totalPrice=0,qty=2]
2014-02-03 17:04:24,648 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:0)
2014-02-03 17:04:24,648 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@7a22cf2b[orderPizzashackId=4,totalPrice=0,qty=4]
2014-02-03 17:04:24,648 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:0)
2014-02-03 17:04:24,649 [ckOrderInbound]] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 04:04:24, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 17:04:24,650 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@2440709b[userId=4,username=general,password=MTIzNDU2,createTime=17:02:25]
2014-02-03 17:04:24,650 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)
2014-02-03 17:04:24,651 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:null, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        PARENT_TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE 
    where
        TASK_ID_ =     ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
2014-02-03 17:04:24,659 [ckOrderInbound]] INFO  ainTransitionExecutionListener - orderMainUserTaskExecutionListener start:{} 
2014-02-03 17:04:24,659 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity id:orderCoreCallactivity
2014-02-03 17:04:24,659 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity name:Core process
2014-02-03 17:04:24,659 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity type:callActivity
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
start calculate: co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:null, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
2014-02-03 17:04:24,676 [ckOrderInbound]] INFO  PizzashackCaculator            - caculate start:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 04:04:24, deliverTime:null) 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 17:04:24,679 [ckOrderInbound]] INFO  PizzashackCaculator            - caculate end:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 04:04:24, deliverTime:null) 
after calculation: co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 04:04:24, deliverTime:null)
2014-02-03 17:04:24,680 [ckOrderInbound]] INFO  culationMergeExecutionListener - CaculationMergeExecutionListener start
2014-02-03 17:04:24,681 [ckOrderInbound]] INFO  culationMergeExecutionListener - after calculation, orderProcess:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:null, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
2014-02-03 17:04:24,681 [ckOrderInbound]] INFO  OrderProcessAccessor           - merge calculation result
2014-02-03 17:04:24,681 [ckOrderInbound]] INFO  OrderProcessAccessor           - total price:162.00 
2014-02-03 17:04:24,681 [ckOrderInbound]] INFO  OrderProcessAccessor           - qty:6 
2014-02-03 17:04:24,681 [ckOrderInbound]] INFO  OrderProcessAccessor           - orderDetailsSet.size():2
2014-02-03 17:04:24,681 [ckOrderInbound]] INFO  culationMergeExecutionListener - CaculationMergeExecutionListener end
total qty: 6
after autoreview: 0
reviewTransBean: co.nz.pizzashack.data.dto.OrderReviewRecordDto(reviewRecordId:null, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, content:null, reviewResult:accept, createTime:2014-02-03 04:04:24, reviewer:null)
Hibernate: 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = ?
Hibernate: 
    update
        ACT_GE_PROPERTY      
    SET
        REV_ = ?,
        VALUE_ = ?      
    where
        NAME_ = ?       
        and REV_ = ?
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RU_JOB J     
    where
        J.EXECUTION_ID_ = ?
Hibernate: 
    select
        *      
    from
        ACT_RU_EVENT_SUBSCR     
    where
        (
            EXECUTION_ID_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
2014-02-03 17:04:24,719 [ckOrderInbound]] INFO  OfCoreProcessExecutionListener - after core process, orderProcess:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:null, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 17:04:24,720 [ckOrderInbound]] INFO  ainTransitionExecutionListener - orderMainUserTaskExecutionListener start:{} 
2014-02-03 17:04:24,720 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity id:billingEntry
2014-02-03 17:04:24,720 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity name:Billing fill in
2014-02-03 17:04:24,720 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity type:userTask
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    update
        ACT_RU_EXECUTION 
    set
        REV_ = ?,
        BUSINESS_KEY_ = ?,
        PROC_DEF_ID_ = ?,
        ACT_ID_ = ?,
        IS_ACTIVE_ = ?,
        IS_CONCURRENT_ = ?,
        IS_SCOPE_ = ?,
        IS_EVENT_SCOPE_ = ?,
        PARENT_ID_ = ?,
        SUPER_EXEC_ = ?,
        SUSPENSION_STATE_ = ?,
        CACHED_ENT_STATE_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_TASK 
    where
        ID_ = ? 
        and REV_ = ?
2014-02-03 17:04:24,757 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:null, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-02-03 17:04:24,763 [ckOrderInbound]] INFO  OrderProcessAccessor           - get OrderProcessDto from flow:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:null, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
2014-02-03 17:04:24,763 [ckOrderInbound]] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 17:04:24,763 [ckOrderInbound]] INFO  ActivitiFacade                 - executionId: 59, processDefinitionId: orderlocalProcess:1:15
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 17:04:24,769 [ckOrderInbound]] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 17:04:24,772 [ckOrderInbound]] INFO  OrderProcessAccessor           - assign operator[4] to task[Billing fill in]
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_TASK      
    SET
        REV_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        PRIORITY_ = ?,
        CREATE_TIME_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        DELEGATION_ = ?,
        EXECUTION_ID_ = ?,
        PROC_DEF_ID_ = ?,
        DESCRIPTION_ = ?,
        DUE_DATE_ = ?,
        SUSPENSION_STATE_ = ?      
    where
        ID_= ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
2014-02-03 17:04:24,778 [ckOrderInbound]] INFO  OrderProcessAccessor           - after merge orderProcessModel:co.nz.pizzashack.data.model.OrderProcessModel@e1b97ad[orderProcessId=2,executionId=59,mainProcessInstanceId=59,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=59,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=17:04:24,completeTime=<null>] 
2014-02-03 17:04:24,780 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:null, executionId:59, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
2014-02-03 17:04:24,781 [ckOrderInbound]] INFO  OrderProcessDSImpl             - dataEntry end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:null, executionId:59, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
Hibernate: 
    update
        t_order 
    set
        cust_id=?,
        deliver_time=?,
        order_no=?,
        order_time=?,
        payment_remarks=?,
        payment_status=?,
        quantity=?,
        ship_address=?,
        status=?,
        total_price=? 
    where
        order_id=?
Hibernate: 
    update
        t_order_pizzashack 
    set
        order_id=?,
        pizzashack_id=?,
        qty=?,
        total_price=? 
    where
        order_pizza_id=?
Hibernate: 
    update
        t_order_pizzashack 
    set
        order_id=?,
        pizzashack_id=?,
        qty=?,
        total_price=? 
    where
        order_pizza_id=?
2014-02-03 17:04:24,784 [ckOrderInbound]] INFO  OrderRequestProcessor          - after dataEntry:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:null, executionId:59, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
2014-02-03 17:04:24,784 [ckOrderInbound]] INFO  OrderConverter                 - toModel start:{} co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-03 04:04:24, deliverTime:null)
2014-02-03 17:04:24,785 [ckOrderInbound]] INFO  OrderConverter                 - toModel end:{} co.nz.pizzashack.data.model.OrderModel@a35ae9b[orderId=<null>,orderNo=32255c96-f798-42e9-a5f4-6ab18ef9b090,quantity=6,status=<null>,paymentStatus=0,deliverTime=<null>,totalPrice=162.00,orderTime=<null>]
Hibernate: 
    select
        orderreque0_.message_id as message1_0_0_,
        orderreque0_.created_at as created2_0_0_,
        orderreque0_.order_id as order4_0_0_,
        orderreque0_.processor_name as processor3_0_0_ 
    from
        t_order_request_history orderreque0_ 
    where
        orderreque0_.message_id=?
2014-02-03 17:04:24,787 [ckOrderInbound]] INFO  OrderRequestProcessor          - orderRequestProcessor end:{} 
2014-02-03 17:04:24,789 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlMarshal start:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:null, executionId:59, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
2014-02-03 17:04:24,790 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - pendingActivity:{} co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
2014-02-03 17:04:24,790 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - customerDto:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-02-03 17:04:24,793 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlMarshal end:{} <order-process>
  <process-id>2</process-id>
  <create-time>1970-01-01 05:04:24</create-time>
  <complete-time>null</complete-time>
  <operator>general</operator>
  <order>
    <order-no>32255c96-f798-42e9-a5f4-6ab18ef9b090</order-no>
    <address>25 mavon downs</address>
    <quantity>6</quantity>
    <total-price>162.00</total-price>
    <status>pendingOnBilling</status>
    <order-time>2014-02-03 04:04:24</order-time>
    <deliver-time>null</deliver-time>
    <order-list>
      <order-details>
        <pizza-name>Chicken Parmesan</pizza-name>
        <quantity>2</quantity>
        <total-price>50.00</total-price>
      </order-details>
      <order-details>
        <pizza-name>Spicy Italian</pizza-name>
        <quantity>4</quantity>
        <total-price>112.00</total-price>
      </order-details>
    </order-list>
  </order>
  <customer>
    <name>david</name>
    <email>david.yuan124@gmail.com</email>
  </customer>
  <pending-activity>
    <name>Billing fill in</name>
    <type>userTask</type>
    <assignee>general</assignee>
  </pending-activity>
</order-process>
2014-02-03 17:04:24,793 [ckOrderInbound]] INFO  output                         - Exchange[ExchangePattern: InOnly, BodyType: String, Body: <order-process>  <process-id>2</process-id>  <create-time>1970-01-01 05:04:24</create-time>  <complete-time>null</complete-time>  <operator>general</operator>  <order>    <order-no>32255c96-f798-42e9-a5f4-6ab18ef9b090</order-no>    <address>25 mavon downs</address>    <quantity>6</quantity>    <total-price>162.00</total-price>    <status>pendingOnBilling</status>    <order-time>2014-02-03 04:04:24</order-time>    <deliver-time>null</deliver-time>    <order-list>      <order-details>        <pizza-name>Chicken Parmesan</pizza-name>        <quantity>2</quantity>        <total-price>50.00</total-price>      </order-details>      <order-details>        <pizza-name>Spicy Italian</pizza-name>        <quantity>4</quantity>        <total-price>112.00</total-price>      </order-details>    </order-list>  </order>  <customer>    <name>david</name>    <email>david.yuan124@gmail.com</email>  </customer>  <pending-activity>    <name>Billing fill in</name>    <type>userTask</type>    <assignee>general</assignee>  </pending-activity></order-process>]
2014-02-03 17:04:24,838 [ckOrderInbound]] INFO  orderProcessRoute              - Signalled to stop route
2014-02-03 17:04:25,721 [qtp793057417-39] INFO  input                          - Exchange[ExchangePattern: InOut, BodyType: org.apache.cxf.message.MessageContentsList, Body: [co.nz.pizzashack.data.dto.BillingDto(billingRequestId:null, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, billingCode:null, billingMessage:null, billingTime:null, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111))]]
2014-02-03 17:04:25,721 [qtp793057417-39] INFO  BillingInboundProcessor        - BillingInboundProcessor start:{} 
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
2014-02-03 17:04:25,728 [qtp793057417-39] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@5dc7f2b7[userId=4,username=general,password=MTIzNDU2,createTime=17:02:25]
2014-02-03 17:04:25,728 [qtp793057417-39] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)
2014-02-03 17:04:25,728 [qtp793057417-39] INFO  BillingInboundProcessor        - default operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25) 
2014-02-03 17:04:25,729 [qtp793057417-39] INFO  OrderProcessDSImpl             - fillinBillingAccount start:co.nz.pizzashack.data.dto.BillingDto(billingRequestId:50480, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, billingCode:null, billingMessage:null, billingTime:2014-02-03 04:04:25, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111))
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 17:04:25,733 [qtp793057417-39] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@1b98d3f2[orderProcessId=2,executionId=59,mainProcessInstanceId=59,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=59,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=17:04:24,completeTime=<null>] 
2014-02-03 17:04:25,734 [qtp793057417-39] INFO  OrderProcessDSImpl             - doFillinBillingAccount start:{} 
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        E.BUSINESS_KEY_ = ?                                                                                 
        and RES.PROC_DEF_ID_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 17:04:25,736 [qtp793057417-39] INFO  OrderProcessDSImpl             - current task:Billing fill in 
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                    
        and RES.ASSIGNEE_ = ?                                                                        
        and E.BUSINESS_KEY_ = ?
2014-02-03 17:04:25,738 [qtp793057417-39] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@1b98d3f2[orderProcessId=2,executionId=59,mainProcessInstanceId=59,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=59,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=17:04:24,completeTime=<null>]
2014-02-03 17:04:25,738 [qtp793057417-39] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@374bdc15[orderId=2,orderNo=32255c96-f798-42e9-a5f4-6ab18ef9b090,quantity=6,status=5,paymentStatus=0,deliverTime=<null>,totalPrice=162.00,orderTime=2014-02-03 17:04:24.607]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 17:04:25,746 [qtp793057417-39] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@47707b55[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 17:04:25,747 [qtp793057417-39] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 17:04:25,754 [qtp793057417-39] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@7a984c97[orderPizzashackId=3,totalPrice=50.00,qty=2]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 17:04:25,757 [qtp793057417-39] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00)
2014-02-03 17:04:25,758 [qtp793057417-39] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@24cc8c62[orderPizzashackId=4,totalPrice=112.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 17:04:25,758 [qtp793057417-39] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)
2014-02-03 17:04:25,758 [qtp793057417-39] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-03 04:04:24, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 17:04:25,759 [qtp793057417-39] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@68fd8a41[userId=4,username=general,password=MTIzNDU2,createTime=17:02:25]
2014-02-03 17:04:25,759 [qtp793057417-39] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)
2014-02-03 17:04:25,760 [qtp793057417-39] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:null, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        PARENT_TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE 
    where
        TASK_ID_ =     ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
2014-02-03 17:04:25,774 [qtp793057417-39] INFO  ainTransitionExecutionListener - orderMainUserTaskExecutionListener start:{} 
2014-02-03 17:04:25,774 [qtp793057417-39] INFO  ainTransitionExecutionListener - nextActivity id:billingCallactivity
2014-02-03 17:04:25,774 [qtp793057417-39] INFO  ainTransitionExecutionListener - nextActivity name:Billing
2014-02-03 17:04:25,774 [qtp793057417-39] INFO  ainTransitionExecutionListener - nextActivity type:callActivity
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
2014-02-03 17:04:25,779 [qtp793057417-39] INFO  input                          - Exchange[ExchangePattern: InOnly, BodyType: java.util.HashMap, Body: {orderTransBean=co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:null, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)), billingTransBean=co.nz.pizzashack.data.dto.BillingDto(billingRequestId:50480, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, billingCode:null, billingMessage:null, billingTime:2014-02-03 04:04:25, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111)), indenpendentProcess=false}]
2014-02-03 17:04:25,779 [qtp793057417-39] INFO  BillingVariableTransformer     - after transform billing:co.nz.pizzashack.data.dto.BillingDto(billingRequestId:50480, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, billingCode:null, billingMessage:null, billingTime:2014-02-03 04:04:25, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111)) 
2014-02-03 17:04:25,790 [qtp793057417-39] INFO  BillingFormatTransformer       - billingReqXmlMarshal start:{} co.nz.pizzashack.data.dto.BillingDto(billingRequestId:50480, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, billingCode:null, billingMessage:null, billingTime:2014-02-03 04:04:25, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111))
2014-02-03 17:04:25,793 [qtp793057417-39] INFO  BillingFormatTransformer       - billingReqXmlMarshal end:{} <billing>
  <account>
    <account-no>111111</account-no>
    <security-no>111</security-no>
    <expire-date>2019-06-24</expire-date>
    <account-type>credit</account-type>
  </account>
  <billing-amount>162.00</billing-amount>
  <create-time>2014-02-03 04:04:25</create-time>
</billing>
2014-02-03 17:04:25,794 [qtp793057417-39] INFO  myLog                          - Exchange[Id: ID-david-59132-1391400143467-0-6, ExchangePattern: InOut, Properties: {BillingRequest=co.nz.pizzashack.data.dto.BillingDto(billingRequestId:50480, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, billingCode:null, billingMessage:null, billingTime:2014-02-03 04:04:25, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111)), CamelCreatedTimestamp=Mon Feb 03 17:04:25 NZDT 2014, CamelMessageHistory=[DefaultMessageHistory[routeId=activitiBillingProcess, node=to1], DefaultMessageHistory[routeId=activitiBillingProcess, node=setHeader1], DefaultMessageHistory[routeId=activitiBillingProcess, node=to2], DefaultMessageHistory[routeId=direct:billingIntegration, node=transform1], DefaultMessageHistory[routeId=direct:billingIntegration, node=setHeader2], DefaultMessageHistory[routeId=direct:billingIntegration, node=to3], DefaultMessageHistory[routeId=route1, node=setExchangePattern1], DefaultMessageHistory[routeId=route1, node=setProperty1], DefaultMessageHistory[routeId=route1, node=bean1], DefaultMessageHistory[routeId=route1, node=to5]], CamelToEndpoint=log://myLog?showAll=true, PROCESS_ID_PROPERTY=123}, Headers: {breadcrumbId=ID-david-59132-1391400143467-0-5, destination=activiti:orderBillingProcess:receiveBillingResult, messageId=50480}, BodyType: String, Body: <billing>  <account>    <account-no>111111</account-no>    <security-no>111</security-no>    <expire-date>2019-06-24</expire-date>    <account-type>credit</account-type>  </account>  <billing-amount>162.00</billing-amount>  <create-time>2014-02-03 04:04:25</create-time></billing>, Out: null: ]
2014-02-03 17:04:26,111 [illingOutbound]] INFO  route1                         - jmsMsgId set = ID:david-60622-1391379770476-1:20392:1:1:1
2014-02-03 17:04:26,112 [illingOutbound]] INFO  myLog                          - Exchange[Id: ID-david-59132-1391400143467-0-6, ExchangePattern: InOut, Properties: {BillingRequest=co.nz.pizzashack.data.dto.BillingDto(billingRequestId:50480, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, billingCode:null, billingMessage:null, billingTime:2014-02-03 04:04:25, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111)), CamelCreatedTimestamp=Mon Feb 03 17:04:25 NZDT 2014, CamelExternalRedelivered=false, CamelMessageHistory=[DefaultMessageHistory[routeId=activitiBillingProcess, node=to1], DefaultMessageHistory[routeId=activitiBillingProcess, node=setHeader1], DefaultMessageHistory[routeId=activitiBillingProcess, node=to2], DefaultMessageHistory[routeId=direct:billingIntegration, node=transform1], DefaultMessageHistory[routeId=direct:billingIntegration, node=setHeader2], DefaultMessageHistory[routeId=direct:billingIntegration, node=to3], DefaultMessageHistory[routeId=route1, node=setExchangePattern1], DefaultMessageHistory[routeId=route1, node=setProperty1], DefaultMessageHistory[routeId=route1, node=bean1], DefaultMessageHistory[routeId=route1, node=to5], DefaultMessageHistory[routeId=route1, node=to6], DefaultMessageHistory[routeId=route1, node=log1], DefaultMessageHistory[routeId=route1, node=to7]], CamelToEndpoint=log://myLog?showAll=true, PROCESS_ID_PROPERTY=123}, Headers: {accountNo=111111, breadcrumbId=ID-david-59132-1391400143467-0-5, CamelJmsDeliveryMode=2, CamelSqlUpdateCount=1, code=000, destination=activiti:orderBillingProcess:receiveBillingResult, JMSCorrelationID=Camel-ID-david-59132-1391400143467-0-7, JMSDeliveryMode=2, JMSDestination=queue://pizzashackBillingOutbound, JMSExpiration=0, JMSMessageID=ID:david-60622-1391379770476-1:20392:1:1:1, JMSPriority=4, JMSRedelivered=false, JMSReplyTo=null, JMSTimestamp=1391400266105, JMSType=null, JMSXGroupID=null, JMSXUserID=null, messageId=50480, transactionNo=2afd47d8-3275-4a85-9398-a6168ac2f992}, BodyType: String, Body: <account-transaction>  <transaction-no>2afd47d8-3275-4a85-9398-a6168ac2f992</transaction-no>  <account-no>111111</account-no>  <code>000</code>  <reasons>null</reasons>  <create-time>2014-02-03 04:04:26</create-time></account-transaction>, Out: null: ]
2014-02-03 17:04:26,112 [illingOutbound]] INFO  BillingFormatTransformer       - billingRespXmalUnmarshal start:{} <account-transaction>
  <transaction-no>2afd47d8-3275-4a85-9398-a6168ac2f992</transaction-no>
  <account-no>111111</account-no>
  <code>000</code>
  <reasons>null</reasons>
  <create-time>2014-02-03 04:04:26</create-time>
</account-transaction>
2014-02-03 17:04:26,115 [illingOutbound]] INFO  BillingFormatTransformer       - billingRespXmalUnmarshal end:{} co.nz.pizzashack.data.dto.BillingDto(billingRequestId:null, orderNo:null, billingCode:000, billingMessage:null, billingTime:null, billingAmount:null, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:null, expireDate:null, securityNo:null))
2014-02-03 17:04:26,115 [illingOutbound]] INFO  BillingResponseMergeProcessor  - billingReq:co.nz.pizzashack.data.dto.BillingDto(billingRequestId:50480, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, billingCode:null, billingMessage:null, billingTime:2014-02-03 04:04:25, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111)) 
2014-02-03 17:04:26,116 [illingOutbound]] INFO  BillingResponseMergeProcessor  - billingResp:co.nz.pizzashack.data.dto.BillingDto(billingRequestId:null, orderNo:null, billingCode:000, billingMessage:null, billingTime:null, billingAmount:null, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:null, expireDate:null, securityNo:null)) 
2014-02-03 17:04:26,119 [qtp793057417-39] INFO  BillingRespExecutionListener   - BillingRespExecutionListener execute start:{}
2014-02-03 17:04:26,119 [qtp793057417-39] INFO  BillingRespExecutionListener   - get billing after integration:co.nz.pizzashack.data.dto.BillingDto(billingRequestId:50480, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, billingCode:000, billingMessage:null, billingTime:2014-02-03 04:04:25, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111))
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 17:04:26,121 [qtp793057417-39] INFO  BillingRespExecutionListener   - activitiProcessDefinitionId:orderBillingProcess:1:7
2014-02-03 17:04:26,121 [qtp793057417-39] INFO  BillingRespExecutionListener   - activitiProcesssInstanceId:123
2014-02-03 17:04:26,121 [qtp793057417-39] INFO  BillingRespExecutionListener   - Key : camelBody Value : co.nz.pizzashack.data.dto.BillingDto(billingRequestId:50480, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, billingCode:000, billingMessage:null, billingTime:2014-02-03 04:04:25, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111))
2014-02-03 17:04:26,121 [qtp793057417-39] INFO  BillingRespExecutionListener   - Key : billingProcessStatus Value : 0
2014-02-03 17:04:26,121 [qtp793057417-39] INFO  BillingRespExecutionListener   - Key : billingTransBean Value : co.nz.pizzashack.data.dto.BillingDto(billingRequestId:50480, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, billingCode:000, billingMessage:null, billingTime:2014-02-03 04:04:25, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111))
2014-02-03 17:04:26,122 [qtp793057417-39] INFO  BillingRespExecutionListener   - Key : orderTransBean Value : co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:123, activeProcessDefinitionId:orderBillingProcess:1:7, createTime:1970-01-01 05:04:24, completeTime:null, executionId:123, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
2014-02-03 17:04:26,122 [qtp793057417-39] INFO  BillingRespExecutionListener   - Key : indenpendentProcess Value : false
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
2014-02-03 17:04:26,129 [ad #4 - WireTap] INFO  input                          - Exchange[ExchangePattern: InOnly, BodyType: co.nz.pizzashack.data.dto.BillingDto, Body: <?xml version="1.0" encoding="UTF-8" standalone="yes"?><billingRequest>    <billingRequestId>50480</billingRequestId>    <orderNo>32255c96-f798-42e9-a5f4-6ab18ef9b090</orderNo>    <billingCode>000</billingCode>    <billingMessage>null</billingMessage>    <billingTime>2014-02-03 04:04:25</billingTime>    <billingAmount>162.00</billingAmount>    <account>        <paymode>credit</paymode>        <accountNo>111111</accountNo>        <expireDate>2019-06-24</expireDate>        <securityNo>111</securityNo>    </account></billingRequest>]
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
2014-02-03 17:04:26,147 [ad #4 - WireTap] ERROR DefaultErrorHandler            - Failed delivery for (MessageId: ID-david-59132-1391400143467-0-8 on ExchangeId: ID-david-59132-1391400143467-0-10). Exhausted after delivery attempt: 1 caught: java.lang.NullPointerException

Message History
---------------------------------------------------------------------------------------------------------------------------------------
RouteId              ProcessorId          Processor                                                                        Elapsed (ms)
[activitiBillingPro] [activitiBillingPro] [                                                                              ] [       366]
[activitiBillingPro] [to1               ] [log:input                                                                     ] [         1]
[activitiBillingPro] [setHeader1        ] [setHeader[destination]                                                        ] [         0]
[activitiBillingPro] [to2               ] [direct:billingIntegration                                                     ] [       338]
[direct:billingInte] [transform1        ] [transform[{co.nz.pizzashack.integration.mapping.BillingVariableTransformer@30a] [         0]
[direct:billingInte] [setHeader2        ] [setHeader[messageId]                                                          ] [        10]
[direct:billingInte] [to3               ] [direct:doBillingIntegration                                                   ] [       327]
[route1            ] [setExchangePattern] [setExchangePattern[InOut]                                                     ] [         0]
[route1            ] [setProperty1      ] [setProperty[BillingRequest]                                                   ] [         0]
[route1            ] [bean1             ] [bean[co.nz.pizzashack.integration.mapping.BillingFormatTransformer@3e817a89]  ] [         3]
[route1            ] [to5               ] [log:myLog?showAll=true                                                        ] [         1]
[route1            ] [to6               ] [jms:queue:pizzashackBillingInbound?transacted=true&replyTo=pizzashackBillingOu] [       317]
[route1            ] [log1              ] [log                                                                           ] [         0]
[route1            ] [to7               ] [log:myLog?showAll=true                                                        ] [         1]
[route1            ] [bean2             ] [bean[co.nz.pizzashack.integration.mapping.BillingFormatTransformer@3e817a89]  ] [         3]
[route1            ] [process1          ] [co.nz.pizzashack.integration.mapping.BillingResponseMergeProcessor@2693d86e   ] [         1]
[direct:billingInte] [wireTap1          ] [wireTap[direct:receiveBillingQueue]                                           ] [         1]
[direct:receiveBill] [to4               ] [log:input                                                                     ] [        19]
[direct:receiveBill] [recipientList1    ] [recipientList[header{header(destination)}]                                    ] [         9]

Exchange
---------------------------------------------------------------------------------------------------------------------------------------
Exchange[
	Id                  ID-david-59132-1391400143467-0-10
	ExchangePattern     InOnly
	Headers             {accountNo=111111, breadcrumbId=ID-david-59132-1391400143467-0-5, CamelJmsDeliveryMode=2, CamelRedelivered=false, CamelRedeliveryCounter=0, CamelSqlUpdateCount=1, code=000, destination=activiti:orderBillingProcess:receiveBillingResult, JMSCorrelationID=Camel-ID-david-59132-1391400143467-0-7, JMSDeliveryMode=2, JMSDestination=queue://pizzashackBillingOutbound, JMSExpiration=0, JMSMessageID=ID:david-60622-1391379770476-1:20392:1:1:1, JMSPriority=4, JMSRedelivered=false, JMSReplyTo=null, JMSTimestamp=1391400266105, JMSType=null, JMSXGroupID=null, JMSXUserID=null, messageId=50480, transactionNo=2afd47d8-3275-4a85-9398-a6168ac2f992}
	BodyType            co.nz.pizzashack.data.dto.BillingDto
	Body                <?xml version="1.0" encoding="UTF-8" standalone="yes"?><billingRequest>    <billingRequestId>50480</billingRequestId>    <orderNo>32255c96-f798-42e9-a5f4-6ab18ef9b090</orderNo>    <billingCode>000</billingCode>    <billingMessage>null</billingMessage>    <billingTime>2014-02-03 04:04:25</billingTime>    <billingAmount>162.00</billingAmount>    <account>        <paymode>credit</paymode>        <accountNo>111111</accountNo>        <expireDate>2019-06-24</expireDate>        <securityNo>111</securityNo>    </account></billingRequest>
]

Stacktrace
---------------------------------------------------------------------------------------------------------------------------------------
java.lang.NullPointerException
	at org.activiti.camel.ActivitiProducer.signal(ActivitiProducer.java:76)[activiti-camel-5.14.jar:5.14]
	at org.activiti.camel.ActivitiProducer.process(ActivitiProducer.java:60)[activiti-camel-5.14.jar:5.14]
	at org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge.process(AsyncProcessorConverterHelper.java:61)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:398)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:191)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.MulticastProcessor.doProcessSequential(MulticastProcessor.java:573)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.MulticastProcessor.doProcessSequential(MulticastProcessor.java:506)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.MulticastProcessor.process(MulticastProcessor.java:215)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.RecipientList.sendToRecipientList(RecipientList.java:153)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.RecipientList.process(RecipientList.java:112)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.Pipeline.process(Pipeline.java:118)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.Pipeline.process(Pipeline.java:80)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:72)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:398)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:191)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.Pipeline.process(Pipeline.java:118)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.Pipeline.process(Pipeline.java:80)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:191)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.component.direct.DirectProducer.process(DirectProducer.java:51)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:398)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:191)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.util.AsyncProcessorHelper.process(AsyncProcessorHelper.java:105)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:87)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.WireTapProcessor$1.call(WireTapProcessor.java:98)[camel-core-2.12.2.jar:2.12.2]
	at org.apache.camel.processor.WireTapProcessor$1.call(WireTapProcessor.java:94)[camel-core-2.12.2.jar:2.12.2]
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)[:1.7.0_45]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)[:1.7.0_45]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)[:1.7.0_45]
	at java.lang.Thread.run(Thread.java:744)[:1.7.0_45]
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_RU_EXECUTION 
    set
        REV_ = ?,
        BUSINESS_KEY_ = ?,
        PROC_DEF_ID_ = ?,
        ACT_ID_ = ?,
        IS_ACTIVE_ = ?,
        IS_CONCURRENT_ = ?,
        IS_SCOPE_ = ?,
        IS_EVENT_SCOPE_ = ?,
        PARENT_ID_ = ?,
        SUPER_EXEC_ = ?,
        SUSPENSION_STATE_ = ?,
        CACHED_ENT_STATE_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_TASK 
    where
        ID_ = ? 
        and REV_ = ?
2014-02-03 17:04:26,179 [qtp793057417-39] INFO  OrderProcessDSImpl             - doFillinBillingAccount end:{} 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 17:04:26,181 [qtp793057417-39] INFO  OrderProcessDSImpl             - process pending, build pending Activity:{} 
2014-02-03 17:04:26,183 [qtp793057417-39] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:123, activeProcessDefinitionId:orderBillingProcess:1:7, createTime:1970-01-01 05:04:24, completeTime:null, executionId:123, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-02-03 17:04:26,191 [qtp793057417-39] INFO  OrderProcessAccessor           - get OrderProcessDto from flow:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:123, activeProcessDefinitionId:orderBillingProcess:1:7, createTime:1970-01-01 05:04:24, completeTime:null, executionId:123, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
2014-02-03 17:04:26,191 [qtp793057417-39] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 17:04:26,191 [qtp793057417-39] INFO  ActivitiFacade                 - executionId: 123, processDefinitionId: orderBillingProcess:1:7
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 17:04:26,196 [qtp793057417-39] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:receiveBillingResult, name:Receive Billing Result, type:receiveTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway1, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow12:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:receiveBillingResult, name:Receive Billing Result, type:receiveTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
2014-02-03 17:04:26,196 [qtp793057417-39] INFO  OrderProcessAccessor           - *************************pending on receiveBillingResponse task:{}
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 17:04:26,208 [qtp793057417-39] INFO  BillingRespExecutionListener   - BillingRespExecutionListener execute start:{}
2014-02-03 17:04:26,210 [qtp793057417-39] INFO  BillingRespExecutionListener   - get billing after integration:co.nz.pizzashack.data.dto.BillingDto(billingRequestId:50480, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, billingCode:000, billingMessage:null, billingTime:2014-02-03 04:04:25, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111))
2014-02-03 17:04:26,210 [qtp793057417-39] INFO  BillingRespExecutionListener   - activitiProcessDefinitionId:orderBillingProcess:1:7
2014-02-03 17:04:26,210 [qtp793057417-39] INFO  BillingRespExecutionListener   - activitiProcesssInstanceId:123
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-02-03 17:04:26,220 [qtp793057417-39] INFO  BillingRespExecutionListener   - Key : camelBody Value : co.nz.pizzashack.data.dto.BillingDto(billingRequestId:50480, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, billingCode:000, billingMessage:null, billingTime:2014-02-03 04:04:25, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111))
2014-02-03 17:04:26,221 [qtp793057417-39] INFO  BillingRespExecutionListener   - Key : billingProcessStatus Value : 0
2014-02-03 17:04:26,221 [qtp793057417-39] INFO  BillingRespExecutionListener   - Key : billingTransBean Value : co.nz.pizzashack.data.dto.BillingDto(billingRequestId:50480, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, billingCode:000, billingMessage:null, billingTime:2014-02-03 04:04:25, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111))
2014-02-03 17:04:26,221 [qtp793057417-39] INFO  BillingRespExecutionListener   - Key : orderTransBean Value : co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:123, activeProcessDefinitionId:orderBillingProcess:1:7, createTime:1970-01-01 05:04:24, completeTime:null, executionId:123, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
2014-02-03 17:04:26,221 [qtp793057417-39] INFO  BillingRespExecutionListener   - Key : indenpendentProcess Value : false
Hibernate: 
    select
        * 
    from
        ACT_HI_PROCINST 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RU_JOB J     
    where
        J.EXECUTION_ID_ = ?
Hibernate: 
    select
        *      
    from
        ACT_RU_EVENT_SUBSCR     
    where
        (
            EXECUTION_ID_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
2014-02-03 17:04:26,237 [qtp793057417-39] INFO  illingProcessExecutionListener - **********************after billing process, billingDto:co.nz.pizzashack.data.dto.BillingDto(billingRequestId:50480, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, billingCode:000, billingMessage:null, billingTime:2014-02-03 04:04:25, billingAmount:162.00, account:co.nz.pizzashack.data.dto.AccountDto(paymode:credit, accountNo:111111, expireDate:2019-06-24, securityNo:111)) 
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-02-03 17:04:26,243 [qtp793057417-39] INFO  illingProcessExecutionListener - after core process, orderProcess:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:123, activeProcessDefinitionId:orderBillingProcess:1:7, createTime:1970-01-01 05:04:24, completeTime:null, executionId:123, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
after delivered: co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:delivered, orderTime:2014-02-03 04:04:24, deliverTime:2014-02-03 04:04:26)
2014-02-03 17:04:26,286 [qtp793057417-39] INFO  EmailExecutionListener         - EmailExecutionListener start:{} 
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 17:04:26,288 [qtp793057417-39] INFO  EmailExecutionListener         - prepare email info for delivered case:{} 
2014-02-03 17:04:26,289 [qtp793057417-39] INFO  EmailExecutionListener         - EmailExecutionListener end:{} 
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
2014-02-03 17:04:31,706 [qtp793057417-39] INFO  EndExecutionListener           - EndExecutionListener start:{} 
2014-02-03 17:04:31,708 [qtp793057417-39] INFO  EndExecutionListener           - update order as delivered:{} 
2014-02-03 17:04:31,708 [qtp793057417-39] INFO  EndExecutionListener           - EndExecutionListener end:{} 
Hibernate: 
    select
        * 
    from
        ACT_HI_PROCINST 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_PROCINST 
    set
        PROC_DEF_ID_ = ?,
        BUSINESS_KEY_ = ?,
        START_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        END_ACT_ID_ = ?,
        DELETE_REASON_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_PROCINST 
    set
        PROC_DEF_ID_ = ?,
        BUSINESS_KEY_ = ?,
        START_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        END_ACT_ID_ = ?,
        DELETE_REASON_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_IDENTITYLINK 
    where
        ID_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ? 
        and REV_ = ?
2014-02-03 17:04:31,749 [qtp793057417-39] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:delivered, orderTime:2014-02-03 04:04:24, deliverTime:2014-02-03 04:04:26), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:2014-02-03 04:04:31, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        t_order_process 
    set
        active_process_definition_id=?,
        active_process_instance_id=?,
        complete_time=?,
        create_time=?,
        execution_id=?,
        main_process_definition_id=?,
        main_process_instance_id=?,
        operator_id=?,
        order_id=? 
    where
        order_process_id=?
Hibernate: 
    update
        t_order 
    set
        cust_id=?,
        deliver_time=?,
        order_no=?,
        order_time=?,
        payment_remarks=?,
        payment_status=?,
        quantity=?,
        ship_address=?,
        status=?,
        total_price=? 
    where
        order_id=?
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
2014-02-03 17:04:31,754 [qtp793057417-39] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@1b98d3f2[orderProcessId=2,executionId=59,mainProcessInstanceId=59,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=59,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=17:04:24,completeTime=Mon Feb 03 17:04:31 NZDT 2014] 
2014-02-03 17:04:31,754 [qtp793057417-39] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@1b98d3f2[orderProcessId=2,executionId=59,mainProcessInstanceId=59,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=59,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=17:04:24,completeTime=Mon Feb 03 17:04:31 NZDT 2014]
2014-02-03 17:04:31,754 [qtp793057417-39] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@374bdc15[orderId=2,orderNo=32255c96-f798-42e9-a5f4-6ab18ef9b090,quantity=6,status=7,paymentStatus=1,deliverTime=<null>,totalPrice=162.00,orderTime=2014-02-03 17:04:24.607]
2014-02-03 17:04:31,755 [qtp793057417-39] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@47707b55[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 17:04:31,755 [qtp793057417-39] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-02-03 17:04:31,755 [qtp793057417-39] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@7a984c97[orderPizzashackId=3,totalPrice=50.00,qty=2]
2014-02-03 17:04:31,755 [qtp793057417-39] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00)
2014-02-03 17:04:31,755 [qtp793057417-39] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@24cc8c62[orderPizzashackId=4,totalPrice=112.00,qty=4]
2014-02-03 17:04:31,755 [qtp793057417-39] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)
2014-02-03 17:04:31,756 [qtp793057417-39] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:delivered, orderTime:2014-02-03 04:04:24, deliverTime:null)
2014-02-03 17:04:31,756 [qtp793057417-39] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@68fd8a41[userId=4,username=general,password=MTIzNDU2,createTime=17:02:25]
2014-02-03 17:04:31,756 [qtp793057417-39] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)
2014-02-03 17:04:31,756 [qtp793057417-39] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:delivered, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:2014-02-03 04:04:31, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
2014-02-03 17:04:31,757 [qtp793057417-39] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:delivered, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:2014-02-03 04:04:31, executionId:59, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
2014-02-03 17:04:31,757 [qtp793057417-39] INFO  OrderProcessAccessor           - after merge orderProcessModel:co.nz.pizzashack.data.model.OrderProcessModel@1b98d3f2[orderProcessId=2,executionId=59,mainProcessInstanceId=59,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=59,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=17:04:24,completeTime=Mon Feb 03 17:04:31 NZDT 2014] 
2014-02-03 17:04:31,758 [qtp793057417-39] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:delivered, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:2014-02-03 04:04:31, executionId:59, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:receiveBillingResult, name:Receive Billing Result, type:receiveTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway1, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow12:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:receiveBillingResult, name:Receive Billing Result, type:receiveTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25)) 
2014-02-03 17:04:31,758 [qtp793057417-39] INFO  OrderProcessDSImpl             - fillinBillingAccount end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:delivered, orderTime:2014-02-03 04:04:24, deliverTime:null), mainProcessInstanceId:59, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:59, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 05:04:24, completeTime:2014-02-03 04:04:31, executionId:59, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:receiveBillingResult, name:Receive Billing Result, type:receiveTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway1, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow12:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:receiveBillingResult, name:Receive Billing Result, type:receiveTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 05:02:25))
2014-02-03 17:04:31,760 [qtp793057417-39] INFO  BillingInboundProcessor        - get pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:receiveBillingResult, name:Receive Billing Result, type:receiveTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway1, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow12:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:receiveBillingResult, name:Receive Billing Result, type:receiveTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
2014-02-03 17:04:31,760 [qtp793057417-39] INFO  BillingInboundProcessor        - billingResponse:co.nz.pizzashack.integration.ws.BillingResponse@2ad05ace[orderNo=32255c96-f798-42e9-a5f4-6ab18ef9b090,billingCode=000,billingMessage=<null>] 
2014-02-03 17:04:31,760 [qtp793057417-39] INFO  BillingInboundProcessor        - BillingInboundProcessor end:{} 
2014-02-03 17:04:48,389 [qtp793057417-35] INFO  PizzashackAPIImpl              - getOrdersforCustomer start:david.yuan124@gmail.com
2014-02-03 17:04:48,390 [qtp793057417-35] INFO  OrderDSImpl                    - getOrderByCustomer start:david.yuan124@gmail.com 
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_,
        ordermodel0_.cust_id as cust11_4_,
        ordermodel0_.deliver_time as deliver2_4_,
        ordermodel0_.order_no as order3_4_,
        ordermodel0_.order_time as order4_4_,
        ordermodel0_.payment_remarks as payment5_4_,
        ordermodel0_.payment_status as payment6_4_,
        ordermodel0_.quantity as quantity4_,
        ordermodel0_.ship_address as ship8_4_,
        ordermodel0_.status as status4_,
        ordermodel0_.total_price as total10_4_ 
    from
        t_order ordermodel0_ cross 
    join
        t_customer customermo1_ 
    where
        ordermodel0_.cust_id=customermo1_.cust_id 
        and customermo1_.email=?
2014-02-03 17:04:48,404 [qtp793057417-35] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@6ef42238[orderId=1,orderNo=059cbd85-517f-430a-824d-a72c91b87d3e,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 17:04:16.077]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 17:04:48,406 [qtp793057417-35] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@65f4f55b[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 17:04:48,406 [qtp793057417-35] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-02-03 17:04:48,406 [qtp793057417-35] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:059cbd85-517f-430a-824d-a72c91b87d3e, orderDetailsSet:null, qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-03 04:04:16, deliverTime:null)
2014-02-03 17:04:48,407 [qtp793057417-35] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@5df2c370[orderId=2,orderNo=32255c96-f798-42e9-a5f4-6ab18ef9b090,quantity=6,status=7,paymentStatus=1,deliverTime=<null>,totalPrice=162.00,orderTime=2014-02-03 17:04:24.607]
2014-02-03 17:04:48,408 [qtp793057417-35] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@65f4f55b[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 17:04:48,408 [qtp793057417-35] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-02-03 17:04:48,408 [qtp793057417-35] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:32255c96-f798-42e9-a5f4-6ab18ef9b090, orderDetailsSet:null, qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:delivered, orderTime:2014-02-03 04:04:24, deliverTime:null)
2014-02-03 17:04:48,408 [qtp793057417-35] INFO  OrderDSImpl                    - getOrderByCustomer end:{} 
2014-02-03 17:04:48,409 [qtp793057417-35] INFO  PizzashackAPIImpl              - getOrdersforCustomer end:{}

Script started on Mon 03 Feb 2014 07:50:37 NZDT
]0;david@david: ~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-webdavid@david:~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web$ mvn test
[INFO] Scanning for projects...
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building pizzashack-distributor-web Maven Webapp 1.0.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ pizzashack-distributor-web ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 32 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ pizzashack-distributor-web ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ pizzashack-distributor-web ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ pizzashack-distributor-web ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] --- maven-surefire-plugin:2.5:test (default-test) @ pizzashack-distributor-web ---
[INFO] Surefire report directory: /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running co.nz.pizzashack.test.OrderProcessTest
2014-02-03 07:50:44,381 [main           ] INFO  GenericWebApplicationContext   - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@5d51981a: startup date [Mon Feb 03 07:50:44 NZDT 2014]; root of context hierarchy
2014-02-03 07:50:44,437 [main           ] INFO  ClassPathBeanDefinitionScanner - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2014-02-03 07:50:45,866 [main           ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [META-INF/cxf/cxf.xml]
2014-02-03 07:50:46,100 [main           ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [META-INF/cxf/cxf-extension-soap.xml]
2014-02-03 07:50:46,126 [main           ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [META-INF/cxf/cxf-servlet.xml]
2014-02-03 07:50:46,147 [main           ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [activitiAppContext.xml]
2014-02-03 07:50:46,373 [main           ] INFO  PropertyPlaceholderConfigurer  - Loading properties file from class path resource [activiti.properties]
2014-02-03 07:50:46,455 [main           ] INFO  redAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2014-02-03 07:50:46,502 [main           ] INFO  GenericWebApplicationContext   - Bean 'infrastructureContextConfiguration' of type [class co.nz.pizzashack.config.InfrastructureContextConfiguration$$EnhancerByCGLIB$$fef3303b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:46,531 [main           ] INFO  MLog                           - MLog clients using log4j logging.
2014-02-03 07:50:46,582 [main           ] INFO  C3P0Registry                   - Initializing c3p0-0.9.1.2 [built 21-May-2007 15:04:56; debug? true; trace: 10]
2014-02-03 07:50:46,625 [main           ] INFO  GenericWebApplicationContext   - Bean 'dataSource' of type [class com.mchange.v2.c3p0.ComboPooledDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:46,712 [main           ] INFO  tainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default'
2014-02-03 07:50:46,798 [main           ] INFO  Version                        - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2014-02-03 07:50:46,802 [main           ] INFO  Version                        - HHH000412: Hibernate Core {4.1.4.Final}
2014-02-03 07:50:46,803 [main           ] INFO  Environment                    - HHH000206: hibernate.properties not found
2014-02-03 07:50:46,804 [main           ] INFO  Environment                    - HHH000021: Bytecode provider name : javassist
2014-02-03 07:50:46,819 [main           ] INFO  Ejb3Configuration              - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2014-02-03 07:50:47,065 [main           ] INFO  ConnectionProviderInitiator    - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2014-02-03 07:50:47,111 [main           ] INFO  AbstractPoolBackedDataSource   - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge1508z1vomu1g4v86ld|60074234, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.h2.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge1508z1vomu1g4v86ld|60074234, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:h2:mem:pizzashackdistributor;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 600, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 2, numHelperThreads -> 3, numThreadsAwaitingCheckoutDefaultUser -> 0, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2014-02-03 07:50:47,243 [main           ] INFO  Dialect                        - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2014-02-03 07:50:47,250 [main           ] INFO  LobCreatorBuilder              - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2014-02-03 07:50:47,257 [main           ] INFO  TransactionFactoryInitiator    - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2014-02-03 07:50:47,260 [main           ] INFO  ASTQueryTranslatorFactory      - HHH000397: Using ASTQueryTranslatorFactory
2014-02-03 07:50:47,284 [main           ] INFO  Version                        - Hibernate Validator 4.2.0.Final
2014-02-03 07:50:47,502 [main           ] INFO  SchemaExport                   - HHH000227: Running hbm2ddl schema export
Hibernate: 
    alter table t_activity_discount_rate 
        drop constraint FKA400C193698FCC4
2014-02-03 07:50:47,513 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_activity_discount_rate drop constraint FKA400C193698FCC4
2014-02-03 07:50:47,513 [main           ] ERROR SchemaExport                   - Table "T_ACTIVITY_DISCOUNT_RATE" not found; SQL statement:

    alter table t_activity_discount_rate 
        drop constraint FKA400C193698FCC4 [42102-160]
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE11193A98D65
2014-02-03 07:50:47,514 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_dept_staff drop constraint FKBC8AE11193A98D65
2014-02-03 07:50:47,514 [main           ] ERROR SchemaExport                   - Table "T_DEPT_STAFF" not found; SQL statement:

    alter table t_dept_staff 
        drop constraint FKBC8AE11193A98D65 [42102-160]
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE111A27DDA4A
2014-02-03 07:50:47,515 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_dept_staff drop constraint FKBC8AE111A27DDA4A
2014-02-03 07:50:47,515 [main           ] ERROR SchemaExport                   - Table "T_DEPT_STAFF" not found; SQL statement:

    alter table t_dept_staff 
        drop constraint FKBC8AE111A27DDA4A [42102-160]
Hibernate: 
    alter table t_order 
        drop constraint FKA0C0C3C3E11F4FCB
2014-02-03 07:50:47,516 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order drop constraint FKA0C0C3C3E11F4FCB
2014-02-03 07:50:47,516 [main           ] ERROR SchemaExport                   - Table "T_ORDER" not found; SQL statement:

    alter table t_order 
        drop constraint FKA0C0C3C3E11F4FCB [42102-160]
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB0883698FCC4
2014-02-03 07:50:47,517 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_pizzashack drop constraint FKE8ACB0883698FCC4
2014-02-03 07:50:47,517 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PIZZASHACK" not found; SQL statement:

    alter table t_order_pizzashack 
        drop constraint FKE8ACB0883698FCC4 [42102-160]
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB088BBCB676E
2014-02-03 07:50:47,518 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_pizzashack drop constraint FKE8ACB088BBCB676E
2014-02-03 07:50:47,518 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PIZZASHACK" not found; SQL statement:

    alter table t_order_pizzashack 
        drop constraint FKE8ACB088BBCB676E [42102-160]
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F33E99148D
2014-02-03 07:50:47,518 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_process drop constraint FK6B8B15F33E99148D
2014-02-03 07:50:47,518 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PROCESS" not found; SQL statement:

    alter table t_order_process 
        drop constraint FK6B8B15F33E99148D [42102-160]
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F3BBCB676E
2014-02-03 07:50:47,519 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_process drop constraint FK6B8B15F3BBCB676E
2014-02-03 07:50:47,519 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PROCESS" not found; SQL statement:

    alter table t_order_process 
        drop constraint FK6B8B15F3BBCB676E [42102-160]
Hibernate: 
    alter table t_order_request_history 
        drop constraint FK5A6B268BBCB676E
2014-02-03 07:50:47,520 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_request_history drop constraint FK5A6B268BBCB676E
2014-02-03 07:50:47,520 [main           ] ERROR SchemaExport                   - Table "T_ORDER_REQUEST_HISTORY" not found; SQL statement:

    alter table t_order_request_history 
        drop constraint FK5A6B268BBCB676E [42102-160]
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CA6130105
2014-02-03 07:50:47,521 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_review_record drop constraint FKFB7A439CA6130105
2014-02-03 07:50:47,521 [main           ] ERROR SchemaExport                   - Table "T_ORDER_REVIEW_RECORD" not found; SQL statement:

    alter table t_order_review_record 
        drop constraint FKFB7A439CA6130105 [42102-160]
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CBBCB676E
2014-02-03 07:50:47,522 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_review_record drop constraint FKFB7A439CBBCB676E
2014-02-03 07:50:47,522 [main           ] ERROR SchemaExport                   - Table "T_ORDER_REVIEW_RECORD" not found; SQL statement:

    alter table t_order_review_record 
        drop constraint FKFB7A439CBBCB676E [42102-160]
Hibernate: 
    alter table t_staff 
        drop constraint FKA0F9FF552DC32C06
2014-02-03 07:50:47,523 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_staff drop constraint FKA0F9FF552DC32C06
2014-02-03 07:50:47,523 [main           ] ERROR SchemaExport                   - Table "T_STAFF" not found; SQL statement:

    alter table t_staff 
        drop constraint FKA0F9FF552DC32C06 [42102-160]
Hibernate: 
    drop table t_activity_discount_rate if exists
Hibernate: 
    drop table t_customer if exists
Hibernate: 
    drop table t_dept if exists
Hibernate: 
    drop table t_dept_staff if exists
Hibernate: 
    drop table t_order if exists
Hibernate: 
    drop table t_order_pizzashack if exists
Hibernate: 
    drop table t_order_process if exists
Hibernate: 
    drop table t_order_request_history if exists
Hibernate: 
    drop table t_order_review_record if exists
Hibernate: 
    drop table t_pizzashack if exists
Hibernate: 
    drop table t_staff if exists
Hibernate: 
    drop table t_user if exists
Hibernate: 
    drop table t_workflow if exists
Hibernate: 
    create table t_activity_discount_rate (
        activity_rate_id bigint generated by default as identity,
        code varchar(255),
        description varchar(255),
        effective_time timestamp,
        expire_time timestamp,
        rate decimal(19,2),
        pizzashack_id bigint,
        primary key (activity_rate_id)
    )
Hibernate: 
    create table t_customer (
        cust_id bigint generated by default as identity,
        address varchar(255),
        credits integer,
        customer_name varchar(255),
        email varchar(255),
        primary key (cust_id)
    )
Hibernate: 
    create table t_dept (
        dept_id bigint generated by default as identity,
        create_date date,
        dept_name varchar(255),
        primary key (dept_id)
    )
Hibernate: 
    create table t_dept_staff (
        staff_dept_id bigint generated by default as identity,
        join_date date,
        dept_id bigint,
        staff_id bigint,
        primary key (staff_dept_id)
    )
Hibernate: 
    create table t_order (
        order_id bigint generated by default as identity,
        deliver_time timestamp,
        order_no varchar(255),
        order_time timestamp,
        payment_remarks varchar(255),
        payment_status integer,
        quantity integer,
        ship_address varchar(255),
        status integer,
        total_price decimal(19,2),
        cust_id bigint,
        primary key (order_id)
    )
Hibernate: 
    create table t_order_pizzashack (
        order_pizza_id bigint generated by default as identity,
        qty integer,
        total_price decimal(19,2),
        order_id bigint,
        pizzashack_id bigint,
        primary key (order_pizza_id)
    )
Hibernate: 
    create table t_order_process (
        order_process_id bigint generated by default as identity,
        active_process_definition_id varchar(255),
        active_process_instance_id varchar(255),
        complete_time time,
        create_time time,
        execution_id varchar(255),
        main_process_definition_id varchar(255),
        main_process_instance_id varchar(255),
        operator_id bigint,
        order_id bigint,
        primary key (order_process_id)
    )
Hibernate: 
    create table t_order_request_history (
        message_id varchar(255) generated by default as identity,
        created_at time,
        processor_name varchar(255),
        order_id bigint,
        primary key (message_id)
    )
Hibernate: 
    create table t_order_review_record (
        review_record_id bigint generated by default as identity,
        content varchar(255),
        create_time time,
        review_status integer,
        order_id bigint,
        reviewer_id bigint,
        primary key (review_record_id)
    )
Hibernate: 
    create table t_pizzashack (
        pizzashack_id bigint generated by default as identity,
        description varchar(255),
        icon varchar(255),
        name varchar(255),
        price decimal(19,2),
        primary key (pizzashack_id)
    )
Hibernate: 
    create table t_staff (
        staff_id bigint generated by default as identity,
        create_date date,
        email varchar(255),
        first_name varchar(255),
        identity varchar(255),
        last_name varchar(255),
        level integer,
        role integer,
        user_id bigint,
        primary key (staff_id)
    )
Hibernate: 
    create table t_user (
        user_id bigint generated by default as identity,
        create_time time,
        password varchar(255),
        user_name varchar(255),
        primary key (user_id)
    )
Hibernate: 
    create table t_workflow (
        workflow_id bigint generated by default as identity,
        category varchar(255),
        create_time time,
        deploy_id varchar(255),
        workflow_name varchar(255),
        process_definition_id varchar(255),
        process_definition_key varchar(255),
        primary key (workflow_id)
    )
Hibernate: 
    alter table t_activity_discount_rate 
        add constraint FKA400C193698FCC4 
        foreign key (pizzashack_id) 
        references t_pizzashack
Hibernate: 
    alter table t_dept_staff 
        add constraint FKBC8AE11193A98D65 
        foreign key (dept_id) 
        references t_dept
Hibernate: 
    alter table t_dept_staff 
        add constraint FKBC8AE111A27DDA4A 
        foreign key (staff_id) 
        references t_staff
Hibernate: 
    alter table t_order 
        add constraint FKA0C0C3C3E11F4FCB 
        foreign key (cust_id) 
        references t_customer
Hibernate: 
    alter table t_order_pizzashack 
        add constraint FKE8ACB0883698FCC4 
        foreign key (pizzashack_id) 
        references t_pizzashack
Hibernate: 
    alter table t_order_pizzashack 
        add constraint FKE8ACB088BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_process 
        add constraint FK6B8B15F33E99148D 
        foreign key (operator_id) 
        references t_user
Hibernate: 
    alter table t_order_process 
        add constraint FK6B8B15F3BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_request_history 
        add constraint FK5A6B268BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_review_record 
        add constraint FKFB7A439CA6130105 
        foreign key (reviewer_id) 
        references t_staff
Hibernate: 
    alter table t_order_review_record 
        add constraint FKFB7A439CBBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_staff 
        add constraint FKA0F9FF552DC32C06 
        foreign key (user_id) 
        references t_user
2014-02-03 07:50:47,557 [main           ] INFO  SchemaExport                   - HHH000230: Schema export complete
2014-02-03 07:50:47,591 [main           ] INFO  GenericWebApplicationContext   - Bean 'entityManagerFactory' of type [class org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,626 [main           ] INFO  GenericWebApplicationContext   - Bean 'entityManagerFactory' of type [class com.sun.proxy.$Proxy44] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,832 [main           ] INFO  GenericWebApplicationContext   - Bean 'cxf' of type [class org.apache.cxf.bus.spring.SpringBus] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,836 [main           ] WARN  OldSpringSupport               - Import of META-INF/cxf/cxf-extension-soap.xml has been deprecated and is unnecessary.
2014-02-03 07:50:47,841 [main           ] INFO  GenericWebApplicationContext   - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerByCGLIB$$813a6ae2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,852 [main           ] INFO  GenericWebApplicationContext   - Bean 'transactionAttributeSource' of type [class org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,859 [main           ] INFO  GenericWebApplicationContext   - Bean 'transactionInterceptor' of type [class org.springframework.transaction.interceptor.TransactionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,864 [main           ] INFO  GenericWebApplicationContext   - Bean 'org.springframework.transaction.config.internalTransactionAdvisor' of type [class org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,873 [main           ] INFO  GenericWebApplicationContext   - Bean 'transactionManager' of type [class org.springframework.orm.jpa.JpaTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,874 [main           ] INFO  GenericWebApplicationContext   - Bean 'camelJdbcIdempotentConfig' of type [class co.nz.pizzashack.config.CamelJdbcIdempotentConfig$$EnhancerByCGLIB$$65c41669] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,890 [main           ] INFO  GenericWebApplicationContext   - Bean 'sqlComponent' of type [class org.apache.camel.component.sql.SqlComponent] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,895 [main           ] INFO  GenericWebApplicationContext   - Bean 'camelCxfConfig' of type [class co.nz.pizzashack.config.CamelCxfConfig$$EnhancerByCGLIB$$8fcc2d8e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,925 [main           ] INFO  GenericWebApplicationContext   - Bean 'billingInboundEndpoint' of type [class org.apache.camel.component.cxf.CxfEndpoint] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,950 [main           ] INFO  GenericWebApplicationContext   - Bean 'billingVariableTransformer' of type [class co.nz.pizzashack.integration.mapping.BillingVariableTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:48,158 [main           ] INFO  GenericWebApplicationContext   - Bean 'billingFormatTransformer' of type [class co.nz.pizzashack.integration.mapping.BillingFormatTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:48,160 [main           ] INFO  GenericWebApplicationContext   - Bean 'billingResponseMergeProcessor' of type [class co.nz.pizzashack.integration.mapping.BillingResponseMergeProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:48,163 [main           ] INFO  GenericWebApplicationContext   - Bean 'sleepBean' of type [class co.nz.pizzashack.integration.utils.SleepBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:48,163 [main           ] INFO  GenericWebApplicationContext   - Bean 'billingProcessRoute' of type [class co.nz.pizzashack.integration.route.BillingProcessRoute] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:48,272 [main           ] INFO  GenericWebApplicationContext   - Bean 'org.activiti.engine.impl.rules.RulesDeployer#39a83e27' of type [class org.activiti.engine.impl.rules.RulesDeployer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:48,274 [main           ] INFO  GenericWebApplicationContext   - Bean 'processEngineConfiguration' of type [class org.activiti.spring.SpringProcessEngineConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:48,277 [main           ] INFO  GenericWebApplicationContext   - Bean 'processEngine' of type [class org.activiti.spring.ProcessEngineFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,330 [main           ] INFO  DbSqlSession                   - performing create on engine with resource org/activiti/db/create/activiti.h2.create.engine.sql
2014-02-03 07:50:49,349 [main           ] INFO  DbSqlSession                   - performing create on history with resource org/activiti/db/create/activiti.h2.create.history.sql
2014-02-03 07:50:49,354 [main           ] INFO  DbSqlSession                   - performing create on identity with resource org/activiti/db/create/activiti.h2.create.identity.sql
2014-02-03 07:50:49,357 [main           ] INFO  ProcessEngineImpl              - ProcessEngine default created
2014-02-03 07:50:49,358 [main           ] INFO  GenericWebApplicationContext   - Bean 'processEngine' of type [class org.activiti.engine.impl.ProcessEngineImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,363 [main           ] INFO  GenericWebApplicationContext   - Bean 'runtimeService' of type [class org.activiti.engine.impl.RuntimeServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,368 [main           ] INFO  GenericWebApplicationContext   - Bean 'taskService' of type [class org.activiti.engine.impl.TaskServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,371 [main           ] INFO  GenericWebApplicationContext   - Bean 'historyService' of type [class org.activiti.engine.impl.HistoryServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,376 [main           ] INFO  GenericWebApplicationContext   - Bean 'repositoryService' of type [class org.activiti.engine.impl.RepositoryServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,379 [main           ] INFO  GenericWebApplicationContext   - Bean 'managementService' of type [class org.activiti.engine.impl.ManagementServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,382 [main           ] INFO  GenericWebApplicationContext   - Bean 'identityService' of type [class org.activiti.engine.impl.IdentityServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,383 [main           ] INFO  GenericWebApplicationContext   - Bean 'activitiFacade' of type [class co.nz.pizzashack.wf.ActivitiFacade] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,387 [main           ] INFO  GenericWebApplicationContext   - Bean 'userConverter' of type [class co.nz.pizzashack.data.converter.UserConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,402 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,402 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,405 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,414 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#1' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,470 [main           ] INFO  GenericWebApplicationContext   - Bean 'workflowRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,508 [main           ] INFO  GenericWebApplicationContext   - Bean 'workflowRepository' of type [class com.sun.proxy.$Proxy55] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,512 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#2' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,512 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#2' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,513 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#2' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,513 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#3' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,522 [main           ] INFO  GenericWebApplicationContext   - Bean 'pizzashackRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,534 [main           ] INFO  GenericWebApplicationContext   - Bean 'pizzashackRepository' of type [class com.sun.proxy.$Proxy58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,536 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#4' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,536 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#4' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,537 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#4' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,537 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#5' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,545 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderProcessRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,551 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderProcessRepository' of type [class com.sun.proxy.$Proxy59] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,553 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#6' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,553 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#6' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,553 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#6' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,554 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#7' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,562 [main           ] INFO  GenericWebApplicationContext   - Bean 'userRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,566 [main           ] INFO  GenericWebApplicationContext   - Bean 'userRepository' of type [class com.sun.proxy.$Proxy60] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,568 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#8' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,568 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#8' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,569 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#8' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,569 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#9' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,577 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,581 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderRepository' of type [class com.sun.proxy.$Proxy61] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,608 [main           ] INFO  GenericWebApplicationContext   - Bean 'customerConverter' of type [class co.nz.pizzashack.data.converter.CustomerConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,613 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderDetailConverter' of type [class co.nz.pizzashack.data.converter.OrderDetailConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,613 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderConverter' of type [class co.nz.pizzashack.data.converter.OrderConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,614 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderProcessConverter' of type [class co.nz.pizzashack.data.converter.OrderProcessConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,618 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#10' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,618 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#10' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,619 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#10' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,619 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#11' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,627 [main           ] INFO  GenericWebApplicationContext   - Bean 'departmentRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,632 [main           ] INFO  GenericWebApplicationContext   - Bean 'departmentRepository' of type [class com.sun.proxy.$Proxy62] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,633 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderProcessAccessor' of type [class co.nz.pizzashack.ds.OrderProcessAccessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,638 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderReviewRecordConverter' of type [class co.nz.pizzashack.data.converter.OrderReviewRecordConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,639 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#12' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,639 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#12' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,639 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#12' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,640 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#13' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,647 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderReviewRecordRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,652 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderReviewRecordRepository' of type [class com.sun.proxy.$Proxy63] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,654 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#14' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,655 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#14' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,655 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#14' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,656 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#15' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,663 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderPizzashackRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,667 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderPizzashackRepository' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,670 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#16' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,670 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#16' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,670 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#16' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,670 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#17' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,677 [main           ] INFO  GenericWebApplicationContext   - Bean 'customerRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,681 [main           ] INFO  GenericWebApplicationContext   - Bean 'customerRepository' of type [class com.sun.proxy.$Proxy65] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,682 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderProcessDSImpl' of type [class co.nz.pizzashack.ds.OrderProcessDSImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,688 [main           ] INFO  GenericWebApplicationContext   - Bean 'billingInboundProcessor' of type [class co.nz.pizzashack.integration.processor.BillingInboundProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,689 [main           ] INFO  GenericWebApplicationContext   - Bean 'billingInboundWsRoute' of type [class co.nz.pizzashack.integration.route.BillingInboundWsRoute] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,707 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderJdbcMessageIdRepository' of type [class org.apache.camel.processor.idempotent.jdbc.JdbcMessageIdRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,713 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderProcessFormatTransformer' of type [class co.nz.pizzashack.integration.mapping.OrderProcessFormatTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,721 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#18' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,721 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#18' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,721 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#18' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,722 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#19' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,728 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderRequestHistoryRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,732 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderRequestHistoryRepository' of type [class com.sun.proxy.$Proxy70] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,734 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderRequestProcessor' of type [class co.nz.pizzashack.integration.processor.OrderRequestProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,736 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderDuplicatedReqProcessor' of type [class co.nz.pizzashack.integration.processor.OrderDuplicatedReqProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,737 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderProcessRoute' of type [class co.nz.pizzashack.integration.route.OrderProcessRoute] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,784 [main           ] INFO  GenericWebApplicationContext   - Bean 'activeMQConnectionFactory' of type [class org.apache.activemq.ActiveMQConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,945 [main           ] INFO  GenericWebApplicationContext   - Bean 'pooledConnectionFactory' of type [class org.apache.activemq.pool.PooledConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,965 [main           ] INFO  GenericWebApplicationContext   - Bean 'jmsTransactionManager' of type [class org.springframework.jms.connection.JmsTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,976 [main           ] INFO  GenericWebApplicationContext   - Bean 'jmsComponent' of type [class org.apache.camel.component.jms.JmsComponent] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,981 [main           ] INFO  GenericWebApplicationContext   - Bean 'camelSpringConfig' of type [class co.nz.pizzashack.config.CamelSpringConfig$$EnhancerByCGLIB$$cf4c2422] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:50,018 [main           ] INFO  DefaultListableBeanFactory     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@126e4ecd: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,applicationConfiguration,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,viewConfiguration,webMvcContextConfiguration,logoutController,loginController,indexController,userController,adminIndexController,departmentController,orderController,orderQueryController,staffController,billingProcessRespTransformer,billingProcessReqTransformer,orderProcessFormatTransformer,billingVariableTransformer,billingResponseMergeProcessor,billingFormatTransformer,billingInboundProcessor,orderDuplicatedReqProcessor,orderRequestProcessor,billingProcessRoute,billingInboundWsRoute,orderProcessRoute,sleepBean,pizzashackAPIImpl,camelSpringConfig,camelJdbcIdempotentConfig,camelCxfConfig,orderProcessDSImpl,customerDSImpl,workflowDSImpl,pizzashackDSImpl,userDSImpl,orderProcessAccessor,orderProcessQueryDSImpl,staffDSImpl,orderDSImpl,departmentDSImpl,initialDataConfig,pizzashackCaculator,emailExecutionListener,endExecutionListener,caculationMergeExecutionListener,orderMainTransitionExecutionListener,toManualReviewExecutionListener,outOfBillingProcessExecutionListener,outOfCoreProcessExecutionListener,billingRespExecutionListener,customerConverter,orderProcessConverter,staffConverter,userConverter,departmentConverter,workflowConverter,orderReviewRecordConverter,orderConverter,activityDiscountRateConverter,orderDetailConverter,pizzashackDataInitialConfiguration,pizzashackItemBuilder,infrastructureContextConfiguration,activitiFacade,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0,org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0,customerRepository,orderRequestHistoryRepository,workflowRepository,orderRepository,pizzashackRepository,orderProcessRepository,activityDiscountRateRepository,departmentRepository,orderPizzashackRepository,staffDepartmentRepository,staffRepository,userRepository,orderReviewRecordRepository,viewResolver,messageSource,org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration,requestMappingHandlerMapping,mvcContentNegotiationManager,viewControllerHandlerMapping,beanNameHandlerMapping,resourceHandlerMapping,defaultServletHandlerMapping,requestMappingHandlerAdapter,mvcConversionService,mvcValidator,httpRequestHandlerAdapter,simpleControllerHandlerAdapter,handlerExceptionResolver,sessionAttributeProcessor,localeChangeInterceptor,localeResolver,simpleMappingExceptionResolver,multipartResolver,activeMQConnectionFactory,pooledConnectionFactory,jmsComponent,jmsTransactionManager,camelBeanPostProcessor,camelContext,custThreadPoolProfile,sqlComponent,orderJdbcMessageIdRepository,billingInboundEndpoint,loggingOutInterceptor,cxf,org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor,org.apache.cxf.bus.spring.Jsr250BeanPostProcessor,org.apache.cxf.bus.spring.BusExtensionPostProcessor,org.apache.cxf.binding.soap.SoapBindingFactory,org.apache.cxf.binding.soap.SoapTransportFactory,org.apache.cxf.binding.soap.customEditorConfigurer,setupWorkflowData,setupData,org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration,org.springframework.transaction.config.internalTransactionAdvisor,transactionAttributeSource,transactionInterceptor,dataSource,transactionManager,entityManagerFactory,placeholderConfig,processEngineConfiguration,processEngine,repositoryService,runtimeService,taskService,historyService,managementService,identityService]; root of factory hierarchy
2014-02-03 07:50:50,321 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/logout],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LogoutController.logout(javax.servlet.http.HttpSession)
2014-02-03 07:50:50,322 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/login],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LoginController.handleLogin(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws co.nz.pizzashack.AuthenticationException
2014-02-03 07:50:50,322 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/login],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LoginController.showLoginPage(org.springframework.ui.Model)
2014-02-03 07:50:50,322 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/index],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.IndexController.index(org.springframework.ui.Model,co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-02-03 07:50:50,324 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/createUser],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public co.nz.pizzashack.data.dto.UserDto co.nz.pizzashack.controller.UserController.createUser(co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-02-03 07:50:50,324 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/{userId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.deleteUser(java.lang.Long) throws java.lang.Exception
2014-02-03 07:50:50,324 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,324 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/{userId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,324 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/update/{userId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,325 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/check/{userName}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.checkUser(java.lang.String) throws java.lang.Exception
2014-02-03 07:50:50,325 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,325 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/search],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.search(co.nz.pizzashack.data.dto.UserDto,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,325 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.create(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 07:50:50,325 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.update(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 07:50:50,326 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/adminIndex],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.AdminIndexController.index(org.springframework.ui.Model,co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-02-03 07:50:50,327 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,327 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/{deptId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,327 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/update/{deptId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,328 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/selectdepts],methods=[GET],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.util.Set<co.nz.pizzashack.data.dto.DepartmentDto> co.nz.pizzashack.controller.DepartmentController.select() throws java.lang.Exception
2014-02-03 07:50:50,328 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,328 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/{deptId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.delete(java.lang.Long) throws java.lang.Exception
2014-02-03 07:50:50,328 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/search],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.search(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,328 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.create(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 07:50:50,329 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.update(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 07:50:50,329 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/{orderProcessId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.showOrderProcess(java.lang.Long,org.springframework.ui.Model,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-02-03 07:50:50,329 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/claimReview/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.claimReviewTask(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-02-03 07:50:50,330 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/review],methods=[POST],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.reviewOrder(co.nz.pizzashack.data.dto.OrderReviewRecordDto,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-02-03 07:50:50,330 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderQuery/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderQueryController.show(java.lang.String,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,330 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderQuery/showHistory/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.util.Set<co.nz.pizzashack.data.dto.ProcessActivityDto> co.nz.pizzashack.controller.OrderQueryController.showHistory(java.lang.String) throws java.lang.Exception
2014-02-03 07:50:50,331 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderQuery/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderQueryController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,332 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,332 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/{staffId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,332 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/update/{staffId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,332 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,332 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/{staffId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.delete(java.lang.Long) throws java.lang.Exception
2014-02-03 07:50:50,332 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.create(co.nz.pizzashack.data.dto.StaffDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 07:50:50,333 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.update(co.nz.pizzashack.data.dto.StaffDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 07:50:50,365 [main           ] INFO  SimpleUrlHandlerMapping        - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2014-02-03 07:50:50,368 [main           ] INFO  SimpleUrlHandlerMapping        - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler]
2014-02-03 07:50:50,838 [main           ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) is starting
2014-02-03 07:50:50,839 [main           ] INFO  ManagedManagementStrategy      - JMX is enabled
2014-02-03 07:50:50,930 [main           ] INFO  DefaultTypeConverter           - Loaded 194 type converters
Hibernate: 
    SELECT
        1 
    FROM
        T_ORDER_REQUEST_HISTORY 
    WHERE
        1 = 0
2014-02-03 07:50:51,204 [main           ] INFO  SpringCamelContext             - StreamCaching is not in use. If using streams then its recommended to enable stream caching. See more details at http://camel.apache.org/stream-caching.html
2014-02-03 07:50:51,431 [main           ] INFO  BusApplicationContext          - Refreshing org.apache.cxf.bus.spring.BusApplicationContext@74e5d63d: startup date [Mon Feb 03 07:50:51 NZDT 2014]; parent: org.springframework.web.context.support.GenericWebApplicationContext@5d51981a
2014-02-03 07:50:51,455 [main           ] INFO  DefaultListableBeanFactory     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2cac4d10: defining beans []; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@126e4ecd
2014-02-03 07:50:51,467 [main           ] INFO  ReflectionServiceFactoryBean   - Creating Service {http://ws.integration.pizzashack.nz.co/}BillingProcessWebServicesService from class co.nz.pizzashack.integration.ws.BillingProcessWebServices
2014-02-03 07:50:51,824 [main           ] INFO  ServerImpl                     - Setting the server's publish address to be /billingWs
2014-02-03 07:50:51,845 [main           ] INFO  SpringCamelContext             - Route: activitiBillingProcess started and consuming from: Endpoint[activiti://orderBillingProcess:billingIntegration?copyVariablesToBodyAsMap=true]
2014-02-03 07:50:51,846 [main           ] INFO  SpringCamelContext             - Route: direct:billingIntegration started and consuming from: Endpoint[direct://billingIntegration]
2014-02-03 07:50:51,847 [main           ] INFO  SpringCamelContext             - Route: direct:receiveBillingQueue started and consuming from: Endpoint[direct://receiveBillingQueue]
2014-02-03 07:50:51,848 [main           ] INFO  SpringCamelContext             - Route: route1 started and consuming from: Endpoint[direct://doBillingIntegration]
2014-02-03 07:50:51,856 [main           ] INFO  SpringCamelContext             - Route: orderProcessRoute started and consuming from: Endpoint[jms://queue:pizzashackOrderInbound]
2014-02-03 07:50:51,857 [main           ] INFO  SpringCamelContext             - Route: direct:orderDuplicatedProcess started and consuming from: Endpoint[direct://orderDuplicatedProcess]
2014-02-03 07:50:51,859 [main           ] INFO  SpringCamelContext             - Route: direct:orderRegularProcess started and consuming from: Endpoint[direct://orderRegularProcess]
2014-02-03 07:50:51,861 [main           ] INFO  SpringCamelContext             - Route: cxf:bean:billingInboundEndpoint started and consuming from: Endpoint[cxf://bean:billingInboundEndpoint]
2014-02-03 07:50:51,869 [main           ] INFO  SpringCamelContext             - Total 8 routes, of which 8 is started.
2014-02-03 07:50:51,870 [main           ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) started in 1.032 seconds
2014-02-03 07:50:51,884 [main           ] INFO  WorkflowInitialDataSetup       - initialize start:{}
2014-02-03 07:50:51,891 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 07:50:51,891 [main           ] INFO  UserDSImpl                     - usernamedavid
2014-02-03 07:50:51,892 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 07:50:52,077 [main           ] INFO  UserDSImpl                     - userId:1 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 07:50:52,158 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@3c8f706e[userId=1,username=david,password=MTIzNDU2,createTime=Mon Feb 03 07:50:52 NZDT 2014]
2014-02-03 07:50:52,203 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-02 06:50:52)
2014-02-03 07:50:52,204 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-02 06:50:52)
2014-02-03 07:50:52,206 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 07:50:52,206 [main           ] INFO  UserDSImpl                     - usernamebrad
2014-02-03 07:50:52,206 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 07:50:52,209 [main           ] INFO  UserDSImpl                     - userId:2 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 07:50:52,211 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@5eb59e97[userId=2,username=brad,password=MTIzNDU2,createTime=Mon Feb 03 07:50:52 NZDT 2014]
2014-02-03 07:50:52,211 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-02 06:50:52)
2014-02-03 07:50:52,211 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-02 06:50:52)
2014-02-03 07:50:52,212 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 07:50:52,212 [main           ] INFO  UserDSImpl                     - usernamejohn
2014-02-03 07:50:52,212 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 07:50:52,215 [main           ] INFO  UserDSImpl                     - userId:3 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 07:50:52,217 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@13e7ba33[userId=3,username=john,password=MTIzNDU2,createTime=Mon Feb 03 07:50:52 NZDT 2014]
2014-02-03 07:50:52,218 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-02 06:50:52)
2014-02-03 07:50:52,218 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-02 06:50:52)
2014-02-03 07:50:52,218 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 07:50:52,218 [main           ] INFO  UserDSImpl                     - usernamegeneral
2014-02-03 07:50:52,218 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 07:50:52,221 [main           ] INFO  UserDSImpl                     - userId:4 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 07:50:52,223 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@7dc03fd8[userId=4,username=general,password=MTIzNDU2,createTime=Mon Feb 03 07:50:52 NZDT 2014]
2014-02-03 07:50:52,224 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:2014-02-02 06:50:52)
2014-02-03 07:50:52,224 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:2014-02-02 06:50:52)
2014-02-03 07:50:52,235 [main           ] INFO  DepartmentDSImpl               - createDepartment start:co.nz.pizzashack.data.dto.DepartmentDto(deptId:null, deptName:Order manager, createDate:null) 
Hibernate: 
    select
        department0_.dept_id as dept1_8_,
        department0_.create_date as create2_8_,
        department0_.dept_name as dept3_8_ 
    from
        t_dept department0_ 
    where
        department0_.dept_name=? limit ?
2014-02-03 07:50:52,241 [main           ] INFO  DepartmentConverter            - toModel start:{} co.nz.pizzashack.data.dto.DepartmentDto(deptId:null, deptName:Order manager, createDate:null)
2014-02-03 07:50:52,246 [main           ] INFO  DepartmentConverter            - toModel end:{} co.nz.pizzashack.data.model.DepartmentModel@1efa4cb3[deptId=<null>,deptName=Order manager,createDate=<null>,staffDepartments=<null>]
Hibernate: 
    insert 
    into
        t_dept
        (dept_id, create_date, dept_name) 
    values
        (null, ?, ?)
Hibernate: 
    insert 
    into
        ACT_ID_GROUP
        (ID_, REV_, NAME_, TYPE_)     
    values
        (       ?,       1,        ?,       ?     )
2014-02-03 07:50:52,255 [main           ] INFO  DepartmentConverter            - toDto start:{} co.nz.pizzashack.data.model.DepartmentModel@1efa4cb3[deptId=1,deptName=Order manager,createDate=Mon Feb 03 07:50:52 NZDT 2014,staffDepartments=<null>]
2014-02-03 07:50:52,257 [main           ] INFO  DepartmentConverter            - toDto end:{} co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02)
2014-02-03 07:50:52,257 [main           ] INFO  DepartmentDSImpl               - createDepartment end:co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02) 
2014-02-03 07:50:52,258 [main           ] INFO  WorkflowInitialDataSetup       - department:co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02) 
2014-02-03 07:50:52,279 [main           ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:null, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-02 06:50:52)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-02-03 07:50:52,285 [main           ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:null, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-02 06:50:52))
2014-02-03 07:50:52,304 [main           ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@5e4cc024[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@daabda[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-02-03 07:50:52,355 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@5e4cc024[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@daabda[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=Mon Feb 03 07:50:52 NZDT 2014] 
2014-02-03 07:50:52,355 [main           ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = ?
Hibernate: 
    update
        ACT_GE_PROPERTY      
    SET
        REV_ = ?,
        VALUE_ = ?      
    where
        NAME_ = ?       
        and REV_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-02-03 07:50:52,375 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-02-03 07:50:52,384 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@5e4cc024[staffId=1,individual=co.nz.pizzashack.data.model.IndividualModel@daabda[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=Mon Feb 03 07:50:52 NZDT 2014]
2014-02-03 07:50:52,392 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:1, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-02-03 07:50:52,393 [main           ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:1, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-02-03 07:50:52,396 [main           ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:null, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-02 06:50:52)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-02-03 07:50:52,399 [main           ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:null, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-02 06:50:52))
2014-02-03 07:50:52,399 [main           ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@5ae125e0[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@737dc3bc[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-02-03 07:50:52,409 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@5ae125e0[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@737dc3bc[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=Mon Feb 03 07:50:52 NZDT 2014] 
2014-02-03 07:50:52,409 [main           ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-02-03 07:50:52,414 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-02-03 07:50:52,418 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@5ae125e0[staffId=2,individual=co.nz.pizzashack.data.model.IndividualModel@737dc3bc[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=Mon Feb 03 07:50:52 NZDT 2014]
2014-02-03 07:50:52,420 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:2, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-02-03 07:50:52,420 [main           ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:2, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-02-03 07:50:52,421 [main           ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:null, departments:null, role:manager, level:junior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-02 06:50:52)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-02-03 07:50:52,424 [main           ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:null, departments:null, role:manager, level:junior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-02 06:50:52))
2014-02-03 07:50:52,424 [main           ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@433c1fa0[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@204063dc[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-02-03 07:50:52,430 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@433c1fa0[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@204063dc[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=Mon Feb 03 07:50:52 NZDT 2014] 
2014-02-03 07:50:52,430 [main           ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-02-03 07:50:52,435 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-02-03 07:50:52,438 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@433c1fa0[staffId=3,individual=co.nz.pizzashack.data.model.IndividualModel@204063dc[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=Mon Feb 03 07:50:52 NZDT 2014]
2014-02-03 07:50:52,439 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:3, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:null, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-02-03 07:50:52,439 [main           ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:3, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:null, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-02-03 07:50:52,440 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-02-03 07:50:52,448 [main           ] INFO  BpmnDeployer                   - Processing resource bpmn/OrderBillingProcess.bpmn20.xml
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 117: Having multiple <family> in <alias> isn't supported and may not work as expected
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-02-03 07:50:53,086 [main           ] INFO  RulesDeployer                  - Processing resource bpmn/OrderBillingProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:50:53,098 [main           ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderBillingProcess:1:7]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-02-03 07:50:53,103 [main           ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@531dfd87[wfId=1,name=orderBillingProcess,deployId=4,processDefinitionKey=orderBillingProcess,processDefinitionId=orderBillingProcess:1:7,createTime=Mon Feb 03 07:50:52 NZDT 2014]
2014-02-03 07:50:53,114 [main           ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-02-02 06:50:52)
2014-02-03 07:50:53,114 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-02-02 06:50:52)
2014-02-03 07:50:53,115 [main           ] INFO  WorkflowInitialDataSetup       - deploy billing process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-02-02 06:50:52) 
2014-02-03 07:50:53,115 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-02-03 07:50:53,117 [main           ] INFO  BpmnDeployer                   - Processing resource bpmn/OrdercoreProcess.bpmn20.xml
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-02-03 07:50:53,256 [main           ] INFO  RulesDeployer                  - Processing resource bpmn/OrdercoreProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:50:53,263 [main           ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderCoreProcess:1:11]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-02-03 07:50:53,264 [main           ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@76a410c6[wfId=2,name=orderCoreProcess,deployId=8,processDefinitionKey=orderCoreProcess,processDefinitionId=orderCoreProcess:1:11,createTime=Mon Feb 03 07:50:53 NZDT 2014]
2014-02-03 07:50:53,264 [main           ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-02-02 06:50:53)
2014-02-03 07:50:53,265 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-02-02 06:50:53)
2014-02-03 07:50:53,265 [main           ] INFO  WorkflowInitialDataSetup       - deploy core process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-02-02 06:50:53) 
2014-02-03 07:50:53,265 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-02-03 07:50:53,267 [main           ] INFO  BpmnDeployer                   - Processing resource bpmn/OrderlocalProcess.bpmn20.xml
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-02-03 07:50:53,466 [main           ] INFO  RulesDeployer                  - Processing resource bpmn/OrderlocalProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:50:53,476 [main           ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderlocalProcess:1:15]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-02-03 07:50:53,478 [main           ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@180ee49d[wfId=3,name=orderlocalProcess,deployId=12,processDefinitionKey=orderlocalProcess,processDefinitionId=orderlocalProcess:1:15,createTime=Mon Feb 03 07:50:53 NZDT 2014]
2014-02-03 07:50:53,478 [main           ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 06:50:53)
2014-02-03 07:50:53,478 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 06:50:53)
2014-02-03 07:50:53,479 [main           ] INFO  WorkflowInitialDataSetup       - deploy local main process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 06:50:53) 
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
2014-02-03 07:50:53,526 [main           ] INFO  StaffDSImpl                    - getStaffsByName start:David
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.first_name=? 
        and staffmodel0_.last_name=?
2014-02-03 07:50:53,538 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@54d8248e[staffId=1,individual=co.nz.pizzashack.data.model.IndividualModel@485144ce[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=2014-02-03]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:50:53,548 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@78bf5692[userId=1,username=david,password=MTIzNDU2,createTime=07:50:52]
2014-02-03 07:50:53,553 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:1969-12-31 07:50:52)
Hibernate: 
    select
        staffdepar0_.staff_id as staff4_12_1_,
        staffdepar0_.staff_dept_id as staff1_1_,
        staffdepar0_.staff_dept_id as staff1_1_0_,
        staffdepar0_.join_date as join2_1_0_,
        staffdepar0_.dept_id as dept3_1_0_,
        staffdepar0_.staff_id as staff4_1_0_ 
    from
        t_dept_staff staffdepar0_ 
    where
        staffdepar0_.staff_id=?
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        staffdepar0_.dept_id as dept3_8_1_,
        staffdepar0_.staff_dept_id as staff1_1_,
        staffdepar0_.staff_dept_id as staff1_1_0_,
        staffdepar0_.join_date as join2_1_0_,
        staffdepar0_.dept_id as dept3_1_0_,
        staffdepar0_.staff_id as staff4_1_0_ 
    from
        t_dept_staff staffdepar0_ 
    where
        staffdepar0_.dept_id=?
2014-02-03 07:50:53,574 [main           ] INFO  DepartmentConverter            - toDto start:{} co.nz.pizzashack.data.model.DepartmentModel@7b5dc3af[deptId=1,deptName=Order manager,createDate=2014-02-03,staffDepartments=[co.nz.pizzashack.data.model.StaffDepartmentModel@29dd2d9e[staffDeptId=1,joinDate=2014-02-03], co.nz.pizzashack.data.model.StaffDepartmentModel@5d61b8d5[staffDeptId=2,joinDate=2014-02-03], co.nz.pizzashack.data.model.StaffDepartmentModel@16d712fd[staffDeptId=3,joinDate=2014-02-03]]]
2014-02-03 07:50:53,578 [main           ] INFO  DepartmentConverter            - toDto end:{} co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02)
2014-02-03 07:50:53,587 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:1, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:2014-02-02, departments:[co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02)], role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:1969-12-31 07:50:52))
2014-02-03 07:50:53,588 [main           ] INFO  StaffDSImpl                    - getStaffsByName end:{}
2014-02-03 07:50:53,589 [main           ] INFO  StaffDSImpl                    - getStaffsByName start:Brad
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.first_name=? 
        and staffmodel0_.last_name=?
2014-02-03 07:50:53,591 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@691b3a73[staffId=2,individual=co.nz.pizzashack.data.model.IndividualModel@16b8fbd8[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=2014-02-03]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:50:53,593 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@440ff6a3[userId=2,username=brad,password=MTIzNDU2,createTime=07:50:52]
2014-02-03 07:50:53,594 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:1969-12-31 07:50:52)
Hibernate: 
    select
        staffdepar0_.staff_id as staff4_12_1_,
        staffdepar0_.staff_dept_id as staff1_1_,
        staffdepar0_.staff_dept_id as staff1_1_0_,
        staffdepar0_.join_date as join2_1_0_,
        staffdepar0_.dept_id as dept3_1_0_,
        staffdepar0_.staff_id as staff4_1_0_ 
    from
        t_dept_staff staffdepar0_ 
    where
        staffdepar0_.staff_id=?
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        staffdepar0_.dept_id as dept3_8_1_,
        staffdepar0_.staff_dept_id as staff1_1_,
        staffdepar0_.staff_dept_id as staff1_1_0_,
        staffdepar0_.join_date as join2_1_0_,
        staffdepar0_.dept_id as dept3_1_0_,
        staffdepar0_.staff_id as staff4_1_0_ 
    from
        t_dept_staff staffdepar0_ 
    where
        staffdepar0_.dept_id=?
2014-02-03 07:50:53,599 [main           ] INFO  DepartmentConverter            - toDto start:{} co.nz.pizzashack.data.model.DepartmentModel@7bbf88b7[deptId=1,deptName=Order manager,createDate=2014-02-03,staffDepartments=[co.nz.pizzashack.data.model.StaffDepartmentModel@20ff2c0f[staffDeptId=1,joinDate=2014-02-03], co.nz.pizzashack.data.model.StaffDepartmentModel@3db1c910[staffDeptId=2,joinDate=2014-02-03], co.nz.pizzashack.data.model.StaffDepartmentModel@50a59db5[staffDeptId=3,joinDate=2014-02-03]]]
2014-02-03 07:50:53,599 [main           ] INFO  DepartmentConverter            - toDto end:{} co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02)
2014-02-03 07:50:53,599 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:2, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:2014-02-02, departments:[co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02)], role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:1969-12-31 07:50:52))
2014-02-03 07:50:53,599 [main           ] INFO  StaffDSImpl                    - getStaffsByName end:{}
2014-02-03 07:50:53,600 [main           ] INFO  UserDSImpl                     - getUserByName start:general
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
2014-02-03 07:50:53,602 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@4f8374de[userId=4,username=general,password=MTIzNDU2,createTime=07:50:52]
2014-02-03 07:50:53,602 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)
2014-02-03 07:50:53,602 [main           ] INFO  UserDSImpl                     - getUserByName end:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)
2014-02-03 07:50:53,603 [main           ] INFO  OrderProcessTest               - department:co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02) 
2014-02-03 07:50:53,603 [main           ] INFO  OrderProcessDSImpl             - startOrderProcess start:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.process_definition_key=? 
        and workflowmo0_.category=? limit ?
Hibernate: 
    insert 
    into
        t_order
        (order_id, cust_id, deliver_time, order_no, order_time, payment_remarks, payment_status, quantity, ship_address, status, total_price) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:50:53,617 [main           ] INFO  ActivitiFacade                 - startProcessInstance start:{}
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
2014-02-03 07:50:53,635 [main           ] INFO  ActivitiFacade                 - startProcessInstance end:{}
Hibernate: 
    insert 
    into
        t_order_process
        (order_process_id, active_process_definition_id, active_process_instance_id, complete_time, create_time, execution_id, main_process_definition_id, main_process_instance_id, operator_id, order_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2014-02-03 07:50:53,641 [main           ] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@147fc87f[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=Mon Feb 03 07:50:53 NZDT 2014,completeTime=<null>]
2014-02-03 07:50:53,661 [main           ] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@48212cab[orderId=1,orderNo=e7c2107e-165f-4062-aa63-eb787563eba2,quantity=<null>,status=0,paymentStatus=0,deliverTime=<null>,totalPrice=<null>,orderTime=Mon Feb 03 07:50:53 NZDT 2014]
2014-02-03 07:50:53,669 [main           ] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null)
2014-02-03 07:50:53,670 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@1fd9600d[userId=4,username=general,password=MTIzNDU2,createTime=07:50:52]
2014-02-03 07:50:53,670 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)
2014-02-03 07:50:53,677 [main           ] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 06:50:53, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52))
2014-02-03 07:50:53,678 [main           ] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 06:50:53, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
2014-02-03 07:50:53,689 [main           ] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 07:50:53,689 [main           ] INFO  ActivitiFacade                 - executionId: 16, processDefinitionId: orderlocalProcess:1:15
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 07:50:53,714 [main           ] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:50:53,721 [main           ] INFO  OrderProcessAccessor           - assign operator[4] to task[Data entry]
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    insert 
    into
        ACT_RU_IDENTITYLINK
        (ID_, REV_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_, PROC_DEF_ID_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_IDENTITYLINK
        (ID_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_)     
    values
        (?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_TASK      
    SET
        REV_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        PRIORITY_ = ?,
        CREATE_TIME_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        DELEGATION_ = ?,
        EXECUTION_ID_ = ?,
        PROC_DEF_ID_ = ?,
        DESCRIPTION_ = ?,
        DUE_DATE_ = ?,
        SUSPENSION_STATE_ = ?      
    where
        ID_= ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
2014-02-03 07:50:53,742 [main           ] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 06:50:53, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
2014-02-03 07:50:53,743 [main           ] INFO  OrderProcessDSImpl             - startOrderProcess end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 06:50:53, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52))
2014-02-03 07:50:53,745 [main           ] INFO  OrderProcessTest               - after start instance:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 06:50:53, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
2014-02-03 07:50:53,750 [main           ] INFO  OrderProcessTest               - order pazza type size:2 
2014-02-03 07:50:53,750 [main           ] INFO  OrderProcessDSImpl             - dataEntry start:e7c2107e-165f-4062-aa63-eb787563eba2
2014-02-03 07:50:53,750 [main           ] INFO  OrderProcessDSImpl             - getOrderProcessByOrderNo start************************************
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 07:50:53,759 [main           ] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@87d93f3[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=07:50:53,completeTime=<null>] 
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_,
        customermo0_.address as address2_,
        customermo0_.credits as credits2_,
        customermo0_.customer_name as customer4_2_,
        customermo0_.email as email2_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.email=? limit ?
2014-02-03 07:50:53,764 [main           ] INFO  CustomerConverter              - toModel start:{} co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:david, customerEmail:david.yuan124@gmail.com, level:null)
2014-02-03 07:50:53,768 [main           ] INFO  CustomerConverter              - toModel end:{} co.nz.pizzashack.data.model.CustomerModel@1a44875f[custId=<null>,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
Hibernate: 
    insert 
    into
        t_customer
        (cust_id, address, credits, customer_name, email) 
    values
        (null, ?, ?, ?, ?)
2014-02-03 07:50:53,771 [main           ] INFO  OrderProcessDSImpl             - orderDetailsSet size:2 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
2014-02-03 07:50:53,778 [main           ] INFO  OrderProcessDSImpl             - added orderPizzashackModel:co.nz.pizzashack.data.model.OrderPizzashackModel@6c3129d6[orderPizzashackId=<null>,totalPrice=0,qty=4] 
Hibernate: 
    insert 
    into
        t_order_pizzashack
        (order_pizza_id, order_id, pizzashack_id, qty, total_price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
2014-02-03 07:50:53,785 [main           ] INFO  OrderProcessDSImpl             - added orderPizzashackModel:co.nz.pizzashack.data.model.OrderPizzashackModel@36a2c086[orderPizzashackId=<null>,totalPrice=0,qty=10] 
Hibernate: 
    insert 
    into
        t_order_pizzashack
        (order_pizza_id, order_id, pizzashack_id, qty, total_price) 
    values
        (null, ?, ?, ?, ?)
2014-02-03 07:50:53,786 [main           ] INFO  OrderProcessDSImpl             - after add detailsDto, size in model:2 
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        E.BUSINESS_KEY_ = ?                                                                                 
        and RES.PROC_DEF_ID_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                    
        and RES.ASSIGNEE_ = ?                                                                        
        and E.BUSINESS_KEY_ = ?
2014-02-03 07:50:53,791 [main           ] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@87d93f3[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=07:50:53,completeTime=<null>]
2014-02-03 07:50:53,795 [main           ] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@682ae058[orderId=1,orderNo=e7c2107e-165f-4062-aa63-eb787563eba2,quantity=14,status=0,paymentStatus=0,deliverTime=<null>,totalPrice=0,orderTime=2014-02-03 07:50:53.609]
2014-02-03 07:50:53,798 [main           ] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@1a44875f[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 07:50:53,804 [main           ] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-02-03 07:50:53,808 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@6c3129d6[orderPizzashackId=1,totalPrice=0,qty=4]
2014-02-03 07:50:53,815 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0)
2014-02-03 07:50:53,815 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@36a2c086[orderPizzashackId=2,totalPrice=0,qty=10]
2014-02-03 07:50:53,815 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)
2014-02-03 07:50:53,816 [main           ] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:14, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:50:53,817 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@71be9f1[userId=4,username=general,password=MTIzNDU2,createTime=07:50:52]
2014-02-03 07:50:53,818 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)
2014-02-03 07:50:53,818 [main           ] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:14, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:50:53, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52))
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        PARENT_TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE 
    where
        TASK_ID_ =     ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
2014-02-03 07:50:53,843 [main           ] INFO  ainTransitionExecutionListener - orderMainUserTaskExecutionListener start:{} 
2014-02-03 07:50:53,844 [main           ] INFO  ainTransitionExecutionListener - nextActivity id:orderCoreCallactivity
2014-02-03 07:50:53,844 [main           ] INFO  ainTransitionExecutionListener - nextActivity name:Core process
2014-02-03 07:50:53,844 [main           ] INFO  ainTransitionExecutionListener - nextActivity type:callActivity
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
start calculate: co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:14, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:50:53, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52))
2014-02-03 07:50:54,050 [main           ] INFO  PizzashackCaculator            - caculate start:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:14, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null) 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 07:50:54,056 [main           ] INFO  PizzashackCaculator            - caculate end:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null) 
after calculation: co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null)
2014-02-03 07:50:54,057 [main           ] INFO  culationMergeExecutionListener - CaculationMergeExecutionListener start
2014-02-03 07:50:54,057 [main           ] INFO  culationMergeExecutionListener - after calculation, orderProcess:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:50:53, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
2014-02-03 07:50:54,058 [main           ] INFO  OrderProcessAccessor           - merge calculation result
2014-02-03 07:50:54,058 [main           ] INFO  OrderProcessAccessor           - total price:390.00 
2014-02-03 07:50:54,058 [main           ] INFO  OrderProcessAccessor           - qty:14 
2014-02-03 07:50:54,058 [main           ] INFO  OrderProcessAccessor           - orderDetailsSet.size():2
2014-02-03 07:50:54,058 [main           ] INFO  culationMergeExecutionListener - CaculationMergeExecutionListener end
total qty: 14
after autoreview: 2
reviewTransBean: co.nz.pizzashack.data.dto.OrderReviewRecordDto(reviewRecordId:null, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, content:order number is more than 10 but less than 30, reviewResult:pending, createTime:2014-02-02 06:50:54, reviewer:null)
2014-02-03 07:50:54,113 [main           ] INFO  oManualReviewExecutionListener - ToManualReviewExecutionListener start:{} 
2014-02-03 07:50:54,113 [main           ] INFO  oManualReviewExecutionListener - eventName:take 
2014-02-03 07:50:54,113 [main           ] INFO  oManualReviewExecutionListener - activitiProcessDefinitionId:orderCoreProcess:1:11
2014-02-03 07:50:54,113 [main           ] INFO  oManualReviewExecutionListener - activitiProcesssInstanceId:30
2014-02-03 07:50:54,113 [main           ] INFO  oManualReviewExecutionListener - get orderReviewRecord:co.nz.pizzashack.data.dto.OrderReviewRecordDto(reviewRecordId:null, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, content:order number is more than 10 but less than 30, reviewResult:pending, createTime:2014-02-02 06:50:54, reviewer:null) 
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_IDENTITYLINK
        (ID_, REV_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_, PROC_DEF_ID_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_IDENTITYLINK
        (ID_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_)     
    values
        (?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_EXECUTION 
    set
        REV_ = ?,
        BUSINESS_KEY_ = ?,
        PROC_DEF_ID_ = ?,
        ACT_ID_ = ?,
        IS_ACTIVE_ = ?,
        IS_CONCURRENT_ = ?,
        IS_SCOPE_ = ?,
        IS_EVENT_SCOPE_ = ?,
        PARENT_ID_ = ?,
        SUPER_EXEC_ = ?,
        SUSPENSION_STATE_ = ?,
        CACHED_ENT_STATE_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_TASK 
    where
        ID_ = ? 
        and REV_ = ?
2014-02-03 07:50:54,150 [main           ] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-02-03 07:50:54,159 [main           ] INFO  OrderProcessAccessor           - get OrderProcessDto from flow:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
2014-02-03 07:50:54,159 [main           ] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 07:50:54,159 [main           ] INFO  ActivitiFacade                 - executionId: 30, processDefinitionId: orderCoreProcess:1:11
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 07:50:54,163 [main           ] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:50:54,166 [main           ] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo start:{}
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 07:50:54,167 [main           ] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo end:{}
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
2014-02-03 07:50:54,168 [main           ] INFO  OrderProcessAccessor           - after merge orderProcessModel:co.nz.pizzashack.data.model.OrderProcessModel@87d93f3[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=07:50:53,completeTime=<null>] 
2014-02-03 07:50:54,169 [main           ] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
2014-02-03 07:50:54,170 [main           ] INFO  OrderProcessDSImpl             - dataEntry end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52))
Hibernate: 
    update
        t_order_process 
    set
        active_process_definition_id=?,
        active_process_instance_id=?,
        complete_time=?,
        create_time=?,
        execution_id=?,
        main_process_definition_id=?,
        main_process_instance_id=?,
        operator_id=?,
        order_id=? 
    where
        order_process_id=?
Hibernate: 
    update
        t_order 
    set
        cust_id=?,
        deliver_time=?,
        order_no=?,
        order_time=?,
        payment_remarks=?,
        payment_status=?,
        quantity=?,
        ship_address=?,
        status=?,
        total_price=? 
    where
        order_id=?
Hibernate: 
    update
        t_order_pizzashack 
    set
        order_id=?,
        pizzashack_id=?,
        qty=?,
        total_price=? 
    where
        order_pizza_id=?
Hibernate: 
    update
        t_order_pizzashack 
    set
        order_id=?,
        pizzashack_id=?,
        qty=?,
        total_price=? 
    where
        order_pizza_id=?
2014-02-03 07:50:54,180 [main           ] INFO  OrderProcessTest               - **************************after dataentry:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
2014-02-03 07:50:54,181 [main           ] INFO  OrderProcessQueryDSImpl        - getOrderProcessDtoById start:1 
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_0_,
        orderproce0_.active_process_definition_id as active2_10_0_,
        orderproce0_.active_process_instance_id as active3_10_0_,
        orderproce0_.complete_time as complete4_10_0_,
        orderproce0_.create_time as create5_10_0_,
        orderproce0_.execution_id as execution6_10_0_,
        orderproce0_.main_process_definition_id as main7_10_0_,
        orderproce0_.main_process_instance_id as main8_10_0_,
        orderproce0_.operator_id as operator9_10_0_,
        orderproce0_.order_id as order10_10_0_ 
    from
        t_order_process orderproce0_ 
    where
        orderproce0_.order_process_id=?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 07:50:54,183 [main           ] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@344b14bd[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=07:50:53,completeTime=<null>]
2014-02-03 07:50:54,184 [main           ] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@1d011fbb[orderId=1,orderNo=e7c2107e-165f-4062-aa63-eb787563eba2,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 07:50:53.609]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 07:50:54,191 [main           ] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@44d630aa[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 07:50:54,191 [main           ] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 07:50:54,192 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@531ea33b[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:50:54,196 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 07:50:54,196 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@6ea11f[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:50:54,198 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 07:50:54,198 [main           ] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:50:54,199 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@397a0709[userId=4,username=general,password=MTIzNDU2,createTime=07:50:52]
2014-02-03 07:50:54,200 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)
2014-02-03 07:50:54,200 [main           ] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52))
2014-02-03 07:50:54,200 [main           ] INFO  OrderProcessQueryDSImpl        - buildPendingActivity start:{}
2014-02-03 07:50:54,200 [main           ] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 07:50:54,200 [main           ] INFO  ActivitiFacade                 - executionId: 30, processDefinitionId: orderCoreProcess:1:11
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:50:54,206 [main           ] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo start:{}
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 07:50:54,208 [main           ] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo end:{}
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
2014-02-03 07:50:54,209 [main           ] INFO  OrderProcessQueryDSImpl        - buildPendingActivity end:{}
2014-02-03 07:50:54,210 [main           ] INFO  OrderProcessQueryDSImpl        - getOrderProcessDtoById end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:null), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
2014-02-03 07:50:54,210 [main           ] INFO  OrderProcessTest               - -------------------------------ProcessActivityDto:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:null)
2014-02-03 07:50:54,211 [main           ] INFO  OrderDSImpl                    - getOrderByOrderNo start:e7c2107e-165f-4062-aa63-eb787563eba2 
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_,
        ordermodel0_.cust_id as cust11_4_,
        ordermodel0_.deliver_time as deliver2_4_,
        ordermodel0_.order_no as order3_4_,
        ordermodel0_.order_time as order4_4_,
        ordermodel0_.payment_remarks as payment5_4_,
        ordermodel0_.payment_status as payment6_4_,
        ordermodel0_.quantity as quantity4_,
        ordermodel0_.ship_address as ship8_4_,
        ordermodel0_.status as status4_,
        ordermodel0_.total_price as total10_4_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_no=? limit ?
2014-02-03 07:50:54,216 [main           ] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@463c76f[orderId=1,orderNo=e7c2107e-165f-4062-aa63-eb787563eba2,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 07:50:53.609]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 07:50:54,217 [main           ] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@1048abfb[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 07:50:54,218 [main           ] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 07:50:54,219 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@36e8db37[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:50:54,220 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 07:50:54,221 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@7190140a[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:50:54,222 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 07:50:54,222 [main           ] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null)
2014-02-03 07:50:54,222 [main           ] INFO  OrderDSImpl                    - getOrderByOrderNo end:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null) 
2014-02-03 07:50:54,223 [main           ] INFO  OrderProcessTest               - after dataentry latest order from db:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null) 
2014-02-03 07:50:54,223 [main           ] INFO  OrderProcessDSImpl             - claimOrderReviewTask start:e7c2107e-165f-4062-aa63-eb787563eba2
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 07:50:54,226 [main           ] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@7d8f4292[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=07:50:53,completeTime=<null>] 
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        E.BUSINESS_KEY_ = ?                                                                                 
        and RES.PROC_DEF_ID_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:50:54,229 [main           ] INFO  OrderProcessDSImpl             - taskId:57
2014-02-03 07:50:54,229 [main           ] INFO  OrderProcessDSImpl             - taskName:Manual underwriting
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                    
        and RES.ASSIGNEE_ = ?                                                                        
        and E.BUSINESS_KEY_ = ?
Hibernate: 
    select
        g.*     
    from
        ACT_ID_GROUP g,
        ACT_ID_MEMBERSHIP membership     
    where
        g.ID_ = membership.GROUP_ID_       
        and membership.USER_ID_ = ?
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                   
    inner join
        ACT_RU_IDENTITYLINK I 
            on I.TASK_ID_ = RES.ID_                                 
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                                                                                                                                                              
        and RES.ASSIGNEE_ is null         
        and I.TYPE_ = 'candidate'         
        and          (
            I.USER_ID_ = ?                                             
            or                                   I.GROUP_ID_ IN             (
                ?             
            )                    
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    insert 
    into
        ACT_RU_IDENTITYLINK
        (ID_, REV_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_, PROC_DEF_ID_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_IDENTITYLINK
        (ID_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_)     
    values
        (?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_COMMENT
        (ID_, TYPE_, TIME_, USER_ID_, TASK_ID_, PROC_INST_ID_, ACTION_, MESSAGE_, FULL_MSG_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_TASK      
    SET
        REV_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        PRIORITY_ = ?,
        CREATE_TIME_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        DELEGATION_ = ?,
        EXECUTION_ID_ = ?,
        PROC_DEF_ID_ = ?,
        DESCRIPTION_ = ?,
        DUE_DATE_ = ?,
        SUSPENSION_STATE_ = ?      
    where
        ID_= ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
2014-02-03 07:50:54,250 [main           ] INFO  OrderProcessDSImpl             - claimOrderReviewTask end:{}
2014-02-03 07:50:54,251 [main           ] INFO  OrderProcessTest               - after david claim task:{} 
2014-02-03 07:50:54,251 [main           ] INFO  OrderProcessQueryDSImpl        - getOrderProcessDtoById start:1 
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_0_,
        orderproce0_.active_process_definition_id as active2_10_0_,
        orderproce0_.active_process_instance_id as active3_10_0_,
        orderproce0_.complete_time as complete4_10_0_,
        orderproce0_.create_time as create5_10_0_,
        orderproce0_.execution_id as execution6_10_0_,
        orderproce0_.main_process_definition_id as main7_10_0_,
        orderproce0_.main_process_instance_id as main8_10_0_,
        orderproce0_.operator_id as operator9_10_0_,
        orderproce0_.order_id as order10_10_0_ 
    from
        t_order_process orderproce0_ 
    where
        orderproce0_.order_process_id=?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 07:50:54,253 [main           ] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@2a2b4348[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=07:50:53,completeTime=<null>]
2014-02-03 07:50:54,254 [main           ] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@163690a7[orderId=1,orderNo=e7c2107e-165f-4062-aa63-eb787563eba2,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 07:50:53.609]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 07:50:54,255 [main           ] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@696b4f5e[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 07:50:54,255 [main           ] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 07:50:54,257 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@7c7e6992[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:50:54,258 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 07:50:54,258 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@b8508c8[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:50:54,258 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 07:50:54,259 [main           ] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:50:54,259 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@34fea8be[userId=4,username=general,password=MTIzNDU2,createTime=07:50:52]
2014-02-03 07:50:54,260 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)
2014-02-03 07:50:54,260 [main           ] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52))
2014-02-03 07:50:54,260 [main           ] INFO  OrderProcessQueryDSImpl        - buildPendingActivity start:{}
2014-02-03 07:50:54,260 [main           ] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 07:50:54,260 [main           ] INFO  ActivitiFacade                 - executionId: 30, processDefinitionId: orderCoreProcess:1:11
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:50:54,267 [main           ] INFO  OrderProcessQueryDSImpl        - buildPendingActivity end:{}
2014-02-03 07:50:54,268 [main           ] INFO  OrderProcessQueryDSImpl        - getOrderProcessDtoById end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:david, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:null), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
2014-02-03 07:50:54,268 [main           ] INFO  OrderProcessTest               - -------------------------------ProcessActivityDto:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:david, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:null)
2014-02-03 07:50:54,269 [main           ] INFO  OrderProcessDSImpl             - manualOrderReview start:co.nz.pizzashack.data.dto.OrderReviewRecordDto(reviewRecordId:null, orderNo:null, content:review passed, reviewResult:accept, createTime:null, reviewer:co.nz.pizzashack.data.dto.StaffDto(staffId:1, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:2014-02-02, departments:[co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02)], role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:1969-12-31 07:50:52))) 
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 07:50:54,271 [main           ] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@5decee06[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=07:50:53,completeTime=<null>] 
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:50:54,271 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@71d6e165[userId=4,username=general,password=MTIzNDU2,createTime=07:50:52]
2014-02-03 07:50:54,272 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)
2014-02-03 07:50:54,272 [main           ] INFO  OrderProcessDSImpl             - doManualOrderReview start:{} 
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        E.BUSINESS_KEY_ = ?                                                                                 
        and RES.PROC_DEF_ID_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                    
        and RES.ASSIGNEE_ = ?                                                                        
        and E.BUSINESS_KEY_ = ?
2014-02-03 07:50:54,275 [main           ] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@5decee06[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=07:50:53,completeTime=<null>]
2014-02-03 07:50:54,276 [main           ] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@7a79584a[orderId=1,orderNo=e7c2107e-165f-4062-aa63-eb787563eba2,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 07:50:53.609]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 07:50:54,277 [main           ] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@3e92885f[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 07:50:54,277 [main           ] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 07:50:54,278 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@4e1176c6[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:50:54,278 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 07:50:54,278 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@5c8ce934[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:50:54,279 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 07:50:54,279 [main           ] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null)
2014-02-03 07:50:54,279 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@71d6e165[userId=4,username=general,password=MTIzNDU2,createTime=07:50:52]
2014-02-03 07:50:54,280 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)
2014-02-03 07:50:54,280 [main           ] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52))
2014-02-03 07:50:54,280 [main           ] INFO  OrderProcessDSImpl             - before manual review flow:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52))
2014-02-03 07:50:54,280 [main           ] INFO  OrderProcessDSImpl             - reviewResult:accept 
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        PARENT_TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE 
    where
        TASK_ID_ =     ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_PROCINST 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RU_JOB J     
    where
        J.EXECUTION_ID_ = ?
Hibernate: 
    select
        *      
    from
        ACT_RU_EVENT_SUBSCR     
    where
        (
            EXECUTION_ID_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
2014-02-03 07:50:54,308 [main           ] INFO  OfCoreProcessExecutionListener - after core process, orderProcess:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-02-03 07:50:54,311 [main           ] INFO  ainTransitionExecutionListener - orderMainUserTaskExecutionListener start:{} 
2014-02-03 07:50:54,311 [main           ] INFO  ainTransitionExecutionListener - nextActivity id:billingEntry
2014-02-03 07:50:54,311 [main           ] INFO  ainTransitionExecutionListener - nextActivity name:Billing fill in
2014-02-03 07:50:54,311 [main           ] INFO  ainTransitionExecutionListener - nextActivity type:userTask
2014-02-03 07:50:54,311 [main           ] INFO  ainTransitionExecutionListener - order status:pendingOnBilling 
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    update
        ACT_HI_PROCINST 
    set
        PROC_DEF_ID_ = ?,
        BUSINESS_KEY_ = ?,
        START_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        END_ACT_ID_ = ?,
        DELETE_REASON_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_VARINST 
    set
        REV_ = ?,
        BYTEARRAY_ID_ = ?,
        DOUBLE_ = ?,
        LONG_ = ?,
        TEXT_ = ?,
        TEXT2_ = ?,
        VAR_TYPE_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_EXECUTION 
    set
        REV_ = ?,
        BUSINESS_KEY_ = ?,
        PROC_DEF_ID_ = ?,
        ACT_ID_ = ?,
        IS_ACTIVE_ = ?,
        IS_CONCURRENT_ = ?,
        IS_SCOPE_ = ?,
        IS_EVENT_SCOPE_ = ?,
        PARENT_ID_ = ?,
        SUPER_EXEC_ = ?,
        SUSPENSION_STATE_ = ?,
        CACHED_ENT_STATE_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_IDENTITYLINK 
    where
        ID_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_TASK 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_IDENTITYLINK 
    where
        ID_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ? 
        and REV_ = ?
2014-02-03 07:50:54,337 [main           ] INFO  OrderProcessDSImpl             - doManualOrderReview end:{} 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:50:54,339 [main           ] INFO  OrderProcessDSImpl             - process pending, build pending Activity:{} 
2014-02-03 07:50:54,339 [main           ] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:50:53, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-02-03 07:50:54,344 [main           ] INFO  OrderProcessAccessor           - get OrderProcessDto from flow:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:50:53, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
2014-02-03 07:50:54,344 [main           ] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 07:50:54,344 [main           ] INFO  ActivitiFacade                 - executionId: 16, processDefinitionId: orderlocalProcess:1:15
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 07:50:54,348 [main           ] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:50:54,350 [main           ] INFO  OrderProcessAccessor           - assign operator[4] to task[Billing fill in]
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_TASK      
    SET
        REV_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        PRIORITY_ = ?,
        CREATE_TIME_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        DELEGATION_ = ?,
        EXECUTION_ID_ = ?,
        PROC_DEF_ID_ = ?,
        DESCRIPTION_ = ?,
        DUE_DATE_ = ?,
        SUSPENSION_STATE_ = ?      
    where
        ID_= ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
2014-02-03 07:50:54,358 [main           ] INFO  OrderProcessAccessor           - after merge orderProcessModel:co.nz.pizzashack.data.model.OrderProcessModel@5decee06[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=07:50:53,completeTime=<null>] 
2014-02-03 07:50:54,359 [main           ] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:50:53, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
2014-02-03 07:50:54,361 [main           ] INFO  OrderProcessDSImpl             - manualOrderReview end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:50:53, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
Hibernate: 
    update
        t_order_process 
    set
        active_process_definition_id=?,
        active_process_instance_id=?,
        complete_time=?,
        create_time=?,
        execution_id=?,
        main_process_definition_id=?,
        main_process_instance_id=?,
        operator_id=?,
        order_id=? 
    where
        order_process_id=?
Hibernate: 
    update
        t_order 
    set
        cust_id=?,
        deliver_time=?,
        order_no=?,
        order_time=?,
        payment_remarks=?,
        payment_status=?,
        quantity=?,
        ship_address=?,
        status=?,
        total_price=? 
    where
        order_id=?
2014-02-03 07:50:54,363 [main           ] INFO  OrderProcessTest               - after manul underwriting pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]) 
2014-02-03 07:50:54,364 [main           ] INFO  OrderDSImpl                    - getOrderByOrderNo start:e7c2107e-165f-4062-aa63-eb787563eba2 
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_,
        ordermodel0_.cust_id as cust11_4_,
        ordermodel0_.deliver_time as deliver2_4_,
        ordermodel0_.order_no as order3_4_,
        ordermodel0_.order_time as order4_4_,
        ordermodel0_.payment_remarks as payment5_4_,
        ordermodel0_.payment_status as payment6_4_,
        ordermodel0_.quantity as quantity4_,
        ordermodel0_.ship_address as ship8_4_,
        ordermodel0_.status as status4_,
        ordermodel0_.total_price as total10_4_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_no=? limit ?
2014-02-03 07:50:54,365 [main           ] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@653f93de[orderId=1,orderNo=e7c2107e-165f-4062-aa63-eb787563eba2,quantity=14,status=5,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 07:50:53.609]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 07:50:54,366 [main           ] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@4f996743[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 07:50:54,366 [main           ] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 07:50:54,367 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@3bc69f88[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:50:54,367 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 07:50:54,367 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@6d13b860[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:50:54,368 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 07:50:54,368 [main           ] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:50:53, deliverTime:null)
2014-02-03 07:50:54,368 [main           ] INFO  OrderDSImpl                    - getOrderByOrderNo end:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:50:53, deliverTime:null) 
2014-02-03 07:50:54,369 [main           ] INFO  OrderProcessTest               - ********************after review:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:50:53, deliverTime:null) 
Tests run: 4, Failures: 0, Errors: 0, Skipped: 3, Time elapsed: 10.341 sec

Results :

Tests run: 4, Failures: 0, Errors: 0, Skipped: 3

2014-02-03 07:50:54,422 [Thread-8       ] INFO  GenericWebApplicationContext   - Closing org.springframework.web.context.support.GenericWebApplicationContext@5d51981a: startup date [Mon Feb 03 07:50:44 NZDT 2014]; root of context hierarchy
2014-02-03 07:50:54,423 [Thread-8       ] INFO  BusApplicationContext          - Closing org.apache.cxf.bus.spring.BusApplicationContext@74e5d63d: startup date [Mon Feb 03 07:50:51 NZDT 2014]; parent: org.springframework.web.context.support.GenericWebApplicationContext@5d51981a
2014-02-03 07:50:54,423 [Thread-8       ] INFO  DefaultListableBeanFactory     - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2cac4d10: defining beans []; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@126e4ecd
2014-02-03 07:50:54,424 [Thread-8       ] INFO  DefaultListableBeanFactory     - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@126e4ecd: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,applicationConfiguration,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,viewConfiguration,webMvcContextConfiguration,logoutController,loginController,indexController,userController,adminIndexController,departmentController,orderController,orderQueryController,staffController,billingProcessRespTransformer,billingProcessReqTransformer,orderProcessFormatTransformer,billingVariableTransformer,billingResponseMergeProcessor,billingFormatTransformer,billingInboundProcessor,orderDuplicatedReqProcessor,orderRequestProcessor,billingProcessRoute,billingInboundWsRoute,orderProcessRoute,sleepBean,pizzashackAPIImpl,camelSpringConfig,camelJdbcIdempotentConfig,camelCxfConfig,orderProcessDSImpl,customerDSImpl,workflowDSImpl,pizzashackDSImpl,userDSImpl,orderProcessAccessor,orderProcessQueryDSImpl,staffDSImpl,orderDSImpl,departmentDSImpl,initialDataConfig,pizzashackCaculator,emailExecutionListener,endExecutionListener,caculationMergeExecutionListener,orderMainTransitionExecutionListener,toManualReviewExecutionListener,outOfBillingProcessExecutionListener,outOfCoreProcessExecutionListener,billingRespExecutionListener,customerConverter,orderProcessConverter,staffConverter,userConverter,departmentConverter,workflowConverter,orderReviewRecordConverter,orderConverter,activityDiscountRateConverter,orderDetailConverter,pizzashackDataInitialConfiguration,pizzashackItemBuilder,infrastructureContextConfiguration,activitiFacade,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0,org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0,customerRepository,orderRequestHistoryRepository,workflowRepository,orderRepository,pizzashackRepository,orderProcessRepository,activityDiscountRateRepository,departmentRepository,orderPizzashackRepository,staffDepartmentRepository,staffRepository,userRepository,orderReviewRecordRepository,viewResolver,messageSource,org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration,requestMappingHandlerMapping,mvcContentNegotiationManager,viewControllerHandlerMapping,beanNameHandlerMapping,resourceHandlerMapping,defaultServletHandlerMapping,requestMappingHandlerAdapter,mvcConversionService,mvcValidator,httpRequestHandlerAdapter,simpleControllerHandlerAdapter,handlerExceptionResolver,sessionAttributeProcessor,localeChangeInterceptor,localeResolver,simpleMappingExceptionResolver,multipartResolver,activeMQConnectionFactory,pooledConnectionFactory,jmsComponent,jmsTransactionManager,camelBeanPostProcessor,camelContext,custThreadPoolProfile,sqlComponent,orderJdbcMessageIdRepository,billingInboundEndpoint,loggingOutInterceptor,cxf,org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor,org.apache.cxf.bus.spring.Jsr250BeanPostProcessor,org.apache.cxf.bus.spring.BusExtensionPostProcessor,org.apache.cxf.binding.soap.SoapBindingFactory,org.apache.cxf.binding.soap.SoapTransportFactory,org.apache.cxf.binding.soap.customEditorConfigurer,setupWorkflowData,setupData,org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration,org.springframework.transaction.config.internalTransactionAdvisor,transactionAttributeSource,transactionInterceptor,dataSource,transactionManager,entityManagerFactory,placeholderConfig,processEngineConfiguration,processEngine,repositoryService,runtimeService,taskService,historyService,managementService,identityService]; root of factory hierarchy
2014-02-03 07:50:54,424 [Thread-8       ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) is shutting down
2014-02-03 07:50:54,425 [Thread-8       ] INFO  DefaultShutdownStrategy        - Starting to graceful shutdown 8 routes (timeout 300 seconds)
2014-02-03 07:50:54,429 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: cxf:bean:billingInboundEndpoint shutdown complete, was consuming from: Endpoint[cxf://bean:billingInboundEndpoint]
2014-02-03 07:50:54,429 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:orderRegularProcess shutdown complete, was consuming from: Endpoint[direct://orderRegularProcess]
2014-02-03 07:50:54,429 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:orderDuplicatedProcess shutdown complete, was consuming from: Endpoint[direct://orderDuplicatedProcess]
2014-02-03 07:50:54,913 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: orderProcessRoute shutdown complete, was consuming from: Endpoint[jms://queue:pizzashackOrderInbound]
2014-02-03 07:50:54,913 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: route1 shutdown complete, was consuming from: Endpoint[direct://doBillingIntegration]
2014-02-03 07:50:54,913 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:receiveBillingQueue shutdown complete, was consuming from: Endpoint[direct://receiveBillingQueue]
2014-02-03 07:50:54,913 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:billingIntegration shutdown complete, was consuming from: Endpoint[direct://billingIntegration]
2014-02-03 07:50:54,914 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: activitiBillingProcess shutdown complete, was consuming from: Endpoint[activiti://orderBillingProcess:billingIntegration?copyVariablesToBodyAsMap=true]
2014-02-03 07:50:54,914 [Thread-8       ] INFO  DefaultShutdownStrategy        - Graceful shutdown of 8 routes completed in 0 seconds
2014-02-03 07:50:54,916 [Thread-8       ] INFO  CxfEndpoint                    - shutdown the bus ... org.apache.cxf.bus.spring.SpringBus@18554581
2014-02-03 07:50:54,933 [Thread-8       ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) uptime 4.096 seconds
2014-02-03 07:50:54,934 [Thread-8       ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) is shutdown in 0.509 seconds
2014-02-03 07:50:54,955 [Thread-8       ] INFO  tainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2014-02-03 07:50:54,956 [Thread-8       ] INFO  SchemaExport                   - HHH000227: Running hbm2ddl schema export
Hibernate: 
    alter table t_activity_discount_rate 
        drop constraint FKA400C193698FCC4
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE11193A98D65
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE111A27DDA4A
Hibernate: 
    alter table t_order 
        drop constraint FKA0C0C3C3E11F4FCB
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB0883698FCC4
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB088BBCB676E
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F33E99148D
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F3BBCB676E
Hibernate: 
    alter table t_order_request_history 
        drop constraint FK5A6B268BBCB676E
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CA6130105
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CBBCB676E
Hibernate: 
    alter table t_staff 
        drop constraint FKA0F9FF552DC32C06
Hibernate: 
    drop table t_activity_discount_rate if exists
Hibernate: 
    drop table t_customer if exists
Hibernate: 
    drop table t_dept if exists
Hibernate: 
    drop table t_dept_staff if exists
Hibernate: 
    drop table t_order if exists
Hibernate: 
    drop table t_order_pizzashack if exists
Hibernate: 
    drop table t_order_process if exists
Hibernate: 
    drop table t_order_request_history if exists
Hibernate: 
    drop table t_order_review_record if exists
Hibernate: 
    drop table t_pizzashack if exists
Hibernate: 
    drop table t_staff if exists
Hibernate: 
    drop table t_user if exists
Hibernate: 
    drop table t_workflow if exists
2014-02-03 07:50:54,971 [Thread-8       ] INFO  SchemaExport                   - HHH000230: Schema export complete
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 14.325s
[INFO] Finished at: Mon Feb 03 07:50:55 NZDT 2014
[INFO] Final Memory: 24M/620M
[INFO] ------------------------------------------------------------------------
]0;david@david: ~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-webdavid@david:~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web$ cd ..[K[K[K[K[K                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Script started, file is screen.log
]0;david@david: ~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-webdavid@david:~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web$ mvn test
[INFO] Scanning for projects...
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building pizzashack-distributor-web Maven Webapp 1.0.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ pizzashack-distributor-web ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 32 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ pizzashack-distributor-web ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ pizzashack-distributor-web ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ pizzashack-distributor-web ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] --- maven-surefire-plugin:2.5:test (default-test) @ pizzashack-distributor-web ---
[INFO] Surefire report directory: /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running co.nz.pizzashack.test.OrderProcessTest
2014-02-03 07:50:44,381 [main           ] INFO  GenericWebApplicationContext   - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@5d51981a: startup date [Mon Feb 03 07:50:44 NZDT 2014]; root of context hierarchy
2014-02-03 07:50:44,437 [main           ] INFO  ClassPathBeanDefinitionScanner - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2014-02-03 07:50:45,866 [main           ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [META-INF/cxf/cxf.xml]
2014-02-03 07:50:46,100 [main           ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [META-INF/cxf/cxf-extension-soap.xml]
2014-02-03 07:50:46,126 [main           ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [META-INF/cxf/cxf-servlet.xml]
2014-02-03 07:50:46,147 [main           ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [activitiAppContext.xml]
2014-02-03 07:50:46,373 [main           ] INFO  PropertyPlaceholderConfigurer  - Loading properties file from class path resource [activiti.properties]
2014-02-03 07:50:46,455 [main           ] INFO  redAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2014-02-03 07:50:46,502 [main           ] INFO  GenericWebApplicationContext   - Bean 'infrastructureContextConfiguration' of type [class co.nz.pizzashack.config.InfrastructureContextConfiguration$$EnhancerByCGLIB$$fef3303b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:46,531 [main           ] INFO  MLog                           - MLog clients using log4j logging.
2014-02-03 07:50:46,582 [main           ] INFO  C3P0Registry                   - Initializing c3p0-0.9.1.2 [built 21-May-2007 15:04:56; debug? true; trace: 10]
2014-02-03 07:50:46,625 [main           ] INFO  GenericWebApplicationContext   - Bean 'dataSource' of type [class com.mchange.v2.c3p0.ComboPooledDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:46,712 [main           ] INFO  tainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default'
2014-02-03 07:50:46,798 [main           ] INFO  Version                        - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2014-02-03 07:50:46,802 [main           ] INFO  Version                        - HHH000412: Hibernate Core {4.1.4.Final}
2014-02-03 07:50:46,803 [main           ] INFO  Environment                    - HHH000206: hibernate.properties not found
2014-02-03 07:50:46,804 [main           ] INFO  Environment                    - HHH000021: Bytecode provider name : javassist
2014-02-03 07:50:46,819 [main           ] INFO  Ejb3Configuration              - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2014-02-03 07:50:47,065 [main           ] INFO  ConnectionProviderInitiator    - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2014-02-03 07:50:47,111 [main           ] INFO  AbstractPoolBackedDataSource   - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge1508z1vomu1g4v86ld|60074234, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.h2.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge1508z1vomu1g4v86ld|60074234, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:h2:mem:pizzashackdistributor;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 600, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 2, numHelperThreads -> 3, numThreadsAwaitingCheckoutDefaultUser -> 0, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2014-02-03 07:50:47,243 [main           ] INFO  Dialect                        - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2014-02-03 07:50:47,250 [main           ] INFO  LobCreatorBuilder              - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2014-02-03 07:50:47,257 [main           ] INFO  TransactionFactoryInitiator    - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2014-02-03 07:50:47,260 [main           ] INFO  ASTQueryTranslatorFactory      - HHH000397: Using ASTQueryTranslatorFactory
2014-02-03 07:50:47,284 [main           ] INFO  Version                        - Hibernate Validator 4.2.0.Final
2014-02-03 07:50:47,502 [main           ] INFO  SchemaExport                   - HHH000227: Running hbm2ddl schema export
Hibernate: 
    alter table t_activity_discount_rate 
        drop constraint FKA400C193698FCC4
2014-02-03 07:50:47,513 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_activity_discount_rate drop constraint FKA400C193698FCC4
2014-02-03 07:50:47,513 [main           ] ERROR SchemaExport                   - Table "T_ACTIVITY_DISCOUNT_RATE" not found; SQL statement:

    alter table t_activity_discount_rate 
        drop constraint FKA400C193698FCC4 [42102-160]
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE11193A98D65
2014-02-03 07:50:47,514 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_dept_staff drop constraint FKBC8AE11193A98D65
2014-02-03 07:50:47,514 [main           ] ERROR SchemaExport                   - Table "T_DEPT_STAFF" not found; SQL statement:

    alter table t_dept_staff 
        drop constraint FKBC8AE11193A98D65 [42102-160]
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE111A27DDA4A
2014-02-03 07:50:47,515 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_dept_staff drop constraint FKBC8AE111A27DDA4A
2014-02-03 07:50:47,515 [main           ] ERROR SchemaExport                   - Table "T_DEPT_STAFF" not found; SQL statement:

    alter table t_dept_staff 
        drop constraint FKBC8AE111A27DDA4A [42102-160]
Hibernate: 
    alter table t_order 
        drop constraint FKA0C0C3C3E11F4FCB
2014-02-03 07:50:47,516 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order drop constraint FKA0C0C3C3E11F4FCB
2014-02-03 07:50:47,516 [main           ] ERROR SchemaExport                   - Table "T_ORDER" not found; SQL statement:

    alter table t_order 
        drop constraint FKA0C0C3C3E11F4FCB [42102-160]
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB0883698FCC4
2014-02-03 07:50:47,517 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_pizzashack drop constraint FKE8ACB0883698FCC4
2014-02-03 07:50:47,517 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PIZZASHACK" not found; SQL statement:

    alter table t_order_pizzashack 
        drop constraint FKE8ACB0883698FCC4 [42102-160]
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB088BBCB676E
2014-02-03 07:50:47,518 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_pizzashack drop constraint FKE8ACB088BBCB676E
2014-02-03 07:50:47,518 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PIZZASHACK" not found; SQL statement:

    alter table t_order_pizzashack 
        drop constraint FKE8ACB088BBCB676E [42102-160]
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F33E99148D
2014-02-03 07:50:47,518 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_process drop constraint FK6B8B15F33E99148D
2014-02-03 07:50:47,518 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PROCESS" not found; SQL statement:

    alter table t_order_process 
        drop constraint FK6B8B15F33E99148D [42102-160]
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F3BBCB676E
2014-02-03 07:50:47,519 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_process drop constraint FK6B8B15F3BBCB676E
2014-02-03 07:50:47,519 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PROCESS" not found; SQL statement:

    alter table t_order_process 
        drop constraint FK6B8B15F3BBCB676E [42102-160]
Hibernate: 
    alter table t_order_request_history 
        drop constraint FK5A6B268BBCB676E
2014-02-03 07:50:47,520 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_request_history drop constraint FK5A6B268BBCB676E
2014-02-03 07:50:47,520 [main           ] ERROR SchemaExport                   - Table "T_ORDER_REQUEST_HISTORY" not found; SQL statement:

    alter table t_order_request_history 
        drop constraint FK5A6B268BBCB676E [42102-160]
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CA6130105
2014-02-03 07:50:47,521 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_review_record drop constraint FKFB7A439CA6130105
2014-02-03 07:50:47,521 [main           ] ERROR SchemaExport                   - Table "T_ORDER_REVIEW_RECORD" not found; SQL statement:

    alter table t_order_review_record 
        drop constraint FKFB7A439CA6130105 [42102-160]
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CBBCB676E
2014-02-03 07:50:47,522 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_review_record drop constraint FKFB7A439CBBCB676E
2014-02-03 07:50:47,522 [main           ] ERROR SchemaExport                   - Table "T_ORDER_REVIEW_RECORD" not found; SQL statement:

    alter table t_order_review_record 
        drop constraint FKFB7A439CBBCB676E [42102-160]
Hibernate: 
    alter table t_staff 
        drop constraint FKA0F9FF552DC32C06
2014-02-03 07:50:47,523 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_staff drop constraint FKA0F9FF552DC32C06
2014-02-03 07:50:47,523 [main           ] ERROR SchemaExport                   - Table "T_STAFF" not found; SQL statement:

    alter table t_staff 
        drop constraint FKA0F9FF552DC32C06 [42102-160]
Hibernate: 
    drop table t_activity_discount_rate if exists
Hibernate: 
    drop table t_customer if exists
Hibernate: 
    drop table t_dept if exists
Hibernate: 
    drop table t_dept_staff if exists
Hibernate: 
    drop table t_order if exists
Hibernate: 
    drop table t_order_pizzashack if exists
Hibernate: 
    drop table t_order_process if exists
Hibernate: 
    drop table t_order_request_history if exists
Hibernate: 
    drop table t_order_review_record if exists
Hibernate: 
    drop table t_pizzashack if exists
Hibernate: 
    drop table t_staff if exists
Hibernate: 
    drop table t_user if exists
Hibernate: 
    drop table t_workflow if exists
Hibernate: 
    create table t_activity_discount_rate (
        activity_rate_id bigint generated by default as identity,
        code varchar(255),
        description varchar(255),
        effective_time timestamp,
        expire_time timestamp,
        rate decimal(19,2),
        pizzashack_id bigint,
        primary key (activity_rate_id)
    )
Hibernate: 
    create table t_customer (
        cust_id bigint generated by default as identity,
        address varchar(255),
        credits integer,
        customer_name varchar(255),
        email varchar(255),
        primary key (cust_id)
    )
Hibernate: 
    create table t_dept (
        dept_id bigint generated by default as identity,
        create_date date,
        dept_name varchar(255),
        primary key (dept_id)
    )
Hibernate: 
    create table t_dept_staff (
        staff_dept_id bigint generated by default as identity,
        join_date date,
        dept_id bigint,
        staff_id bigint,
        primary key (staff_dept_id)
    )
Hibernate: 
    create table t_order (
        order_id bigint generated by default as identity,
        deliver_time timestamp,
        order_no varchar(255),
        order_time timestamp,
        payment_remarks varchar(255),
        payment_status integer,
        quantity integer,
        ship_address varchar(255),
        status integer,
        total_price decimal(19,2),
        cust_id bigint,
        primary key (order_id)
    )
Hibernate: 
    create table t_order_pizzashack (
        order_pizza_id bigint generated by default as identity,
        qty integer,
        total_price decimal(19,2),
        order_id bigint,
        pizzashack_id bigint,
        primary key (order_pizza_id)
    )
Hibernate: 
    create table t_order_process (
        order_process_id bigint generated by default as identity,
        active_process_definition_id varchar(255),
        active_process_instance_id varchar(255),
        complete_time time,
        create_time time,
        execution_id varchar(255),
        main_process_definition_id varchar(255),
        main_process_instance_id varchar(255),
        operator_id bigint,
        order_id bigint,
        primary key (order_process_id)
    )
Hibernate: 
    create table t_order_request_history (
        message_id varchar(255) generated by default as identity,
        created_at time,
        processor_name varchar(255),
        order_id bigint,
        primary key (message_id)
    )
Hibernate: 
    create table t_order_review_record (
        review_record_id bigint generated by default as identity,
        content varchar(255),
        create_time time,
        review_status integer,
        order_id bigint,
        reviewer_id bigint,
        primary key (review_record_id)
    )
Hibernate: 
    create table t_pizzashack (
        pizzashack_id bigint generated by default as identity,
        description varchar(255),
        icon varchar(255),
        name varchar(255),
        price decimal(19,2),
        primary key (pizzashack_id)
    )
Hibernate: 
    create table t_staff (
        staff_id bigint generated by default as identity,
        create_date date,
        email varchar(255),
        first_name varchar(255),
        identity varchar(255),
        last_name varchar(255),
        level integer,
        role integer,
        user_id bigint,
        primary key (staff_id)
    )
Hibernate: 
    create table t_user (
        user_id bigint generated by default as identity,
        create_time time,
        password varchar(255),
        user_name varchar(255),
        primary key (user_id)
    )
Hibernate: 
    create table t_workflow (
        workflow_id bigint generated by default as identity,
        category varchar(255),
        create_time time,
        deploy_id varchar(255),
        workflow_name varchar(255),
        process_definition_id varchar(255),
        process_definition_key varchar(255),
        primary key (workflow_id)
    )
Hibernate: 
    alter table t_activity_discount_rate 
        add constraint FKA400C193698FCC4 
        foreign key (pizzashack_id) 
        references t_pizzashack
Hibernate: 
    alter table t_dept_staff 
        add constraint FKBC8AE11193A98D65 
        foreign key (dept_id) 
        references t_dept
Hibernate: 
    alter table t_dept_staff 
        add constraint FKBC8AE111A27DDA4A 
        foreign key (staff_id) 
        references t_staff
Hibernate: 
    alter table t_order 
        add constraint FKA0C0C3C3E11F4FCB 
        foreign key (cust_id) 
        references t_customer
Hibernate: 
    alter table t_order_pizzashack 
        add constraint FKE8ACB0883698FCC4 
        foreign key (pizzashack_id) 
        references t_pizzashack
Hibernate: 
    alter table t_order_pizzashack 
        add constraint FKE8ACB088BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_process 
        add constraint FK6B8B15F33E99148D 
        foreign key (operator_id) 
        references t_user
Hibernate: 
    alter table t_order_process 
        add constraint FK6B8B15F3BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_request_history 
        add constraint FK5A6B268BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_review_record 
        add constraint FKFB7A439CA6130105 
        foreign key (reviewer_id) 
        references t_staff
Hibernate: 
    alter table t_order_review_record 
        add constraint FKFB7A439CBBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_staff 
        add constraint FKA0F9FF552DC32C06 
        foreign key (user_id) 
        references t_user
2014-02-03 07:50:47,557 [main           ] INFO  SchemaExport                   - HHH000230: Schema export complete
2014-02-03 07:50:47,591 [main           ] INFO  GenericWebApplicationContext   - Bean 'entityManagerFactory' of type [class org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,626 [main           ] INFO  GenericWebApplicationContext   - Bean 'entityManagerFactory' of type [class com.sun.proxy.$Proxy44] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,832 [main           ] INFO  GenericWebApplicationContext   - Bean 'cxf' of type [class org.apache.cxf.bus.spring.SpringBus] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,836 [main           ] WARN  OldSpringSupport               - Import of META-INF/cxf/cxf-extension-soap.xml has been deprecated and is unnecessary.
2014-02-03 07:50:47,841 [main           ] INFO  GenericWebApplicationContext   - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerByCGLIB$$813a6ae2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,852 [main           ] INFO  GenericWebApplicationContext   - Bean 'transactionAttributeSource' of type [class org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,859 [main           ] INFO  GenericWebApplicationContext   - Bean 'transactionInterceptor' of type [class org.springframework.transaction.interceptor.TransactionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,864 [main           ] INFO  GenericWebApplicationContext   - Bean 'org.springframework.transaction.config.internalTransactionAdvisor' of type [class org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,873 [main           ] INFO  GenericWebApplicationContext   - Bean 'transactionManager' of type [class org.springframework.orm.jpa.JpaTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,874 [main           ] INFO  GenericWebApplicationContext   - Bean 'camelJdbcIdempotentConfig' of type [class co.nz.pizzashack.config.CamelJdbcIdempotentConfig$$EnhancerByCGLIB$$65c41669] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,890 [main           ] INFO  GenericWebApplicationContext   - Bean 'sqlComponent' of type [class org.apache.camel.component.sql.SqlComponent] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,895 [main           ] INFO  GenericWebApplicationContext   - Bean 'camelCxfConfig' of type [class co.nz.pizzashack.config.CamelCxfConfig$$EnhancerByCGLIB$$8fcc2d8e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,925 [main           ] INFO  GenericWebApplicationContext   - Bean 'billingInboundEndpoint' of type [class org.apache.camel.component.cxf.CxfEndpoint] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,950 [main           ] INFO  GenericWebApplicationContext   - Bean 'billingVariableTransformer' of type [class co.nz.pizzashack.integration.mapping.BillingVariableTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:48,158 [main           ] INFO  GenericWebApplicationContext   - Bean 'billingFormatTransformer' of type [class co.nz.pizzashack.integration.mapping.BillingFormatTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:48,160 [main           ] INFO  GenericWebApplicationContext   - Bean 'billingResponseMergeProcessor' of type [class co.nz.pizzashack.integration.mapping.BillingResponseMergeProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:48,163 [main           ] INFO  GenericWebApplicationContext   - Bean 'sleepBean' of type [class co.nz.pizzashack.integration.utils.SleepBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:48,163 [main           ] INFO  GenericWebApplicationContext   - Bean 'billingProcessRoute' of type [class co.nz.pizzashack.integration.route.BillingProcessRoute] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:48,272 [main           ] INFO  GenericWebApplicationContext   - Bean 'org.activiti.engine.impl.rules.RulesDeployer#39a83e27' of type [class org.activiti.engine.impl.rules.RulesDeployer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:48,274 [main           ] INFO  GenericWebApplicationContext   - Bean 'processEngineConfiguration' of type [class org.activiti.spring.SpringProcessEngineConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:48,277 [main           ] INFO  GenericWebApplicationContext   - Bean 'processEngine' of type [class org.activiti.spring.ProcessEngineFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,330 [main           ] INFO  DbSqlSession                   - performing create on engine with resource org/activiti/db/create/activiti.h2.create.engine.sql
2014-02-03 07:50:49,349 [main           ] INFO  DbSqlSession                   - performing create on history with resource org/activiti/db/create/activiti.h2.create.history.sql
2014-02-03 07:50:49,354 [main           ] INFO  DbSqlSession                   - performing create on identity with resource org/activiti/db/create/activiti.h2.create.identity.sql
2014-02-03 07:50:49,357 [main           ] INFO  ProcessEngineImpl              - ProcessEngine default created
2014-02-03 07:50:49,358 [main           ] INFO  GenericWebApplicationContext   - Bean 'processEngine' of type [class org.activiti.engine.impl.ProcessEngineImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,363 [main           ] INFO  GenericWebApplicationContext   - Bean 'runtimeService' of type [class org.activiti.engine.impl.RuntimeServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,368 [main           ] INFO  GenericWebApplicationContext   - Bean 'taskService' of type [class org.activiti.engine.impl.TaskServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,371 [main           ] INFO  GenericWebApplicationContext   - Bean 'historyService' of type [class org.activiti.engine.impl.HistoryServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,376 [main           ] INFO  GenericWebApplicationContext   - Bean 'repositoryService' of type [class org.activiti.engine.impl.RepositoryServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,379 [main           ] INFO  GenericWebApplicationContext   - Bean 'managementService' of type [class org.activiti.engine.impl.ManagementServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,382 [main           ] INFO  GenericWebApplicationContext   - Bean 'identityService' of type [class org.activiti.engine.impl.IdentityServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,383 [main           ] INFO  GenericWebApplicationContext   - Bean 'activitiFacade' of type [class co.nz.pizzashack.wf.ActivitiFacade] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,387 [main           ] INFO  GenericWebApplicationContext   - Bean 'userConverter' of type [class co.nz.pizzashack.data.converter.UserConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,402 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,402 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,405 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,414 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#1' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,470 [main           ] INFO  GenericWebApplicationContext   - Bean 'workflowRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,508 [main           ] INFO  GenericWebApplicationContext   - Bean 'workflowRepository' of type [class com.sun.proxy.$Proxy55] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,512 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#2' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,512 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#2' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,513 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#2' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,513 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#3' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,522 [main           ] INFO  GenericWebApplicationContext   - Bean 'pizzashackRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,534 [main           ] INFO  GenericWebApplicationContext   - Bean 'pizzashackRepository' of type [class com.sun.proxy.$Proxy58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,536 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#4' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,536 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#4' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,537 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#4' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,537 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#5' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,545 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderProcessRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,551 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderProcessRepository' of type [class com.sun.proxy.$Proxy59] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,553 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#6' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,553 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#6' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,553 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#6' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,554 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#7' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,562 [main           ] INFO  GenericWebApplicationContext   - Bean 'userRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,566 [main           ] INFO  GenericWebApplicationContext   - Bean 'userRepository' of type [class com.sun.proxy.$Proxy60] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,568 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#8' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,568 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#8' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,569 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#8' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,569 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#9' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,577 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,581 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderRepository' of type [class com.sun.proxy.$Proxy61] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,608 [main           ] INFO  GenericWebApplicationContext   - Bean 'customerConverter' of type [class co.nz.pizzashack.data.converter.CustomerConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,613 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderDetailConverter' of type [class co.nz.pizzashack.data.converter.OrderDetailConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,613 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderConverter' of type [class co.nz.pizzashack.data.converter.OrderConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,614 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderProcessConverter' of type [class co.nz.pizzashack.data.converter.OrderProcessConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,618 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#10' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,618 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#10' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,619 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#10' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,619 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#11' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,627 [main           ] INFO  GenericWebApplicationContext   - Bean 'departmentRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,632 [main           ] INFO  GenericWebApplicationContext   - Bean 'departmentRepository' of type [class com.sun.proxy.$Proxy62] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,633 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderProcessAccessor' of type [class co.nz.pizzashack.ds.OrderProcessAccessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,638 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderReviewRecordConverter' of type [class co.nz.pizzashack.data.converter.OrderReviewRecordConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,639 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#12' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,639 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#12' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,639 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#12' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,640 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#13' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,647 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderReviewRecordRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,652 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderReviewRecordRepository' of type [class com.sun.proxy.$Proxy63] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,654 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#14' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,655 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#14' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,655 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#14' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,656 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#15' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,663 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderPizzashackRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,667 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderPizzashackRepository' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,670 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#16' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,670 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#16' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,670 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#16' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,670 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#17' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,677 [main           ] INFO  GenericWebApplicationContext   - Bean 'customerRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,681 [main           ] INFO  GenericWebApplicationContext   - Bean 'customerRepository' of type [class com.sun.proxy.$Proxy65] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,682 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderProcessDSImpl' of type [class co.nz.pizzashack.ds.OrderProcessDSImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,688 [main           ] INFO  GenericWebApplicationContext   - Bean 'billingInboundProcessor' of type [class co.nz.pizzashack.integration.processor.BillingInboundProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,689 [main           ] INFO  GenericWebApplicationContext   - Bean 'billingInboundWsRoute' of type [class co.nz.pizzashack.integration.route.BillingInboundWsRoute] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,707 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderJdbcMessageIdRepository' of type [class org.apache.camel.processor.idempotent.jdbc.JdbcMessageIdRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,713 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderProcessFormatTransformer' of type [class co.nz.pizzashack.integration.mapping.OrderProcessFormatTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,721 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#18' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,721 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#18' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,721 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#18' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,722 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#19' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,728 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderRequestHistoryRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,732 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderRequestHistoryRepository' of type [class com.sun.proxy.$Proxy70] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,734 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderRequestProcessor' of type [class co.nz.pizzashack.integration.processor.OrderRequestProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,736 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderDuplicatedReqProcessor' of type [class co.nz.pizzashack.integration.processor.OrderDuplicatedReqProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,737 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderProcessRoute' of type [class co.nz.pizzashack.integration.route.OrderProcessRoute] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,784 [main           ] INFO  GenericWebApplicationContext   - Bean 'activeMQConnectionFactory' of type [class org.apache.activemq.ActiveMQConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,945 [main           ] INFO  GenericWebApplicationContext   - Bean 'pooledConnectionFactory' of type [class org.apache.activemq.pool.PooledConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,965 [main           ] INFO  GenericWebApplicationContext   - Bean 'jmsTransactionManager' of type [class org.springframework.jms.connection.JmsTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,976 [main           ] INFO  GenericWebApplicationContext   - Bean 'jmsComponent' of type [class org.apache.camel.component.jms.JmsComponent] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,981 [main           ] INFO  GenericWebApplicationContext   - Bean 'camelSpringConfig' of type [class co.nz.pizzashack.config.CamelSpringConfig$$EnhancerByCGLIB$$cf4c2422] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:50,018 [main           ] INFO  DefaultListableBeanFactory     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@126e4ecd: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,applicationConfiguration,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,viewConfiguration,webMvcContextConfiguration,logoutController,loginController,indexController,userController,adminIndexController,departmentController,orderController,orderQueryController,staffController,billingProcessRespTransformer,billingProcessReqTransformer,orderProcessFormatTransformer,billingVariableTransformer,billingResponseMergeProcessor,billingFormatTransformer,billingInboundProcessor,orderDuplicatedReqProcessor,orderRequestProcessor,billingProcessRoute,billingInboundWsRoute,orderProcessRoute,sleepBean,pizzashackAPIImpl,camelSpringConfig,camelJdbcIdempotentConfig,camelCxfConfig,orderProcessDSImpl,customerDSImpl,workflowDSImpl,pizzashackDSImpl,userDSImpl,orderProcessAccessor,orderProcessQueryDSImpl,staffDSImpl,orderDSImpl,departmentDSImpl,initialDataConfig,pizzashackCaculator,emailExecutionListener,endExecutionListener,caculationMergeExecutionListener,orderMainTransitionExecutionListener,toManualReviewExecutionListener,outOfBillingProcessExecutionListener,outOfCoreProcessExecutionListener,billingRespExecutionListener,customerConverter,orderProcessConverter,staffConverter,userConverter,departmentConverter,workflowConverter,orderReviewRecordConverter,orderConverter,activityDiscountRateConverter,orderDetailConverter,pizzashackDataInitialConfiguration,pizzashackItemBuilder,infrastructureContextConfiguration,activitiFacade,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0,org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0,customerRepository,orderRequestHistoryRepository,workflowRepository,orderRepository,pizzashackRepository,orderProcessRepository,activityDiscountRateRepository,departmentRepository,orderPizzashackRepository,staffDepartmentRepository,staffRepository,userRepository,orderReviewRecordRepository,viewResolver,messageSource,org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration,requestMappingHandlerMapping,mvcContentNegotiationManager,viewControllerHandlerMapping,beanNameHandlerMapping,resourceHandlerMapping,defaultServletHandlerMapping,requestMappingHandlerAdapter,mvcConversionService,mvcValidator,httpRequestHandlerAdapter,simpleControllerHandlerAdapter,handlerExceptionResolver,sessionAttributeProcessor,localeChangeInterceptor,localeResolver,simpleMappingExceptionResolver,multipartResolver,activeMQConnectionFactory,pooledConnectionFactory,jmsComponent,jmsTransactionManager,camelBeanPostProcessor,camelContext,custThreadPoolProfile,sqlComponent,orderJdbcMessageIdRepository,billingInboundEndpoint,loggingOutInterceptor,cxf,org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor,org.apache.cxf.bus.spring.Jsr250BeanPostProcessor,org.apache.cxf.bus.spring.BusExtensionPostProcessor,org.apache.cxf.binding.soap.SoapBindingFactory,org.apache.cxf.binding.soap.SoapTransportFactory,org.apache.cxf.binding.soap.customEditorConfigurer,setupWorkflowData,setupData,org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration,org.springframework.transaction.config.internalTransactionAdvisor,transactionAttributeSource,transactionInterceptor,dataSource,transactionManager,entityManagerFactory,placeholderConfig,processEngineConfiguration,processEngine,repositoryService,runtimeService,taskService,historyService,managementService,identityService]; root of factory hierarchy
2014-02-03 07:50:50,321 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/logout],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LogoutController.logout(javax.servlet.http.HttpSession)
2014-02-03 07:50:50,322 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/login],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LoginController.handleLogin(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws co.nz.pizzashack.AuthenticationException
2014-02-03 07:50:50,322 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/login],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LoginController.showLoginPage(org.springframework.ui.Model)
2014-02-03 07:50:50,322 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/index],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.IndexController.index(org.springframework.ui.Model,co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-02-03 07:50:50,324 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/createUser],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public co.nz.pizzashack.data.dto.UserDto co.nz.pizzashack.controller.UserController.createUser(co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-02-03 07:50:50,324 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/{userId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.deleteUser(java.lang.Long) throws java.lang.Exception
2014-02-03 07:50:50,324 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,324 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/{userId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,324 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/update/{userId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,325 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/check/{userName}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.checkUser(java.lang.String) throws java.lang.Exception
2014-02-03 07:50:50,325 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,325 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/search],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.search(co.nz.pizzashack.data.dto.UserDto,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,325 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.create(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 07:50:50,325 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.update(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 07:50:50,326 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/adminIndex],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.AdminIndexController.index(org.springframework.ui.Model,co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-02-03 07:50:50,327 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,327 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/{deptId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,327 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/update/{deptId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,328 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/selectdepts],methods=[GET],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.util.Set<co.nz.pizzashack.data.dto.DepartmentDto> co.nz.pizzashack.controller.DepartmentController.select() throws java.lang.Exception
2014-02-03 07:50:50,328 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,328 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/{deptId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.delete(java.lang.Long) throws java.lang.Exception
2014-02-03 07:50:50,328 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/search],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.search(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,328 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.create(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 07:50:50,329 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.update(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 07:50:50,329 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/{orderProcessId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.showOrderProcess(java.lang.Long,org.springframework.ui.Model,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-02-03 07:50:50,329 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/claimReview/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.claimReviewTask(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-02-03 07:50:50,330 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/review],methods=[POST],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.reviewOrder(co.nz.pizzashack.data.dto.OrderReviewRecordDto,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-02-03 07:50:50,330 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderQuery/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderQueryController.show(java.lang.String,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,330 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderQuery/showHistory/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.util.Set<co.nz.pizzashack.data.dto.ProcessActivityDto> co.nz.pizzashack.controller.OrderQueryController.showHistory(java.lang.String) throws java.lang.Exception
2014-02-03 07:50:50,331 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderQuery/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderQueryController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,332 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,332 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/{staffId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,332 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/update/{staffId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,332 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,332 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/{staffId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.delete(java.lang.Long) throws java.lang.Exception
2014-02-03 07:50:50,332 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.create(co.nz.pizzashack.data.dto.StaffDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 07:50:50,333 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.update(co.nz.pizzashack.data.dto.StaffDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 07:50:50,365 [main           ] INFO  SimpleUrlHandlerMapping        - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2014-02-03 07:50:50,368 [main           ] INFO  SimpleUrlHandlerMapping        - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler]
2014-02-03 07:50:50,838 [main           ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) is starting
2014-02-03 07:50:50,839 [main           ] INFO  ManagedManagementStrategy      - JMX is enabled
2014-02-03 07:50:50,930 [main           ] INFO  DefaultTypeConverter           - Loaded 194 type converters
Hibernate: 
    SELECT
        1 
    FROM
        T_ORDER_REQUEST_HISTORY 
    WHERE
        1 = 0
2014-02-03 07:50:51,204 [main           ] INFO  SpringCamelContext             - StreamCaching is not in use. If using streams then its recommended to enable stream caching. See more details at http://camel.apache.org/stream-caching.html
2014-02-03 07:50:51,431 [main           ] INFO  BusApplicationContext          - Refreshing org.apache.cxf.bus.spring.BusApplicationContext@74e5d63d: startup date [Mon Feb 03 07:50:51 NZDT 2014]; parent: org.springframework.web.context.support.GenericWebApplicationContext@5d51981a
2014-02-03 07:50:51,455 [main           ] INFO  DefaultListableBeanFactory     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2cac4d10: defining beans []; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@126e4ecd
2014-02-03 07:50:51,467 [main           ] INFO  ReflectionServiceFactoryBean   - Creating Service {http://ws.integration.pizzashack.nz.co/}BillingProcessWebServicesService from class co.nz.pizzashack.integration.ws.BillingProcessWebServices
2014-02-03 07:50:51,824 [main           ] INFO  ServerImpl                     - Setting the server's publish address to be /billingWs
2014-02-03 07:50:51,845 [main           ] INFO  SpringCamelContext             - Route: activitiBillingProcess started and consuming from: Endpoint[activiti://orderBillingProcess:billingIntegration?copyVariablesToBodyAsMap=true]
2014-02-03 07:50:51,846 [main           ] INFO  SpringCamelContext             - Route: direct:billingIntegration started and consuming from: Endpoint[direct://billingIntegration]
2014-02-03 07:50:51,847 [main           ] INFO  SpringCamelContext             - Route: direct:receiveBillingQueue started and consuming from: Endpoint[direct://receiveBillingQueue]
2014-02-03 07:50:51,848 [main           ] INFO  SpringCamelContext             - Route: route1 started and consuming from: Endpoint[direct://doBillingIntegration]
2014-02-03 07:50:51,856 [main           ] INFO  SpringCamelContext             - Route: orderProcessRoute started and consuming from: Endpoint[jms://queue:pizzashackOrderInbound]
2014-02-03 07:50:51,857 [main           ] INFO  SpringCamelContext             - Route: direct:orderDuplicatedProcess started and consuming from: Endpoint[direct://orderDuplicatedProcess]
2014-02-03 07:50:51,859 [main           ] INFO  SpringCamelContext             - Route: direct:orderRegularProcess started and consuming from: Endpoint[direct://orderRegularProcess]
2014-02-03 07:50:51,861 [main           ] INFO  SpringCamelContext             - Route: cxf:bean:billingInboundEndpoint started and consuming from: Endpoint[cxf://bean:billingInboundEndpoint]
2014-02-03 07:50:51,869 [main           ] INFO  SpringCamelContext             - Total 8 routes, of which 8 is started.
2014-02-03 07:50:51,870 [main           ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) started in 1.032 seconds
2014-02-03 07:50:51,884 [main           ] INFO  WorkflowInitialDataSetup       - initialize start:{}
2014-02-03 07:50:51,891 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 07:50:51,891 [main           ] INFO  UserDSImpl                     - usernamedavid
2014-02-03 07:50:51,892 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 07:50:52,077 [main           ] INFO  UserDSImpl                     - userId:1 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 07:50:52,158 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@3c8f706e[userId=1,username=david,password=MTIzNDU2,createTime=Mon Feb 03 07:50:52 NZDT 2014]
2014-02-03 07:50:52,203 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-02 06:50:52)
2014-02-03 07:50:52,204 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-02 06:50:52)
2014-02-03 07:50:52,206 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 07:50:52,206 [main           ] INFO  UserDSImpl                     - usernamebrad
2014-02-03 07:50:52,206 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 07:50:52,209 [main           ] INFO  UserDSImpl                     - userId:2 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 07:50:52,211 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@5eb59e97[userId=2,username=brad,password=MTIzNDU2,createTime=Mon Feb 03 07:50:52 NZDT 2014]
2014-02-03 07:50:52,211 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-02 06:50:52)
2014-02-03 07:50:52,211 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-02 06:50:52)
2014-02-03 07:50:52,212 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 07:50:52,212 [main           ] INFO  UserDSImpl                     - usernamejohn
2014-02-03 07:50:52,212 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 07:50:52,215 [main           ] INFO  UserDSImpl                     - userId:3 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 07:50:52,217 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@13e7ba33[userId=3,username=john,password=MTIzNDU2,createTime=Mon Feb 03 07:50:52 NZDT 2014]
2014-02-03 07:50:52,218 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-02 06:50:52)
2014-02-03 07:50:52,218 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-02 06:50:52)
2014-02-03 07:50:52,218 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 07:50:52,218 [main           ] INFO  UserDSImpl                     - usernamegeneral
2014-02-03 07:50:52,218 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 07:50:52,221 [main           ] INFO  UserDSImpl                     - userId:4 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 07:50:52,223 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@7dc03fd8[userId=4,username=general,password=MTIzNDU2,createTime=Mon Feb 03 07:50:52 NZDT 2014]
2014-02-03 07:50:52,224 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:2014-02-02 06:50:52)
2014-02-03 07:50:52,224 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:2014-02-02 06:50:52)
2014-02-03 07:50:52,235 [main           ] INFO  DepartmentDSImpl               - createDepartment start:co.nz.pizzashack.data.dto.DepartmentDto(deptId:null, deptName:Order manager, createDate:null) 
Hibernate: 
    select
        department0_.dept_id as dept1_8_,
        department0_.create_date as create2_8_,
        department0_.dept_name as dept3_8_ 
    from
        t_dept department0_ 
    where
        department0_.dept_name=? limit ?
2014-02-03 07:50:52,241 [main           ] INFO  DepartmentConverter            - toModel start:{} co.nz.pizzashack.data.dto.DepartmentDto(deptId:null, deptName:Order manager, createDate:null)
2014-02-03 07:50:52,246 [main           ] INFO  DepartmentConverter            - toModel end:{} co.nz.pizzashack.data.model.DepartmentModel@1efa4cb3[deptId=<null>,deptName=Order manager,createDate=<null>,staffDepartments=<null>]
Hibernate: 
    insert 
    into
        t_dept
        (dept_id, create_date, dept_name) 
    values
        (null, ?, ?)
Hibernate: 
    insert 
    into
        ACT_ID_GROUP
        (ID_, REV_, NAME_, TYPE_)     
    values
        (       ?,       1,        ?,       ?     )
2014-02-03 07:50:52,255 [main           ] INFO  DepartmentConverter            - toDto start:{} co.nz.pizzashack.data.model.DepartmentModel@1efa4cb3[deptId=1,deptName=Order manager,createDate=Mon Feb 03 07:50:52 NZDT 2014,staffDepartments=<null>]
2014-02-03 07:50:52,257 [main           ] INFO  DepartmentConverter            - toDto end:{} co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02)
2014-02-03 07:50:52,257 [main           ] INFO  DepartmentDSImpl               - createDepartment end:co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02) 
2014-02-03 07:50:52,258 [main           ] INFO  WorkflowInitialDataSetup       - department:co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02) 
2014-02-03 07:50:52,279 [main           ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:null, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-02 06:50:52)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-02-03 07:50:52,285 [main           ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:null, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-02 06:50:52))
2014-02-03 07:50:52,304 [main           ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@5e4cc024[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@daabda[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-02-03 07:50:52,355 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@5e4cc024[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@daabda[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=Mon Feb 03 07:50:52 NZDT 2014] 
2014-02-03 07:50:52,355 [main           ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = ?
Hibernate: 
    update
        ACT_GE_PROPERTY      
    SET
        REV_ = ?,
        VALUE_ = ?      
    where
        NAME_ = ?       
        and REV_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-02-03 07:50:52,375 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-02-03 07:50:52,384 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@5e4cc024[staffId=1,individual=co.nz.pizzashack.data.model.IndividualModel@daabda[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=Mon Feb 03 07:50:52 NZDT 2014]
2014-02-03 07:50:52,392 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:1, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-02-03 07:50:52,393 [main           ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:1, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-02-03 07:50:52,396 [main           ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:null, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-02 06:50:52)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-02-03 07:50:52,399 [main           ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:null, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-02 06:50:52))
2014-02-03 07:50:52,399 [main           ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@5ae125e0[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@737dc3bc[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-02-03 07:50:52,409 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@5ae125e0[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@737dc3bc[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=Mon Feb 03 07:50:52 NZDT 2014] 
2014-02-03 07:50:52,409 [main           ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-02-03 07:50:52,414 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-02-03 07:50:52,418 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@5ae125e0[staffId=2,individual=co.nz.pizzashack.data.model.IndividualModel@737dc3bc[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=Mon Feb 03 07:50:52 NZDT 2014]
2014-02-03 07:50:52,420 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:2, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-02-03 07:50:52,420 [main           ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:2, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-02-03 07:50:52,421 [main           ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:null, departments:null, role:manager, level:junior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-02 06:50:52)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-02-03 07:50:52,424 [main           ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:null, departments:null, role:manager, level:junior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-02 06:50:52))
2014-02-03 07:50:52,424 [main           ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@433c1fa0[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@204063dc[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-02-03 07:50:52,430 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@433c1fa0[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@204063dc[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=Mon Feb 03 07:50:52 NZDT 2014] 
2014-02-03 07:50:52,430 [main           ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-02-03 07:50:52,435 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-02-03 07:50:52,438 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@433c1fa0[staffId=3,individual=co.nz.pizzashack.data.model.IndividualModel@204063dc[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=Mon Feb 03 07:50:52 NZDT 2014]
2014-02-03 07:50:52,439 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:3, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:null, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-02-03 07:50:52,439 [main           ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:3, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:null, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-02-03 07:50:52,440 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-02-03 07:50:52,448 [main           ] INFO  BpmnDeployer                   - Processing resource bpmn/OrderBillingProcess.bpmn20.xml
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 117: Having multiple <family> in <alias> isn't supported and may not work as expected
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-02-03 07:50:53,086 [main           ] INFO  RulesDeployer                  - Processing resource bpmn/OrderBillingProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:50:53,098 [main           ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderBillingProcess:1:7]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-02-03 07:50:53,103 [main           ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@531dfd87[wfId=1,name=orderBillingProcess,deployId=4,processDefinitionKey=orderBillingProcess,processDefinitionId=orderBillingProcess:1:7,createTime=Mon Feb 03 07:50:52 NZDT 2014]
2014-02-03 07:50:53,114 [main           ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-02-02 06:50:52)
2014-02-03 07:50:53,114 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-02-02 06:50:52)
2014-02-03 07:50:53,115 [main           ] INFO  WorkflowInitialDataSetup       - deploy billing process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-02-02 06:50:52) 
2014-02-03 07:50:53,115 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-02-03 07:50:53,117 [main           ] INFO  BpmnDeployer                   - Processing resource bpmn/OrdercoreProcess.bpmn20.xml
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-02-03 07:50:53,256 [main           ] INFO  RulesDeployer                  - Processing resource bpmn/OrdercoreProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:50:53,263 [main           ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderCoreProcess:1:11]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-02-03 07:50:53,264 [main           ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@76a410c6[wfId=2,name=orderCoreProcess,deployId=8,processDefinitionKey=orderCoreProcess,processDefinitionId=orderCoreProcess:1:11,createTime=Mon Feb 03 07:50:53 NZDT 2014]
2014-02-03 07:50:53,264 [main           ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-02-02 06:50:53)
2014-02-03 07:50:53,265 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-02-02 06:50:53)
2014-02-03 07:50:53,265 [main           ] INFO  WorkflowInitialDataSetup       - deploy core process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-02-02 06:50:53) 
2014-02-03 07:50:53,265 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-02-03 07:50:53,267 [main           ] INFO  BpmnDeployer                   - Processing resource bpmn/OrderlocalProcess.bpmn20.xml
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-02-03 07:50:53,466 [main           ] INFO  RulesDeployer                  - Processing resource bpmn/OrderlocalProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:50:53,476 [main           ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderlocalProcess:1:15]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-02-03 07:50:53,478 [main           ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@180ee49d[wfId=3,name=orderlocalProcess,deployId=12,processDefinitionKey=orderlocalProcess,processDefinitionId=orderlocalProcess:1:15,createTime=Mon Feb 03 07:50:53 NZDT 2014]
2014-02-03 07:50:53,478 [main           ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 06:50:53)
2014-02-03 07:50:53,478 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 06:50:53)
2014-02-03 07:50:53,479 [main           ] INFO  WorkflowInitialDataSetup       - deploy local main process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 06:50:53) 
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
2014-02-03 07:50:53,526 [main           ] INFO  StaffDSImpl                    - getStaffsByName start:David
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.first_name=? 
        and staffmodel0_.last_name=?
2014-02-03 07:50:53,538 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@54d8248e[staffId=1,individual=co.nz.pizzashack.data.model.IndividualModel@485144ce[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=2014-02-03]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:50:53,548 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@78bf5692[userId=1,username=david,password=MTIzNDU2,createTime=07:50:52]
2014-02-03 07:50:53,553 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:1969-12-31 07:50:52)
Hibernate: 
    select
        staffdepar0_.staff_id as staff4_12_1_,
        staffdepar0_.staff_dept_id as staff1_1_,
        staffdepar0_.staff_dept_id as staff1_1_0_,
        staffdepar0_.join_date as join2_1_0_,
        staffdepar0_.dept_id as dept3_1_0_,
        staffdepar0_.staff_id as staff4_1_0_ 
    from
        t_dept_staff staffdepar0_ 
    where
        staffdepar0_.staff_id=?
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        staffdepar0_.dept_id as dept3_8_1_,
        staffdepar0_.staff_dept_id as staff1_1_,
        staffdepar0_.staff_dept_id as staff1_1_0_,
        staffdepar0_.join_date as join2_1_0_,
        staffdepar0_.dept_id as dept3_1_0_,
        staffdepar0_.staff_id as staff4_1_0_ 
    from
        t_dept_staff staffdepar0_ 
    where
        staffdepar0_.dept_id=?
2014-02-03 07:50:53,574 [main           ] INFO  DepartmentConverter            - toDto start:{} co.nz.pizzashack.data.model.DepartmentModel@7b5dc3af[deptId=1,deptName=Order manager,createDate=2014-02-03,staffDepartments=[co.nz.pizzashack.data.model.StaffDepartmentModel@29dd2d9e[staffDeptId=1,joinDate=2014-02-03], co.nz.pizzashack.data.model.StaffDepartmentModel@5d61b8d5[staffDeptId=2,joinDate=2014-02-03], co.nz.pizzashack.data.model.StaffDepartmentModel@16d712fd[staffDeptId=3,joinDate=2014-02-03]]]
2014-02-03 07:50:53,578 [main           ] INFO  DepartmentConverter            - toDto end:{} co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02)
2014-02-03 07:50:53,587 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:1, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:2014-02-02, departments:[co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02)], role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:1969-12-31 07:50:52))
2014-02-03 07:50:53,588 [main           ] INFO  StaffDSImpl                    - getStaffsByName end:{}
2014-02-03 07:50:53,589 [main           ] INFO  StaffDSImpl                    - getStaffsByName start:Brad
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.first_name=? 
        and staffmodel0_.last_name=?
2014-02-03 07:50:53,591 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@691b3a73[staffId=2,individual=co.nz.pizzashack.data.model.IndividualModel@16b8fbd8[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=2014-02-03]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:50:53,593 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@440ff6a3[userId=2,username=brad,password=MTIzNDU2,createTime=07:50:52]
2014-02-03 07:50:53,594 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:1969-12-31 07:50:52)
Hibernate: 
    select
        staffdepar0_.staff_id as staff4_12_1_,
        staffdepar0_.staff_dept_id as staff1_1_,
        staffdepar0_.staff_dept_id as staff1_1_0_,
        staffdepar0_.join_date as join2_1_0_,
        staffdepar0_.dept_id as dept3_1_0_,
        staffdepar0_.staff_id as staff4_1_0_ 
    from
        t_dept_staff staffdepar0_ 
    where
        staffdepar0_.staff_id=?
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        staffdepar0_.dept_id as dept3_8_1_,
        staffdepar0_.staff_dept_id as staff1_1_,
        staffdepar0_.staff_dept_id as staff1_1_0_,
        staffdepar0_.join_date as join2_1_0_,
        staffdepar0_.dept_id as dept3_1_0_,
        staffdepar0_.staff_id as staff4_1_0_ 
    from
        t_dept_staff staffdepar0_ 
    where
        staffdepar0_.dept_id=?
2014-02-03 07:50:53,599 [main           ] INFO  DepartmentConverter            - toDto start:{} co.nz.pizzashack.data.model.DepartmentModel@7bbf88b7[deptId=1,deptName=Order manager,createDate=2014-02-03,staffDepartments=[co.nz.pizzashack.data.model.StaffDepartmentModel@20ff2c0f[staffDeptId=1,joinDate=2014-02-03], co.nz.pizzashack.data.model.StaffDepartmentModel@3db1c910[staffDeptId=2,joinDate=2014-02-03], co.nz.pizzashack.data.model.StaffDepartmentModel@50a59db5[staffDeptId=3,joinDate=2014-02-03]]]
2014-02-03 07:50:53,599 [main           ] INFO  DepartmentConverter            - toDto end:{} co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02)
2014-02-03 07:50:53,599 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:2, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:2014-02-02, departments:[co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02)], role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:1969-12-31 07:50:52))
2014-02-03 07:50:53,599 [main           ] INFO  StaffDSImpl                    - getStaffsByName end:{}
2014-02-03 07:50:53,600 [main           ] INFO  UserDSImpl                     - getUserByName start:general
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
2014-02-03 07:50:53,602 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@4f8374de[userId=4,username=general,password=MTIzNDU2,createTime=07:50:52]
2014-02-03 07:50:53,602 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)
2014-02-03 07:50:53,602 [main           ] INFO  UserDSImpl                     - getUserByName end:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)
2014-02-03 07:50:53,603 [main           ] INFO  OrderProcessTest               - department:co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02) 
2014-02-03 07:50:53,603 [main           ] INFO  OrderProcessDSImpl             - startOrderProcess start:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.process_definition_key=? 
        and workflowmo0_.category=? limit ?
Hibernate: 
    insert 
    into
        t_order
        (order_id, cust_id, deliver_time, order_no, order_time, payment_remarks, payment_status, quantity, ship_address, status, total_price) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:50:53,617 [main           ] INFO  ActivitiFacade                 - startProcessInstance start:{}
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
2014-02-03 07:50:53,635 [main           ] INFO  ActivitiFacade                 - startProcessInstance end:{}
Hibernate: 
    insert 
    into
        t_order_process
        (order_process_id, active_process_definition_id, active_process_instance_id, complete_time, create_time, execution_id, main_process_definition_id, main_process_instance_id, operator_id, order_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2014-02-03 07:50:53,641 [main           ] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@147fc87f[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=Mon Feb 03 07:50:53 NZDT 2014,completeTime=<null>]
2014-02-03 07:50:53,661 [main           ] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@48212cab[orderId=1,orderNo=e7c2107e-165f-4062-aa63-eb787563eba2,quantity=<null>,status=0,paymentStatus=0,deliverTime=<null>,totalPrice=<null>,orderTime=Mon Feb 03 07:50:53 NZDT 2014]
2014-02-03 07:50:53,669 [main           ] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null)
2014-02-03 07:50:53,670 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@1fd9600d[userId=4,username=general,password=MTIzNDU2,createTime=07:50:52]
2014-02-03 07:50:53,670 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)
2014-02-03 07:50:53,677 [main           ] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 06:50:53, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52))
2014-02-03 07:50:53,678 [main           ] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 06:50:53, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
2014-02-03 07:50:53,689 [main           ] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 07:50:53,689 [main           ] INFO  ActivitiFacade                 - executionId: 16, processDefinitionId: orderlocalProcess:1:15
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 07:50:53,714 [main           ] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:50:53,721 [main           ] INFO  OrderProcessAccessor           - assign operator[4] to task[Data entry]
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    insert 
    into
        ACT_RU_IDENTITYLINK
        (ID_, REV_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_, PROC_DEF_ID_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_IDENTITYLINK
        (ID_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_)     
    values
        (?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_TASK      
    SET
        REV_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        PRIORITY_ = ?,
        CREATE_TIME_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        DELEGATION_ = ?,
        EXECUTION_ID_ = ?,
        PROC_DEF_ID_ = ?,
        DESCRIPTION_ = ?,
        DUE_DATE_ = ?,
        SUSPENSION_STATE_ = ?      
    where
        ID_= ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
2014-02-03 07:50:53,742 [main           ] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 06:50:53, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
2014-02-03 07:50:53,743 [main           ] INFO  OrderProcessDSImpl             - startOrderProcess end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 06:50:53, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52))
2014-02-03 07:50:53,745 [main           ] INFO  OrderProcessTest               - after start instance:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 06:50:53, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
2014-02-03 07:50:53,750 [main           ] INFO  OrderProcessTest               - order pazza type size:2 
2014-02-03 07:50:53,750 [main           ] INFO  OrderProcessDSImpl             - dataEntry start:e7c2107e-165f-4062-aa63-eb787563eba2
2014-02-03 07:50:53,750 [main           ] INFO  OrderProcessDSImpl             - getOrderProcessByOrderNo start************************************
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 07:50:53,759 [main           ] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@87d93f3[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=07:50:53,completeTime=<null>] 
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_,
        customermo0_.address as address2_,
        customermo0_.credits as credits2_,
        customermo0_.customer_name as customer4_2_,
        customermo0_.email as email2_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.email=? limit ?
2014-02-03 07:50:53,764 [main           ] INFO  CustomerConverter              - toModel start:{} co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:david, customerEmail:david.yuan124@gmail.com, level:null)
2014-02-03 07:50:53,768 [main           ] INFO  CustomerConverter              - toModel end:{} co.nz.pizzashack.data.model.CustomerModel@1a44875f[custId=<null>,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
Hibernate: 
    insert 
    into
        t_customer
        (cust_id, address, credits, customer_name, email) 
    values
        (null, ?, ?, ?, ?)
2014-02-03 07:50:53,771 [main           ] INFO  OrderProcessDSImpl             - orderDetailsSet size:2 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
2014-02-03 07:50:53,778 [main           ] INFO  OrderProcessDSImpl             - added orderPizzashackModel:co.nz.pizzashack.data.model.OrderPizzashackModel@6c3129d6[orderPizzashackId=<null>,totalPrice=0,qty=4] 
Hibernate: 
    insert 
    into
        t_order_pizzashack
        (order_pizza_id, order_id, pizzashack_id, qty, total_price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
2014-02-03 07:50:53,785 [main           ] INFO  OrderProcessDSImpl             - added orderPizzashackModel:co.nz.pizzashack.data.model.OrderPizzashackModel@36a2c086[orderPizzashackId=<null>,totalPrice=0,qty=10] 
Hibernate: 
    insert 
    into
        t_order_pizzashack
        (order_pizza_id, order_id, pizzashack_id, qty, total_price) 
    values
        (null, ?, ?, ?, ?)
2014-02-03 07:50:53,786 [main           ] INFO  OrderProcessDSImpl             - after add detailsDto, size in model:2 
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        E.BUSINESS_KEY_ = ?                                                                                 
        and RES.PROC_DEF_ID_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                    
        and RES.ASSIGNEE_ = ?                                                                        
        and E.BUSINESS_KEY_ = ?
2014-02-03 07:50:53,791 [main           ] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@87d93f3[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=07:50:53,completeTime=<null>]
2014-02-03 07:50:53,795 [main           ] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@682ae058[orderId=1,orderNo=e7c2107e-165f-4062-aa63-eb787563eba2,quantity=14,status=0,paymentStatus=0,deliverTime=<null>,totalPrice=0,orderTime=2014-02-03 07:50:53.609]
2014-02-03 07:50:53,798 [main           ] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@1a44875f[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 07:50:53,804 [main           ] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-02-03 07:50:53,808 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@6c3129d6[orderPizzashackId=1,totalPrice=0,qty=4]
2014-02-03 07:50:53,815 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0)
2014-02-03 07:50:53,815 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@36a2c086[orderPizzashackId=2,totalPrice=0,qty=10]
2014-02-03 07:50:53,815 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)
2014-02-03 07:50:53,816 [main           ] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:14, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:50:53,817 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@71be9f1[userId=4,username=general,password=MTIzNDU2,createTime=07:50:52]
2014-02-03 07:50:53,818 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)
2014-02-03 07:50:53,818 [main           ] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:14, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:50:53, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52))
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        PARENT_TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE 
    where
        TASK_ID_ =     ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
2014-02-03 07:50:53,843 [main           ] INFO  ainTransitionExecutionListener - orderMainUserTaskExecutionListener start:{} 
2014-02-03 07:50:53,844 [main           ] INFO  ainTransitionExecutionListener - nextActivity id:orderCoreCallactivity
2014-02-03 07:50:53,844 [main           ] INFO  ainTransitionExecutionListener - nextActivity name:Core process
2014-02-03 07:50:53,844 [main           ] INFO  ainTransitionExecutionListener - nextActivity type:callActivity
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
start calculate: co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:14, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:50:53, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52))
2014-02-03 07:50:54,050 [main           ] INFO  PizzashackCaculator            - caculate start:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:14, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null) 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 07:50:54,056 [main           ] INFO  PizzashackCaculator            - caculate end:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null) 
after calculation: co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null)
2014-02-03 07:50:54,057 [main           ] INFO  culationMergeExecutionListener - CaculationMergeExecutionListener start
2014-02-03 07:50:54,057 [main           ] INFO  culationMergeExecutionListener - after calculation, orderProcess:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:50:53, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
2014-02-03 07:50:54,058 [main           ] INFO  OrderProcessAccessor           - merge calculation result
2014-02-03 07:50:54,058 [main           ] INFO  OrderProcessAccessor           - total price:390.00 
2014-02-03 07:50:54,058 [main           ] INFO  OrderProcessAccessor           - qty:14 
2014-02-03 07:50:54,058 [main           ] INFO  OrderProcessAccessor           - orderDetailsSet.size():2
2014-02-03 07:50:54,058 [main           ] INFO  culationMergeExecutionListener - CaculationMergeExecutionListener end
total qty: 14
after autoreview: 2
reviewTransBean: co.nz.pizzashack.data.dto.OrderReviewRecordDto(reviewRecordId:null, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, content:order number is more than 10 but less than 30, reviewResult:pending, createTime:2014-02-02 06:50:54, reviewer:null)
2014-02-03 07:50:54,113 [main           ] INFO  oManualReviewExecutionListener - ToManualReviewExecutionListener start:{} 
2014-02-03 07:50:54,113 [main           ] INFO  oManualReviewExecutionListener - eventName:take 
2014-02-03 07:50:54,113 [main           ] INFO  oManualReviewExecutionListener - activitiProcessDefinitionId:orderCoreProcess:1:11
2014-02-03 07:50:54,113 [main           ] INFO  oManualReviewExecutionListener - activitiProcesssInstanceId:30
2014-02-03 07:50:54,113 [main           ] INFO  oManualReviewExecutionListener - get orderReviewRecord:co.nz.pizzashack.data.dto.OrderReviewRecordDto(reviewRecordId:null, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, content:order number is more than 10 but less than 30, reviewResult:pending, createTime:2014-02-02 06:50:54, reviewer:null) 
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_IDENTITYLINK
        (ID_, REV_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_, PROC_DEF_ID_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_IDENTITYLINK
        (ID_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_)     
    values
        (?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_EXECUTION 
    set
        REV_ = ?,
        BUSINESS_KEY_ = ?,
        PROC_DEF_ID_ = ?,
        ACT_ID_ = ?,
        IS_ACTIVE_ = ?,
        IS_CONCURRENT_ = ?,
        IS_SCOPE_ = ?,
        IS_EVENT_SCOPE_ = ?,
        PARENT_ID_ = ?,
        SUPER_EXEC_ = ?,
        SUSPENSION_STATE_ = ?,
        CACHED_ENT_STATE_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_TASK 
    where
        ID_ = ? 
        and REV_ = ?
2014-02-03 07:50:54,150 [main           ] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-02-03 07:50:54,159 [main           ] INFO  OrderProcessAccessor           - get OrderProcessDto from flow:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
2014-02-03 07:50:54,159 [main           ] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 07:50:54,159 [main           ] INFO  ActivitiFacade                 - executionId: 30, processDefinitionId: orderCoreProcess:1:11
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 07:50:54,163 [main           ] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:50:54,166 [main           ] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo start:{}
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 07:50:54,167 [main           ] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo end:{}
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
2014-02-03 07:50:54,168 [main           ] INFO  OrderProcessAccessor           - after merge orderProcessModel:co.nz.pizzashack.data.model.OrderProcessModel@87d93f3[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=07:50:53,completeTime=<null>] 
2014-02-03 07:50:54,169 [main           ] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
2014-02-03 07:50:54,170 [main           ] INFO  OrderProcessDSImpl             - dataEntry end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52))
Hibernate: 
    update
        t_order_process 
    set
        active_process_definition_id=?,
        active_process_instance_id=?,
        complete_time=?,
        create_time=?,
        execution_id=?,
        main_process_definition_id=?,
        main_process_instance_id=?,
        operator_id=?,
        order_id=? 
    where
        order_process_id=?
Hibernate: 
    update
        t_order 
    set
        cust_id=?,
        deliver_time=?,
        order_no=?,
        order_time=?,
        payment_remarks=?,
        payment_status=?,
        quantity=?,
        ship_address=?,
        status=?,
        total_price=? 
    where
        order_id=?
Hibernate: 
    update
        t_order_pizzashack 
    set
        order_id=?,
        pizzashack_id=?,
        qty=?,
        total_price=? 
    where
        order_pizza_id=?
Hibernate: 
    update
        t_order_pizzashack 
    set
        order_id=?,
        pizzashack_id=?,
        qty=?,
        total_price=? 
    where
        order_pizza_id=?
2014-02-03 07:50:54,180 [main           ] INFO  OrderProcessTest               - **************************after dataentry:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
2014-02-03 07:50:54,181 [main           ] INFO  OrderProcessQueryDSImpl        - getOrderProcessDtoById start:1 
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_0_,
        orderproce0_.active_process_definition_id as active2_10_0_,
        orderproce0_.active_process_instance_id as active3_10_0_,
        orderproce0_.complete_time as complete4_10_0_,
        orderproce0_.create_time as create5_10_0_,
        orderproce0_.execution_id as execution6_10_0_,
        orderproce0_.main_process_definition_id as main7_10_0_,
        orderproce0_.main_process_instance_id as main8_10_0_,
        orderproce0_.operator_id as operator9_10_0_,
        orderproce0_.order_id as order10_10_0_ 
    from
        t_order_process orderproce0_ 
    where
        orderproce0_.order_process_id=?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 07:50:54,183 [main           ] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@344b14bd[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=07:50:53,completeTime=<null>]
2014-02-03 07:50:54,184 [main           ] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@1d011fbb[orderId=1,orderNo=e7c2107e-165f-4062-aa63-eb787563eba2,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 07:50:53.609]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 07:50:54,191 [main           ] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@44d630aa[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 07:50:54,191 [main           ] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 07:50:54,192 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@531ea33b[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:50:54,196 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 07:50:54,196 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@6ea11f[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:50:54,198 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 07:50:54,198 [main           ] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:50:54,199 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@397a0709[userId=4,username=general,password=MTIzNDU2,createTime=07:50:52]
2014-02-03 07:50:54,200 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)
2014-02-03 07:50:54,200 [main           ] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52))
2014-02-03 07:50:54,200 [main           ] INFO  OrderProcessQueryDSImpl        - buildPendingActivity start:{}
2014-02-03 07:50:54,200 [main           ] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 07:50:54,200 [main           ] INFO  ActivitiFacade                 - executionId: 30, processDefinitionId: orderCoreProcess:1:11
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:50:54,206 [main           ] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo start:{}
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 07:50:54,208 [main           ] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo end:{}
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
2014-02-03 07:50:54,209 [main           ] INFO  OrderProcessQueryDSImpl        - buildPendingActivity end:{}
2014-02-03 07:50:54,210 [main           ] INFO  OrderProcessQueryDSImpl        - getOrderProcessDtoById end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:null), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
2014-02-03 07:50:54,210 [main           ] INFO  OrderProcessTest               - -------------------------------ProcessActivityDto:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:null)
2014-02-03 07:50:54,211 [main           ] INFO  OrderDSImpl                    - getOrderByOrderNo start:e7c2107e-165f-4062-aa63-eb787563eba2 
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_,
        ordermodel0_.cust_id as cust11_4_,
        ordermodel0_.deliver_time as deliver2_4_,
        ordermodel0_.order_no as order3_4_,
        ordermodel0_.order_time as order4_4_,
        ordermodel0_.payment_remarks as payment5_4_,
        ordermodel0_.payment_status as payment6_4_,
        ordermodel0_.quantity as quantity4_,
        ordermodel0_.ship_address as ship8_4_,
        ordermodel0_.status as status4_,
        ordermodel0_.total_price as total10_4_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_no=? limit ?
2014-02-03 07:50:54,216 [main           ] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@463c76f[orderId=1,orderNo=e7c2107e-165f-4062-aa63-eb787563eba2,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 07:50:53.609]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 07:50:54,217 [main           ] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@1048abfb[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 07:50:54,218 [main           ] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 07:50:54,219 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@36e8db37[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:50:54,220 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 07:50:54,221 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@7190140a[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:50:54,222 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 07:50:54,222 [main           ] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null)
2014-02-03 07:50:54,222 [main           ] INFO  OrderDSImpl                    - getOrderByOrderNo end:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null) 
2014-02-03 07:50:54,223 [main           ] INFO  OrderProcessTest               - after dataentry latest order from db:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null) 
2014-02-03 07:50:54,223 [main           ] INFO  OrderProcessDSImpl             - claimOrderReviewTask start:e7c2107e-165f-4062-aa63-eb787563eba2
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 07:50:54,226 [main           ] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@7d8f4292[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=07:50:53,completeTime=<null>] 
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        E.BUSINESS_KEY_ = ?                                                                                 
        and RES.PROC_DEF_ID_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:50:54,229 [main           ] INFO  OrderProcessDSImpl             - taskId:57
2014-02-03 07:50:54,229 [main           ] INFO  OrderProcessDSImpl             - taskName:Manual underwriting
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                    
        and RES.ASSIGNEE_ = ?                                                                        
        and E.BUSINESS_KEY_ = ?
Hibernate: 
    select
        g.*     
    from
        ACT_ID_GROUP g,
        ACT_ID_MEMBERSHIP membership     
    where
        g.ID_ = membership.GROUP_ID_       
        and membership.USER_ID_ = ?
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                   
    inner join
        ACT_RU_IDENTITYLINK I 
            on I.TASK_ID_ = RES.ID_                                 
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                                                                                                                                                              
        and RES.ASSIGNEE_ is null         
        and I.TYPE_ = 'candidate'         
        and          (
            I.USER_ID_ = ?                                             
            or                                   I.GROUP_ID_ IN             (
                ?             
            )                    
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    insert 
    into
        ACT_RU_IDENTITYLINK
        (ID_, REV_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_, PROC_DEF_ID_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_IDENTITYLINK
        (ID_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_)     
    values
        (?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_COMMENT
        (ID_, TYPE_, TIME_, USER_ID_, TASK_ID_, PROC_INST_ID_, ACTION_, MESSAGE_, FULL_MSG_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_TASK      
    SET
        REV_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        PRIORITY_ = ?,
        CREATE_TIME_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        DELEGATION_ = ?,
        EXECUTION_ID_ = ?,
        PROC_DEF_ID_ = ?,
        DESCRIPTION_ = ?,
        DUE_DATE_ = ?,
        SUSPENSION_STATE_ = ?      
    where
        ID_= ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
2014-02-03 07:50:54,250 [main           ] INFO  OrderProcessDSImpl             - claimOrderReviewTask end:{}
2014-02-03 07:50:54,251 [main           ] INFO  OrderProcessTest               - after david claim task:{} 
2014-02-03 07:50:54,251 [main           ] INFO  OrderProcessQueryDSImpl        - getOrderProcessDtoById start:1 
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_0_,
        orderproce0_.active_process_definition_id as active2_10_0_,
        orderproce0_.active_process_instance_id as active3_10_0_,
        orderproce0_.complete_time as complete4_10_0_,
        orderproce0_.create_time as create5_10_0_,
        orderproce0_.execution_id as execution6_10_0_,
        orderproce0_.main_process_definition_id as main7_10_0_,
        orderproce0_.main_process_instance_id as main8_10_0_,
        orderproce0_.operator_id as operator9_10_0_,
        orderproce0_.order_id as order10_10_0_ 
    from
        t_order_process orderproce0_ 
    where
        orderproce0_.order_process_id=?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 07:50:54,253 [main           ] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@2a2b4348[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=07:50:53,completeTime=<null>]
2014-02-03 07:50:54,254 [main           ] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@163690a7[orderId=1,orderNo=e7c2107e-165f-4062-aa63-eb787563eba2,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 07:50:53.609]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 07:50:54,255 [main           ] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@696b4f5e[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 07:50:54,255 [main           ] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 07:50:54,257 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@7c7e6992[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:50:54,258 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 07:50:54,258 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@b8508c8[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:50:54,258 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 07:50:54,259 [main           ] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:50:54,259 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@34fea8be[userId=4,username=general,password=MTIzNDU2,createTime=07:50:52]
2014-02-03 07:50:54,260 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)
2014-02-03 07:50:54,260 [main           ] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52))
2014-02-03 07:50:54,260 [main           ] INFO  OrderProcessQueryDSImpl        - buildPendingActivity start:{}
2014-02-03 07:50:54,260 [main           ] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 07:50:54,260 [main           ] INFO  ActivitiFacade                 - executionId: 30, processDefinitionId: orderCoreProcess:1:11
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:50:54,267 [main           ] INFO  OrderProcessQueryDSImpl        - buildPendingActivity end:{}
2014-02-03 07:50:54,268 [main           ] INFO  OrderProcessQueryDSImpl        - getOrderProcessDtoById end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:david, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:null), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
2014-02-03 07:50:54,268 [main           ] INFO  OrderProcessTest               - -------------------------------ProcessActivityDto:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:david, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:null)
2014-02-03 07:50:54,269 [main           ] INFO  OrderProcessDSImpl             - manualOrderReview start:co.nz.pizzashack.data.dto.OrderReviewRecordDto(reviewRecordId:null, orderNo:null, content:review passed, reviewResult:accept, createTime:null, reviewer:co.nz.pizzashack.data.dto.StaffDto(staffId:1, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:2014-02-02, departments:[co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02)], role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:1969-12-31 07:50:52))) 
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 07:50:54,271 [main           ] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@5decee06[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=07:50:53,completeTime=<null>] 
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:50:54,271 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@71d6e165[userId=4,username=general,password=MTIzNDU2,createTime=07:50:52]
2014-02-03 07:50:54,272 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)
2014-02-03 07:50:54,272 [main           ] INFO  OrderProcessDSImpl             - doManualOrderReview start:{} 
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        E.BUSINESS_KEY_ = ?                                                                                 
        and RES.PROC_DEF_ID_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                    
        and RES.ASSIGNEE_ = ?                                                                        
        and E.BUSINESS_KEY_ = ?
2014-02-03 07:50:54,275 [main           ] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@5decee06[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=07:50:53,completeTime=<null>]
2014-02-03 07:50:54,276 [main           ] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@7a79584a[orderId=1,orderNo=e7c2107e-165f-4062-aa63-eb787563eba2,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 07:50:53.609]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 07:50:54,277 [main           ] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@3e92885f[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 07:50:54,277 [main           ] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 07:50:54,278 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@4e1176c6[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:50:54,278 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 07:50:54,278 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@5c8ce934[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:50:54,279 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 07:50:54,279 [main           ] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null)
2014-02-03 07:50:54,279 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@71d6e165[userId=4,username=general,password=MTIzNDU2,createTime=07:50:52]
2014-02-03 07:50:54,280 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)
2014-02-03 07:50:54,280 [main           ] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52))
2014-02-03 07:50:54,280 [main           ] INFO  OrderProcessDSImpl             - before manual review flow:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52))
2014-02-03 07:50:54,280 [main           ] INFO  OrderProcessDSImpl             - reviewResult:accept 
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        PARENT_TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE 
    where
        TASK_ID_ =     ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_PROCINST 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RU_JOB J     
    where
        J.EXECUTION_ID_ = ?
Hibernate: 
    select
        *      
    from
        ACT_RU_EVENT_SUBSCR     
    where
        (
            EXECUTION_ID_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
2014-02-03 07:50:54,308 [main           ] INFO  OfCoreProcessExecutionListener - after core process, orderProcess:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-02-03 07:50:54,311 [main           ] INFO  ainTransitionExecutionListener - orderMainUserTaskExecutionListener start:{} 
2014-02-03 07:50:54,311 [main           ] INFO  ainTransitionExecutionListener - nextActivity id:billingEntry
2014-02-03 07:50:54,311 [main           ] INFO  ainTransitionExecutionListener - nextActivity name:Billing fill in
2014-02-03 07:50:54,311 [main           ] INFO  ainTransitionExecutionListener - nextActivity type:userTask
2014-02-03 07:50:54,311 [main           ] INFO  ainTransitionExecutionListener - order status:pendingOnBilling 
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    update
        ACT_HI_PROCINST 
    set
        PROC_DEF_ID_ = ?,
        BUSINESS_KEY_ = ?,
        START_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        END_ACT_ID_ = ?,
        DELETE_REASON_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_VARINST 
    set
        REV_ = ?,
        BYTEARRAY_ID_ = ?,
        DOUBLE_ = ?,
        LONG_ = ?,
        TEXT_ = ?,
        TEXT2_ = ?,
        VAR_TYPE_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_EXECUTION 
    set
        REV_ = ?,
        BUSINESS_KEY_ = ?,
        PROC_DEF_ID_ = ?,
        ACT_ID_ = ?,
        IS_ACTIVE_ = ?,
        IS_CONCURRENT_ = ?,
        IS_SCOPE_ = ?,
        IS_EVENT_SCOPE_ = ?,
        PARENT_ID_ = ?,
        SUPER_EXEC_ = ?,
        SUSPENSION_STATE_ = ?,
        CACHED_ENT_STATE_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_IDENTITYLINK 
    where
        ID_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_TASK 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_IDENTITYLINK 
    where
        ID_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ? 
        and REV_ = ?
2014-02-03 07:50:54,337 [main           ] INFO  OrderProcessDSImpl             - doManualOrderReview end:{} 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:50:54,339 [main           ] INFO  OrderProcessDSImpl             - process pending, build pending Activity:{} 
2014-02-03 07:50:54,339 [main           ] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:50:53, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-02-03 07:50:54,344 [main           ] INFO  OrderProcessAccessor           - get OrderProcessDto from flow:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:50:53, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
2014-02-03 07:50:54,344 [main           ] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 07:50:54,344 [main           ] INFO  ActivitiFacade                 - executionId: 16, processDefinitionId: orderlocalProcess:1:15
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 07:50:54,348 [main           ] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:50:54,350 [main           ] INFO  OrderProcessAccessor           - assign operator[4] to task[Billing fill in]
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_TASK      
    SET
        REV_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        PRIORITY_ = ?,
        CREATE_TIME_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        DELEGATION_ = ?,
        EXECUTION_ID_ = ?,
        PROC_DEF_ID_ = ?,
        DESCRIPTION_ = ?,
        DUE_DATE_ = ?,
        SUSPENSION_STATE_ = ?      
    where
        ID_= ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
2014-02-03 07:50:54,358 [main           ] INFO  OrderProcessAccessor           - after merge orderProcessModel:co.nz.pizzashack.data.model.OrderProcessModel@5decee06[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=07:50:53,completeTime=<null>] 
2014-02-03 07:50:54,359 [main           ] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:50:53, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
2014-02-03 07:50:54,361 [main           ] INFO  OrderProcessDSImpl             - manualOrderReview end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:50:53, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
Hibernate: 
    update
        t_order_process 
    set
        active_process_definition_id=?,
        active_process_instance_id=?,
        complete_time=?,
        create_time=?,
        execution_id=?,
        main_process_definition_id=?,
        main_process_instance_id=?,
        operator_id=?,
        order_id=? 
    where
        order_process_id=?
Hibernate: 
    update
        t_order 
    set
        cust_id=?,
        deliver_time=?,
        order_no=?,
        order_time=?,
        payment_remarks=?,
        payment_status=?,
        quantity=?,
        ship_address=?,
        status=?,
        total_price=? 
    where
        order_id=?
2014-02-03 07:50:54,363 [main           ] INFO  OrderProcessTest               - after manul underwriting pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]) 
2014-02-03 07:50:54,364 [main           ] INFO  OrderDSImpl                    - getOrderByOrderNo start:e7c2107e-165f-4062-aa63-eb787563eba2 
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_,
        ordermodel0_.cust_id as cust11_4_,
        ordermodel0_.deliver_time as deliver2_4_,
        ordermodel0_.order_no as order3_4_,
        ordermodel0_.order_time as order4_4_,
        ordermodel0_.payment_remarks as payment5_4_,
        ordermodel0_.payment_status as payment6_4_,
        ordermodel0_.quantity as quantity4_,
        ordermodel0_.ship_address as ship8_4_,
        ordermodel0_.status as status4_,
        ordermodel0_.total_price as total10_4_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_no=? limit ?
2014-02-03 07:50:54,365 [main           ] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@653f93de[orderId=1,orderNo=e7c2107e-165f-4062-aa63-eb787563eba2,quantity=14,status=5,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 07:50:53.609]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 07:50:54,366 [main           ] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@4f996743[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 07:50:54,366 [main           ] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 07:50:54,367 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@3bc69f88[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:50:54,367 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 07:50:54,367 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@6d13b860[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:50:54,368 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 07:50:54,368 [main           ] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:50:53, deliverTime:null)
2014-02-03 07:50:54,368 [main           ] INFO  OrderDSImpl                    - getOrderByOrderNo end:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:50:53, deliverTime:null) 
2014-02-03 07:50:54,369 [main           ] INFO  OrderProcessTest               - ********************after review:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:50:53, deliverTime:null) 
Tests run: 4, Failures: 0, Errors: 0, Skipped: 3, Time elapsed: 10.341 sec

Results :

Tests run: 4, Failures: 0, Errors: 0, Skipped: 3

2014-02-03 07:50:54,422 [Thread-8       ] INFO  GenericWebApplicationContext   - Closing org.springframework.web.context.support.GenericWebApplicationContext@5d51981a: startup date [Mon Feb 03 07:50:44 NZDT 2014]; root of context hierarchy
2014-02-03 07:50:54,423 [Thread-8       ] INFO  BusApplicationContext          - Closing org.apache.cxf.bus.spring.BusApplicationContext@74e5d63d: startup date [Mon Feb 03 07:50:51 NZDT 2014]; parent: org.springframework.web.context.support.GenericWebApplicationContext@5d51981a
2014-02-03 07:50:54,423 [Thread-8       ] INFO  DefaultListableBeanFactory     - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2cac4d10: defining beans []; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@126e4ecd
2014-02-03 07:50:54,424 [Thread-8       ] INFO  DefaultListableBeanFactory     - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@126e4ecd: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,applicationConfiguration,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,viewConfiguration,webMvcContextConfiguration,logoutController,loginController,indexController,userController,adminIndexController,departmentController,orderController,orderQueryController,staffController,billingProcessRespTransformer,billingProcessReqTransformer,orderProcessFormatTransformer,billingVariableTransformer,billingResponseMergeProcessor,billingFormatTransformer,billingInboundProcessor,orderDuplicatedReqProcessor,orderRequestProcessor,billingProcessRoute,billingInboundWsRoute,orderProcessRoute,sleepBean,pizzashackAPIImpl,camelSpringConfig,camelJdbcIdempotentConfig,camelCxfConfig,orderProcessDSImpl,customerDSImpl,workflowDSImpl,pizzashackDSImpl,userDSImpl,orderProcessAccessor,orderProcessQueryDSImpl,staffDSImpl,orderDSImpl,departmentDSImpl,initialDataConfig,pizzashackCaculator,emailExecutionListener,endExecutionListener,caculationMergeExecutionListener,orderMainTransitionExecutionListener,toManualReviewExecutionListener,outOfBillingProcessExecutionListener,outOfCoreProcessExecutionListener,billingRespExecutionListener,customerConverter,orderProcessConverter,staffConverter,userConverter,departmentConverter,workflowConverter,orderReviewRecordConverter,orderConverter,activityDiscountRateConverter,orderDetailConverter,pizzashackDataInitialConfiguration,pizzashackItemBuilder,infrastructureContextConfiguration,activitiFacade,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0,org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0,customerRepository,orderRequestHistoryRepository,workflowRepository,orderRepository,pizzashackRepository,orderProcessRepository,activityDiscountRateRepository,departmentRepository,orderPizzashackRepository,staffDepartmentRepository,staffRepository,userRepository,orderReviewRecordRepository,viewResolver,messageSource,org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration,requestMappingHandlerMapping,mvcContentNegotiationManager,viewControllerHandlerMapping,beanNameHandlerMapping,resourceHandlerMapping,defaultServletHandlerMapping,requestMappingHandlerAdapter,mvcConversionService,mvcValidator,httpRequestHandlerAdapter,simpleControllerHandlerAdapter,handlerExceptionResolver,sessionAttributeProcessor,localeChangeInterceptor,localeResolver,simpleMappingExceptionResolver,multipartResolver,activeMQConnectionFactory,pooledConnectionFactory,jmsComponent,jmsTransactionManager,camelBeanPostProcessor,camelContext,custThreadPoolProfile,sqlComponent,orderJdbcMessageIdRepository,billingInboundEndpoint,loggingOutInterceptor,cxf,org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor,org.apache.cxf.bus.spring.Jsr250BeanPostProcessor,org.apache.cxf.bus.spring.BusExtensionPostProcessor,org.apache.cxf.binding.soap.SoapBindingFactory,org.apache.cxf.binding.soap.SoapTransportFactory,org.apache.cxf.binding.soap.customEditorConfigurer,setupWorkflowData,setupData,org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration,org.springframework.transaction.config.internalTransactionAdvisor,transactionAttributeSource,transactionInterceptor,dataSource,transactionManager,entityManagerFactory,placeholderConfig,processEngineConfiguration,processEngine,repositoryService,runtimeService,taskService,historyService,managementService,identityService]; root of factory hierarchy
2014-02-03 07:50:54,424 [Thread-8       ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) is shutting down
2014-02-03 07:50:54,425 [Thread-8       ] INFO  DefaultShutdownStrategy        - Starting to graceful shutdown 8 routes (timeout 300 seconds)
2014-02-03 07:50:54,429 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: cxf:bean:billingInboundEndpoint shutdown complete, was consuming from: Endpoint[cxf://bean:billingInboundEndpoint]
2014-02-03 07:50:54,429 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:orderRegularProcess shutdown complete, was consuming from: Endpoint[direct://orderRegularProcess]
2014-02-03 07:50:54,429 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:orderDuplicatedProcess shutdown complete, was consuming from: Endpoint[direct://orderDuplicatedProcess]
2014-02-03 07:50:54,913 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: orderProcessRoute shutdown complete, was consuming from: Endpoint[jms://queue:pizzashackOrderInbound]
2014-02-03 07:50:54,913 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: route1 shutdown complete, was consuming from: Endpoint[direct://doBillingIntegration]
2014-02-03 07:50:54,913 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:receiveBillingQueue shutdown complete, was consuming from: Endpoint[direct://receiveBillingQueue]
2014-02-03 07:50:54,913 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:billingIntegration shutdown complete, was consuming from: Endpoint[direct://billingIntegration]
2014-02-03 07:50:54,914 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: activitiBillingProcess shutdown complete, was consuming from: Endpoint[activiti://orderBillingProcess:billingIntegration?copyVariablesToBodyAsMap=true]
2014-02-03 07:50:54,914 [Thread-8       ] INFO  DefaultShutdownStrategy        - Graceful shutdown of 8 routes completed in 0 seconds
2014-02-03 07:50:54,916 [Thread-8       ] INFO  CxfEndpoint                    - shutdown the bus ... org.apache.cxf.bus.spring.SpringBus@18554581
2014-02-03 07:50:54,933 [Thread-8       ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) uptime 4.096 seconds
2014-02-03 07:50:54,934 [Thread-8       ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) is shutdown in 0.509 seconds
2014-02-03 07:50:54,955 [Thread-8       ] INFO  tainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2014-02-03 07:50:54,956 [Thread-8       ] INFO  SchemaExport                   - HHH000227: Running hbm2ddl schema export
Hibernate: 
    alter table t_activity_discount_rate 
        drop constraint FKA400C193698FCC4
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE11193A98D65
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE111A27DDA4A
Hibernate: 
    alter table t_order 
        drop constraint FKA0C0C3C3E11F4FCB
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB0883698FCC4
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB088BBCB676E
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F33E99148D
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F3BBCB676E
Hibernate: 
    alter table t_order_request_history 
        drop constraint FK5A6B268BBCB676E
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CA6130105
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CBBCB676E
Hibernate: 
    alter table t_staff 
        drop constraint FKA0F9FF552DC32C06
Hibernate: 
    drop table t_activity_discount_rate if exists
Hibernate: 
    drop table t_customer if exists
Hibernate: 
    drop table t_dept if exists
Hibernate: 
    drop table t_dept_staff if exists
Hibernate: 
    drop table t_order if exists
Hibernate: 
    drop table t_order_pizzashack if exists
Hibernate: 
    drop table t_order_process if exists
Hibernate: 
    drop table t_order_request_history if exists
Hibernate: 
    drop table t_order_review_record if exists
Hibernate: 
    drop table t_pizzashack if exists
Hibernate: 
    drop table t_staff if exists
Hibernate: 
    drop table t_user if exists
Hibernate: 
    drop table t_workflow if exists
2014-02-03 07:50:54,971 [Thread-8       ] INFO  SchemaExport                   - HHH000230: Schema export complete
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 14.325s
[INFO] Finished at: Mon Feb 03 07:50:55 NZDT 2014
[INFO] Final Memory: 24M/620M
[INFO] ------------------------------------------------------------------------
]0;david@david: ~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-webdavid@david:~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web$ cd ..[K[K[K[K[Kg 32 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ pizzashack-distributor-web ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ pizzashack-distributor-web ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ pizzashack-distributor-web ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] --- maven-surefire-plugin:2.5:test (default-test) @ pizzashack-distributor-web ---
[INFO] Surefire report directory: /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running co.nz.pizzashack.test.OrderProcessTest
2014-02-03 07:50:44,381 [main           ] INFO  GenericWebApplicationContext   - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@5d51981a: startup date [Mon Feb 03 07:50:44 NZDT 2014]; root of context hierarchy
2014-02-03 07:50:44,437 [main           ] INFO  ClassPathBeanDefinitionScanner - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2014-02-03 07:50:45,866 [main           ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [META-INF/cxf/cxf.xml]
2014-02-03 07:50:46,100 [main           ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [META-INF/cxf/cxf-extension-soap.xml]
2014-02-03 07:50:46,126 [main           ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [META-INF/cxf/cxf-servlet.xml]
2014-02-03 07:50:46,147 [main           ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [activitiAppContext.xml]
2014-02-03 07:50:46,373 [main           ] INFO  PropertyPlaceholderConfigurer  - Loading properties file from class path resource [activiti.properties]
2014-02-03 07:50:46,455 [main           ] INFO  redAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2014-02-03 07:50:46,502 [main           ] INFO  GenericWebApplicationContext   - Bean 'infrastructureContextConfiguration' of type [class co.nz.pizzashack.config.InfrastructureContextConfiguration$$EnhancerByCGLIB$$fef3303b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:46,531 [main           ] INFO  MLog                           - MLog clients using log4j logging.
2014-02-03 07:50:46,582 [main           ] INFO  C3P0Registry                   - Initializing c3p0-0.9.1.2 [built 21-May-2007 15:04:56; debug? true; trace: 10]
2014-02-03 07:50:46,625 [main           ] INFO  GenericWebApplicationContext   - Bean 'dataSource' of type [class com.mchange.v2.c3p0.ComboPooledDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:46,712 [main           ] INFO  tainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default'
2014-02-03 07:50:46,798 [main           ] INFO  Version                        - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2014-02-03 07:50:46,802 [main           ] INFO  Version                        - HHH000412: Hibernate Core {4.1.4.Final}
2014-02-03 07:50:46,803 [main           ] INFO  Environment                    - HHH000206: hibernate.properties not found
2014-02-03 07:50:46,804 [main           ] INFO  Environment                    - HHH000021: Bytecode provider name : javassist
2014-02-03 07:50:46,819 [main           ] INFO  Ejb3Configuration              - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2014-02-03 07:50:47,065 [main           ] INFO  ConnectionProviderInitiator    - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2014-02-03 07:50:47,111 [main           ] INFO  AbstractPoolBackedDataSource   - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge1508z1vomu1g4v86ld|60074234, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.h2.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge1508z1vomu1g4v86ld|60074234, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:h2:mem:pizzashackdistributor;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 600, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 2, numHelperThreads -> 3, numThreadsAwaitingCheckoutDefaultUser -> 0, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2014-02-03 07:50:47,243 [main           ] INFO  Dialect                        - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2014-02-03 07:50:47,250 [main           ] INFO  LobCreatorBuilder              - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2014-02-03 07:50:47,257 [main           ] INFO  TransactionFactoryInitiator    - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2014-02-03 07:50:47,260 [main           ] INFO  ASTQueryTranslatorFactory      - HHH000397: Using ASTQueryTranslatorFactory
2014-02-03 07:50:47,284 [main           ] INFO  Version                        - Hibernate Validator 4.2.0.Final
2014-02-03 07:50:47,502 [main           ] INFO  SchemaExport                   - HHH000227: Running hbm2ddl schema export
Hibernate: 
    alter table t_activity_discount_rate 
        drop constraint FKA400C193698FCC4
2014-02-03 07:50:47,513 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_activity_discount_rate drop constraint FKA400C193698FCC4
2014-02-03 07:50:47,513 [main           ] ERROR SchemaExport                   - Table "T_ACTIVITY_DISCOUNT_RATE" not found; SQL statement:

    alter table t_activity_discount_rate 
        drop constraint FKA400C193698FCC4 [42102-160]
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE11193A98D65
2014-02-03 07:50:47,514 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_dept_staff drop constraint FKBC8AE11193A98D65
2014-02-03 07:50:47,514 [main           ] ERROR SchemaExport                   - Table "T_DEPT_STAFF" not found; SQL statement:

    alter table t_dept_staff 
        drop constraint FKBC8AE11193A98D65 [42102-160]
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE111A27DDA4A
2014-02-03 07:50:47,515 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_dept_staff drop constraint FKBC8AE111A27DDA4A
2014-02-03 07:50:47,515 [main           ] ERROR SchemaExport                   - Table "T_DEPT_STAFF" not found; SQL statement:

    alter table t_dept_staff 
        drop constraint FKBC8AE111A27DDA4A [42102-160]
Hibernate: 
    alter table t_order 
        drop constraint FKA0C0C3C3E11F4FCB
2014-02-03 07:50:47,516 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order drop constraint FKA0C0C3C3E11F4FCB
2014-02-03 07:50:47,516 [main           ] ERROR SchemaExport                   - Table "T_ORDER" not found; SQL statement:

    alter table t_order 
        drop constraint FKA0C0C3C3E11F4FCB [42102-160]
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB0883698FCC4
2014-02-03 07:50:47,517 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_pizzashack drop constraint FKE8ACB0883698FCC4
2014-02-03 07:50:47,517 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PIZZASHACK" not found; SQL statement:

    alter table t_order_pizzashack 
        drop constraint FKE8ACB0883698FCC4 [42102-160]
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB088BBCB676E
2014-02-03 07:50:47,518 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_pizzashack drop constraint FKE8ACB088BBCB676E
2014-02-03 07:50:47,518 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PIZZASHACK" not found; SQL statement:

    alter table t_order_pizzashack 
        drop constraint FKE8ACB088BBCB676E [42102-160]
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F33E99148D
2014-02-03 07:50:47,518 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_process drop constraint FK6B8B15F33E99148D
2014-02-03 07:50:47,518 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PROCESS" not found; SQL statement:

    alter table t_order_process 
        drop constraint FK6B8B15F33E99148D [42102-160]
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F3BBCB676E
2014-02-03 07:50:47,519 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_process drop constraint FK6B8B15F3BBCB676E
2014-02-03 07:50:47,519 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PROCESS" not found; SQL statement:

    alter table t_order_process 
        drop constraint FK6B8B15F3BBCB676E [42102-160]
Hibernate: 
    alter table t_order_request_history 
        drop constraint FK5A6B268BBCB676E
2014-02-03 07:50:47,520 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_request_history drop constraint FK5A6B268BBCB676E
2014-02-03 07:50:47,520 [main           ] ERROR SchemaExport                   - Table "T_ORDER_REQUEST_HISTORY" not found; SQL statement:

    alter table t_order_request_history 
        drop constraint FK5A6B268BBCB676E [42102-160]
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CA6130105
2014-02-03 07:50:47,521 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_review_record drop constraint FKFB7A439CA6130105
2014-02-03 07:50:47,521 [main           ] ERROR SchemaExport                   - Table "T_ORDER_REVIEW_RECORD" not found; SQL statement:

    alter table t_order_review_record 
        drop constraint FKFB7A439CA6130105 [42102-160]
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CBBCB676E
2014-02-03 07:50:47,522 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_review_record drop constraint FKFB7A439CBBCB676E
2014-02-03 07:50:47,522 [main           ] ERROR SchemaExport                   - Table "T_ORDER_REVIEW_RECORD" not found; SQL statement:

    alter table t_order_review_record 
        drop constraint FKFB7A439CBBCB676E [42102-160]
Hibernate: 
    alter table t_staff 
        drop constraint FKA0F9FF552DC32C06
2014-02-03 07:50:47,523 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_staff drop constraint FKA0F9FF552DC32C06
2014-02-03 07:50:47,523 [main           ] ERROR SchemaExport                   - Table "T_STAFF" not found; SQL statement:

    alter table t_staff 
        drop constraint FKA0F9FF552DC32C06 [42102-160]
Hibernate: 
    drop table t_activity_discount_rate if exists
Hibernate: 
    drop table t_customer if exists
Hibernate: 
    drop table t_dept if exists
Hibernate: 
    drop table t_dept_staff if exists
Hibernate: 
    drop table t_order if exists
Hibernate: 
    drop table t_order_pizzashack if exists
Hibernate: 
    drop table t_order_process if exists
Hibernate: 
    drop table t_order_request_history if exists
Hibernate: 
    drop table t_order_review_record if exists
Hibernate: 
    drop table t_pizzashack if exists
Hibernate: 
    drop table t_staff if exists
Hibernate: 
    drop table t_user if exists
Hibernate: 
    drop table t_workflow if exists
Hibernate: 
    create table t_activity_discount_rate (
        activity_rate_id bigint generated by default as identity,
        code varchar(255),
        description varchar(255),
        effective_time timestamp,
        expire_time timestamp,
        rate decimal(19,2),
        pizzashack_id bigint,
        primary key (activity_rate_id)
    )
Hibernate: 
    create table t_customer (
        cust_id bigint generated by default as identity,
        address varchar(255),
        credits integer,
        customer_name varchar(255),
        email varchar(255),
        primary key (cust_id)
    )
Hibernate: 
    create table t_dept (
        dept_id bigint generated by default as identity,
        create_date date,
        dept_name varchar(255),
        primary key (dept_id)
    )
Hibernate: 
    create table t_dept_staff (
        staff_dept_id bigint generated by default as identity,
        join_date date,
        dept_id bigint,
        staff_id bigint,
        primary key (staff_dept_id)
    )
Hibernate: 
    create table t_order (
        order_id bigint generated by default as identity,
        deliver_time timestamp,
        order_no varchar(255),
        order_time timestamp,
        payment_remarks varchar(255),
        payment_status integer,
        quantity integer,
        ship_address varchar(255),
        status integer,
        total_price decimal(19,2),
        cust_id bigint,
        primary key (order_id)
    )
Hibernate: 
    create table t_order_pizzashack (
        order_pizza_id bigint generated by default as identity,
        qty integer,
        total_price decimal(19,2),
        order_id bigint,
        pizzashack_id bigint,
        primary key (order_pizza_id)
    )
Hibernate: 
    create table t_order_process (
        order_process_id bigint generated by default as identity,
        active_process_definition_id varchar(255),
        active_process_instance_id varchar(255),
        complete_time time,
        create_time time,
        execution_id varchar(255),
        main_process_definition_id varchar(255),
        main_process_instance_id varchar(255),
        operator_id bigint,
        order_id bigint,
        primary key (order_process_id)
    )
Hibernate: 
    create table t_order_request_history (
        message_id varchar(255) generated by default as identity,
        created_at time,
        processor_name varchar(255),
        order_id bigint,
        primary key (message_id)
    )
Hibernate: 
    create table t_order_review_record (
        review_record_id bigint generated by default as identity,
        content varchar(255),
        create_time time,
        review_status integer,
        order_id bigint,
        reviewer_id bigint,
        primary key (review_record_id)
    )
Hibernate: 
    create table t_pizzashack (
        pizzashack_id bigint generated by default as identity,
        description varchar(255),
        icon varchar(255),
        name varchar(255),
        price decimal(19,2),
        primary key (pizzashack_id)
    )
Hibernate: 
    create table t_staff (
        staff_id bigint generated by default as identity,
        create_date date,
        email varchar(255),
        first_name varchar(255),
        identity varchar(255),
        last_name varchar(255),
        level integer,
        role integer,
        user_id bigint,
        primary key (staff_id)
    )
Hibernate: 
    create table t_user (
        user_id bigint generated by default as identity,
        create_time time,
        password varchar(255),
        user_name varchar(255),
        primary key (user_id)
    )
Hibernate: 
    create table t_workflow (
        workflow_id bigint generated by default as identity,
        category varchar(255),
        create_time time,
        deploy_id varchar(255),
        workflow_name varchar(255),
        process_definition_id varchar(255),
        process_definition_key varchar(255),
        primary key (workflow_id)
    )
Hibernate: 
    alter table t_activity_discount_rate 
        add constraint FKA400C193698FCC4 
        foreign key (pizzashack_id) 
        references t_pizzashack
Hibernate: 
    alter table t_dept_staff 
        add constraint FKBC8AE11193A98D65 
        foreign key (dept_id) 
        references t_dept
Hibernate: 
    alter table t_dept_staff 
        add constraint FKBC8AE111A27DDA4A 
        foreign key (staff_id) 
        references t_staff
Hibernate: 
    alter table t_order 
        add constraint FKA0C0C3C3E11F4FCB 
        foreign key (cust_id) 
        references t_customer
Hibernate: 
    alter table t_order_pizzashack 
        add constraint FKE8ACB0883698FCC4 
        foreign key (pizzashack_id) 
        references t_pizzashack
Hibernate: 
    alter table t_order_pizzashack 
        add constraint FKE8ACB088BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_process 
        add constraint FK6B8B15F33E99148D 
        foreign key (operator_id) 
        references t_user
Hibernate: 
    alter table t_order_process 
        add constraint FK6B8B15F3BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_request_history 
        add constraint FK5A6B268BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_review_record 
        add constraint FKFB7A439CA6130105 
        foreign key (reviewer_id) 
        references t_staff
Hibernate: 
    alter table t_order_review_record 
        add constraint FKFB7A439CBBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_staff 
        add constraint FKA0F9FF552DC32C06 
        foreign key (user_id) 
        references t_user
2014-02-03 07:50:47,557 [main           ] INFO  SchemaExport                   - HHH000230: Schema export complete
2014-02-03 07:50:47,591 [main           ] INFO  GenericWebApplicationContext   - Bean 'entityManagerFactory' of type [class org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,626 [main           ] INFO  GenericWebApplicationContext   - Bean 'entityManagerFactory' of type [class com.sun.proxy.$Proxy44] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,832 [main           ] INFO  GenericWebApplicationContext   - Bean 'cxf' of type [class org.apache.cxf.bus.spring.SpringBus] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,836 [main           ] WARN  OldSpringSupport               - Import of META-INF/cxf/cxf-extension-soap.xml has been deprecated and is unnecessary.
2014-02-03 07:50:47,841 [main           ] INFO  GenericWebApplicationContext   - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerByCGLIB$$813a6ae2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,852 [main           ] INFO  GenericWebApplicationContext   - Bean 'transactionAttributeSource' of type [class org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,859 [main           ] INFO  GenericWebApplicationContext   - Bean 'transactionInterceptor' of type [class org.springframework.transaction.interceptor.TransactionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,864 [main           ] INFO  GenericWebApplicationContext   - Bean 'org.springframework.transaction.config.internalTransactionAdvisor' of type [class org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,873 [main           ] INFO  GenericWebApplicationContext   - Bean 'transactionManager' of type [class org.springframework.orm.jpa.JpaTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,874 [main           ] INFO  GenericWebApplicationContext   - Bean 'camelJdbcIdempotentConfig' of type [class co.nz.pizzashack.config.CamelJdbcIdempotentConfig$$EnhancerByCGLIB$$65c41669] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,890 [main           ] INFO  GenericWebApplicationContext   - Bean 'sqlComponent' of type [class org.apache.camel.component.sql.SqlComponent] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,895 [main           ] INFO  GenericWebApplicationContext   - Bean 'camelCxfConfig' of type [class co.nz.pizzashack.config.CamelCxfConfig$$EnhancerByCGLIB$$8fcc2d8e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,925 [main           ] INFO  GenericWebApplicationContext   - Bean 'billingInboundEndpoint' of type [class org.apache.camel.component.cxf.CxfEndpoint] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:47,950 [main           ] INFO  GenericWebApplicationContext   - Bean 'billingVariableTransformer' of type [class co.nz.pizzashack.integration.mapping.BillingVariableTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:48,158 [main           ] INFO  GenericWebApplicationContext   - Bean 'billingFormatTransformer' of type [class co.nz.pizzashack.integration.mapping.BillingFormatTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:48,160 [main           ] INFO  GenericWebApplicationContext   - Bean 'billingResponseMergeProcessor' of type [class co.nz.pizzashack.integration.mapping.BillingResponseMergeProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:48,163 [main           ] INFO  GenericWebApplicationContext   - Bean 'sleepBean' of type [class co.nz.pizzashack.integration.utils.SleepBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:48,163 [main           ] INFO  GenericWebApplicationContext   - Bean 'billingProcessRoute' of type [class co.nz.pizzashack.integration.route.BillingProcessRoute] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:48,272 [main           ] INFO  GenericWebApplicationContext   - Bean 'org.activiti.engine.impl.rules.RulesDeployer#39a83e27' of type [class org.activiti.engine.impl.rules.RulesDeployer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:48,274 [main           ] INFO  GenericWebApplicationContext   - Bean 'processEngineConfiguration' of type [class org.activiti.spring.SpringProcessEngineConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:48,277 [main           ] INFO  GenericWebApplicationContext   - Bean 'processEngine' of type [class org.activiti.spring.ProcessEngineFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,330 [main           ] INFO  DbSqlSession                   - performing create on engine with resource org/activiti/db/create/activiti.h2.create.engine.sql
2014-02-03 07:50:49,349 [main           ] INFO  DbSqlSession                   - performing create on history with resource org/activiti/db/create/activiti.h2.create.history.sql
2014-02-03 07:50:49,354 [main           ] INFO  DbSqlSession                   - performing create on identity with resource org/activiti/db/create/activiti.h2.create.identity.sql
2014-02-03 07:50:49,357 [main           ] INFO  ProcessEngineImpl              - ProcessEngine default created
2014-02-03 07:50:49,358 [main           ] INFO  GenericWebApplicationContext   - Bean 'processEngine' of type [class org.activiti.engine.impl.ProcessEngineImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,363 [main           ] INFO  GenericWebApplicationContext   - Bean 'runtimeService' of type [class org.activiti.engine.impl.RuntimeServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,368 [main           ] INFO  GenericWebApplicationContext   - Bean 'taskService' of type [class org.activiti.engine.impl.TaskServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,371 [main           ] INFO  GenericWebApplicationContext   - Bean 'historyService' of type [class org.activiti.engine.impl.HistoryServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,376 [main           ] INFO  GenericWebApplicationContext   - Bean 'repositoryService' of type [class org.activiti.engine.impl.RepositoryServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,379 [main           ] INFO  GenericWebApplicationContext   - Bean 'managementService' of type [class org.activiti.engine.impl.ManagementServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,382 [main           ] INFO  GenericWebApplicationContext   - Bean 'identityService' of type [class org.activiti.engine.impl.IdentityServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,383 [main           ] INFO  GenericWebApplicationContext   - Bean 'activitiFacade' of type [class co.nz.pizzashack.wf.ActivitiFacade] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,387 [main           ] INFO  GenericWebApplicationContext   - Bean 'userConverter' of type [class co.nz.pizzashack.data.converter.UserConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,402 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,402 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,405 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,414 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#1' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,470 [main           ] INFO  GenericWebApplicationContext   - Bean 'workflowRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,508 [main           ] INFO  GenericWebApplicationContext   - Bean 'workflowRepository' of type [class com.sun.proxy.$Proxy55] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,512 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#2' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,512 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#2' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,513 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#2' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,513 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#3' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,522 [main           ] INFO  GenericWebApplicationContext   - Bean 'pizzashackRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,534 [main           ] INFO  GenericWebApplicationContext   - Bean 'pizzashackRepository' of type [class com.sun.proxy.$Proxy58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,536 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#4' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,536 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#4' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,537 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#4' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,537 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#5' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,545 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderProcessRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,551 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderProcessRepository' of type [class com.sun.proxy.$Proxy59] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,553 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#6' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,553 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#6' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,553 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#6' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,554 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#7' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,562 [main           ] INFO  GenericWebApplicationContext   - Bean 'userRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,566 [main           ] INFO  GenericWebApplicationContext   - Bean 'userRepository' of type [class com.sun.proxy.$Proxy60] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,568 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#8' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,568 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#8' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,569 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#8' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,569 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#9' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,577 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,581 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderRepository' of type [class com.sun.proxy.$Proxy61] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,608 [main           ] INFO  GenericWebApplicationContext   - Bean 'customerConverter' of type [class co.nz.pizzashack.data.converter.CustomerConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,613 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderDetailConverter' of type [class co.nz.pizzashack.data.converter.OrderDetailConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,613 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderConverter' of type [class co.nz.pizzashack.data.converter.OrderConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,614 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderProcessConverter' of type [class co.nz.pizzashack.data.converter.OrderProcessConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,618 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#10' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,618 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#10' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,619 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#10' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,619 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#11' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,627 [main           ] INFO  GenericWebApplicationContext   - Bean 'departmentRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,632 [main           ] INFO  GenericWebApplicationContext   - Bean 'departmentRepository' of type [class com.sun.proxy.$Proxy62] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,633 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderProcessAccessor' of type [class co.nz.pizzashack.ds.OrderProcessAccessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,638 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderReviewRecordConverter' of type [class co.nz.pizzashack.data.converter.OrderReviewRecordConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,639 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#12' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,639 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#12' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,639 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#12' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,640 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#13' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,647 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderReviewRecordRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,652 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderReviewRecordRepository' of type [class com.sun.proxy.$Proxy63] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,654 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#14' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,655 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#14' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,655 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#14' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,656 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#15' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,663 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderPizzashackRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,667 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderPizzashackRepository' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,670 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#16' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,670 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#16' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,670 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#16' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,670 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#17' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,677 [main           ] INFO  GenericWebApplicationContext   - Bean 'customerRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,681 [main           ] INFO  GenericWebApplicationContext   - Bean 'customerRepository' of type [class com.sun.proxy.$Proxy65] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,682 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderProcessDSImpl' of type [class co.nz.pizzashack.ds.OrderProcessDSImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,688 [main           ] INFO  GenericWebApplicationContext   - Bean 'billingInboundProcessor' of type [class co.nz.pizzashack.integration.processor.BillingInboundProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,689 [main           ] INFO  GenericWebApplicationContext   - Bean 'billingInboundWsRoute' of type [class co.nz.pizzashack.integration.route.BillingInboundWsRoute] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,707 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderJdbcMessageIdRepository' of type [class org.apache.camel.processor.idempotent.jdbc.JdbcMessageIdRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,713 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderProcessFormatTransformer' of type [class co.nz.pizzashack.integration.mapping.OrderProcessFormatTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,721 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#18' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,721 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#18' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,721 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#18' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,722 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#19' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,728 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderRequestHistoryRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,732 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderRequestHistoryRepository' of type [class com.sun.proxy.$Proxy70] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,734 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderRequestProcessor' of type [class co.nz.pizzashack.integration.processor.OrderRequestProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,736 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderDuplicatedReqProcessor' of type [class co.nz.pizzashack.integration.processor.OrderDuplicatedReqProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,737 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderProcessRoute' of type [class co.nz.pizzashack.integration.route.OrderProcessRoute] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,784 [main           ] INFO  GenericWebApplicationContext   - Bean 'activeMQConnectionFactory' of type [class org.apache.activemq.ActiveMQConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,945 [main           ] INFO  GenericWebApplicationContext   - Bean 'pooledConnectionFactory' of type [class org.apache.activemq.pool.PooledConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,965 [main           ] INFO  GenericWebApplicationContext   - Bean 'jmsTransactionManager' of type [class org.springframework.jms.connection.JmsTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,976 [main           ] INFO  GenericWebApplicationContext   - Bean 'jmsComponent' of type [class org.apache.camel.component.jms.JmsComponent] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:49,981 [main           ] INFO  GenericWebApplicationContext   - Bean 'camelSpringConfig' of type [class co.nz.pizzashack.config.CamelSpringConfig$$EnhancerByCGLIB$$cf4c2422] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-03 07:50:50,018 [main           ] INFO  DefaultListableBeanFactory     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@126e4ecd: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,applicationConfiguration,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,viewConfiguration,webMvcContextConfiguration,logoutController,loginController,indexController,userController,adminIndexController,departmentController,orderController,orderQueryController,staffController,billingProcessRespTransformer,billingProcessReqTransformer,orderProcessFormatTransformer,billingVariableTransformer,billingResponseMergeProcessor,billingFormatTransformer,billingInboundProcessor,orderDuplicatedReqProcessor,orderRequestProcessor,billingProcessRoute,billingInboundWsRoute,orderProcessRoute,sleepBean,pizzashackAPIImpl,camelSpringConfig,camelJdbcIdempotentConfig,camelCxfConfig,orderProcessDSImpl,customerDSImpl,workflowDSImpl,pizzashackDSImpl,userDSImpl,orderProcessAccessor,orderProcessQueryDSImpl,staffDSImpl,orderDSImpl,departmentDSImpl,initialDataConfig,pizzashackCaculator,emailExecutionListener,endExecutionListener,caculationMergeExecutionListener,orderMainTransitionExecutionListener,toManualReviewExecutionListener,outOfBillingProcessExecutionListener,outOfCoreProcessExecutionListener,billingRespExecutionListener,customerConverter,orderProcessConverter,staffConverter,userConverter,departmentConverter,workflowConverter,orderReviewRecordConverter,orderConverter,activityDiscountRateConverter,orderDetailConverter,pizzashackDataInitialConfiguration,pizzashackItemBuilder,infrastructureContextConfiguration,activitiFacade,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0,org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0,customerRepository,orderRequestHistoryRepository,workflowRepository,orderRepository,pizzashackRepository,orderProcessRepository,activityDiscountRateRepository,departmentRepository,orderPizzashackRepository,staffDepartmentRepository,staffRepository,userRepository,orderReviewRecordRepository,viewResolver,messageSource,org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration,requestMappingHandlerMapping,mvcContentNegotiationManager,viewControllerHandlerMapping,beanNameHandlerMapping,resourceHandlerMapping,defaultServletHandlerMapping,requestMappingHandlerAdapter,mvcConversionService,mvcValidator,httpRequestHandlerAdapter,simpleControllerHandlerAdapter,handlerExceptionResolver,sessionAttributeProcessor,localeChangeInterceptor,localeResolver,simpleMappingExceptionResolver,multipartResolver,activeMQConnectionFactory,pooledConnectionFactory,jmsComponent,jmsTransactionManager,camelBeanPostProcessor,camelContext,custThreadPoolProfile,sqlComponent,orderJdbcMessageIdRepository,billingInboundEndpoint,loggingOutInterceptor,cxf,org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor,org.apache.cxf.bus.spring.Jsr250BeanPostProcessor,org.apache.cxf.bus.spring.BusExtensionPostProcessor,org.apache.cxf.binding.soap.SoapBindingFactory,org.apache.cxf.binding.soap.SoapTransportFactory,org.apache.cxf.binding.soap.customEditorConfigurer,setupWorkflowData,setupData,org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration,org.springframework.transaction.config.internalTransactionAdvisor,transactionAttributeSource,transactionInterceptor,dataSource,transactionManager,entityManagerFactory,placeholderConfig,processEngineConfiguration,processEngine,repositoryService,runtimeService,taskService,historyService,managementService,identityService]; root of factory hierarchy
2014-02-03 07:50:50,321 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/logout],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LogoutController.logout(javax.servlet.http.HttpSession)
2014-02-03 07:50:50,322 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/login],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LoginController.handleLogin(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws co.nz.pizzashack.AuthenticationException
2014-02-03 07:50:50,322 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/login],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LoginController.showLoginPage(org.springframework.ui.Model)
2014-02-03 07:50:50,322 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/index],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.IndexController.index(org.springframework.ui.Model,co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-02-03 07:50:50,324 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/createUser],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public co.nz.pizzashack.data.dto.UserDto co.nz.pizzashack.controller.UserController.createUser(co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-02-03 07:50:50,324 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/{userId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.deleteUser(java.lang.Long) throws java.lang.Exception
2014-02-03 07:50:50,324 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,324 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/{userId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,324 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/update/{userId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,325 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/check/{userName}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.checkUser(java.lang.String) throws java.lang.Exception
2014-02-03 07:50:50,325 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,325 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/search],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.search(co.nz.pizzashack.data.dto.UserDto,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,325 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.create(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 07:50:50,325 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.update(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 07:50:50,326 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/adminIndex],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.AdminIndexController.index(org.springframework.ui.Model,co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-02-03 07:50:50,327 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,327 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/{deptId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,327 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/update/{deptId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,328 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/selectdepts],methods=[GET],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.util.Set<co.nz.pizzashack.data.dto.DepartmentDto> co.nz.pizzashack.controller.DepartmentController.select() throws java.lang.Exception
2014-02-03 07:50:50,328 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,328 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/{deptId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.delete(java.lang.Long) throws java.lang.Exception
2014-02-03 07:50:50,328 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/search],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.search(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,328 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.create(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 07:50:50,329 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.update(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 07:50:50,329 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/{orderProcessId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.showOrderProcess(java.lang.Long,org.springframework.ui.Model,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-02-03 07:50:50,329 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/claimReview/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.claimReviewTask(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-02-03 07:50:50,330 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/review],methods=[POST],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.reviewOrder(co.nz.pizzashack.data.dto.OrderReviewRecordDto,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-02-03 07:50:50,330 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderQuery/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderQueryController.show(java.lang.String,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,330 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderQuery/showHistory/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.util.Set<co.nz.pizzashack.data.dto.ProcessActivityDto> co.nz.pizzashack.controller.OrderQueryController.showHistory(java.lang.String) throws java.lang.Exception
2014-02-03 07:50:50,331 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderQuery/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderQueryController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,332 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,332 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/{staffId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,332 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/update/{staffId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,332 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-03 07:50:50,332 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/{staffId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.delete(java.lang.Long) throws java.lang.Exception
2014-02-03 07:50:50,332 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.create(co.nz.pizzashack.data.dto.StaffDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 07:50:50,333 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.update(co.nz.pizzashack.data.dto.StaffDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-03 07:50:50,365 [main           ] INFO  SimpleUrlHandlerMapping        - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2014-02-03 07:50:50,368 [main           ] INFO  SimpleUrlHandlerMapping        - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler]
2014-02-03 07:50:50,838 [main           ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) is starting
2014-02-03 07:50:50,839 [main           ] INFO  ManagedManagementStrategy      - JMX is enabled
2014-02-03 07:50:50,930 [main           ] INFO  DefaultTypeConverter           - Loaded 194 type converters
Hibernate: 
    SELECT
        1 
    FROM
        T_ORDER_REQUEST_HISTORY 
    WHERE
        1 = 0
2014-02-03 07:50:51,204 [main           ] INFO  SpringCamelContext             - StreamCaching is not in use. If using streams then its recommended to enable stream caching. See more details at http://camel.apache.org/stream-caching.html
2014-02-03 07:50:51,431 [main           ] INFO  BusApplicationContext          - Refreshing org.apache.cxf.bus.spring.BusApplicationContext@74e5d63d: startup date [Mon Feb 03 07:50:51 NZDT 2014]; parent: org.springframework.web.context.support.GenericWebApplicationContext@5d51981a
2014-02-03 07:50:51,455 [main           ] INFO  DefaultListableBeanFactory     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2cac4d10: defining beans []; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@126e4ecd
2014-02-03 07:50:51,467 [main           ] INFO  ReflectionServiceFactoryBean   - Creating Service {http://ws.integration.pizzashack.nz.co/}BillingProcessWebServicesService from class co.nz.pizzashack.integration.ws.BillingProcessWebServices
2014-02-03 07:50:51,824 [main           ] INFO  ServerImpl                     - Setting the server's publish address to be /billingWs
2014-02-03 07:50:51,845 [main           ] INFO  SpringCamelContext             - Route: activitiBillingProcess started and consuming from: Endpoint[activiti://orderBillingProcess:billingIntegration?copyVariablesToBodyAsMap=true]
2014-02-03 07:50:51,846 [main           ] INFO  SpringCamelContext             - Route: direct:billingIntegration started and consuming from: Endpoint[direct://billingIntegration]
2014-02-03 07:50:51,847 [main           ] INFO  SpringCamelContext             - Route: direct:receiveBillingQueue started and consuming from: Endpoint[direct://receiveBillingQueue]
2014-02-03 07:50:51,848 [main           ] INFO  SpringCamelContext             - Route: route1 started and consuming from: Endpoint[direct://doBillingIntegration]
2014-02-03 07:50:51,856 [main           ] INFO  SpringCamelContext             - Route: orderProcessRoute started and consuming from: Endpoint[jms://queue:pizzashackOrderInbound]
2014-02-03 07:50:51,857 [main           ] INFO  SpringCamelContext             - Route: direct:orderDuplicatedProcess started and consuming from: Endpoint[direct://orderDuplicatedProcess]
2014-02-03 07:50:51,859 [main           ] INFO  SpringCamelContext             - Route: direct:orderRegularProcess started and consuming from: Endpoint[direct://orderRegularProcess]
2014-02-03 07:50:51,861 [main           ] INFO  SpringCamelContext             - Route: cxf:bean:billingInboundEndpoint started and consuming from: Endpoint[cxf://bean:billingInboundEndpoint]
2014-02-03 07:50:51,869 [main           ] INFO  SpringCamelContext             - Total 8 routes, of which 8 is started.
2014-02-03 07:50:51,870 [main           ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) started in 1.032 seconds
2014-02-03 07:50:51,884 [main           ] INFO  WorkflowInitialDataSetup       - initialize start:{}
2014-02-03 07:50:51,891 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 07:50:51,891 [main           ] INFO  UserDSImpl                     - usernamedavid
2014-02-03 07:50:51,892 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 07:50:52,077 [main           ] INFO  UserDSImpl                     - userId:1 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 07:50:52,158 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@3c8f706e[userId=1,username=david,password=MTIzNDU2,createTime=Mon Feb 03 07:50:52 NZDT 2014]
2014-02-03 07:50:52,203 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-02 06:50:52)
2014-02-03 07:50:52,204 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-02 06:50:52)
2014-02-03 07:50:52,206 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 07:50:52,206 [main           ] INFO  UserDSImpl                     - usernamebrad
2014-02-03 07:50:52,206 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 07:50:52,209 [main           ] INFO  UserDSImpl                     - userId:2 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 07:50:52,211 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@5eb59e97[userId=2,username=brad,password=MTIzNDU2,createTime=Mon Feb 03 07:50:52 NZDT 2014]
2014-02-03 07:50:52,211 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-02 06:50:52)
2014-02-03 07:50:52,211 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-02 06:50:52)
2014-02-03 07:50:52,212 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 07:50:52,212 [main           ] INFO  UserDSImpl                     - usernamejohn
2014-02-03 07:50:52,212 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 07:50:52,215 [main           ] INFO  UserDSImpl                     - userId:3 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 07:50:52,217 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@13e7ba33[userId=3,username=john,password=MTIzNDU2,createTime=Mon Feb 03 07:50:52 NZDT 2014]
2014-02-03 07:50:52,218 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-02 06:50:52)
2014-02-03 07:50:52,218 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-02 06:50:52)
2014-02-03 07:50:52,218 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-02-03 07:50:52,218 [main           ] INFO  UserDSImpl                     - usernamegeneral
2014-02-03 07:50:52,218 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-03 07:50:52,221 [main           ] INFO  UserDSImpl                     - userId:4 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-03 07:50:52,223 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@7dc03fd8[userId=4,username=general,password=MTIzNDU2,createTime=Mon Feb 03 07:50:52 NZDT 2014]
2014-02-03 07:50:52,224 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:2014-02-02 06:50:52)
2014-02-03 07:50:52,224 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:2014-02-02 06:50:52)
2014-02-03 07:50:52,235 [main           ] INFO  DepartmentDSImpl               - createDepartment start:co.nz.pizzashack.data.dto.DepartmentDto(deptId:null, deptName:Order manager, createDate:null) 
Hibernate: 
    select
        department0_.dept_id as dept1_8_,
        department0_.create_date as create2_8_,
        department0_.dept_name as dept3_8_ 
    from
        t_dept department0_ 
    where
        department0_.dept_name=? limit ?
2014-02-03 07:50:52,241 [main           ] INFO  DepartmentConverter            - toModel start:{} co.nz.pizzashack.data.dto.DepartmentDto(deptId:null, deptName:Order manager, createDate:null)
2014-02-03 07:50:52,246 [main           ] INFO  DepartmentConverter            - toModel end:{} co.nz.pizzashack.data.model.DepartmentModel@1efa4cb3[deptId=<null>,deptName=Order manager,createDate=<null>,staffDepartments=<null>]
Hibernate: 
    insert 
    into
        t_dept
        (dept_id, create_date, dept_name) 
    values
        (null, ?, ?)
Hibernate: 
    insert 
    into
        ACT_ID_GROUP
        (ID_, REV_, NAME_, TYPE_)     
    values
        (       ?,       1,        ?,       ?     )
2014-02-03 07:50:52,255 [main           ] INFO  DepartmentConverter            - toDto start:{} co.nz.pizzashack.data.model.DepartmentModel@1efa4cb3[deptId=1,deptName=Order manager,createDate=Mon Feb 03 07:50:52 NZDT 2014,staffDepartments=<null>]
2014-02-03 07:50:52,257 [main           ] INFO  DepartmentConverter            - toDto end:{} co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02)
2014-02-03 07:50:52,257 [main           ] INFO  DepartmentDSImpl               - createDepartment end:co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02) 
2014-02-03 07:50:52,258 [main           ] INFO  WorkflowInitialDataSetup       - department:co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02) 
2014-02-03 07:50:52,279 [main           ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:null, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-02 06:50:52)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-02-03 07:50:52,285 [main           ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:null, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-02 06:50:52))
2014-02-03 07:50:52,304 [main           ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@5e4cc024[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@daabda[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-02-03 07:50:52,355 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@5e4cc024[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@daabda[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=Mon Feb 03 07:50:52 NZDT 2014] 
2014-02-03 07:50:52,355 [main           ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = ?
Hibernate: 
    update
        ACT_GE_PROPERTY      
    SET
        REV_ = ?,
        VALUE_ = ?      
    where
        NAME_ = ?       
        and REV_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-02-03 07:50:52,375 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-02-03 07:50:52,384 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@5e4cc024[staffId=1,individual=co.nz.pizzashack.data.model.IndividualModel@daabda[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=Mon Feb 03 07:50:52 NZDT 2014]
2014-02-03 07:50:52,392 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:1, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-02-03 07:50:52,393 [main           ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:1, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-02-03 07:50:52,396 [main           ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:null, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-02 06:50:52)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-02-03 07:50:52,399 [main           ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:null, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-02 06:50:52))
2014-02-03 07:50:52,399 [main           ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@5ae125e0[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@737dc3bc[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-02-03 07:50:52,409 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@5ae125e0[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@737dc3bc[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=Mon Feb 03 07:50:52 NZDT 2014] 
2014-02-03 07:50:52,409 [main           ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-02-03 07:50:52,414 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-02-03 07:50:52,418 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@5ae125e0[staffId=2,individual=co.nz.pizzashack.data.model.IndividualModel@737dc3bc[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=Mon Feb 03 07:50:52 NZDT 2014]
2014-02-03 07:50:52,420 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:2, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-02-03 07:50:52,420 [main           ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:2, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-02-03 07:50:52,421 [main           ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:null, departments:null, role:manager, level:junior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-02 06:50:52)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-02-03 07:50:52,424 [main           ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:null, departments:null, role:manager, level:junior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-02 06:50:52))
2014-02-03 07:50:52,424 [main           ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@433c1fa0[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@204063dc[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-02-03 07:50:52,430 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@433c1fa0[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@204063dc[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=Mon Feb 03 07:50:52 NZDT 2014] 
2014-02-03 07:50:52,430 [main           ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-02-03 07:50:52,435 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-02-03 07:50:52,438 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@433c1fa0[staffId=3,individual=co.nz.pizzashack.data.model.IndividualModel@204063dc[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=Mon Feb 03 07:50:52 NZDT 2014]
2014-02-03 07:50:52,439 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:3, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:null, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-02-03 07:50:52,439 [main           ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:3, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:null, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-02-03 07:50:52,440 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-02-03 07:50:52,448 [main           ] INFO  BpmnDeployer                   - Processing resource bpmn/OrderBillingProcess.bpmn20.xml
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 117: Having multiple <family> in <alias> isn't supported and may not work as expected
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-02-03 07:50:53,086 [main           ] INFO  RulesDeployer                  - Processing resource bpmn/OrderBillingProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:50:53,098 [main           ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderBillingProcess:1:7]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-02-03 07:50:53,103 [main           ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@531dfd87[wfId=1,name=orderBillingProcess,deployId=4,processDefinitionKey=orderBillingProcess,processDefinitionId=orderBillingProcess:1:7,createTime=Mon Feb 03 07:50:52 NZDT 2014]
2014-02-03 07:50:53,114 [main           ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-02-02 06:50:52)
2014-02-03 07:50:53,114 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-02-02 06:50:52)
2014-02-03 07:50:53,115 [main           ] INFO  WorkflowInitialDataSetup       - deploy billing process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-02-02 06:50:52) 
2014-02-03 07:50:53,115 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-02-03 07:50:53,117 [main           ] INFO  BpmnDeployer                   - Processing resource bpmn/OrdercoreProcess.bpmn20.xml
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-02-03 07:50:53,256 [main           ] INFO  RulesDeployer                  - Processing resource bpmn/OrdercoreProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:50:53,263 [main           ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderCoreProcess:1:11]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-02-03 07:50:53,264 [main           ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@76a410c6[wfId=2,name=orderCoreProcess,deployId=8,processDefinitionKey=orderCoreProcess,processDefinitionId=orderCoreProcess:1:11,createTime=Mon Feb 03 07:50:53 NZDT 2014]
2014-02-03 07:50:53,264 [main           ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-02-02 06:50:53)
2014-02-03 07:50:53,265 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-02-02 06:50:53)
2014-02-03 07:50:53,265 [main           ] INFO  WorkflowInitialDataSetup       - deploy core process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-02-02 06:50:53) 
2014-02-03 07:50:53,265 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-02-03 07:50:53,267 [main           ] INFO  BpmnDeployer                   - Processing resource bpmn/OrderlocalProcess.bpmn20.xml
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-02-03 07:50:53,466 [main           ] INFO  RulesDeployer                  - Processing resource bpmn/OrderlocalProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:50:53,476 [main           ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderlocalProcess:1:15]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-02-03 07:50:53,478 [main           ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@180ee49d[wfId=3,name=orderlocalProcess,deployId=12,processDefinitionKey=orderlocalProcess,processDefinitionId=orderlocalProcess:1:15,createTime=Mon Feb 03 07:50:53 NZDT 2014]
2014-02-03 07:50:53,478 [main           ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 06:50:53)
2014-02-03 07:50:53,478 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 06:50:53)
2014-02-03 07:50:53,479 [main           ] INFO  WorkflowInitialDataSetup       - deploy local main process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 06:50:53) 
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
2014-02-03 07:50:53,526 [main           ] INFO  StaffDSImpl                    - getStaffsByName start:David
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.first_name=? 
        and staffmodel0_.last_name=?
2014-02-03 07:50:53,538 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@54d8248e[staffId=1,individual=co.nz.pizzashack.data.model.IndividualModel@485144ce[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=2014-02-03]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:50:53,548 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@78bf5692[userId=1,username=david,password=MTIzNDU2,createTime=07:50:52]
2014-02-03 07:50:53,553 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:1969-12-31 07:50:52)
Hibernate: 
    select
        staffdepar0_.staff_id as staff4_12_1_,
        staffdepar0_.staff_dept_id as staff1_1_,
        staffdepar0_.staff_dept_id as staff1_1_0_,
        staffdepar0_.join_date as join2_1_0_,
        staffdepar0_.dept_id as dept3_1_0_,
        staffdepar0_.staff_id as staff4_1_0_ 
    from
        t_dept_staff staffdepar0_ 
    where
        staffdepar0_.staff_id=?
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        staffdepar0_.dept_id as dept3_8_1_,
        staffdepar0_.staff_dept_id as staff1_1_,
        staffdepar0_.staff_dept_id as staff1_1_0_,
        staffdepar0_.join_date as join2_1_0_,
        staffdepar0_.dept_id as dept3_1_0_,
        staffdepar0_.staff_id as staff4_1_0_ 
    from
        t_dept_staff staffdepar0_ 
    where
        staffdepar0_.dept_id=?
2014-02-03 07:50:53,574 [main           ] INFO  DepartmentConverter            - toDto start:{} co.nz.pizzashack.data.model.DepartmentModel@7b5dc3af[deptId=1,deptName=Order manager,createDate=2014-02-03,staffDepartments=[co.nz.pizzashack.data.model.StaffDepartmentModel@29dd2d9e[staffDeptId=1,joinDate=2014-02-03], co.nz.pizzashack.data.model.StaffDepartmentModel@5d61b8d5[staffDeptId=2,joinDate=2014-02-03], co.nz.pizzashack.data.model.StaffDepartmentModel@16d712fd[staffDeptId=3,joinDate=2014-02-03]]]
2014-02-03 07:50:53,578 [main           ] INFO  DepartmentConverter            - toDto end:{} co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02)
2014-02-03 07:50:53,587 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:1, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:2014-02-02, departments:[co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02)], role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:1969-12-31 07:50:52))
2014-02-03 07:50:53,588 [main           ] INFO  StaffDSImpl                    - getStaffsByName end:{}
2014-02-03 07:50:53,589 [main           ] INFO  StaffDSImpl                    - getStaffsByName start:Brad
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.first_name=? 
        and staffmodel0_.last_name=?
2014-02-03 07:50:53,591 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@691b3a73[staffId=2,individual=co.nz.pizzashack.data.model.IndividualModel@16b8fbd8[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=2014-02-03]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:50:53,593 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@440ff6a3[userId=2,username=brad,password=MTIzNDU2,createTime=07:50:52]
2014-02-03 07:50:53,594 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:1969-12-31 07:50:52)
Hibernate: 
    select
        staffdepar0_.staff_id as staff4_12_1_,
        staffdepar0_.staff_dept_id as staff1_1_,
        staffdepar0_.staff_dept_id as staff1_1_0_,
        staffdepar0_.join_date as join2_1_0_,
        staffdepar0_.dept_id as dept3_1_0_,
        staffdepar0_.staff_id as staff4_1_0_ 
    from
        t_dept_staff staffdepar0_ 
    where
        staffdepar0_.staff_id=?
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        staffdepar0_.dept_id as dept3_8_1_,
        staffdepar0_.staff_dept_id as staff1_1_,
        staffdepar0_.staff_dept_id as staff1_1_0_,
        staffdepar0_.join_date as join2_1_0_,
        staffdepar0_.dept_id as dept3_1_0_,
        staffdepar0_.staff_id as staff4_1_0_ 
    from
        t_dept_staff staffdepar0_ 
    where
        staffdepar0_.dept_id=?
2014-02-03 07:50:53,599 [main           ] INFO  DepartmentConverter            - toDto start:{} co.nz.pizzashack.data.model.DepartmentModel@7bbf88b7[deptId=1,deptName=Order manager,createDate=2014-02-03,staffDepartments=[co.nz.pizzashack.data.model.StaffDepartmentModel@20ff2c0f[staffDeptId=1,joinDate=2014-02-03], co.nz.pizzashack.data.model.StaffDepartmentModel@3db1c910[staffDeptId=2,joinDate=2014-02-03], co.nz.pizzashack.data.model.StaffDepartmentModel@50a59db5[staffDeptId=3,joinDate=2014-02-03]]]
2014-02-03 07:50:53,599 [main           ] INFO  DepartmentConverter            - toDto end:{} co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02)
2014-02-03 07:50:53,599 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:2, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:2014-02-02, departments:[co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02)], role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:1969-12-31 07:50:52))
2014-02-03 07:50:53,599 [main           ] INFO  StaffDSImpl                    - getStaffsByName end:{}
2014-02-03 07:50:53,600 [main           ] INFO  UserDSImpl                     - getUserByName start:general
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
2014-02-03 07:50:53,602 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@4f8374de[userId=4,username=general,password=MTIzNDU2,createTime=07:50:52]
2014-02-03 07:50:53,602 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)
2014-02-03 07:50:53,602 [main           ] INFO  UserDSImpl                     - getUserByName end:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)
2014-02-03 07:50:53,603 [main           ] INFO  OrderProcessTest               - department:co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02) 
2014-02-03 07:50:53,603 [main           ] INFO  OrderProcessDSImpl             - startOrderProcess start:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.process_definition_key=? 
        and workflowmo0_.category=? limit ?
Hibernate: 
    insert 
    into
        t_order
        (order_id, cust_id, deliver_time, order_no, order_time, payment_remarks, payment_status, quantity, ship_address, status, total_price) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:50:53,617 [main           ] INFO  ActivitiFacade                 - startProcessInstance start:{}
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
2014-02-03 07:50:53,635 [main           ] INFO  ActivitiFacade                 - startProcessInstance end:{}
Hibernate: 
    insert 
    into
        t_order_process
        (order_process_id, active_process_definition_id, active_process_instance_id, complete_time, create_time, execution_id, main_process_definition_id, main_process_instance_id, operator_id, order_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2014-02-03 07:50:53,641 [main           ] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@147fc87f[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=Mon Feb 03 07:50:53 NZDT 2014,completeTime=<null>]
2014-02-03 07:50:53,661 [main           ] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@48212cab[orderId=1,orderNo=e7c2107e-165f-4062-aa63-eb787563eba2,quantity=<null>,status=0,paymentStatus=0,deliverTime=<null>,totalPrice=<null>,orderTime=Mon Feb 03 07:50:53 NZDT 2014]
2014-02-03 07:50:53,669 [main           ] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null)
2014-02-03 07:50:53,670 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@1fd9600d[userId=4,username=general,password=MTIzNDU2,createTime=07:50:52]
2014-02-03 07:50:53,670 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)
2014-02-03 07:50:53,677 [main           ] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 06:50:53, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52))
2014-02-03 07:50:53,678 [main           ] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 06:50:53, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
2014-02-03 07:50:53,689 [main           ] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 07:50:53,689 [main           ] INFO  ActivitiFacade                 - executionId: 16, processDefinitionId: orderlocalProcess:1:15
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 07:50:53,714 [main           ] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:50:53,721 [main           ] INFO  OrderProcessAccessor           - assign operator[4] to task[Data entry]
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    insert 
    into
        ACT_RU_IDENTITYLINK
        (ID_, REV_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_, PROC_DEF_ID_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_IDENTITYLINK
        (ID_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_)     
    values
        (?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_TASK      
    SET
        REV_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        PRIORITY_ = ?,
        CREATE_TIME_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        DELEGATION_ = ?,
        EXECUTION_ID_ = ?,
        PROC_DEF_ID_ = ?,
        DESCRIPTION_ = ?,
        DUE_DATE_ = ?,
        SUSPENSION_STATE_ = ?      
    where
        ID_= ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
2014-02-03 07:50:53,742 [main           ] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 06:50:53, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
2014-02-03 07:50:53,743 [main           ] INFO  OrderProcessDSImpl             - startOrderProcess end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 06:50:53, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52))
2014-02-03 07:50:53,745 [main           ] INFO  OrderProcessTest               - after start instance:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 06:50:53, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
2014-02-03 07:50:53,750 [main           ] INFO  OrderProcessTest               - order pazza type size:2 
2014-02-03 07:50:53,750 [main           ] INFO  OrderProcessDSImpl             - dataEntry start:e7c2107e-165f-4062-aa63-eb787563eba2
2014-02-03 07:50:53,750 [main           ] INFO  OrderProcessDSImpl             - getOrderProcessByOrderNo start************************************
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 07:50:53,759 [main           ] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@87d93f3[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=07:50:53,completeTime=<null>] 
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_,
        customermo0_.address as address2_,
        customermo0_.credits as credits2_,
        customermo0_.customer_name as customer4_2_,
        customermo0_.email as email2_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.email=? limit ?
2014-02-03 07:50:53,764 [main           ] INFO  CustomerConverter              - toModel start:{} co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:david, customerEmail:david.yuan124@gmail.com, level:null)
2014-02-03 07:50:53,768 [main           ] INFO  CustomerConverter              - toModel end:{} co.nz.pizzashack.data.model.CustomerModel@1a44875f[custId=<null>,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
Hibernate: 
    insert 
    into
        t_customer
        (cust_id, address, credits, customer_name, email) 
    values
        (null, ?, ?, ?, ?)
2014-02-03 07:50:53,771 [main           ] INFO  OrderProcessDSImpl             - orderDetailsSet size:2 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
2014-02-03 07:50:53,778 [main           ] INFO  OrderProcessDSImpl             - added orderPizzashackModel:co.nz.pizzashack.data.model.OrderPizzashackModel@6c3129d6[orderPizzashackId=<null>,totalPrice=0,qty=4] 
Hibernate: 
    insert 
    into
        t_order_pizzashack
        (order_pizza_id, order_id, pizzashack_id, qty, total_price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
2014-02-03 07:50:53,785 [main           ] INFO  OrderProcessDSImpl             - added orderPizzashackModel:co.nz.pizzashack.data.model.OrderPizzashackModel@36a2c086[orderPizzashackId=<null>,totalPrice=0,qty=10] 
Hibernate: 
    insert 
    into
        t_order_pizzashack
        (order_pizza_id, order_id, pizzashack_id, qty, total_price) 
    values
        (null, ?, ?, ?, ?)
2014-02-03 07:50:53,786 [main           ] INFO  OrderProcessDSImpl             - after add detailsDto, size in model:2 
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        E.BUSINESS_KEY_ = ?                                                                                 
        and RES.PROC_DEF_ID_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                    
        and RES.ASSIGNEE_ = ?                                                                        
        and E.BUSINESS_KEY_ = ?
2014-02-03 07:50:53,791 [main           ] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@87d93f3[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=07:50:53,completeTime=<null>]
2014-02-03 07:50:53,795 [main           ] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@682ae058[orderId=1,orderNo=e7c2107e-165f-4062-aa63-eb787563eba2,quantity=14,status=0,paymentStatus=0,deliverTime=<null>,totalPrice=0,orderTime=2014-02-03 07:50:53.609]
2014-02-03 07:50:53,798 [main           ] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@1a44875f[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 07:50:53,804 [main           ] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-02-03 07:50:53,808 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@6c3129d6[orderPizzashackId=1,totalPrice=0,qty=4]
2014-02-03 07:50:53,815 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0)
2014-02-03 07:50:53,815 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@36a2c086[orderPizzashackId=2,totalPrice=0,qty=10]
2014-02-03 07:50:53,815 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)
2014-02-03 07:50:53,816 [main           ] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:14, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:50:53,817 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@71be9f1[userId=4,username=general,password=MTIzNDU2,createTime=07:50:52]
2014-02-03 07:50:53,818 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)
2014-02-03 07:50:53,818 [main           ] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:14, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:50:53, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52))
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        PARENT_TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE 
    where
        TASK_ID_ =     ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
2014-02-03 07:50:53,843 [main           ] INFO  ainTransitionExecutionListener - orderMainUserTaskExecutionListener start:{} 
2014-02-03 07:50:53,844 [main           ] INFO  ainTransitionExecutionListener - nextActivity id:orderCoreCallactivity
2014-02-03 07:50:53,844 [main           ] INFO  ainTransitionExecutionListener - nextActivity name:Core process
2014-02-03 07:50:53,844 [main           ] INFO  ainTransitionExecutionListener - nextActivity type:callActivity
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
start calculate: co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:14, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:50:53, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52))
2014-02-03 07:50:54,050 [main           ] INFO  PizzashackCaculator            - caculate start:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:14, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null) 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-03 07:50:54,056 [main           ] INFO  PizzashackCaculator            - caculate end:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null) 
after calculation: co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null)
2014-02-03 07:50:54,057 [main           ] INFO  culationMergeExecutionListener - CaculationMergeExecutionListener start
2014-02-03 07:50:54,057 [main           ] INFO  culationMergeExecutionListener - after calculation, orderProcess:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:50:53, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
2014-02-03 07:50:54,058 [main           ] INFO  OrderProcessAccessor           - merge calculation result
2014-02-03 07:50:54,058 [main           ] INFO  OrderProcessAccessor           - total price:390.00 
2014-02-03 07:50:54,058 [main           ] INFO  OrderProcessAccessor           - qty:14 
2014-02-03 07:50:54,058 [main           ] INFO  OrderProcessAccessor           - orderDetailsSet.size():2
2014-02-03 07:50:54,058 [main           ] INFO  culationMergeExecutionListener - CaculationMergeExecutionListener end
total qty: 14
after autoreview: 2
reviewTransBean: co.nz.pizzashack.data.dto.OrderReviewRecordDto(reviewRecordId:null, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, content:order number is more than 10 but less than 30, reviewResult:pending, createTime:2014-02-02 06:50:54, reviewer:null)
2014-02-03 07:50:54,113 [main           ] INFO  oManualReviewExecutionListener - ToManualReviewExecutionListener start:{} 
2014-02-03 07:50:54,113 [main           ] INFO  oManualReviewExecutionListener - eventName:take 
2014-02-03 07:50:54,113 [main           ] INFO  oManualReviewExecutionListener - activitiProcessDefinitionId:orderCoreProcess:1:11
2014-02-03 07:50:54,113 [main           ] INFO  oManualReviewExecutionListener - activitiProcesssInstanceId:30
2014-02-03 07:50:54,113 [main           ] INFO  oManualReviewExecutionListener - get orderReviewRecord:co.nz.pizzashack.data.dto.OrderReviewRecordDto(reviewRecordId:null, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, content:order number is more than 10 but less than 30, reviewResult:pending, createTime:2014-02-02 06:50:54, reviewer:null) 
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_IDENTITYLINK
        (ID_, REV_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_, PROC_DEF_ID_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_IDENTITYLINK
        (ID_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_)     
    values
        (?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_EXECUTION 
    set
        REV_ = ?,
        BUSINESS_KEY_ = ?,
        PROC_DEF_ID_ = ?,
        ACT_ID_ = ?,
        IS_ACTIVE_ = ?,
        IS_CONCURRENT_ = ?,
        IS_SCOPE_ = ?,
        IS_EVENT_SCOPE_ = ?,
        PARENT_ID_ = ?,
        SUPER_EXEC_ = ?,
        SUSPENSION_STATE_ = ?,
        CACHED_ENT_STATE_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_TASK 
    where
        ID_ = ? 
        and REV_ = ?
2014-02-03 07:50:54,150 [main           ] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-02-03 07:50:54,159 [main           ] INFO  OrderProcessAccessor           - get OrderProcessDto from flow:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
2014-02-03 07:50:54,159 [main           ] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 07:50:54,159 [main           ] INFO  ActivitiFacade                 - executionId: 30, processDefinitionId: orderCoreProcess:1:11
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 07:50:54,163 [main           ] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:50:54,166 [main           ] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo start:{}
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 07:50:54,167 [main           ] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo end:{}
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
2014-02-03 07:50:54,168 [main           ] INFO  OrderProcessAccessor           - after merge orderProcessModel:co.nz.pizzashack.data.model.OrderProcessModel@87d93f3[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=07:50:53,completeTime=<null>] 
2014-02-03 07:50:54,169 [main           ] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
2014-02-03 07:50:54,170 [main           ] INFO  OrderProcessDSImpl             - dataEntry end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52))
Hibernate: 
    update
        t_order_process 
    set
        active_process_definition_id=?,
        active_process_instance_id=?,
        complete_time=?,
        create_time=?,
        execution_id=?,
        main_process_definition_id=?,
        main_process_instance_id=?,
        operator_id=?,
        order_id=? 
    where
        order_process_id=?
Hibernate: 
    update
        t_order 
    set
        cust_id=?,
        deliver_time=?,
        order_no=?,
        order_time=?,
        payment_remarks=?,
        payment_status=?,
        quantity=?,
        ship_address=?,
        status=?,
        total_price=? 
    where
        order_id=?
Hibernate: 
    update
        t_order_pizzashack 
    set
        order_id=?,
        pizzashack_id=?,
        qty=?,
        total_price=? 
    where
        order_pizza_id=?
Hibernate: 
    update
        t_order_pizzashack 
    set
        order_id=?,
        pizzashack_id=?,
        qty=?,
        total_price=? 
    where
        order_pizza_id=?
2014-02-03 07:50:54,180 [main           ] INFO  OrderProcessTest               - **************************after dataentry:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
2014-02-03 07:50:54,181 [main           ] INFO  OrderProcessQueryDSImpl        - getOrderProcessDtoById start:1 
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_0_,
        orderproce0_.active_process_definition_id as active2_10_0_,
        orderproce0_.active_process_instance_id as active3_10_0_,
        orderproce0_.complete_time as complete4_10_0_,
        orderproce0_.create_time as create5_10_0_,
        orderproce0_.execution_id as execution6_10_0_,
        orderproce0_.main_process_definition_id as main7_10_0_,
        orderproce0_.main_process_instance_id as main8_10_0_,
        orderproce0_.operator_id as operator9_10_0_,
        orderproce0_.order_id as order10_10_0_ 
    from
        t_order_process orderproce0_ 
    where
        orderproce0_.order_process_id=?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 07:50:54,183 [main           ] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@344b14bd[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=07:50:53,completeTime=<null>]
2014-02-03 07:50:54,184 [main           ] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@1d011fbb[orderId=1,orderNo=e7c2107e-165f-4062-aa63-eb787563eba2,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 07:50:53.609]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 07:50:54,191 [main           ] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@44d630aa[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 07:50:54,191 [main           ] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 07:50:54,192 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@531ea33b[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:50:54,196 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 07:50:54,196 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@6ea11f[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:50:54,198 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 07:50:54,198 [main           ] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:50:54,199 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@397a0709[userId=4,username=general,password=MTIzNDU2,createTime=07:50:52]
2014-02-03 07:50:54,200 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)
2014-02-03 07:50:54,200 [main           ] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52))
2014-02-03 07:50:54,200 [main           ] INFO  OrderProcessQueryDSImpl        - buildPendingActivity start:{}
2014-02-03 07:50:54,200 [main           ] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 07:50:54,200 [main           ] INFO  ActivitiFacade                 - executionId: 30, processDefinitionId: orderCoreProcess:1:11
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:50:54,206 [main           ] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo start:{}
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 07:50:54,208 [main           ] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo end:{}
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
2014-02-03 07:50:54,209 [main           ] INFO  OrderProcessQueryDSImpl        - buildPendingActivity end:{}
2014-02-03 07:50:54,210 [main           ] INFO  OrderProcessQueryDSImpl        - getOrderProcessDtoById end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:null), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
2014-02-03 07:50:54,210 [main           ] INFO  OrderProcessTest               - -------------------------------ProcessActivityDto:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:null)
2014-02-03 07:50:54,211 [main           ] INFO  OrderDSImpl                    - getOrderByOrderNo start:e7c2107e-165f-4062-aa63-eb787563eba2 
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_,
        ordermodel0_.cust_id as cust11_4_,
        ordermodel0_.deliver_time as deliver2_4_,
        ordermodel0_.order_no as order3_4_,
        ordermodel0_.order_time as order4_4_,
        ordermodel0_.payment_remarks as payment5_4_,
        ordermodel0_.payment_status as payment6_4_,
        ordermodel0_.quantity as quantity4_,
        ordermodel0_.ship_address as ship8_4_,
        ordermodel0_.status as status4_,
        ordermodel0_.total_price as total10_4_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_no=? limit ?
2014-02-03 07:50:54,216 [main           ] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@463c76f[orderId=1,orderNo=e7c2107e-165f-4062-aa63-eb787563eba2,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 07:50:53.609]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 07:50:54,217 [main           ] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@1048abfb[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 07:50:54,218 [main           ] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 07:50:54,219 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@36e8db37[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:50:54,220 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 07:50:54,221 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@7190140a[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:50:54,222 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 07:50:54,222 [main           ] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null)
2014-02-03 07:50:54,222 [main           ] INFO  OrderDSImpl                    - getOrderByOrderNo end:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null) 
2014-02-03 07:50:54,223 [main           ] INFO  OrderProcessTest               - after dataentry latest order from db:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null) 
2014-02-03 07:50:54,223 [main           ] INFO  OrderProcessDSImpl             - claimOrderReviewTask start:e7c2107e-165f-4062-aa63-eb787563eba2
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 07:50:54,226 [main           ] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@7d8f4292[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=07:50:53,completeTime=<null>] 
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        E.BUSINESS_KEY_ = ?                                                                                 
        and RES.PROC_DEF_ID_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:50:54,229 [main           ] INFO  OrderProcessDSImpl             - taskId:57
2014-02-03 07:50:54,229 [main           ] INFO  OrderProcessDSImpl             - taskName:Manual underwriting
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                    
        and RES.ASSIGNEE_ = ?                                                                        
        and E.BUSINESS_KEY_ = ?
Hibernate: 
    select
        g.*     
    from
        ACT_ID_GROUP g,
        ACT_ID_MEMBERSHIP membership     
    where
        g.ID_ = membership.GROUP_ID_       
        and membership.USER_ID_ = ?
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                   
    inner join
        ACT_RU_IDENTITYLINK I 
            on I.TASK_ID_ = RES.ID_                                 
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                                                                                                                                                              
        and RES.ASSIGNEE_ is null         
        and I.TYPE_ = 'candidate'         
        and          (
            I.USER_ID_ = ?                                             
            or                                   I.GROUP_ID_ IN             (
                ?             
            )                    
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    insert 
    into
        ACT_RU_IDENTITYLINK
        (ID_, REV_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_, PROC_DEF_ID_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_IDENTITYLINK
        (ID_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_)     
    values
        (?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_COMMENT
        (ID_, TYPE_, TIME_, USER_ID_, TASK_ID_, PROC_INST_ID_, ACTION_, MESSAGE_, FULL_MSG_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_TASK      
    SET
        REV_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        PRIORITY_ = ?,
        CREATE_TIME_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        DELEGATION_ = ?,
        EXECUTION_ID_ = ?,
        PROC_DEF_ID_ = ?,
        DESCRIPTION_ = ?,
        DUE_DATE_ = ?,
        SUSPENSION_STATE_ = ?      
    where
        ID_= ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
2014-02-03 07:50:54,250 [main           ] INFO  OrderProcessDSImpl             - claimOrderReviewTask end:{}
2014-02-03 07:50:54,251 [main           ] INFO  OrderProcessTest               - after david claim task:{} 
2014-02-03 07:50:54,251 [main           ] INFO  OrderProcessQueryDSImpl        - getOrderProcessDtoById start:1 
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_0_,
        orderproce0_.active_process_definition_id as active2_10_0_,
        orderproce0_.active_process_instance_id as active3_10_0_,
        orderproce0_.complete_time as complete4_10_0_,
        orderproce0_.create_time as create5_10_0_,
        orderproce0_.execution_id as execution6_10_0_,
        orderproce0_.main_process_definition_id as main7_10_0_,
        orderproce0_.main_process_instance_id as main8_10_0_,
        orderproce0_.operator_id as operator9_10_0_,
        orderproce0_.order_id as order10_10_0_ 
    from
        t_order_process orderproce0_ 
    where
        orderproce0_.order_process_id=?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 07:50:54,253 [main           ] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@2a2b4348[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=07:50:53,completeTime=<null>]
2014-02-03 07:50:54,254 [main           ] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@163690a7[orderId=1,orderNo=e7c2107e-165f-4062-aa63-eb787563eba2,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 07:50:53.609]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 07:50:54,255 [main           ] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@696b4f5e[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 07:50:54,255 [main           ] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 07:50:54,257 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@7c7e6992[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:50:54,258 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 07:50:54,258 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@b8508c8[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:50:54,258 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 07:50:54,259 [main           ] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:50:54,259 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@34fea8be[userId=4,username=general,password=MTIzNDU2,createTime=07:50:52]
2014-02-03 07:50:54,260 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)
2014-02-03 07:50:54,260 [main           ] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52))
2014-02-03 07:50:54,260 [main           ] INFO  OrderProcessQueryDSImpl        - buildPendingActivity start:{}
2014-02-03 07:50:54,260 [main           ] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 07:50:54,260 [main           ] INFO  ActivitiFacade                 - executionId: 30, processDefinitionId: orderCoreProcess:1:11
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:50:54,267 [main           ] INFO  OrderProcessQueryDSImpl        - buildPendingActivity end:{}
2014-02-03 07:50:54,268 [main           ] INFO  OrderProcessQueryDSImpl        - getOrderProcessDtoById end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:david, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:null), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
2014-02-03 07:50:54,268 [main           ] INFO  OrderProcessTest               - -------------------------------ProcessActivityDto:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:david, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:null)
2014-02-03 07:50:54,269 [main           ] INFO  OrderProcessDSImpl             - manualOrderReview start:co.nz.pizzashack.data.dto.OrderReviewRecordDto(reviewRecordId:null, orderNo:null, content:review passed, reviewResult:accept, createTime:null, reviewer:co.nz.pizzashack.data.dto.StaffDto(staffId:1, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:2014-02-02, departments:[co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02)], role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:1969-12-31 07:50:52))) 
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-03 07:50:54,271 [main           ] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@5decee06[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=07:50:53,completeTime=<null>] 
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-03 07:50:54,271 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@71d6e165[userId=4,username=general,password=MTIzNDU2,createTime=07:50:52]
2014-02-03 07:50:54,272 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)
2014-02-03 07:50:54,272 [main           ] INFO  OrderProcessDSImpl             - doManualOrderReview start:{} 
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        E.BUSINESS_KEY_ = ?                                                                                 
        and RES.PROC_DEF_ID_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                    
        and RES.ASSIGNEE_ = ?                                                                        
        and E.BUSINESS_KEY_ = ?
2014-02-03 07:50:54,275 [main           ] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@5decee06[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=07:50:53,completeTime=<null>]
2014-02-03 07:50:54,276 [main           ] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@7a79584a[orderId=1,orderNo=e7c2107e-165f-4062-aa63-eb787563eba2,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 07:50:53.609]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 07:50:54,277 [main           ] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@3e92885f[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 07:50:54,277 [main           ] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 07:50:54,278 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@4e1176c6[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:50:54,278 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 07:50:54,278 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@5c8ce934[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:50:54,279 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 07:50:54,279 [main           ] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null)
2014-02-03 07:50:54,279 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@71d6e165[userId=4,username=general,password=MTIzNDU2,createTime=07:50:52]
2014-02-03 07:50:54,280 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)
2014-02-03 07:50:54,280 [main           ] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52))
2014-02-03 07:50:54,280 [main           ] INFO  OrderProcessDSImpl             - before manual review flow:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52))
2014-02-03 07:50:54,280 [main           ] INFO  OrderProcessDSImpl             - reviewResult:accept 
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        PARENT_TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE 
    where
        TASK_ID_ =     ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_PROCINST 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RU_JOB J     
    where
        J.EXECUTION_ID_ = ?
Hibernate: 
    select
        *      
    from
        ACT_RU_EVENT_SUBSCR     
    where
        (
            EXECUTION_ID_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
2014-02-03 07:50:54,308 [main           ] INFO  OfCoreProcessExecutionListener - after core process, orderProcess:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1969-12-31 07:50:53, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-02-03 07:50:54,311 [main           ] INFO  ainTransitionExecutionListener - orderMainUserTaskExecutionListener start:{} 
2014-02-03 07:50:54,311 [main           ] INFO  ainTransitionExecutionListener - nextActivity id:billingEntry
2014-02-03 07:50:54,311 [main           ] INFO  ainTransitionExecutionListener - nextActivity name:Billing fill in
2014-02-03 07:50:54,311 [main           ] INFO  ainTransitionExecutionListener - nextActivity type:userTask
2014-02-03 07:50:54,311 [main           ] INFO  ainTransitionExecutionListener - order status:pendingOnBilling 
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    update
        ACT_HI_PROCINST 
    set
        PROC_DEF_ID_ = ?,
        BUSINESS_KEY_ = ?,
        START_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        END_ACT_ID_ = ?,
        DELETE_REASON_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_VARINST 
    set
        REV_ = ?,
        BYTEARRAY_ID_ = ?,
        DOUBLE_ = ?,
        LONG_ = ?,
        TEXT_ = ?,
        TEXT2_ = ?,
        VAR_TYPE_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_EXECUTION 
    set
        REV_ = ?,
        BUSINESS_KEY_ = ?,
        PROC_DEF_ID_ = ?,
        ACT_ID_ = ?,
        IS_ACTIVE_ = ?,
        IS_CONCURRENT_ = ?,
        IS_SCOPE_ = ?,
        IS_EVENT_SCOPE_ = ?,
        PARENT_ID_ = ?,
        SUPER_EXEC_ = ?,
        SUSPENSION_STATE_ = ?,
        CACHED_ENT_STATE_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_IDENTITYLINK 
    where
        ID_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_TASK 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_IDENTITYLINK 
    where
        ID_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ? 
        and REV_ = ?
2014-02-03 07:50:54,337 [main           ] INFO  OrderProcessDSImpl             - doManualOrderReview end:{} 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:50:54,339 [main           ] INFO  OrderProcessDSImpl             - process pending, build pending Activity:{} 
2014-02-03 07:50:54,339 [main           ] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:50:53, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-02-03 07:50:54,344 [main           ] INFO  OrderProcessAccessor           - get OrderProcessDto from flow:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:50:53, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
2014-02-03 07:50:54,344 [main           ] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-03 07:50:54,344 [main           ] INFO  ActivitiFacade                 - executionId: 16, processDefinitionId: orderlocalProcess:1:15
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-03 07:50:54,348 [main           ] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-03 07:50:54,350 [main           ] INFO  OrderProcessAccessor           - assign operator[4] to task[Billing fill in]
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_TASK      
    SET
        REV_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        PRIORITY_ = ?,
        CREATE_TIME_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        DELEGATION_ = ?,
        EXECUTION_ID_ = ?,
        PROC_DEF_ID_ = ?,
        DESCRIPTION_ = ?,
        DUE_DATE_ = ?,
        SUSPENSION_STATE_ = ?      
    where
        ID_= ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
2014-02-03 07:50:54,358 [main           ] INFO  OrderProcessAccessor           - after merge orderProcessModel:co.nz.pizzashack.data.model.OrderProcessModel@5decee06[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=07:50:53,completeTime=<null>] 
2014-02-03 07:50:54,359 [main           ] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:50:53, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
2014-02-03 07:50:54,361 [main           ] INFO  OrderProcessDSImpl             - manualOrderReview end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:50:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1969-12-31 07:50:53, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1969-12-31 07:50:52)) 
Hibernate: 
    update
        t_order_process 
    set
        active_process_definition_id=?,
        active_process_instance_id=?,
        complete_time=?,
        create_time=?,
        execution_id=?,
        main_process_definition_id=?,
        main_process_instance_id=?,
        operator_id=?,
        order_id=? 
    where
        order_process_id=?
Hibernate: 
    update
        t_order 
    set
        cust_id=?,
        deliver_time=?,
        order_no=?,
        order_time=?,
        payment_remarks=?,
        payment_status=?,
        quantity=?,
        ship_address=?,
        status=?,
        total_price=? 
    where
        order_id=?
2014-02-03 07:50:54,363 [main           ] INFO  OrderProcessTest               - after manul underwriting pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]) 
2014-02-03 07:50:54,364 [main           ] INFO  OrderDSImpl                    - getOrderByOrderNo start:e7c2107e-165f-4062-aa63-eb787563eba2 
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_,
        ordermodel0_.cust_id as cust11_4_,
        ordermodel0_.deliver_time as deliver2_4_,
        ordermodel0_.order_no as order3_4_,
        ordermodel0_.order_time as order4_4_,
        ordermodel0_.payment_remarks as payment5_4_,
        ordermodel0_.payment_status as payment6_4_,
        ordermodel0_.quantity as quantity4_,
        ordermodel0_.ship_address as ship8_4_,
        ordermodel0_.status as status4_,
        ordermodel0_.total_price as total10_4_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_no=? limit ?
2014-02-03 07:50:54,365 [main           ] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@653f93de[orderId=1,orderNo=e7c2107e-165f-4062-aa63-eb787563eba2,quantity=14,status=5,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-03 07:50:53.609]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-03 07:50:54,366 [main           ] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@4f996743[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-03 07:50:54,366 [main           ] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-03 07:50:54,367 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@3bc69f88[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:50:54,367 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-03 07:50:54,367 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@6d13b860[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-03 07:50:54,368 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-03 07:50:54,368 [main           ] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:50:53, deliverTime:null)
2014-02-03 07:50:54,368 [main           ] INFO  OrderDSImpl                    - getOrderByOrderNo end:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:50:53, deliverTime:null) 
2014-02-03 07:50:54,369 [main           ] INFO  OrderProcessTest               - ********************after review:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:e7c2107e-165f-4062-aa63-eb787563eba2, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 06:50:53, deliverTime:null) 
Tests run: 4, Failures: 0, Errors: 0, Skipped: 3, Time elapsed: 10.341 sec

Results :

Tests run: 4, Failures: 0, Errors: 0, Skipped: 3

2014-02-03 07:50:54,422 [Thread-8       ] INFO  GenericWebApplicationContext   - Closing org.springframework.web.context.support.GenericWebApplicationContext@5d51981a: startup date [Mon Feb 03 07:50:44 NZDT 2014]; root of context hierarchy
2014-02-03 07:50:54,423 [Thread-8       ] INFO  BusApplicationContext          - Closing org.apache.cxf.bus.spring.BusApplicationContext@74e5d63d: startup date [Mon Feb 03 07:50:51 NZDT 2014]; parent: org.springframework.web.context.support.GenericWebApplicationContext@5d51981a
2014-02-03 07:50:54,423 [Thread-8       ] INFO  DefaultListableBeanFactory     - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2cac4d10: defining beans []; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@126e4ecd
2014-02-03 07:50:54,424 [Thread-8       ] INFO  DefaultListableBeanFactory     - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@126e4ecd: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,applicationConfiguration,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,viewConfiguration,webMvcContextConfiguration,logoutController,loginController,indexController,userController,adminIndexController,departmentController,orderController,orderQueryController,staffController,billingProcessRespTransformer,billingProcessReqTransformer,orderProcessFormatTransformer,billingVariableTransformer,billingResponseMergeProcessor,billingFormatTransformer,billingInboundProcessor,orderDuplicatedReqProcessor,orderRequestProcessor,billingProcessRoute,billingInboundWsRoute,orderProcessRoute,sleepBean,pizzashackAPIImpl,camelSpringConfig,camelJdbcIdempotentConfig,camelCxfConfig,orderProcessDSImpl,customerDSImpl,workflowDSImpl,pizzashackDSImpl,userDSImpl,orderProcessAccessor,orderProcessQueryDSImpl,staffDSImpl,orderDSImpl,departmentDSImpl,initialDataConfig,pizzashackCaculator,emailExecutionListener,endExecutionListener,caculationMergeExecutionListener,orderMainTransitionExecutionListener,toManualReviewExecutionListener,outOfBillingProcessExecutionListener,outOfCoreProcessExecutionListener,billingRespExecutionListener,customerConverter,orderProcessConverter,staffConverter,userConverter,departmentConverter,workflowConverter,orderReviewRecordConverter,orderConverter,activityDiscountRateConverter,orderDetailConverter,pizzashackDataInitialConfiguration,pizzashackItemBuilder,infrastructureContextConfiguration,activitiFacade,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0,org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0,customerRepository,orderRequestHistoryRepository,workflowRepository,orderRepository,pizzashackRepository,orderProcessRepository,activityDiscountRateRepository,departmentRepository,orderPizzashackRepository,staffDepartmentRepository,staffRepository,userRepository,orderReviewRecordRepository,viewResolver,messageSource,org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration,requestMappingHandlerMapping,mvcContentNegotiationManager,viewControllerHandlerMapping,beanNameHandlerMapping,resourceHandlerMapping,defaultServletHandlerMapping,requestMappingHandlerAdapter,mvcConversionService,mvcValidator,httpRequestHandlerAdapter,simpleControllerHandlerAdapter,handlerExceptionResolver,sessionAttributeProcessor,localeChangeInterceptor,localeResolver,simpleMappingExceptionResolver,multipartResolver,activeMQConnectionFactory,pooledConnectionFactory,jmsComponent,jmsTransactionManager,camelBeanPostProcessor,camelContext,custThreadPoolProfile,sqlComponent,orderJdbcMessageIdRepository,billingInboundEndpoint,loggingOutInterceptor,cxf,org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor,org.apache.cxf.bus.spring.Jsr250BeanPostProcessor,org.apache.cxf.bus.spring.BusExtensionPostProcessor,org.apache.cxf.binding.soap.SoapBindingFactory,org.apache.cxf.binding.soap.SoapTransportFactory,org.apache.cxf.binding.soap.customEditorConfigurer,setupWorkflowData,setupData,org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration,org.springframework.transaction.config.internalTransactionAdvisor,transactionAttributeSource,transactionInterceptor,dataSource,transactionManager,entityManagerFactory,placeholderConfig,processEngineConfiguration,processEngine,repositoryService,runtimeService,taskService,historyService,managementService,identityService]; root of factory hierarchy
2014-02-03 07:50:54,424 [Thread-8       ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) is shutting down
2014-02-03 07:50:54,425 [Thread-8       ] INFO  DefaultShutdownStrategy        - Starting to graceful shutdown 8 routes (timeout 300 seconds)
2014-02-03 07:50:54,429 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: cxf:bean:billingInboundEndpoint shutdown complete, was consuming from: Endpoint[cxf://bean:billingInboundEndpoint]
2014-02-03 07:50:54,429 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:orderRegularProcess shutdown complete, was consuming from: Endpoint[direct://orderRegularProcess]
2014-02-03 07:50:54,429 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:orderDuplicatedProcess shutdown complete, was consuming from: Endpoint[direct://orderDuplicatedProcess]
2014-02-03 07:50:54,913 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: orderProcessRoute shutdown complete, was consuming from: Endpoint[jms://queue:pizzashackOrderInbound]
2014-02-03 07:50:54,913 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: route1 shutdown complete, was consuming from: Endpoint[direct://doBillingIntegration]
2014-02-03 07:50:54,913 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:receiveBillingQueue shutdown complete, was consuming from: Endpoint[direct://receiveBillingQueue]
2014-02-03 07:50:54,913 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:billingIntegration shutdown complete, was consuming from: Endpoint[direct://billingIntegration]
2014-02-03 07:50:54,914 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: activitiBillingProcess shutdown complete, was consuming from: Endpoint[activiti://orderBillingProcess:billingIntegration?copyVariablesToBodyAsMap=true]
2014-02-03 07:50:54,914 [Thread-8       ] INFO  DefaultShutdownStrategy        - Graceful shutdown of 8 routes completed in 0 seconds
2014-02-03 07:50:54,916 [Thread-8       ] INFO  CxfEndpoint                    - shutdown the bus ... org.apache.cxf.bus.spring.SpringBus@18554581
2014-02-03 07:50:54,933 [Thread-8       ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) uptime 4.096 seconds
2014-02-03 07:50:54,934 [Thread-8       ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) is shutdown in 0.509 seconds
2014-02-03 07:50:54,955 [Thread-8       ] INFO  tainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2014-02-03 07:50:54,956 [Thread-8       ] INFO  SchemaExport                   - HHH000227: Running hbm2ddl schema export
Hibernate: 
    alter table t_activity_discount_rate 
        drop constraint FKA400C193698FCC4
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE11193A98D65
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE111A27DDA4A
Hibernate: 
    alter table t_order 
        drop constraint FKA0C0C3C3E11F4FCB
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB0883698FCC4
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB088BBCB676E
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F33E99148D
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F3BBCB676E
Hibernate: 
    alter table t_order_request_history 
        drop constraint FK5A6B268BBCB676E
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CA6130105
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CBBCB676E
Hibernate: 
    alter table t_staff 
        drop constraint FKA0F9FF552DC32C06
Hibernate: 
    drop table t_activity_discount_rate if exists
Hibernate: 
    drop table t_customer if exists
Hibernate: 
    drop table t_dept if exists
Hibernate: 
    drop table t_dept_staff if exists
Hibernate: 
    drop table t_order if exists
Hibernate: 
    drop table t_order_pizzashack if exists
Hibernate: 
    drop table t_order_process if exists
Hibernate: 
    drop table t_order_request_history if exists
Hibernate: 
    drop table t_order_review_record if exists
Hibernate: 
    drop table t_pizzashack if exists
Hibernate: 
    drop table t_staff if exists
Hibernate: 
    drop table t_user if exists
Hibernate: 
    drop table t_workflow if exists
2014-02-03 07:50:54,971 [Thread-8       ] INFO  SchemaExport                   - HHH000230: Schema export complete
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 14.325s
[INFO] Finished at: Mon Feb 03 07:50:55 NZDT 2014
[INFO] Final Memory: 24M/620M
[INFO] ------------------------------------------------------------------------
]0;david@david: ~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-webdavid@david:~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web$ cd ..[K[K[K[K[K
Script started on Fri 31 Jan 2014 21:12:40 NZDT
]0;david@david: ~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-webdavid@david:~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web$ mvn jetty:run
[INFO] Scanning for projects...
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building pizzashack-distributor-web Maven Webapp 1.0.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] >>> jetty-maven-plugin:8.1.5.v20120716:run (default-cli) @ pizzashack-distributor-web >>>
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ pizzashack-distributor-web ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 31 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ pizzashack-distributor-web ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ pizzashack-distributor-web ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ pizzashack-distributor-web ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] <<< jetty-maven-plugin:8.1.5.v20120716:run (default-cli) @ pizzashack-distributor-web <<<
[INFO] 
[INFO] --- jetty-maven-plugin:8.1.5.v20120716:run (default-cli) @ pizzashack-distributor-web ---
[INFO] Configuring Jetty for project: pizzashack-distributor-web Maven Webapp
[INFO] webAppSourceDirectory /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp does not exist. Defaulting to /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp
[INFO] Reload Mechanic: automatic
[INFO] Classes = /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/target/classes
[INFO] Context path = /
[INFO] Tmp directory = /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/target/tmp
[INFO] Web defaults = org/eclipse/jetty/webapp/webdefault.xml
[INFO] Web overrides =  none
[INFO] web.xml file = null
[INFO] Webapp directory = /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp
2014-01-31 21:12:49.721:INFO:oejs.Server:jetty-8.1.5.v20120716
2014-01-31 21:12:51.642:INFO:oejpw.PlusConfiguration:No Transaction manager found - if your webapp requires one, please configure one.
2014-01-31 21:13:20.575:INFO:/:Spring WebApplicationInitializers detected on classpath: [co.nz.pizzashack.config.PizzashackDistributorWebInitializer@17e1bb0e]
2014-01-31 21:13:20.913:INFO:oejsh.ContextHandler:started o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
2014-01-31 21:13:20.913:INFO:oejsh.ContextHandler:started o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
2014-01-31 21:13:20.913:INFO:oejsh.ContextHandler:started o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
2014-01-31 21:13:20.914:INFO:/:Initializing Spring root WebApplicationContext
2014-01-31 21:13:20,914 [main           ] INFO  ContextLoader                  - Root WebApplicationContext: initialization started
2014-01-31 21:13:20,916 [main           ] INFO  ionConfigWebApplicationContext - Refreshing Root WebApplicationContext: startup date [Fri Jan 31 21:13:20 NZDT 2014]; root of context hierarchy
2014-01-31 21:13:20,969 [main           ] INFO  ClassPathBeanDefinitionScanner - JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2014-01-31 21:13:20,969 [main           ] INFO  ClassPathBeanDefinitionScanner - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2014-01-31 21:13:20,970 [main           ] INFO  ionConfigWebApplicationContext - Registering annotated classes: [class co.nz.pizzashack.config.ApplicationConfiguration,class co.nz.pizzashack.config.WebMvcContextConfiguration]
2014-01-31 21:13:21,017 [main           ] INFO  ClassPathBeanDefinitionScanner - JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2014-01-31 21:13:21,018 [main           ] INFO  ClassPathBeanDefinitionScanner - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2014-01-31 21:13:22,098 [main           ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [activitiAppContext.xml]
2014-01-31 21:13:22,442 [main           ] INFO  PropertyPlaceholderConfigurer  - Loading properties file from class path resource [activiti.properties]
2014-01-31 21:13:22,456 [main           ] INFO  redAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2014-01-31 21:13:22,503 [main           ] INFO  ionConfigWebApplicationContext - Bean 'infrastructureContextConfiguration' of type [class co.nz.pizzashack.config.InfrastructureContextConfiguration$$EnhancerByCGLIB$$e240c840] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:22,529 [main           ] INFO  MLog                           - MLog clients using log4j logging.
2014-01-31 21:13:22,573 [main           ] INFO  C3P0Registry                   - Initializing c3p0-0.9.1.2 [built 21-May-2007 15:04:56; debug? true; trace: 10]
2014-01-31 21:13:22,615 [main           ] INFO  ionConfigWebApplicationContext - Bean 'dataSource' of type [class com.mchange.v2.c3p0.ComboPooledDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:22,695 [main           ] INFO  tainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default'
2014-01-31 21:13:22,771 [main           ] INFO  Version                        - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2014-01-31 21:13:22,776 [main           ] INFO  Version                        - HHH000412: Hibernate Core {4.1.4.Final}
2014-01-31 21:13:22,777 [main           ] INFO  Environment                    - HHH000206: hibernate.properties not found
2014-01-31 21:13:22,778 [main           ] INFO  Environment                    - HHH000021: Bytecode provider name : javassist
2014-01-31 21:13:22,793 [main           ] INFO  Ejb3Configuration              - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2014-01-31 21:13:23,019 [main           ] INFO  ConnectionProviderInitiator    - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2014-01-31 21:13:23,068 [main           ] INFO  AbstractPoolBackedDataSource   - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge1508z1s6zfg14b6nxe|472758ec, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.h2.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge1508z1s6zfg14b6nxe|472758ec, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:h2:mem:pizzashackdistributor;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 600, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 2, numHelperThreads -> 3, numThreadsAwaitingCheckoutDefaultUser -> 0, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2014-01-31 21:13:23,211 [main           ] INFO  Dialect                        - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2014-01-31 21:13:23,217 [main           ] INFO  LobCreatorBuilder              - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2014-01-31 21:13:23,230 [main           ] INFO  TransactionFactoryInitiator    - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2014-01-31 21:13:23,234 [main           ] INFO  ASTQueryTranslatorFactory      - HHH000397: Using ASTQueryTranslatorFactory
2014-01-31 21:13:23,258 [main           ] INFO  Version                        - Hibernate Validator 4.2.0.Final
2014-01-31 21:13:23,477 [main           ] INFO  SchemaExport                   - HHH000227: Running hbm2ddl schema export
Hibernate: 
    alter table t_activity_discount_rate 
        drop constraint FKA400C193698FCC4
2014-01-31 21:13:23,487 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_activity_discount_rate drop constraint FKA400C193698FCC4
2014-01-31 21:13:23,487 [main           ] ERROR SchemaExport                   - Table "T_ACTIVITY_DISCOUNT_RATE" not found; SQL statement:

    alter table t_activity_discount_rate 
        drop constraint FKA400C193698FCC4 [42102-160]
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE11193A98D65
2014-01-31 21:13:23,488 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_dept_staff drop constraint FKBC8AE11193A98D65
2014-01-31 21:13:23,488 [main           ] ERROR SchemaExport                   - Table "T_DEPT_STAFF" not found; SQL statement:

    alter table t_dept_staff 
        drop constraint FKBC8AE11193A98D65 [42102-160]
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE111A27DDA4A
2014-01-31 21:13:23,489 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_dept_staff drop constraint FKBC8AE111A27DDA4A
2014-01-31 21:13:23,489 [main           ] ERROR SchemaExport                   - Table "T_DEPT_STAFF" not found; SQL statement:

    alter table t_dept_staff 
        drop constraint FKBC8AE111A27DDA4A [42102-160]
Hibernate: 
    alter table t_order 
        drop constraint FKA0C0C3C3E11F4FCB
2014-01-31 21:13:23,490 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order drop constraint FKA0C0C3C3E11F4FCB
2014-01-31 21:13:23,490 [main           ] ERROR SchemaExport                   - Table "T_ORDER" not found; SQL statement:

    alter table t_order 
        drop constraint FKA0C0C3C3E11F4FCB [42102-160]
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB0883698FCC4
2014-01-31 21:13:23,491 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_pizzashack drop constraint FKE8ACB0883698FCC4
2014-01-31 21:13:23,491 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PIZZASHACK" not found; SQL statement:

    alter table t_order_pizzashack 
        drop constraint FKE8ACB0883698FCC4 [42102-160]
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB088BBCB676E
2014-01-31 21:13:23,492 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_pizzashack drop constraint FKE8ACB088BBCB676E
2014-01-31 21:13:23,492 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PIZZASHACK" not found; SQL statement:

    alter table t_order_pizzashack 
        drop constraint FKE8ACB088BBCB676E [42102-160]
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F33E99148D
2014-01-31 21:13:23,492 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_process drop constraint FK6B8B15F33E99148D
2014-01-31 21:13:23,492 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PROCESS" not found; SQL statement:

    alter table t_order_process 
        drop constraint FK6B8B15F33E99148D [42102-160]
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F3BBCB676E
2014-01-31 21:13:23,493 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_process drop constraint FK6B8B15F3BBCB676E
2014-01-31 21:13:23,493 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PROCESS" not found; SQL statement:

    alter table t_order_process 
        drop constraint FK6B8B15F3BBCB676E [42102-160]
Hibernate: 
    alter table t_order_request_history 
        drop constraint FK5A6B268BBCB676E
2014-01-31 21:13:23,494 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_request_history drop constraint FK5A6B268BBCB676E
2014-01-31 21:13:23,494 [main           ] ERROR SchemaExport                   - Table "T_ORDER_REQUEST_HISTORY" not found; SQL statement:

    alter table t_order_request_history 
        drop constraint FK5A6B268BBCB676E [42102-160]
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CA6130105
2014-01-31 21:13:23,495 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_review_record drop constraint FKFB7A439CA6130105
2014-01-31 21:13:23,495 [main           ] ERROR SchemaExport                   - Table "T_ORDER_REVIEW_RECORD" not found; SQL statement:

    alter table t_order_review_record 
        drop constraint FKFB7A439CA6130105 [42102-160]
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CBBCB676E
2014-01-31 21:13:23,496 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_review_record drop constraint FKFB7A439CBBCB676E
2014-01-31 21:13:23,496 [main           ] ERROR SchemaExport                   - Table "T_ORDER_REVIEW_RECORD" not found; SQL statement:

    alter table t_order_review_record 
        drop constraint FKFB7A439CBBCB676E [42102-160]
Hibernate: 
    alter table t_staff 
        drop constraint FKA0F9FF552DC32C06
2014-01-31 21:13:23,497 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_staff drop constraint FKA0F9FF552DC32C06
2014-01-31 21:13:23,497 [main           ] ERROR SchemaExport                   - Table "T_STAFF" not found; SQL statement:

    alter table t_staff 
        drop constraint FKA0F9FF552DC32C06 [42102-160]
Hibernate: 
    drop table t_activity_discount_rate if exists
Hibernate: 
    drop table t_customer if exists
Hibernate: 
    drop table t_dept if exists
Hibernate: 
    drop table t_dept_staff if exists
Hibernate: 
    drop table t_order if exists
Hibernate: 
    drop table t_order_pizzashack if exists
Hibernate: 
    drop table t_order_process if exists
Hibernate: 
    drop table t_order_request_history if exists
Hibernate: 
    drop table t_order_review_record if exists
Hibernate: 
    drop table t_pizzashack if exists
Hibernate: 
    drop table t_staff if exists
Hibernate: 
    drop table t_user if exists
Hibernate: 
    drop table t_workflow if exists
Hibernate: 
    create table t_activity_discount_rate (
        activity_rate_id bigint generated by default as identity,
        code varchar(255),
        description varchar(255),
        effective_time timestamp,
        expire_time timestamp,
        rate decimal(19,2),
        pizzashack_id bigint,
        primary key (activity_rate_id)
    )
Hibernate: 
    create table t_customer (
        cust_id bigint generated by default as identity,
        address varchar(255),
        credits integer,
        customer_name varchar(255),
        email varchar(255),
        primary key (cust_id)
    )
Hibernate: 
    create table t_dept (
        dept_id bigint generated by default as identity,
        create_date date,
        dept_name varchar(255),
        primary key (dept_id)
    )
Hibernate: 
    create table t_dept_staff (
        staff_dept_id bigint generated by default as identity,
        join_date date,
        dept_id bigint,
        staff_id bigint,
        primary key (staff_dept_id)
    )
Hibernate: 
    create table t_order (
        order_id bigint generated by default as identity,
        deliver_time timestamp,
        order_no varchar(255),
        order_time timestamp,
        payment_remarks varchar(255),
        payment_status integer,
        quantity integer,
        ship_address varchar(255),
        status integer,
        total_price decimal(19,2),
        cust_id bigint,
        primary key (order_id)
    )
Hibernate: 
    create table t_order_pizzashack (
        order_pizza_id bigint generated by default as identity,
        qty integer,
        total_price decimal(19,2),
        order_id bigint,
        pizzashack_id bigint,
        primary key (order_pizza_id)
    )
Hibernate: 
    create table t_order_process (
        order_process_id bigint generated by default as identity,
        active_process_definition_id varchar(255),
        active_process_instance_id varchar(255),
        complete_time time,
        create_time time,
        execution_id varchar(255),
        main_process_definition_id varchar(255),
        main_process_instance_id varchar(255),
        operator_id bigint,
        order_id bigint,
        primary key (order_process_id)
    )
Hibernate: 
    create table t_order_request_history (
        message_id varchar(255) generated by default as identity,
        created_at time,
        processor_name varchar(255),
        order_id bigint,
        primary key (message_id)
    )
Hibernate: 
    create table t_order_review_record (
        review_record_id bigint generated by default as identity,
        content varchar(255),
        create_time time,
        review_status integer,
        order_id bigint,
        reviewer_id bigint,
        primary key (review_record_id)
    )
Hibernate: 
    create table t_pizzashack (
        pizzashack_id bigint generated by default as identity,
        description varchar(255),
        icon varchar(255),
        name varchar(255),
        price decimal(19,2),
        primary key (pizzashack_id)
    )
Hibernate: 
    create table t_staff (
        staff_id bigint generated by default as identity,
        create_date date,
        email varchar(255),
        first_name varchar(255),
        identity varchar(255),
        last_name varchar(255),
        level integer,
        role integer,
        user_id bigint,
        primary key (staff_id)
    )
Hibernate: 
    create table t_user (
        user_id bigint generated by default as identity,
        create_time time,
        password varchar(255),
        user_name varchar(255),
        primary key (user_id)
    )
Hibernate: 
    create table t_workflow (
        workflow_id bigint generated by default as identity,
        category varchar(255),
        create_time time,
        deploy_id varchar(255),
        workflow_name varchar(255),
        process_definition_id varchar(255),
        process_definition_key varchar(255),
        primary key (workflow_id)
    )
Hibernate: 
    alter table t_activity_discount_rate 
        add constraint FKA400C193698FCC4 
        foreign key (pizzashack_id) 
        references t_pizzashack
Hibernate: 
    alter table t_dept_staff 
        add constraint FKBC8AE11193A98D65 
        foreign key (dept_id) 
        references t_dept
Hibernate: 
    alter table t_dept_staff 
        add constraint FKBC8AE111A27DDA4A 
        foreign key (staff_id) 
        references t_staff
Hibernate: 
    alter table t_order 
        add constraint FKA0C0C3C3E11F4FCB 
        foreign key (cust_id) 
        references t_customer
Hibernate: 
    alter table t_order_pizzashack 
        add constraint FKE8ACB0883698FCC4 
        foreign key (pizzashack_id) 
        references t_pizzashack
Hibernate: 
    alter table t_order_pizzashack 
        add constraint FKE8ACB088BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_process 
        add constraint FK6B8B15F33E99148D 
        foreign key (operator_id) 
        references t_user
Hibernate: 
    alter table t_order_process 
        add constraint FK6B8B15F3BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_request_history 
        add constraint FK5A6B268BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_review_record 
        add constraint FKFB7A439CA6130105 
        foreign key (reviewer_id) 
        references t_staff
Hibernate: 
    alter table t_order_review_record 
        add constraint FKFB7A439CBBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_staff 
        add constraint FKA0F9FF552DC32C06 
        foreign key (user_id) 
        references t_user
2014-01-31 21:13:23,530 [main           ] INFO  SchemaExport                   - HHH000230: Schema export complete
2014-01-31 21:13:23,570 [main           ] INFO  ionConfigWebApplicationContext - Bean 'entityManagerFactory' of type [class org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:23,587 [main           ] INFO  ionConfigWebApplicationContext - Bean 'entityManagerFactory' of type [class com.sun.proxy.$Proxy56] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:23,621 [main           ] INFO  ionConfigWebApplicationContext - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerByCGLIB$$648802e7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:23,637 [main           ] INFO  ionConfigWebApplicationContext - Bean 'transactionAttributeSource' of type [class org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:23,644 [main           ] INFO  ionConfigWebApplicationContext - Bean 'transactionInterceptor' of type [class org.springframework.transaction.interceptor.TransactionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:23,650 [main           ] INFO  ionConfigWebApplicationContext - Bean 'org.springframework.transaction.config.internalTransactionAdvisor' of type [class org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:23,660 [main           ] INFO  ionConfigWebApplicationContext - Bean 'transactionManager' of type [class org.springframework.orm.jpa.JpaTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:23,661 [main           ] INFO  ionConfigWebApplicationContext - Bean 'camelJdbcIdempotentConfig' of type [class co.nz.pizzashack.config.CamelJdbcIdempotentConfig$$EnhancerByCGLIB$$4911ae6e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:23,677 [main           ] INFO  ionConfigWebApplicationContext - Bean 'sqlComponent' of type [class org.apache.camel.component.sql.SqlComponent] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:23,699 [main           ] INFO  ionConfigWebApplicationContext - Bean 'billingVariableTransformer' of type [class co.nz.pizzashack.integration.mapping.BillingVariableTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:23,874 [main           ] INFO  ionConfigWebApplicationContext - Bean 'billingFormatTransformer' of type [class co.nz.pizzashack.integration.mapping.BillingFormatTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:23,877 [main           ] INFO  ionConfigWebApplicationContext - Bean 'billingResponseMergeProcessor' of type [class co.nz.pizzashack.integration.mapping.BillingResponseMergeProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:23,880 [main           ] INFO  ionConfigWebApplicationContext - Bean 'sleepBean' of type [class co.nz.pizzashack.integration.utils.SleepBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:23,880 [main           ] INFO  ionConfigWebApplicationContext - Bean 'billingProcessRoute' of type [class co.nz.pizzashack.integration.route.BillingProcessRoute] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:23,904 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderJdbcMessageIdRepository' of type [class org.apache.camel.processor.idempotent.jdbc.JdbcMessageIdRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:23,913 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessFormatTransformer' of type [class co.nz.pizzashack.integration.mapping.OrderProcessFormatTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:23,996 [main           ] INFO  ionConfigWebApplicationContext - Bean 'org.activiti.engine.impl.rules.RulesDeployer#68d9814a' of type [class org.activiti.engine.impl.rules.RulesDeployer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:23,997 [main           ] INFO  ionConfigWebApplicationContext - Bean 'processEngineConfiguration' of type [class org.activiti.spring.SpringProcessEngineConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:24,001 [main           ] INFO  ionConfigWebApplicationContext - Bean 'processEngine' of type [class org.activiti.spring.ProcessEngineFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:24,741 [main           ] INFO  DbSqlSession                   - performing create on engine with resource org/activiti/db/create/activiti.h2.create.engine.sql
2014-01-31 21:13:24,759 [main           ] INFO  DbSqlSession                   - performing create on history with resource org/activiti/db/create/activiti.h2.create.history.sql
2014-01-31 21:13:24,765 [main           ] INFO  DbSqlSession                   - performing create on identity with resource org/activiti/db/create/activiti.h2.create.identity.sql
2014-01-31 21:13:24,768 [main           ] INFO  ProcessEngineImpl              - ProcessEngine default created
2014-01-31 21:13:24,769 [main           ] INFO  ionConfigWebApplicationContext - Bean 'processEngine' of type [class org.activiti.engine.impl.ProcessEngineImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:24,775 [main           ] INFO  ionConfigWebApplicationContext - Bean 'runtimeService' of type [class org.activiti.engine.impl.RuntimeServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:24,781 [main           ] INFO  ionConfigWebApplicationContext - Bean 'taskService' of type [class org.activiti.engine.impl.TaskServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:24,787 [main           ] INFO  ionConfigWebApplicationContext - Bean 'historyService' of type [class org.activiti.engine.impl.HistoryServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:24,793 [main           ] INFO  ionConfigWebApplicationContext - Bean 'repositoryService' of type [class org.activiti.engine.impl.RepositoryServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:24,798 [main           ] INFO  ionConfigWebApplicationContext - Bean 'managementService' of type [class org.activiti.engine.impl.ManagementServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:24,803 [main           ] INFO  ionConfigWebApplicationContext - Bean 'identityService' of type [class org.activiti.engine.impl.IdentityServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:24,804 [main           ] INFO  ionConfigWebApplicationContext - Bean 'activitiFacade' of type [class co.nz.pizzashack.wf.ActivitiFacade] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:24,809 [main           ] INFO  ionConfigWebApplicationContext - Bean 'userConverter' of type [class co.nz.pizzashack.data.converter.UserConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:24,827 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:24,828 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:24,832 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:24,844 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#1' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:24,903 [main           ] INFO  ionConfigWebApplicationContext - Bean 'workflowRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:24,936 [main           ] INFO  ionConfigWebApplicationContext - Bean 'workflowRepository' of type [class com.sun.proxy.$Proxy65] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:24,940 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#2' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:24,940 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#2' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:24,940 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#2' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:24,940 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#3' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:24,949 [main           ] INFO  ionConfigWebApplicationContext - Bean 'pizzashackRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:24,959 [main           ] INFO  ionConfigWebApplicationContext - Bean 'pizzashackRepository' of type [class com.sun.proxy.$Proxy68] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:24,961 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#4' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:24,961 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#4' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:24,961 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#4' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:24,962 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#5' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:24,970 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:24,975 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessRepository' of type [class com.sun.proxy.$Proxy69] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:24,977 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#6' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:24,977 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#6' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:24,977 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#6' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:24,978 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#7' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:24,986 [main           ] INFO  ionConfigWebApplicationContext - Bean 'userRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:24,990 [main           ] INFO  ionConfigWebApplicationContext - Bean 'userRepository' of type [class com.sun.proxy.$Proxy70] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:24,992 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#8' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:24,992 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#8' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:24,993 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#8' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:24,993 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#9' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,001 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,005 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderRepository' of type [class com.sun.proxy.$Proxy71] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,035 [main           ] INFO  ionConfigWebApplicationContext - Bean 'customerConverter' of type [class co.nz.pizzashack.data.converter.CustomerConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,041 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderDetailConverter' of type [class co.nz.pizzashack.data.converter.OrderDetailConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,042 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderConverter' of type [class co.nz.pizzashack.data.converter.OrderConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,042 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessConverter' of type [class co.nz.pizzashack.data.converter.OrderProcessConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,048 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#10' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,048 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#10' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,048 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#10' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,048 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#11' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,057 [main           ] INFO  ionConfigWebApplicationContext - Bean 'departmentRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,061 [main           ] INFO  ionConfigWebApplicationContext - Bean 'departmentRepository' of type [class com.sun.proxy.$Proxy72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,062 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessAccessor' of type [class co.nz.pizzashack.ds.OrderProcessAccessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,067 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderReviewRecordConverter' of type [class co.nz.pizzashack.data.converter.OrderReviewRecordConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,068 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#12' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,069 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#12' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,069 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#12' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,069 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#13' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,077 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderReviewRecordRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,081 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderReviewRecordRepository' of type [class com.sun.proxy.$Proxy73] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,083 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#14' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,084 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#14' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,084 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#14' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,084 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#15' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,092 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderPizzashackRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,096 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderPizzashackRepository' of type [class com.sun.proxy.$Proxy74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,098 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#16' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,098 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#16' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,098 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#16' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,098 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#17' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,106 [main           ] INFO  ionConfigWebApplicationContext - Bean 'customerRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,109 [main           ] INFO  ionConfigWebApplicationContext - Bean 'customerRepository' of type [class com.sun.proxy.$Proxy75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,110 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessDSImpl' of type [class co.nz.pizzashack.ds.OrderProcessDSImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,117 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#18' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,117 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#18' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,117 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#18' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,118 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#19' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,125 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderRequestHistoryRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,129 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderRequestHistoryRepository' of type [class com.sun.proxy.$Proxy78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,130 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderRequestProcessor' of type [class co.nz.pizzashack.integration.processor.OrderRequestProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,133 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderDuplicatedReqProcessor' of type [class co.nz.pizzashack.integration.processor.OrderDuplicatedReqProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,133 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessRoute' of type [class co.nz.pizzashack.integration.route.OrderProcessRoute] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,179 [main           ] INFO  ionConfigWebApplicationContext - Bean 'activeMQConnectionFactory' of type [class org.apache.activemq.ActiveMQConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,328 [main           ] INFO  ionConfigWebApplicationContext - Bean 'pooledConnectionFactory' of type [class org.apache.activemq.pool.PooledConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,348 [main           ] INFO  ionConfigWebApplicationContext - Bean 'jmsTransactionManager' of type [class org.springframework.jms.connection.JmsTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,360 [main           ] INFO  ionConfigWebApplicationContext - Bean 'jmsComponent' of type [class org.apache.camel.component.jms.JmsComponent] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,365 [main           ] INFO  ionConfigWebApplicationContext - Bean 'camelSpringConfig' of type [class co.nz.pizzashack.config.CamelSpringConfig$$EnhancerByCGLIB$$b299bc27] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:13:25,409 [main           ] INFO  DefaultListableBeanFactory     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@5bec0168: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,applicationConfiguration,webMvcContextConfiguration,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,viewConfiguration,logoutController,loginController,indexController,userController,adminIndexController,departmentController,orderController,staffController,billingProcessRespTransformer,billingProcessReqTransformer,orderProcessFormatTransformer,billingVariableTransformer,billingResponseMergeProcessor,billingFormatTransformer,orderDuplicatedReqProcessor,orderRequestProcessor,billingProcessRoute,orderProcessRoute,sleepBean,pizzashackAPIImpl,camelSpringConfig,camelJdbcIdempotentConfig,orderProcessDSImpl,customerDSImpl,workflowDSImpl,pizzashackDSImpl,userDSImpl,orderProcessAccessor,orderProcessQueryDSImpl,staffDSImpl,orderDSImpl,departmentDSImpl,initialDataConfig,pizzashackCaculator,emailExecutionListener,endExecutionListener,orderMainTransitionExecutionListener,toManualReviewExecutionListener,outOfBillingProcessExecutionListener,outOfCoreProcessExecutionListener,billingRespExecutionListener,customerConverter,orderProcessConverter,staffConverter,userConverter,departmentConverter,workflowConverter,orderReviewRecordConverter,orderConverter,activityDiscountRateConverter,orderDetailConverter,pizzashackDataInitialConfiguration,pizzashackItemBuilder,infrastructureContextConfiguration,activitiFacade,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0,org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0,activityDiscountRateRepository,orderPizzashackRepository,departmentRepository,staffDepartmentRepository,userRepository,customerRepository,orderRepository,pizzashackRepository,orderReviewRecordRepository,orderRequestHistoryRepository,workflowRepository,orderProcessRepository,staffRepository,viewResolver,messageSource,activeMQConnectionFactory,pooledConnectionFactory,jmsComponent,jmsTransactionManager,camelBeanPostProcessor,camelContext,custThreadPoolProfile,sqlComponent,orderJdbcMessageIdRepository,setupWorkflowData,setupData,org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration,org.springframework.transaction.config.internalTransactionAdvisor,transactionAttributeSource,transactionInterceptor,dataSource,transactionManager,entityManagerFactory,placeholderConfig,processEngineConfiguration,processEngine,repositoryService,runtimeService,taskService,historyService,managementService,identityService,org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration,viewControllerHandlerMapping,beanNameHandlerMapping,resourceHandlerMapping,defaultServletHandlerMapping,requestMappingHandlerAdapter,mvcConversionService,mvcValidator,httpRequestHandlerAdapter,simpleControllerHandlerAdapter,requestMappingHandlerMapping,mvcContentNegotiationManager,handlerExceptionResolver,sessionAttributeProcessor,multipartResolver,localeChangeInterceptor,localeResolver,simpleMappingExceptionResolver]; root of factory hierarchy
2014-01-31 21:13:25,846 [main           ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) is starting
2014-01-31 21:13:25,847 [main           ] INFO  ManagedManagementStrategy      - JMX is enabled
2014-01-31 21:13:25,935 [main           ] INFO  DefaultTypeConverter           - Loaded 194 type converters
Hibernate: 
    SELECT
        1 
    FROM
        T_ORDER_REQUEST_HISTORY 
    WHERE
        1 = 0
2014-01-31 21:13:26,269 [main           ] INFO  SpringCamelContext             - StreamCaching is not in use. If using streams then its recommended to enable stream caching. See more details at http://camel.apache.org/stream-caching.html
2014-01-31 21:13:26,737 [main           ] INFO  SpringCamelContext             - Route: activitiBillingProcess started and consuming from: Endpoint[activiti://orderBillingProcess:billingIntegration?copyVariablesToBodyAsMap=true]
2014-01-31 21:13:26,739 [main           ] INFO  SpringCamelContext             - Route: direct:billingIntegration started and consuming from: Endpoint[direct://billingIntegration]
2014-01-31 21:13:26,741 [main           ] INFO  SpringCamelContext             - Route: direct:receiveBillingQueue started and consuming from: Endpoint[direct://receiveBillingQueue]
2014-01-31 21:13:26,743 [main           ] INFO  SpringCamelContext             - Route: route1 started and consuming from: Endpoint[direct://doBillingIntegration]
2014-01-31 21:13:26,761 [main           ] INFO  SpringCamelContext             - Route: orderProcessRoute started and consuming from: Endpoint[jms://queue:pizzashackOrderInbound]
2014-01-31 21:13:26,763 [main           ] INFO  SpringCamelContext             - Route: direct:orderDuplicatedProcess started and consuming from: Endpoint[direct://orderDuplicatedProcess]
2014-01-31 21:13:26,766 [main           ] INFO  SpringCamelContext             - Route: direct:orderRegularProcess started and consuming from: Endpoint[direct://orderRegularProcess]
2014-01-31 21:13:26,777 [main           ] INFO  SpringCamelContext             - Total 7 routes, of which 7 is started.
2014-01-31 21:13:26,778 [main           ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) started in 0.932 seconds
2014-01-31 21:13:26,787 [main           ] INFO  WorkflowInitialDataSetup       - initialize start:{}
2014-01-31 21:13:26,796 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-01-31 21:13:26,796 [main           ] INFO  UserDSImpl                     - usernamedavid
2014-01-31 21:13:26,796 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-01-31 21:13:26,978 [main           ] INFO  UserDSImpl                     - userId:1 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-01-31 21:13:27,028 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@95cb8c8[userId=1,username=david,password=MTIzNDU2,createTime=Fri Jan 31 21:13:26 NZDT 2014]
2014-01-31 21:13:27,075 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-01-31 08:13:26)
2014-01-31 21:13:27,075 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-01-31 08:13:26)
2014-01-31 21:13:27,077 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-01-31 21:13:27,078 [main           ] INFO  UserDSImpl                     - usernamebrad
2014-01-31 21:13:27,078 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-01-31 21:13:27,080 [main           ] INFO  UserDSImpl                     - userId:2 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-01-31 21:13:27,082 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@1ded1a37[userId=2,username=brad,password=MTIzNDU2,createTime=Fri Jan 31 21:13:27 NZDT 2014]
2014-01-31 21:13:27,082 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-01-31 08:13:27)
2014-01-31 21:13:27,082 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-01-31 08:13:27)
2014-01-31 21:13:27,083 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-01-31 21:13:27,083 [main           ] INFO  UserDSImpl                     - usernamejohn
2014-01-31 21:13:27,083 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-01-31 21:13:27,086 [main           ] INFO  UserDSImpl                     - userId:3 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-01-31 21:13:27,087 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@32c85edd[userId=3,username=john,password=MTIzNDU2,createTime=Fri Jan 31 21:13:27 NZDT 2014]
2014-01-31 21:13:27,088 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-01-31 08:13:27)
2014-01-31 21:13:27,088 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-01-31 08:13:27)
2014-01-31 21:13:27,088 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-01-31 21:13:27,088 [main           ] INFO  UserDSImpl                     - usernamegeneral
2014-01-31 21:13:27,088 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-01-31 21:13:27,091 [main           ] INFO  UserDSImpl                     - userId:4 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-01-31 21:13:27,093 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@56c71ed2[userId=4,username=general,password=MTIzNDU2,createTime=Fri Jan 31 21:13:27 NZDT 2014]
2014-01-31 21:13:27,093 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:2014-01-31 08:13:27)
2014-01-31 21:13:27,093 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:2014-01-31 08:13:27)
2014-01-31 21:13:27,106 [main           ] INFO  DepartmentDSImpl               - createDepartment start:co.nz.pizzashack.data.dto.DepartmentDto(deptId:null, deptName:Order manager, createDate:null) 
Hibernate: 
    select
        department0_.dept_id as dept1_8_,
        department0_.create_date as create2_8_,
        department0_.dept_name as dept3_8_ 
    from
        t_dept department0_ 
    where
        department0_.dept_name=? limit ?
2014-01-31 21:13:27,112 [main           ] INFO  DepartmentConverter            - toModel start:{} co.nz.pizzashack.data.dto.DepartmentDto(deptId:null, deptName:Order manager, createDate:null)
2014-01-31 21:13:27,116 [main           ] INFO  DepartmentConverter            - toModel end:{} co.nz.pizzashack.data.model.DepartmentModel@4db2fe5e[deptId=<null>,deptName=Order manager,createDate=<null>,staffDepartments=<null>]
Hibernate: 
    insert 
    into
        t_dept
        (dept_id, create_date, dept_name) 
    values
        (null, ?, ?)
Hibernate: 
    insert 
    into
        ACT_ID_GROUP
        (ID_, REV_, NAME_, TYPE_)     
    values
        (       ?,       1,        ?,       ?     )
2014-01-31 21:13:27,123 [main           ] INFO  DepartmentConverter            - toDto start:{} co.nz.pizzashack.data.model.DepartmentModel@4db2fe5e[deptId=1,deptName=Order manager,createDate=Fri Jan 31 21:13:27 NZDT 2014,staffDepartments=<null>]
2014-01-31 21:13:27,125 [main           ] INFO  DepartmentConverter            - toDto end:{} co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-01-31)
2014-01-31 21:13:27,125 [main           ] INFO  DepartmentDSImpl               - createDepartment end:co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-01-31) 
2014-01-31 21:13:27,126 [main           ] INFO  WorkflowInitialDataSetup       - department:co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-01-31) 
2014-01-31 21:13:27,146 [main           ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:null, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-01-31 08:13:26)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-01-31 21:13:27,153 [main           ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:null, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-01-31 08:13:26))
2014-01-31 21:13:27,174 [main           ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@17c5d6cb[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@3d98b59e[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-01-31 21:13:27,221 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@17c5d6cb[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@3d98b59e[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=Fri Jan 31 21:13:27 NZDT 2014] 
2014-01-31 21:13:27,222 [main           ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = ?
Hibernate: 
    update
        ACT_GE_PROPERTY      
    SET
        REV_ = ?,
        VALUE_ = ?      
    where
        NAME_ = ?       
        and REV_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-01-31 21:13:27,241 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-01-31 21:13:27,248 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@17c5d6cb[staffId=1,individual=co.nz.pizzashack.data.model.IndividualModel@3d98b59e[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=Fri Jan 31 21:13:27 NZDT 2014]
2014-01-31 21:13:27,255 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:1, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:2014-01-31, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-01-31 21:13:27,256 [main           ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:1, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:2014-01-31, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-01-31 21:13:27,260 [main           ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:null, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-01-31 08:13:27)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-01-31 21:13:27,262 [main           ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:null, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-01-31 08:13:27))
2014-01-31 21:13:27,262 [main           ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@5494e09f[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@7a27121a[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-01-31 21:13:27,271 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@5494e09f[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@7a27121a[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=Fri Jan 31 21:13:27 NZDT 2014] 
2014-01-31 21:13:27,271 [main           ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-01-31 21:13:27,275 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-01-31 21:13:27,278 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@5494e09f[staffId=2,individual=co.nz.pizzashack.data.model.IndividualModel@7a27121a[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=Fri Jan 31 21:13:27 NZDT 2014]
2014-01-31 21:13:27,279 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:2, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:2014-01-31, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-01-31 21:13:27,279 [main           ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:2, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:2014-01-31, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-01-31 21:13:27,280 [main           ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:null, departments:null, role:manager, level:junior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-01-31 08:13:27)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-01-31 21:13:27,282 [main           ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:null, departments:null, role:manager, level:junior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-01-31 08:13:27))
2014-01-31 21:13:27,283 [main           ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@6e4b3674[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@be4323e[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-01-31 21:13:27,289 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@6e4b3674[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@be4323e[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=Fri Jan 31 21:13:27 NZDT 2014] 
2014-01-31 21:13:27,289 [main           ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-01-31 21:13:27,294 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-01-31 21:13:27,298 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@6e4b3674[staffId=3,individual=co.nz.pizzashack.data.model.IndividualModel@be4323e[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=Fri Jan 31 21:13:27 NZDT 2014]
2014-01-31 21:13:27,298 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:3, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:2014-01-31, departments:null, role:manager, level:null, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-01-31 21:13:27,299 [main           ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:3, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:2014-01-31, departments:null, role:manager, level:null, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-01-31 21:13:27,300 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-01-31 21:13:27,308 [main           ] INFO  BpmnDeployer                   - Processing resource bpmn/OrderBillingProcess.bpmn20.xml
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 117: Having multiple <family> in <alias> isn't supported and may not work as expected
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-01-31 21:13:31,312 [main           ] INFO  RulesDeployer                  - Processing resource bpmn/OrderBillingProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-01-31 21:13:31,322 [main           ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderBillingProcess:1:7]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-01-31 21:13:31,328 [main           ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@23869180[wfId=1,name=orderBillingProcess,deployId=4,processDefinitionKey=orderBillingProcess,processDefinitionId=orderBillingProcess:1:7,createTime=Fri Jan 31 21:13:27 NZDT 2014]
2014-01-31 21:13:31,340 [main           ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-01-31 08:13:27)
2014-01-31 21:13:31,340 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-01-31 08:13:27)
2014-01-31 21:13:31,340 [main           ] INFO  WorkflowInitialDataSetup       - deploy billing process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-01-31 08:13:27) 
2014-01-31 21:13:31,341 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-01-31 21:13:31,343 [main           ] INFO  BpmnDeployer                   - Processing resource bpmn/OrdercoreProcess.bpmn20.xml
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-01-31 21:13:31,457 [main           ] INFO  RulesDeployer                  - Processing resource bpmn/OrdercoreProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-01-31 21:13:31,462 [main           ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderCoreProcess:1:11]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-01-31 21:13:31,464 [main           ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@1de4308c[wfId=2,name=orderCoreProcess,deployId=8,processDefinitionKey=orderCoreProcess,processDefinitionId=orderCoreProcess:1:11,createTime=Fri Jan 31 21:13:31 NZDT 2014]
2014-01-31 21:13:31,464 [main           ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-01-31 08:13:31)
2014-01-31 21:13:31,464 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-01-31 08:13:31)
2014-01-31 21:13:31,465 [main           ] INFO  WorkflowInitialDataSetup       - deploy core process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-01-31 08:13:31) 
2014-01-31 21:13:31,465 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-01-31 21:13:31,467 [main           ] INFO  BpmnDeployer                   - Processing resource bpmn/OrderlocalProcess.bpmn20.xml
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-01-31 21:13:31,585 [main           ] INFO  RulesDeployer                  - Processing resource bpmn/OrderlocalProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-01-31 21:13:31,592 [main           ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderlocalProcess:1:15]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-01-31 21:13:31,594 [main           ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@75380893[wfId=3,name=orderlocalProcess,deployId=12,processDefinitionKey=orderlocalProcess,processDefinitionId=orderlocalProcess:1:15,createTime=Fri Jan 31 21:13:31 NZDT 2014]
2014-01-31 21:13:31,594 [main           ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-01-31 08:13:31)
2014-01-31 21:13:31,594 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-01-31 08:13:31)
2014-01-31 21:13:31,594 [main           ] INFO  WorkflowInitialDataSetup       - deploy local main process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-01-31 08:13:31) 
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
2014-01-31 21:13:31,708 [main           ] INFO  SimpleUrlHandlerMapping        - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2014-01-31 21:13:31,711 [main           ] INFO  SimpleUrlHandlerMapping        - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler]
2014-01-31 21:13:31,983 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/logout],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LogoutController.logout(javax.servlet.http.HttpSession)
2014-01-31 21:13:31,983 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/login],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LoginController.handleLogin(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws co.nz.pizzashack.AuthenticationException
2014-01-31 21:13:31,984 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/login],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LoginController.showLoginPage(org.springframework.ui.Model)
2014-01-31 21:13:31,984 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/index],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.IndexController.index(org.springframework.ui.Model,co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-01-31 21:13:31,985 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/{userId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-01-31 21:13:31,985 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-01-31 21:13:31,986 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/update/{userId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-01-31 21:13:31,986 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/{userId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.deleteUser(java.lang.Long) throws java.lang.Exception
2014-01-31 21:13:31,986 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/check/{userName}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.checkUser(java.lang.String) throws java.lang.Exception
2014-01-31 21:13:31,986 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/createUser],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public co.nz.pizzashack.data.dto.UserDto co.nz.pizzashack.controller.UserController.createUser(co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-01-31 21:13:31,986 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-01-31 21:13:31,986 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/search],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.search(co.nz.pizzashack.data.dto.UserDto,org.springframework.ui.Model) throws java.lang.Exception
2014-01-31 21:13:31,986 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.create(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-01-31 21:13:31,987 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.update(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-01-31 21:13:31,987 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/adminIndex],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.AdminIndexController.index(org.springframework.ui.Model,co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-01-31 21:13:31,988 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/{deptId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-01-31 21:13:31,989 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/selectdepts],methods=[GET],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.util.Set<co.nz.pizzashack.data.dto.DepartmentDto> co.nz.pizzashack.controller.DepartmentController.select() throws java.lang.Exception
2014-01-31 21:13:31,989 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-01-31 21:13:31,989 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/update/{deptId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-01-31 21:13:31,989 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-01-31 21:13:31,989 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/{deptId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.delete(java.lang.Long) throws java.lang.Exception
2014-01-31 21:13:31,989 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/search],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.search(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.ui.Model) throws java.lang.Exception
2014-01-31 21:13:31,989 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.create(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-01-31 21:13:31,990 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.update(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-01-31 21:13:31,990 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/claimReview/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.claimReviewTask(java.lang.String,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-01-31 21:13:31,990 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/review],methods=[POST],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.reviewOrder(co.nz.pizzashack.data.dto.OrderReviewRecordDto,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-01-31 21:13:31,990 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/{orderProcessId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.showOrderProcess(java.lang.Long,org.springframework.ui.Model,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-01-31 21:13:31,991 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/{staffId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-01-31 21:13:31,992 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-01-31 21:13:31,992 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/update/{staffId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-01-31 21:13:31,992 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-01-31 21:13:31,992 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/{staffId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.delete(java.lang.Long) throws java.lang.Exception
2014-01-31 21:13:31,992 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.create(co.nz.pizzashack.data.dto.StaffDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-01-31 21:13:31,992 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.update(co.nz.pizzashack.data.dto.StaffDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-01-31 21:13:32,020 [main           ] INFO  ContextLoader                  - Root WebApplicationContext: initialization completed in 11106 ms
2014-01-31 21:13:32.020:INFO:oejsh.ContextHandler:started o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
Jan 31, 2014 9:13:32 PM com.sun.jersey.api.core.PackagesResourceConfig init
INFO: Scanning for root resource and provider classes in the packages:
  co.nz.pizzashack.integration.api
Jan 31, 2014 9:13:32 PM com.sun.jersey.api.core.ScanningResourceConfig logClasses
INFO: Root resource classes found:
  class co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl
Jan 31, 2014 9:13:32 PM com.sun.jersey.api.core.ScanningResourceConfig init
INFO: No provider classes found.
Jan 31, 2014 9:13:32 PM com.sun.jersey.spi.spring.container.servlet.SpringServlet getContext
INFO: Using default applicationContext
Jan 31, 2014 9:13:32 PM com.sun.jersey.spi.spring.container.SpringComponentProviderFactory registerSpringBeans
INFO: Registering Spring bean, pizzashackAPIImpl, of type co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl as a root resource class
Jan 31, 2014 9:13:32 PM com.sun.jersey.server.impl.application.WebApplicationImpl _initiate
INFO: Initiating Jersey application, version 'Jersey: 1.17.1 02/28/2013 12:47 PM'
Jan 31, 2014 9:13:32 PM com.sun.jersey.spi.inject.Errors processErrorMessages
WARNING: The following warnings have been detected with resource and/or provider classes:
  WARNING: A HTTP GET method, public javax.ws.rs.core.Response co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl.getOrderProcessByOrderNo(java.lang.String), should not consume any entity.
Jan 31, 2014 9:13:32 PM com.sun.jersey.spi.spring.container.servlet.SpringServlet getContext
INFO: Using default applicationContext
Jan 31, 2014 9:13:32 PM com.sun.jersey.spi.spring.container.SpringComponentProviderFactory registerSpringBeans
INFO: Registering Spring bean, pizzashackAPIImpl, of type co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl as a root resource class
Jan 31, 2014 9:13:32 PM com.sun.jersey.server.impl.application.WebApplicationImpl _initiate
INFO: Initiating Jersey application, version 'Jersey: 1.17.1 02/28/2013 12:47 PM'
Jan 31, 2014 9:13:32 PM com.sun.jersey.spi.inject.Errors processErrorMessages
WARNING: The following warnings have been detected with resource and/or provider classes:
  WARNING: A HTTP GET method, public javax.ws.rs.core.Response co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl.getOrderProcessByOrderNo(java.lang.String), should not consume any entity.
2014-01-31 21:13:32.812:INFO:/:Initializing Spring FrameworkServlet 'dispatcher'
2014-01-31 21:13:32,812 [main           ] INFO  DispatcherServlet              - FrameworkServlet 'dispatcher': initialization started
2014-01-31 21:13:32,829 [main           ] INFO  DispatcherServlet              - FrameworkServlet 'dispatcher': initialization completed in 17 ms
2014-01-31 21:13:32.841:INFO:oejs.AbstractConnector:Started SelectChannelConnector@0.0.0.0:8111
[INFO] Started Jetty Server
[INFO] Starting scanner at interval of 10 seconds.
2014-01-31 21:13:52,914 [ckOrderInbound]] INFO  orderProcessRoute              - Received message 78858
Hibernate: 
    SELECT
        COUNT(*) 
    FROM
        T_ORDER_REQUEST_HISTORY 
    WHERE
        processor_name = ? 
        AND message_id = ?
Hibernate: 
    INSERT 
    INTO
        T_ORDER_REQUEST_HISTORY
        (processor_name, message_id, created_at) 
    VALUES
        (?, ?, ?)
2014-01-31 21:13:52,929 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlUnmarshal start:{} <order>
  <address>25 mavon downs</address>
  <order-list>
    <order-details>
      <pizza-name>Chicken Parmesan</pizza-name>
      <quantity>2</quantity>
    </order-details>
    <order-details>
      <pizza-name>Spicy Italian</pizza-name>
      <quantity>4</quantity>
    </order-details>
  </order-list>
  <customer>
    <name>david</name>
    <email>david.yuan124@gmail.com</email>
  </customer>
</order>
orderDetailsDto: co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:2, totalPrice:0)
orderDetailsDto: co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Spicy Italian, qty:4, totalPrice:0)
2014-01-31 21:13:52,995 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlUnmarshal end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:null, orderNo:null, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:david, customerEmail:david.yuan124@gmail.com, level:null), address:25 mavon downs, status:null, orderTime:null, deliverTime:null)
2014-01-31 21:13:52,995 [ckOrderInbound]] INFO  OrderRequestProcessor          - orderRequestProcessor start:{} 
2014-01-31 21:13:52,996 [ckOrderInbound]] INFO  OrderRequestProcessor          - order request:co.nz.pizzashack.data.dto.OrderDto(orderId:null, orderNo:null, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:david, customerEmail:david.yuan124@gmail.com, level:null), address:25 mavon downs, status:null, orderTime:null, deliverTime:null) 
2014-01-31 21:13:52,996 [ckOrderInbound]] INFO  OrderRequestProcessor          - messageId:78858 
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
2014-01-31 21:13:52,999 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@16784823[userId=4,username=general,password=MTIzNDU2,createTime=21:13:27]
2014-01-31 21:13:53,003 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)
2014-01-31 21:13:53,003 [ckOrderInbound]] INFO  OrderRequestProcessor          - default operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27) 
2014-01-31 21:13:53,004 [ckOrderInbound]] INFO  OrderProcessDSImpl             - startOrderProcess start:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.process_definition_key=? 
        and workflowmo0_.category=? limit ?
Hibernate: 
    insert 
    into
        t_order
        (order_id, cust_id, deliver_time, order_no, order_time, payment_remarks, payment_status, quantity, ship_address, status, total_price) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-01-31 21:13:53,020 [ckOrderInbound]] INFO  ActivitiFacade                 - startProcessInstance start:{}
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
2014-01-31 21:13:53,037 [ckOrderInbound]] INFO  ActivitiFacade                 - startProcessInstance end:{}
Hibernate: 
    insert 
    into
        t_order_process
        (order_process_id, active_process_definition_id, active_process_instance_id, complete_time, create_time, execution_id, main_process_definition_id, main_process_instance_id, operator_id, order_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2014-01-31 21:13:53,043 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@6ef094a9[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=Fri Jan 31 21:13:53 NZDT 2014,completeTime=<null>]
2014-01-31 21:13:53,058 [ckOrderInbound]] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@78b79ce7[orderId=1,orderNo=01190756-2a20-46b3-b42b-f80df012d422,quantity=<null>,status=0,paymentStatus=0,deliverTime=<null>,totalPrice=<null>,orderTime=Fri Jan 31 21:13:53 NZDT 2014]
2014-01-31 21:13:53,060 [ckOrderInbound]] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:01190756-2a20-46b3-b42b-f80df012d422, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-01-31 08:13:53, deliverTime:null)
2014-01-31 21:13:53,060 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@4b852ef4[userId=4,username=general,password=MTIzNDU2,createTime=21:13:27]
2014-01-31 21:13:53,061 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)
2014-01-31 21:13:53,067 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:01190756-2a20-46b3-b42b-f80df012d422, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-01-31 08:13:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-01-31 08:13:53, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27))
2014-01-31 21:13:53,068 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:01190756-2a20-46b3-b42b-f80df012d422, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-01-31 08:13:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-01-31 08:13:53, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)) 
2014-01-31 21:13:53,068 [ckOrderInbound]] INFO  OrderProcessAccessor           - process pending 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
2014-01-31 21:13:53,079 [ckOrderInbound]] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-01-31 21:13:53,079 [ckOrderInbound]] INFO  ActivitiFacade                 - executionId: 16, processDefinitionId: orderlocalProcess:1:15
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-01-31 21:13:53,107 [ckOrderInbound]] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-01-31 21:13:53,114 [ckOrderInbound]] INFO  OrderProcessAccessor           - assign operator[4] to task[Data entry]
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    insert 
    into
        ACT_RU_IDENTITYLINK
        (ID_, REV_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_, PROC_DEF_ID_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_IDENTITYLINK
        (ID_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_)     
    values
        (?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_TASK      
    SET
        REV_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        PRIORITY_ = ?,
        CREATE_TIME_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        DELEGATION_ = ?,
        EXECUTION_ID_ = ?,
        PROC_DEF_ID_ = ?,
        DESCRIPTION_ = ?,
        DUE_DATE_ = ?,
        SUSPENSION_STATE_ = ?      
    where
        ID_= ?       
        and REV_ = ?
2014-01-31 21:13:53,131 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:01190756-2a20-46b3-b42b-f80df012d422, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-01-31 08:13:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-01-31 08:13:53, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)) 
2014-01-31 21:13:53,132 [ckOrderInbound]] INFO  OrderProcessDSImpl             - startOrderProcess end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:01190756-2a20-46b3-b42b-f80df012d422, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-01-31 08:13:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-01-31 08:13:53, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27))
2014-01-31 21:13:53,134 [ckOrderInbound]] INFO  OrderRequestProcessor          - after start process:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:01190756-2a20-46b3-b42b-f80df012d422, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-01-31 08:13:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-01-31 08:13:53, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)) 
2014-01-31 21:13:53,134 [ckOrderInbound]] INFO  OrderProcessDSImpl             - dataEntry start:01190756-2a20-46b3-b42b-f80df012d422
2014-01-31 21:13:53,134 [ckOrderInbound]] INFO  OrderProcessDSImpl             - getOrderProcessByOrderNo start************************************
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-01-31 21:13:53,145 [ckOrderInbound]] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@6db54dff[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=21:13:53,completeTime=<null>] 
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_,
        customermo0_.address as address2_,
        customermo0_.credits as credits2_,
        customermo0_.customer_name as customer4_2_,
        customermo0_.email as email2_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.email=? limit ?
2014-01-31 21:13:53,150 [ckOrderInbound]] INFO  CustomerConverter              - toModel start:{} co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:david, customerEmail:david.yuan124@gmail.com, level:null)
2014-01-31 21:13:53,153 [ckOrderInbound]] INFO  CustomerConverter              - toModel end:{} co.nz.pizzashack.data.model.CustomerModel@b643058[custId=<null>,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
Hibernate: 
    insert 
    into
        t_customer
        (cust_id, address, credits, customer_name, email) 
    values
        (null, ?, ?, ?, ?)
2014-01-31 21:13:53,155 [ckOrderInbound]] INFO  OrderProcessDSImpl             - orderDetailsSet size:2 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
2014-01-31 21:13:53,163 [ckOrderInbound]] INFO  OrderProcessDSImpl             - added orderPizzashackModel:co.nz.pizzashack.data.model.OrderPizzashackModel@31e6bc7f[orderPizzashackId=<null>,totalPrice=0,qty=2] 
Hibernate: 
    insert 
    into
        t_order_pizzashack
        (order_pizza_id, order_id, pizzashack_id, qty, total_price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
2014-01-31 21:13:53,170 [ckOrderInbound]] INFO  OrderProcessDSImpl             - added orderPizzashackModel:co.nz.pizzashack.data.model.OrderPizzashackModel@3d103949[orderPizzashackId=<null>,totalPrice=0,qty=4] 
Hibernate: 
    insert 
    into
        t_order_pizzashack
        (order_pizza_id, order_id, pizzashack_id, qty, total_price) 
    values
        (null, ?, ?, ?, ?)
2014-01-31 21:13:53,171 [ckOrderInbound]] INFO  OrderProcessDSImpl             - after add detailsDto, size in model:2 
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        E.BUSINESS_KEY_ = ?                                                                                 
        and RES.PROC_DEF_ID_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                    
        and RES.ASSIGNEE_ = ?                                                                        
        and E.BUSINESS_KEY_ = ?
2014-01-31 21:13:53,176 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@6db54dff[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=21:13:53,completeTime=<null>]
2014-01-31 21:13:53,181 [ckOrderInbound]] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@5b6331cb[orderId=1,orderNo=01190756-2a20-46b3-b42b-f80df012d422,quantity=0,status=0,paymentStatus=0,deliverTime=<null>,totalPrice=0,orderTime=2014-01-31 21:13:53.012]
2014-01-31 21:13:53,184 [ckOrderInbound]] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@b643058[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-01-31 21:13:53,192 [ckOrderInbound]] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-01-31 21:13:53,196 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@31e6bc7f[orderPizzashackId=1,totalPrice=0,qty=2]
2014-01-31 21:13:53,203 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Chicken Parmesan, qty:2, totalPrice:0)
2014-01-31 21:13:53,203 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@3d103949[orderPizzashackId=2,totalPrice=0,qty=4]
2014-01-31 21:13:53,203 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Spicy Italian, qty:4, totalPrice:0)
2014-01-31 21:13:53,203 [ckOrderInbound]] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:01190756-2a20-46b3-b42b-f80df012d422, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-01-31 08:13:53, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-01-31 21:13:53,208 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@76b0c469[userId=4,username=general,password=MTIzNDU2,createTime=21:13:27]
2014-01-31 21:13:53,208 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)
2014-01-31 21:13:53,209 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:01190756-2a20-46b3-b42b-f80df012d422, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-01-31 08:13:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:13:53, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27))
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        PARENT_TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE 
    where
        TASK_ID_ =     ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
2014-01-31 21:13:53,235 [ckOrderInbound]] INFO  ainTransitionExecutionListener - orderMainUserTaskExecutionListener start:{} 
2014-01-31 21:13:53,235 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity id:orderCoreCallactivity
2014-01-31 21:13:53,236 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity name:Core process
2014-01-31 21:13:53,236 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity type:callActivity
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
start calculate: co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:01190756-2a20-46b3-b42b-f80df012d422, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-01-31 08:13:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:13:53, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27))
2014-01-31 21:13:53,444 [ckOrderInbound]] INFO  PizzashackCaculator            - caculate start:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:01190756-2a20-46b3-b42b-f80df012d422, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-01-31 08:13:53, deliverTime:null) 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-01-31 21:13:53,453 [ckOrderInbound]] INFO  PizzashackCaculator            - caculate end:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:01190756-2a20-46b3-b42b-f80df012d422, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-01-31 08:13:53, deliverTime:null) 
after calculation: co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:01190756-2a20-46b3-b42b-f80df012d422, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-01-31 08:13:53, deliverTime:null)
total qty: 6
after autoreview: 0
reviewTransBean: co.nz.pizzashack.data.dto.OrderReviewRecordDto(reviewRecordId:null, orderNo:01190756-2a20-46b3-b42b-f80df012d422, content:null, reviewResult:accept, createTime:2014-01-31 08:13:53, reviewer:null)
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RU_JOB J     
    where
        J.EXECUTION_ID_ = ?
Hibernate: 
    select
        *      
    from
        ACT_RU_EVENT_SUBSCR     
    where
        (
            EXECUTION_ID_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
2014-01-31 21:13:53,520 [ckOrderInbound]] INFO  OfCoreProcessExecutionListener - after core process, orderProcess:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:01190756-2a20-46b3-b42b-f80df012d422, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-01-31 08:13:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:13:53, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)) 
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-01-31 21:13:53,522 [ckOrderInbound]] INFO  ainTransitionExecutionListener - orderMainUserTaskExecutionListener start:{} 
2014-01-31 21:13:53,523 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity id:billingEntry
2014-01-31 21:13:53,523 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity name:Billing fill in
2014-01-31 21:13:53,523 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity type:userTask
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    update
        ACT_RU_EXECUTION 
    set
        REV_ = ?,
        BUSINESS_KEY_ = ?,
        PROC_DEF_ID_ = ?,
        ACT_ID_ = ?,
        IS_ACTIVE_ = ?,
        IS_CONCURRENT_ = ?,
        IS_SCOPE_ = ?,
        IS_EVENT_SCOPE_ = ?,
        PARENT_ID_ = ?,
        SUPER_EXEC_ = ?,
        SUSPENSION_STATE_ = ?,
        CACHED_ENT_STATE_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_TASK 
    where
        ID_ = ? 
        and REV_ = ?
2014-01-31 21:13:53,566 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:01190756-2a20-46b3-b42b-f80df012d422, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-01-31 08:13:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:13:53, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)) 
2014-01-31 21:13:53,566 [ckOrderInbound]] INFO  OrderProcessAccessor           - process pending 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-01-31 21:13:53,578 [ckOrderInbound]] INFO  OrderProcessAccessor           - get OrderProcessDto from flow:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:01190756-2a20-46b3-b42b-f80df012d422, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-01-31 08:13:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:13:53, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)) 
2014-01-31 21:13:53,578 [ckOrderInbound]] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-01-31 21:13:53,578 [ckOrderInbound]] INFO  ActivitiFacade                 - executionId: 16, processDefinitionId: orderlocalProcess:1:15
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-01-31 21:13:53,582 [ckOrderInbound]] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-01-31 21:13:53,585 [ckOrderInbound]] INFO  OrderProcessAccessor           - assign operator[4] to task[Billing fill in]
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_TASK      
    SET
        REV_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        PRIORITY_ = ?,
        CREATE_TIME_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        DELEGATION_ = ?,
        EXECUTION_ID_ = ?,
        PROC_DEF_ID_ = ?,
        DESCRIPTION_ = ?,
        DUE_DATE_ = ?,
        SUSPENSION_STATE_ = ?      
    where
        ID_= ?       
        and REV_ = ?
2014-01-31 21:13:53,594 [ckOrderInbound]] INFO  OrderProcessAccessor           - merge calculation result
2014-01-31 21:13:53,594 [ckOrderInbound]] INFO  OrderProcessAccessor           - total price:162.00 
2014-01-31 21:13:53,594 [ckOrderInbound]] INFO  OrderProcessAccessor           - qty:6 
2014-01-31 21:13:53,594 [ckOrderInbound]] INFO  OrderProcessAccessor           - orderDetailsSet.size():2
2014-01-31 21:13:53,595 [ckOrderInbound]] INFO  OrderProcessAccessor           - after merge orderProcessModel:co.nz.pizzashack.data.model.OrderProcessModel@6db54dff[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=21:13:53,completeTime=<null>] 
2014-01-31 21:13:53,596 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:01190756-2a20-46b3-b42b-f80df012d422, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-01-31 08:13:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:13:53, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)) 
2014-01-31 21:13:53,598 [ckOrderInbound]] INFO  OrderProcessDSImpl             - dataEntry end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:01190756-2a20-46b3-b42b-f80df012d422, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-01-31 08:13:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:13:53, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27))
Hibernate: 
    update
        t_order 
    set
        cust_id=?,
        deliver_time=?,
        order_no=?,
        order_time=?,
        payment_remarks=?,
        payment_status=?,
        quantity=?,
        ship_address=?,
        status=?,
        total_price=? 
    where
        order_id=?
Hibernate: 
    update
        t_order_pizzashack 
    set
        order_id=?,
        pizzashack_id=?,
        qty=?,
        total_price=? 
    where
        order_pizza_id=?
Hibernate: 
    update
        t_order_pizzashack 
    set
        order_id=?,
        pizzashack_id=?,
        qty=?,
        total_price=? 
    where
        order_pizza_id=?
2014-01-31 21:13:53,610 [ckOrderInbound]] INFO  OrderRequestProcessor          - after dataEntry:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:01190756-2a20-46b3-b42b-f80df012d422, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-01-31 08:13:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:13:53, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)) 
2014-01-31 21:13:53,610 [ckOrderInbound]] INFO  OrderConverter                 - toModel start:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:01190756-2a20-46b3-b42b-f80df012d422, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-01-31 08:13:53, deliverTime:null)
2014-01-31 21:13:53,611 [ckOrderInbound]] INFO  OrderConverter                 - toModel end:{} co.nz.pizzashack.data.model.OrderModel@7db5208b[orderId=<null>,orderNo=01190756-2a20-46b3-b42b-f80df012d422,quantity=6,status=<null>,paymentStatus=0,deliverTime=<null>,totalPrice=162.00,orderTime=<null>]
Hibernate: 
    select
        orderreque0_.message_id as message1_0_0_,
        orderreque0_.created_at as created2_0_0_,
        orderreque0_.order_id as order4_0_0_,
        orderreque0_.processor_name as processor3_0_0_ 
    from
        t_order_request_history orderreque0_ 
    where
        orderreque0_.message_id=?
2014-01-31 21:13:53,612 [ckOrderInbound]] INFO  OrderRequestProcessor          - orderRequestProcessor end:{} 
2014-01-31 21:13:53,614 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlMarshal start:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:01190756-2a20-46b3-b42b-f80df012d422, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-01-31 08:13:53, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:13:53, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27))
2014-01-31 21:13:53,622 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - pendingActivity:{} co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
2014-01-31 21:13:53,623 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - customerDto:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-01-31 21:13:53,639 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlMarshal end:{} <order-process>
  <process-id>1</process-id>
  <create-time>1970-01-01 09:13:53</create-time>
  <complete-time>null</complete-time>
  <operator>general</operator>
  <order>
    <address>25 mavon downs</address>
    <quantity>6</quantity>
    <total-price>162.00</total-price>
    <status>pendingOnBilling</status>
    <order-time>2014-01-31 08:13:53</order-time>
    <deliver-time>null</deliver-time>
    <order-list>
      <order-details>
        <pizza-name>Chicken Parmesan</pizza-name>
        <quantity>2</quantity>
        <total-price>50.00</total-price>
      </order-details>
      <order-details>
        <pizza-name>Spicy Italian</pizza-name>
        <quantity>4</quantity>
        <total-price>112.00</total-price>
      </order-details>
    </order-list>
  </order>
  <customer>
    <name>david</name>
    <email>david.yuan124@gmail.com</email>
  </customer>
  <pending-activity>
    <name>Billing fill in</name>
    <type>userTask</type>
    <assignee>4</assignee>
  </pending-activity>
</order-process>
2014-01-31 21:13:53,640 [ckOrderInbound]] INFO  output                         - Exchange[ExchangePattern: InOnly, BodyType: String, Body: <order-process>  <process-id>1</process-id>  <create-time>1970-01-01 09:13:53</create-time>  <complete-time>null</complete-time>  <operator>general</operator>  <order>    <address>25 mavon downs</address>    <quantity>6</quantity>    <total-price>162.00</total-price>    <status>pendingOnBilling</status>    <order-time>2014-01-31 08:13:53</order-time>    <deliver-time>null</deliver-time>    <order-list>      <order-details>        <pizza-name>Chicken Parmesan</pizza-name>        <quantity>2</quantity>        <total-price>50.00</total-price>      </order-details>      <order-details>        <pizza-name>Spicy Italian</pizza-name>        <quantity>4</quantity>        <total-price>112.00</total-price>      </order-details>    </order-list>  </order>  <customer>    <name>david</name>    <email>david.yuan124@gmail.com</email>  </customer>  <pending-activity>    <name>Billing fill in</name>    <type>userTask</type>    <assignee>4</assignee>  </pending-activity></order-process>]
2014-01-31 21:13:53,710 [ckOrderInbound]] INFO  orderProcessRoute              - Signalled to stop route
2014-01-31 21:13:54,087 [tp1325403823-40] INFO  PizzashackAPIImpl              - getPizzashacks start:{}
2014-01-31 21:13:54,088 [tp1325403823-40] INFO  PizzashackDSImpl               - getAllItems start:{} 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_
2014-01-31 21:13:54,119 [tp1325403823-40] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:1, pizzaName:Chicken Parmesan, description:Grilled chicken, fresh tomatoes, feta and mozzarella cheese, price:25.00, afterDiscount:null, icon:/images/1.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-01-31 21:13:54,122 [tp1325403823-40] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:2, pizzaName:Spicy Italian, description:Pepperoni and a double portion of spicy Italian sausage, price:28.00, afterDiscount:null, icon:/images/2.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-01-31 21:13:54,122 [tp1325403823-40] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:3, pizzaName:Garden Fresh, description:Slices onions and green peppers, gourmet mushrooms, black olives and ripe Roma tomatoes, price:35.00, afterDiscount:null, icon:/images/3.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-01-31 21:13:54,123 [tp1325403823-40] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:4, pizzaName:Tuscan Six Cheese, description:Six cheese blend of mozzarella, Parmesan, Romano, Asiago and Fontina, price:26.50, afterDiscount:null, icon:/images/4.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-01-31 21:13:54,124 [tp1325403823-40] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:5, pizzaName:Spinach Alfredo, description:Rich and creamy blend of spinach and garlic Parmesan with Alfredo saucePepperoni and a double portion of spicy Italian sausage, price:15.10, afterDiscount:null, icon:/images/5.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-01-31 21:13:54,124 [tp1325403823-40] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:6, pizzaName:BBQ Chicken Bacon, description:Grilled white chicken, hickory-smoked bacon and fresh sliced onions in barbeque sauce, price:45.00, afterDiscount:null, icon:/images/6.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-01-31 21:13:54,125 [tp1325403823-40] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:7, pizzaName:Hawaiian BBQ Chicken, description:Grilled white chicken, hickory-smoked bacon, barbeque sauce topped with sweet pine-apple, price:37.00, afterDiscount:null, icon:/images/7.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-01-31 21:13:54,125 [tp1325403823-40] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:8, pizzaName:Grilled Chicken Club, description:Grilled white chicken, hickory-smoked bacon and fresh sliced onions topped with Roma tomatoes, price:29.00, afterDiscount:null, icon:/images/8.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-01-31 21:13:54,126 [tp1325403823-40] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:9, pizzaName:Double Bacon 6Cheese, description:Hickory-smoked bacon, Julienne cut Canadian bacon, Parmesan, mozzarella, Romano, Asiago and and Fontina cheese, price:32.50, afterDiscount:null, icon:/images/9.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-01-31 21:13:54,126 [tp1325403823-40] INFO  PizzashackDSImpl               - pizzashack:co.nz.pizzashack.data.dto.PizzashackDto(pizzashackId:10, pizzaName:Chilly Chicken Cordon Bleu, description:Spinash Alfredo sauce topped with grilled chicken, ham, onions and mozzarella, price:28.00, afterDiscount:null, icon:/images/10.png) 
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-01-31 21:13:54,127 [tp1325403823-40] INFO  PizzashackDSImpl               - getAllItems end:{} 
2014-01-31 21:13:54,127 [tp1325403823-40] INFO  PizzashackAPIImpl              - getPizzashacks end:{}
2014-01-31 21:15:47,263 [ckOrderInbound]] INFO  orderProcessRoute              - Received message 45170
Hibernate: 
    SELECT
        COUNT(*) 
    FROM
        T_ORDER_REQUEST_HISTORY 
    WHERE
        processor_name = ? 
        AND message_id = ?
Hibernate: 
    INSERT 
    INTO
        T_ORDER_REQUEST_HISTORY
        (processor_name, message_id, created_at) 
    VALUES
        (?, ?, ?)
2014-01-31 21:15:47,266 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlUnmarshal start:{} <order>
  <address>25 mavon downs</address>
  <order-list>
    <order-details>
      <pizza-name>Chicken Parmesan</pizza-name>
      <quantity>2</quantity>
    </order-details>
    <order-details>
      <pizza-name>Spicy Italian</pizza-name>
      <quantity>4</quantity>
    </order-details>
  </order-list>
  <customer>
    <name>david</name>
    <email>david.yuan124@gmail.com</email>
  </customer>
</order>
orderDetailsDto: co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:2, totalPrice:0)
orderDetailsDto: co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Spicy Italian, qty:4, totalPrice:0)
2014-01-31 21:15:47,270 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlUnmarshal end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:null, orderNo:null, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:david, customerEmail:david.yuan124@gmail.com, level:null), address:25 mavon downs, status:null, orderTime:null, deliverTime:null)
2014-01-31 21:15:47,270 [ckOrderInbound]] INFO  OrderRequestProcessor          - orderRequestProcessor start:{} 
2014-01-31 21:15:47,270 [ckOrderInbound]] INFO  OrderRequestProcessor          - order request:co.nz.pizzashack.data.dto.OrderDto(orderId:null, orderNo:null, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:david, customerEmail:david.yuan124@gmail.com, level:null), address:25 mavon downs, status:null, orderTime:null, deliverTime:null) 
2014-01-31 21:15:47,270 [ckOrderInbound]] INFO  OrderRequestProcessor          - messageId:45170 
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
2014-01-31 21:15:47,272 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@7b4f62b7[userId=4,username=general,password=MTIzNDU2,createTime=21:13:27]
2014-01-31 21:15:47,272 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)
2014-01-31 21:15:47,272 [ckOrderInbound]] INFO  OrderRequestProcessor          - default operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27) 
2014-01-31 21:15:47,273 [ckOrderInbound]] INFO  OrderProcessDSImpl             - startOrderProcess start:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.process_definition_key=? 
        and workflowmo0_.category=? limit ?
Hibernate: 
    insert 
    into
        t_order
        (order_id, cust_id, deliver_time, order_no, order_time, payment_remarks, payment_status, quantity, ship_address, status, total_price) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-01-31 21:15:47,275 [ckOrderInbound]] INFO  ActivitiFacade                 - startProcessInstance start:{}
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
2014-01-31 21:15:47,282 [ckOrderInbound]] INFO  ActivitiFacade                 - startProcessInstance end:{}
Hibernate: 
    insert 
    into
        t_order_process
        (order_process_id, active_process_definition_id, active_process_instance_id, complete_time, create_time, execution_id, main_process_definition_id, main_process_instance_id, operator_id, order_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2014-01-31 21:15:47,283 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@7796f7aa[orderProcessId=2,executionId=67,mainProcessInstanceId=67,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=67,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=Fri Jan 31 21:15:47 NZDT 2014,completeTime=<null>]
2014-01-31 21:15:47,284 [ckOrderInbound]] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@2e8a36d5[orderId=2,orderNo=b6105d00-b256-48f0-82b7-8fd85c5ac528,quantity=<null>,status=0,paymentStatus=0,deliverTime=<null>,totalPrice=<null>,orderTime=Fri Jan 31 21:15:47 NZDT 2014]
2014-01-31 21:15:47,285 [ckOrderInbound]] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b6105d00-b256-48f0-82b7-8fd85c5ac528, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-01-31 08:15:47, deliverTime:null)
2014-01-31 21:15:47,285 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@6f7e430e[userId=4,username=general,password=MTIzNDU2,createTime=21:13:27]
2014-01-31 21:15:47,285 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)
2014-01-31 21:15:47,286 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b6105d00-b256-48f0-82b7-8fd85c5ac528, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-01-31 08:15:47, deliverTime:null), mainProcessInstanceId:67, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:67, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-01-31 08:15:47, completeTime:null, executionId:67, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27))
2014-01-31 21:15:47,286 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b6105d00-b256-48f0-82b7-8fd85c5ac528, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-01-31 08:15:47, deliverTime:null), mainProcessInstanceId:67, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:67, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-01-31 08:15:47, completeTime:null, executionId:67, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)) 
2014-01-31 21:15:47,286 [ckOrderInbound]] INFO  OrderProcessAccessor           - process pending 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
2014-01-31 21:15:47,289 [ckOrderInbound]] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-01-31 21:15:47,289 [ckOrderInbound]] INFO  ActivitiFacade                 - executionId: 67, processDefinitionId: orderlocalProcess:1:15
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-01-31 21:15:47,292 [ckOrderInbound]] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-01-31 21:15:47,299 [ckOrderInbound]] INFO  OrderProcessAccessor           - assign operator[4] to task[Data entry]
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    insert 
    into
        ACT_RU_IDENTITYLINK
        (ID_, REV_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_, PROC_DEF_ID_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_IDENTITYLINK
        (ID_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_)     
    values
        (?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_TASK      
    SET
        REV_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        PRIORITY_ = ?,
        CREATE_TIME_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        DELEGATION_ = ?,
        EXECUTION_ID_ = ?,
        PROC_DEF_ID_ = ?,
        DESCRIPTION_ = ?,
        DUE_DATE_ = ?,
        SUSPENSION_STATE_ = ?      
    where
        ID_= ?       
        and REV_ = ?
2014-01-31 21:15:47,312 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b6105d00-b256-48f0-82b7-8fd85c5ac528, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-01-31 08:15:47, deliverTime:null), mainProcessInstanceId:67, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:67, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-01-31 08:15:47, completeTime:null, executionId:67, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)) 
2014-01-31 21:15:47,313 [ckOrderInbound]] INFO  OrderProcessDSImpl             - startOrderProcess end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b6105d00-b256-48f0-82b7-8fd85c5ac528, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-01-31 08:15:47, deliverTime:null), mainProcessInstanceId:67, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:67, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-01-31 08:15:47, completeTime:null, executionId:67, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27))
2014-01-31 21:15:47,314 [ckOrderInbound]] INFO  OrderRequestProcessor          - after start process:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b6105d00-b256-48f0-82b7-8fd85c5ac528, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-01-31 08:15:47, deliverTime:null), mainProcessInstanceId:67, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:67, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-01-31 08:15:47, completeTime:null, executionId:67, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)) 
2014-01-31 21:15:47,314 [ckOrderInbound]] INFO  OrderProcessDSImpl             - dataEntry start:b6105d00-b256-48f0-82b7-8fd85c5ac528
2014-01-31 21:15:47,314 [ckOrderInbound]] INFO  OrderProcessDSImpl             - getOrderProcessByOrderNo start************************************
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-01-31 21:15:47,317 [ckOrderInbound]] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@40c9ee6b[orderProcessId=2,executionId=67,mainProcessInstanceId=67,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=67,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=21:15:47,completeTime=<null>] 
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_,
        customermo0_.address as address2_,
        customermo0_.credits as credits2_,
        customermo0_.customer_name as customer4_2_,
        customermo0_.email as email2_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.email=? limit ?
2014-01-31 21:15:47,318 [ckOrderInbound]] INFO  OrderProcessDSImpl             - orderDetailsSet size:2 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
2014-01-31 21:15:47,319 [ckOrderInbound]] INFO  OrderProcessDSImpl             - added orderPizzashackModel:co.nz.pizzashack.data.model.OrderPizzashackModel@4d6b0a14[orderPizzashackId=<null>,totalPrice=0,qty=2] 
Hibernate: 
    insert 
    into
        t_order_pizzashack
        (order_pizza_id, order_id, pizzashack_id, qty, total_price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
2014-01-31 21:15:47,321 [ckOrderInbound]] INFO  OrderProcessDSImpl             - added orderPizzashackModel:co.nz.pizzashack.data.model.OrderPizzashackModel@1f889d70[orderPizzashackId=<null>,totalPrice=0,qty=4] 
Hibernate: 
    insert 
    into
        t_order_pizzashack
        (order_pizza_id, order_id, pizzashack_id, qty, total_price) 
    values
        (null, ?, ?, ?, ?)
2014-01-31 21:15:47,322 [ckOrderInbound]] INFO  OrderProcessDSImpl             - after add detailsDto, size in model:2 
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        E.BUSINESS_KEY_ = ?                                                                                 
        and RES.PROC_DEF_ID_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                    
        and RES.ASSIGNEE_ = ?                                                                        
        and E.BUSINESS_KEY_ = ?
2014-01-31 21:15:47,326 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@40c9ee6b[orderProcessId=2,executionId=67,mainProcessInstanceId=67,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=67,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=21:15:47,completeTime=<null>]
2014-01-31 21:15:47,327 [ckOrderInbound]] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@59c3cba5[orderId=2,orderNo=b6105d00-b256-48f0-82b7-8fd85c5ac528,quantity=0,status=0,paymentStatus=0,deliverTime=<null>,totalPrice=0,orderTime=2014-01-31 21:15:47.274]
2014-01-31 21:15:47,327 [ckOrderInbound]] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@44c5ae97[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-01-31 21:15:47,327 [ckOrderInbound]] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-01-31 21:15:47,328 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@4d6b0a14[orderPizzashackId=3,totalPrice=0,qty=2]
2014-01-31 21:15:47,328 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:0)
2014-01-31 21:15:47,328 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@1f889d70[orderPizzashackId=4,totalPrice=0,qty=4]
2014-01-31 21:15:47,328 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:0)
2014-01-31 21:15:47,328 [ckOrderInbound]] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b6105d00-b256-48f0-82b7-8fd85c5ac528, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-01-31 08:15:47, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-01-31 21:15:47,330 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@5e0a8359[userId=4,username=general,password=MTIzNDU2,createTime=21:13:27]
2014-01-31 21:15:47,330 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)
2014-01-31 21:15:47,331 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b6105d00-b256-48f0-82b7-8fd85c5ac528, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-01-31 08:15:47, deliverTime:null), mainProcessInstanceId:67, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:67, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:15:47, completeTime:null, executionId:67, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27))
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        PARENT_TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE 
    where
        TASK_ID_ =     ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
2014-01-31 21:15:47,340 [ckOrderInbound]] INFO  ainTransitionExecutionListener - orderMainUserTaskExecutionListener start:{} 
2014-01-31 21:15:47,340 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity id:orderCoreCallactivity
2014-01-31 21:15:47,340 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity name:Core process
2014-01-31 21:15:47,340 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity type:callActivity
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
start calculate: co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b6105d00-b256-48f0-82b7-8fd85c5ac528, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-01-31 08:15:47, deliverTime:null), mainProcessInstanceId:67, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:67, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:15:47, completeTime:null, executionId:67, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27))
2014-01-31 21:15:47,355 [ckOrderInbound]] INFO  PizzashackCaculator            - caculate start:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b6105d00-b256-48f0-82b7-8fd85c5ac528, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-01-31 08:15:47, deliverTime:null) 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-01-31 21:15:47,359 [ckOrderInbound]] INFO  PizzashackCaculator            - caculate end:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b6105d00-b256-48f0-82b7-8fd85c5ac528, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-01-31 08:15:47, deliverTime:null) 
after calculation: co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b6105d00-b256-48f0-82b7-8fd85c5ac528, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-01-31 08:15:47, deliverTime:null)
total qty: 6
after autoreview: 0
reviewTransBean: co.nz.pizzashack.data.dto.OrderReviewRecordDto(reviewRecordId:null, orderNo:b6105d00-b256-48f0-82b7-8fd85c5ac528, content:null, reviewResult:accept, createTime:2014-01-31 08:15:47, reviewer:null)
Hibernate: 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = ?
Hibernate: 
    update
        ACT_GE_PROPERTY      
    SET
        REV_ = ?,
        VALUE_ = ?      
    where
        NAME_ = ?       
        and REV_ = ?
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RU_JOB J     
    where
        J.EXECUTION_ID_ = ?
Hibernate: 
    select
        *      
    from
        ACT_RU_EVENT_SUBSCR     
    where
        (
            EXECUTION_ID_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
2014-01-31 21:15:47,397 [ckOrderInbound]] INFO  OfCoreProcessExecutionListener - after core process, orderProcess:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b6105d00-b256-48f0-82b7-8fd85c5ac528, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-01-31 08:15:47, deliverTime:null), mainProcessInstanceId:67, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:67, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:15:47, completeTime:null, executionId:67, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)) 
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-01-31 21:15:47,399 [ckOrderInbound]] INFO  ainTransitionExecutionListener - orderMainUserTaskExecutionListener start:{} 
2014-01-31 21:15:47,399 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity id:billingEntry
2014-01-31 21:15:47,399 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity name:Billing fill in
2014-01-31 21:15:47,399 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity type:userTask
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    update
        ACT_RU_EXECUTION 
    set
        REV_ = ?,
        BUSINESS_KEY_ = ?,
        PROC_DEF_ID_ = ?,
        ACT_ID_ = ?,
        IS_ACTIVE_ = ?,
        IS_CONCURRENT_ = ?,
        IS_SCOPE_ = ?,
        IS_EVENT_SCOPE_ = ?,
        PARENT_ID_ = ?,
        SUPER_EXEC_ = ?,
        SUSPENSION_STATE_ = ?,
        CACHED_ENT_STATE_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_TASK 
    where
        ID_ = ? 
        and REV_ = ?
2014-01-31 21:15:47,434 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b6105d00-b256-48f0-82b7-8fd85c5ac528, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-01-31 08:15:47, deliverTime:null), mainProcessInstanceId:67, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:67, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:15:47, completeTime:null, executionId:67, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)) 
2014-01-31 21:15:47,434 [ckOrderInbound]] INFO  OrderProcessAccessor           - process pending 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-01-31 21:15:47,439 [ckOrderInbound]] INFO  OrderProcessAccessor           - get OrderProcessDto from flow:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b6105d00-b256-48f0-82b7-8fd85c5ac528, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-01-31 08:15:47, deliverTime:null), mainProcessInstanceId:67, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:67, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:15:47, completeTime:null, executionId:67, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)) 
2014-01-31 21:15:47,440 [ckOrderInbound]] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-01-31 21:15:47,440 [ckOrderInbound]] INFO  ActivitiFacade                 - executionId: 67, processDefinitionId: orderlocalProcess:1:15
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-01-31 21:15:47,446 [ckOrderInbound]] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-01-31 21:15:47,449 [ckOrderInbound]] INFO  OrderProcessAccessor           - assign operator[4] to task[Billing fill in]
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_TASK      
    SET
        REV_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        PRIORITY_ = ?,
        CREATE_TIME_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        DELEGATION_ = ?,
        EXECUTION_ID_ = ?,
        PROC_DEF_ID_ = ?,
        DESCRIPTION_ = ?,
        DUE_DATE_ = ?,
        SUSPENSION_STATE_ = ?      
    where
        ID_= ?       
        and REV_ = ?
2014-01-31 21:15:47,455 [ckOrderInbound]] INFO  OrderProcessAccessor           - merge calculation result
2014-01-31 21:15:47,456 [ckOrderInbound]] INFO  OrderProcessAccessor           - total price:162.00 
2014-01-31 21:15:47,456 [ckOrderInbound]] INFO  OrderProcessAccessor           - qty:6 
2014-01-31 21:15:47,456 [ckOrderInbound]] INFO  OrderProcessAccessor           - orderDetailsSet.size():2
2014-01-31 21:15:47,456 [ckOrderInbound]] INFO  OrderProcessAccessor           - after merge orderProcessModel:co.nz.pizzashack.data.model.OrderProcessModel@40c9ee6b[orderProcessId=2,executionId=67,mainProcessInstanceId=67,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=67,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=21:15:47,completeTime=<null>] 
2014-01-31 21:15:47,457 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b6105d00-b256-48f0-82b7-8fd85c5ac528, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-01-31 08:15:47, deliverTime:null), mainProcessInstanceId:67, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:67, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:15:47, completeTime:null, executionId:67, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)) 
2014-01-31 21:15:47,459 [ckOrderInbound]] INFO  OrderProcessDSImpl             - dataEntry end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b6105d00-b256-48f0-82b7-8fd85c5ac528, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-01-31 08:15:47, deliverTime:null), mainProcessInstanceId:67, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:67, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:15:47, completeTime:null, executionId:67, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27))
Hibernate: 
    update
        t_order 
    set
        cust_id=?,
        deliver_time=?,
        order_no=?,
        order_time=?,
        payment_remarks=?,
        payment_status=?,
        quantity=?,
        ship_address=?,
        status=?,
        total_price=? 
    where
        order_id=?
Hibernate: 
    update
        t_order_pizzashack 
    set
        order_id=?,
        pizzashack_id=?,
        qty=?,
        total_price=? 
    where
        order_pizza_id=?
Hibernate: 
    update
        t_order_pizzashack 
    set
        order_id=?,
        pizzashack_id=?,
        qty=?,
        total_price=? 
    where
        order_pizza_id=?
2014-01-31 21:15:47,462 [ckOrderInbound]] INFO  OrderRequestProcessor          - after dataEntry:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b6105d00-b256-48f0-82b7-8fd85c5ac528, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-01-31 08:15:47, deliverTime:null), mainProcessInstanceId:67, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:67, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:15:47, completeTime:null, executionId:67, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)) 
2014-01-31 21:15:47,462 [ckOrderInbound]] INFO  OrderConverter                 - toModel start:{} co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b6105d00-b256-48f0-82b7-8fd85c5ac528, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-01-31 08:15:47, deliverTime:null)
2014-01-31 21:15:47,462 [ckOrderInbound]] INFO  OrderConverter                 - toModel end:{} co.nz.pizzashack.data.model.OrderModel@20358e0c[orderId=<null>,orderNo=b6105d00-b256-48f0-82b7-8fd85c5ac528,quantity=6,status=<null>,paymentStatus=0,deliverTime=<null>,totalPrice=162.00,orderTime=<null>]
Hibernate: 
    select
        orderreque0_.message_id as message1_0_0_,
        orderreque0_.created_at as created2_0_0_,
        orderreque0_.order_id as order4_0_0_,
        orderreque0_.processor_name as processor3_0_0_ 
    from
        t_order_request_history orderreque0_ 
    where
        orderreque0_.message_id=?
2014-01-31 21:15:47,463 [ckOrderInbound]] INFO  OrderRequestProcessor          - orderRequestProcessor end:{} 
2014-01-31 21:15:47,465 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlMarshal start:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:2, order:co.nz.pizzashack.data.dto.OrderDto(orderId:2, orderNo:b6105d00-b256-48f0-82b7-8fd85c5ac528, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:3, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:4, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-01-31 08:15:47, deliverTime:null), mainProcessInstanceId:67, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:67, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:15:47, completeTime:null, executionId:67, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27))
2014-01-31 21:15:47,466 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - pendingActivity:{} co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
2014-01-31 21:15:47,466 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - customerDto:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-01-31 21:15:47,469 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlMarshal end:{} <order-process>
  <process-id>2</process-id>
  <create-time>1970-01-01 09:15:47</create-time>
  <complete-time>null</complete-time>
  <operator>general</operator>
  <order>
    <address>25 mavon downs</address>
    <quantity>6</quantity>
    <total-price>162.00</total-price>
    <status>pendingOnBilling</status>
    <order-time>2014-01-31 08:15:47</order-time>
    <deliver-time>null</deliver-time>
    <order-list>
      <order-details>
        <pizza-name>Chicken Parmesan</pizza-name>
        <quantity>2</quantity>
        <total-price>50.00</total-price>
      </order-details>
      <order-details>
        <pizza-name>Spicy Italian</pizza-name>
        <quantity>4</quantity>
        <total-price>112.00</total-price>
      </order-details>
    </order-list>
  </order>
  <customer>
    <name>david</name>
    <email>david.yuan124@gmail.com</email>
  </customer>
  <pending-activity>
    <name>Billing fill in</name>
    <type>userTask</type>
    <assignee>4</assignee>
  </pending-activity>
</order-process>
2014-01-31 21:15:47,469 [ckOrderInbound]] INFO  output                         - Exchange[ExchangePattern: InOnly, BodyType: String, Body: <order-process>  <process-id>2</process-id>  <create-time>1970-01-01 09:15:47</create-time>  <complete-time>null</complete-time>  <operator>general</operator>  <order>    <address>25 mavon downs</address>    <quantity>6</quantity>    <total-price>162.00</total-price>    <status>pendingOnBilling</status>    <order-time>2014-01-31 08:15:47</order-time>    <deliver-time>null</deliver-time>    <order-list>      <order-details>        <pizza-name>Chicken Parmesan</pizza-name>        <quantity>2</quantity>        <total-price>50.00</total-price>      </order-details>      <order-details>        <pizza-name>Spicy Italian</pizza-name>        <quantity>4</quantity>        <total-price>112.00</total-price>      </order-details>    </order-list>  </order>  <customer>    <name>david</name>    <email>david.yuan124@gmail.com</email>  </customer>  <pending-activity>    <name>Billing fill in</name>    <type>userTask</type>    <assignee>4</assignee>  </pending-activity></order-process>]
2014-01-31 21:15:47,543 [ckOrderInbound]] INFO  orderProcessRoute              - Signalled to stop route
2014-01-31 21:17:23,851 [ckOrderInbound]] INFO  orderProcessRoute              - Received message 38984
Hibernate: 
    SELECT
        COUNT(*) 
    FROM
        T_ORDER_REQUEST_HISTORY 
    WHERE
        processor_name = ? 
        AND message_id = ?
Hibernate: 
    INSERT 
    INTO
        T_ORDER_REQUEST_HISTORY
        (processor_name, message_id, created_at) 
    VALUES
        (?, ?, ?)
2014-01-31 21:17:23,853 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlUnmarshal start:{} <order>
  <address>25 mavon downs</address>
  <order-list>
    <order-details>
      <pizza-name>Chicken Parmesan</pizza-name>
      <quantity>2</quantity>
    </order-details>
    <order-details>
      <pizza-name>Spicy Italian</pizza-name>
      <quantity>4</quantity>
    </order-details>
  </order-list>
  <customer>
    <name>david</name>
    <email>david.yuan124@gmail.com</email>
  </customer>
</order>
orderDetailsDto: co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:2, totalPrice:0)
orderDetailsDto: co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Spicy Italian, qty:4, totalPrice:0)
2014-01-31 21:17:23,856 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlUnmarshal end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:null, orderNo:null, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:david, customerEmail:david.yuan124@gmail.com, level:null), address:25 mavon downs, status:null, orderTime:null, deliverTime:null)
2014-01-31 21:17:23,856 [ckOrderInbound]] INFO  OrderRequestProcessor          - orderRequestProcessor start:{} 
2014-01-31 21:17:23,856 [ckOrderInbound]] INFO  OrderRequestProcessor          - order request:co.nz.pizzashack.data.dto.OrderDto(orderId:null, orderNo:null, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:david, customerEmail:david.yuan124@gmail.com, level:null), address:25 mavon downs, status:null, orderTime:null, deliverTime:null) 
2014-01-31 21:17:23,856 [ckOrderInbound]] INFO  OrderRequestProcessor          - messageId:38984 
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
2014-01-31 21:17:23,857 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@276d080a[userId=4,username=general,password=MTIzNDU2,createTime=21:13:27]
2014-01-31 21:17:23,858 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)
2014-01-31 21:17:23,858 [ckOrderInbound]] INFO  OrderRequestProcessor          - default operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27) 
2014-01-31 21:17:23,858 [ckOrderInbound]] INFO  OrderProcessDSImpl             - startOrderProcess start:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.process_definition_key=? 
        and workflowmo0_.category=? limit ?
Hibernate: 
    insert 
    into
        t_order
        (order_id, cust_id, deliver_time, order_no, order_time, payment_remarks, payment_status, quantity, ship_address, status, total_price) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-01-31 21:17:23,860 [ckOrderInbound]] INFO  ActivitiFacade                 - startProcessInstance start:{}
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
2014-01-31 21:17:23,866 [ckOrderInbound]] INFO  ActivitiFacade                 - startProcessInstance end:{}
Hibernate: 
    insert 
    into
        t_order_process
        (order_process_id, active_process_definition_id, active_process_instance_id, complete_time, create_time, execution_id, main_process_definition_id, main_process_instance_id, operator_id, order_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2014-01-31 21:17:23,867 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@1d11ea8d[orderProcessId=3,executionId=118,mainProcessInstanceId=118,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=118,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=Fri Jan 31 21:17:23 NZDT 2014,completeTime=<null>]
2014-01-31 21:17:23,867 [ckOrderInbound]] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@6a960f0e[orderId=3,orderNo=48319769-1f5b-4d12-b2e8-71c6ff1dac71,quantity=<null>,status=0,paymentStatus=0,deliverTime=<null>,totalPrice=<null>,orderTime=Fri Jan 31 21:17:23 NZDT 2014]
2014-01-31 21:17:23,868 [ckOrderInbound]] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:3, orderNo:48319769-1f5b-4d12-b2e8-71c6ff1dac71, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-01-31 08:17:23, deliverTime:null)
2014-01-31 21:17:23,869 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@73c6fc98[userId=4,username=general,password=MTIzNDU2,createTime=21:13:27]
2014-01-31 21:17:23,869 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)
2014-01-31 21:17:23,869 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:3, order:co.nz.pizzashack.data.dto.OrderDto(orderId:3, orderNo:48319769-1f5b-4d12-b2e8-71c6ff1dac71, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-01-31 08:17:23, deliverTime:null), mainProcessInstanceId:118, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:118, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-01-31 08:17:23, completeTime:null, executionId:118, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27))
2014-01-31 21:17:23,870 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:3, order:co.nz.pizzashack.data.dto.OrderDto(orderId:3, orderNo:48319769-1f5b-4d12-b2e8-71c6ff1dac71, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-01-31 08:17:23, deliverTime:null), mainProcessInstanceId:118, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:118, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-01-31 08:17:23, completeTime:null, executionId:118, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)) 
2014-01-31 21:17:23,870 [ckOrderInbound]] INFO  OrderProcessAccessor           - process pending 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
2014-01-31 21:17:23,872 [ckOrderInbound]] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-01-31 21:17:23,872 [ckOrderInbound]] INFO  ActivitiFacade                 - executionId: 118, processDefinitionId: orderlocalProcess:1:15
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-01-31 21:17:23,876 [ckOrderInbound]] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-01-31 21:17:23,877 [ckOrderInbound]] INFO  OrderProcessAccessor           - assign operator[4] to task[Data entry]
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    insert 
    into
        ACT_RU_IDENTITYLINK
        (ID_, REV_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_, PROC_DEF_ID_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_IDENTITYLINK
        (ID_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_)     
    values
        (?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_TASK      
    SET
        REV_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        PRIORITY_ = ?,
        CREATE_TIME_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        DELEGATION_ = ?,
        EXECUTION_ID_ = ?,
        PROC_DEF_ID_ = ?,
        DESCRIPTION_ = ?,
        DUE_DATE_ = ?,
        SUSPENSION_STATE_ = ?      
    where
        ID_= ?       
        and REV_ = ?
2014-01-31 21:17:23,887 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:3, order:co.nz.pizzashack.data.dto.OrderDto(orderId:3, orderNo:48319769-1f5b-4d12-b2e8-71c6ff1dac71, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-01-31 08:17:23, deliverTime:null), mainProcessInstanceId:118, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:118, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-01-31 08:17:23, completeTime:null, executionId:118, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)) 
2014-01-31 21:17:23,888 [ckOrderInbound]] INFO  OrderProcessDSImpl             - startOrderProcess end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:3, order:co.nz.pizzashack.data.dto.OrderDto(orderId:3, orderNo:48319769-1f5b-4d12-b2e8-71c6ff1dac71, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-01-31 08:17:23, deliverTime:null), mainProcessInstanceId:118, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:118, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-01-31 08:17:23, completeTime:null, executionId:118, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27))
2014-01-31 21:17:23,890 [ckOrderInbound]] INFO  OrderRequestProcessor          - after start process:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:3, order:co.nz.pizzashack.data.dto.OrderDto(orderId:3, orderNo:48319769-1f5b-4d12-b2e8-71c6ff1dac71, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-01-31 08:17:23, deliverTime:null), mainProcessInstanceId:118, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:118, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-01-31 08:17:23, completeTime:null, executionId:118, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)) 
2014-01-31 21:17:23,890 [ckOrderInbound]] INFO  OrderProcessDSImpl             - dataEntry start:48319769-1f5b-4d12-b2e8-71c6ff1dac71
2014-01-31 21:17:23,890 [ckOrderInbound]] INFO  OrderProcessDSImpl             - getOrderProcessByOrderNo start************************************
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-01-31 21:17:23,892 [ckOrderInbound]] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@19c5579e[orderProcessId=3,executionId=118,mainProcessInstanceId=118,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=118,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=21:17:23,completeTime=<null>] 
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_,
        customermo0_.address as address2_,
        customermo0_.credits as credits2_,
        customermo0_.customer_name as customer4_2_,
        customermo0_.email as email2_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.email=? limit ?
2014-01-31 21:17:23,893 [ckOrderInbound]] INFO  OrderProcessDSImpl             - orderDetailsSet size:2 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
2014-01-31 21:17:23,894 [ckOrderInbound]] INFO  OrderProcessDSImpl             - added orderPizzashackModel:co.nz.pizzashack.data.model.OrderPizzashackModel@570d8b54[orderPizzashackId=<null>,totalPrice=0,qty=2] 
Hibernate: 
    insert 
    into
        t_order_pizzashack
        (order_pizza_id, order_id, pizzashack_id, qty, total_price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
2014-01-31 21:17:23,895 [ckOrderInbound]] INFO  OrderProcessDSImpl             - added orderPizzashackModel:co.nz.pizzashack.data.model.OrderPizzashackModel@38ca2672[orderPizzashackId=<null>,totalPrice=0,qty=4] 
Hibernate: 
    insert 
    into
        t_order_pizzashack
        (order_pizza_id, order_id, pizzashack_id, qty, total_price) 
    values
        (null, ?, ?, ?, ?)
2014-01-31 21:17:23,896 [ckOrderInbound]] INFO  OrderProcessDSImpl             - after add detailsDto, size in model:2 
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        E.BUSINESS_KEY_ = ?                                                                                 
        and RES.PROC_DEF_ID_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                    
        and RES.ASSIGNEE_ = ?                                                                        
        and E.BUSINESS_KEY_ = ?
2014-01-31 21:17:23,899 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@19c5579e[orderProcessId=3,executionId=118,mainProcessInstanceId=118,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=118,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=21:17:23,completeTime=<null>]
2014-01-31 21:17:23,900 [ckOrderInbound]] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@2067efe3[orderId=3,orderNo=48319769-1f5b-4d12-b2e8-71c6ff1dac71,quantity=0,status=0,paymentStatus=0,deliverTime=<null>,totalPrice=0,orderTime=2014-01-31 21:17:23.859]
2014-01-31 21:17:23,900 [ckOrderInbound]] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@1114b91c[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-01-31 21:17:23,901 [ckOrderInbound]] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-01-31 21:17:23,901 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@570d8b54[orderPizzashackId=5,totalPrice=0,qty=2]
2014-01-31 21:17:23,901 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:5, pizzaName:Chicken Parmesan, qty:2, totalPrice:0)
2014-01-31 21:17:23,901 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@38ca2672[orderPizzashackId=6,totalPrice=0,qty=4]
2014-01-31 21:17:23,901 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:6, pizzaName:Spicy Italian, qty:4, totalPrice:0)
2014-01-31 21:17:23,901 [ckOrderInbound]] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:3, orderNo:48319769-1f5b-4d12-b2e8-71c6ff1dac71, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:5, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:6, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-01-31 08:17:23, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-01-31 21:17:23,902 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@756bf87f[userId=4,username=general,password=MTIzNDU2,createTime=21:13:27]
2014-01-31 21:17:23,903 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)
2014-01-31 21:17:23,903 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:3, order:co.nz.pizzashack.data.dto.OrderDto(orderId:3, orderNo:48319769-1f5b-4d12-b2e8-71c6ff1dac71, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:5, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:6, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-01-31 08:17:23, deliverTime:null), mainProcessInstanceId:118, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:118, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:17:23, completeTime:null, executionId:118, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27))
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        PARENT_TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE 
    where
        TASK_ID_ =     ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
2014-01-31 21:17:23,910 [ckOrderInbound]] INFO  ainTransitionExecutionListener - orderMainUserTaskExecutionListener start:{} 
2014-01-31 21:17:23,910 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity id:orderCoreCallactivity
2014-01-31 21:17:23,910 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity name:Core process
2014-01-31 21:17:23,910 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity type:callActivity
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
start calculate: co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:3, order:co.nz.pizzashack.data.dto.OrderDto(orderId:3, orderNo:48319769-1f5b-4d12-b2e8-71c6ff1dac71, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:5, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:6, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-01-31 08:17:23, deliverTime:null), mainProcessInstanceId:118, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:118, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:17:23, completeTime:null, executionId:118, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27))
2014-01-31 21:17:23,925 [ckOrderInbound]] INFO  PizzashackCaculator            - caculate start:co.nz.pizzashack.data.dto.OrderDto(orderId:3, orderNo:48319769-1f5b-4d12-b2e8-71c6ff1dac71, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:5, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:6, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-01-31 08:17:23, deliverTime:null) 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-01-31 21:17:23,928 [ckOrderInbound]] INFO  PizzashackCaculator            - caculate end:co.nz.pizzashack.data.dto.OrderDto(orderId:3, orderNo:48319769-1f5b-4d12-b2e8-71c6ff1dac71, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:5, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:6, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-01-31 08:17:23, deliverTime:null) 
after calculation: co.nz.pizzashack.data.dto.OrderDto(orderId:3, orderNo:48319769-1f5b-4d12-b2e8-71c6ff1dac71, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:5, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:6, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-01-31 08:17:23, deliverTime:null)
total qty: 6
after autoreview: 0
reviewTransBean: co.nz.pizzashack.data.dto.OrderReviewRecordDto(reviewRecordId:null, orderNo:48319769-1f5b-4d12-b2e8-71c6ff1dac71, content:null, reviewResult:accept, createTime:2014-01-31 08:17:23, reviewer:null)
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RU_JOB J     
    where
        J.EXECUTION_ID_ = ?
Hibernate: 
    select
        *      
    from
        ACT_RU_EVENT_SUBSCR     
    where
        (
            EXECUTION_ID_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
2014-01-31 21:17:23,962 [ckOrderInbound]] INFO  OfCoreProcessExecutionListener - after core process, orderProcess:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:3, order:co.nz.pizzashack.data.dto.OrderDto(orderId:3, orderNo:48319769-1f5b-4d12-b2e8-71c6ff1dac71, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:5, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:6, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-01-31 08:17:23, deliverTime:null), mainProcessInstanceId:118, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:118, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:17:23, completeTime:null, executionId:118, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)) 
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-01-31 21:17:23,963 [ckOrderInbound]] INFO  ainTransitionExecutionListener - orderMainUserTaskExecutionListener start:{} 
2014-01-31 21:17:23,963 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity id:billingEntry
2014-01-31 21:17:23,963 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity name:Billing fill in
2014-01-31 21:17:23,963 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity type:userTask
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    update
        ACT_RU_EXECUTION 
    set
        REV_ = ?,
        BUSINESS_KEY_ = ?,
        PROC_DEF_ID_ = ?,
        ACT_ID_ = ?,
        IS_ACTIVE_ = ?,
        IS_CONCURRENT_ = ?,
        IS_SCOPE_ = ?,
        IS_EVENT_SCOPE_ = ?,
        PARENT_ID_ = ?,
        SUPER_EXEC_ = ?,
        SUSPENSION_STATE_ = ?,
        CACHED_ENT_STATE_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_TASK 
    where
        ID_ = ? 
        and REV_ = ?
2014-01-31 21:17:23,990 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:3, order:co.nz.pizzashack.data.dto.OrderDto(orderId:3, orderNo:48319769-1f5b-4d12-b2e8-71c6ff1dac71, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:5, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:6, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-01-31 08:17:23, deliverTime:null), mainProcessInstanceId:118, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:118, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:17:23, completeTime:null, executionId:118, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)) 
2014-01-31 21:17:23,990 [ckOrderInbound]] INFO  OrderProcessAccessor           - process pending 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-01-31 21:17:23,995 [ckOrderInbound]] INFO  OrderProcessAccessor           - get OrderProcessDto from flow:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:3, order:co.nz.pizzashack.data.dto.OrderDto(orderId:3, orderNo:48319769-1f5b-4d12-b2e8-71c6ff1dac71, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:5, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:6, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-01-31 08:17:23, deliverTime:null), mainProcessInstanceId:118, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:118, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:17:23, completeTime:null, executionId:118, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)) 
2014-01-31 21:17:23,995 [ckOrderInbound]] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-01-31 21:17:23,995 [ckOrderInbound]] INFO  ActivitiFacade                 - executionId: 118, processDefinitionId: orderlocalProcess:1:15
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-01-31 21:17:23,999 [ckOrderInbound]] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-01-31 21:17:24,000 [ckOrderInbound]] INFO  OrderProcessAccessor           - assign operator[4] to task[Billing fill in]
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_TASK      
    SET
        REV_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        PRIORITY_ = ?,
        CREATE_TIME_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        DELEGATION_ = ?,
        EXECUTION_ID_ = ?,
        PROC_DEF_ID_ = ?,
        DESCRIPTION_ = ?,
        DUE_DATE_ = ?,
        SUSPENSION_STATE_ = ?      
    where
        ID_= ?       
        and REV_ = ?
2014-01-31 21:17:24,006 [ckOrderInbound]] INFO  OrderProcessAccessor           - merge calculation result
2014-01-31 21:17:24,006 [ckOrderInbound]] INFO  OrderProcessAccessor           - total price:162.00 
2014-01-31 21:17:24,006 [ckOrderInbound]] INFO  OrderProcessAccessor           - qty:6 
2014-01-31 21:17:24,006 [ckOrderInbound]] INFO  OrderProcessAccessor           - orderDetailsSet.size():2
2014-01-31 21:17:24,006 [ckOrderInbound]] INFO  OrderProcessAccessor           - after merge orderProcessModel:co.nz.pizzashack.data.model.OrderProcessModel@19c5579e[orderProcessId=3,executionId=118,mainProcessInstanceId=118,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=118,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=21:17:23,completeTime=<null>] 
2014-01-31 21:17:24,007 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:3, order:co.nz.pizzashack.data.dto.OrderDto(orderId:3, orderNo:48319769-1f5b-4d12-b2e8-71c6ff1dac71, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:5, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:6, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-01-31 08:17:23, deliverTime:null), mainProcessInstanceId:118, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:118, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:17:23, completeTime:null, executionId:118, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)) 
2014-01-31 21:17:24,008 [ckOrderInbound]] INFO  OrderProcessDSImpl             - dataEntry end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:3, order:co.nz.pizzashack.data.dto.OrderDto(orderId:3, orderNo:48319769-1f5b-4d12-b2e8-71c6ff1dac71, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:5, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:6, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-01-31 08:17:23, deliverTime:null), mainProcessInstanceId:118, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:118, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:17:23, completeTime:null, executionId:118, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27))
Hibernate: 
    update
        t_order 
    set
        cust_id=?,
        deliver_time=?,
        order_no=?,
        order_time=?,
        payment_remarks=?,
        payment_status=?,
        quantity=?,
        ship_address=?,
        status=?,
        total_price=? 
    where
        order_id=?
Hibernate: 
    update
        t_order_pizzashack 
    set
        order_id=?,
        pizzashack_id=?,
        qty=?,
        total_price=? 
    where
        order_pizza_id=?
Hibernate: 
    update
        t_order_pizzashack 
    set
        order_id=?,
        pizzashack_id=?,
        qty=?,
        total_price=? 
    where
        order_pizza_id=?
2014-01-31 21:17:24,011 [ckOrderInbound]] INFO  OrderRequestProcessor          - after dataEntry:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:3, order:co.nz.pizzashack.data.dto.OrderDto(orderId:3, orderNo:48319769-1f5b-4d12-b2e8-71c6ff1dac71, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:5, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:6, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-01-31 08:17:23, deliverTime:null), mainProcessInstanceId:118, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:118, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:17:23, completeTime:null, executionId:118, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)) 
2014-01-31 21:17:24,012 [ckOrderInbound]] INFO  OrderConverter                 - toModel start:{} co.nz.pizzashack.data.dto.OrderDto(orderId:3, orderNo:48319769-1f5b-4d12-b2e8-71c6ff1dac71, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:5, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:6, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-01-31 08:17:23, deliverTime:null)
2014-01-31 21:17:24,012 [ckOrderInbound]] INFO  OrderConverter                 - toModel end:{} co.nz.pizzashack.data.model.OrderModel@2bfd73be[orderId=<null>,orderNo=48319769-1f5b-4d12-b2e8-71c6ff1dac71,quantity=6,status=<null>,paymentStatus=0,deliverTime=<null>,totalPrice=162.00,orderTime=<null>]
Hibernate: 
    select
        orderreque0_.message_id as message1_0_0_,
        orderreque0_.created_at as created2_0_0_,
        orderreque0_.order_id as order4_0_0_,
        orderreque0_.processor_name as processor3_0_0_ 
    from
        t_order_request_history orderreque0_ 
    where
        orderreque0_.message_id=?
2014-01-31 21:17:24,013 [ckOrderInbound]] INFO  OrderRequestProcessor          - orderRequestProcessor end:{} 
2014-01-31 21:17:24,014 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlMarshal start:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:3, order:co.nz.pizzashack.data.dto.OrderDto(orderId:3, orderNo:48319769-1f5b-4d12-b2e8-71c6ff1dac71, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:5, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:6, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-01-31 08:17:23, deliverTime:null), mainProcessInstanceId:118, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:118, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:17:23, completeTime:null, executionId:118, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27))
2014-01-31 21:17:24,015 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - pendingActivity:{} co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
2014-01-31 21:17:24,015 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - customerDto:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-01-31 21:17:24,018 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlMarshal end:{} <order-process>
  <process-id>3</process-id>
  <create-time>1970-01-01 09:17:23</create-time>
  <complete-time>null</complete-time>
  <operator>general</operator>
  <order>
    <address>25 mavon downs</address>
    <quantity>6</quantity>
    <total-price>162.00</total-price>
    <status>pendingOnBilling</status>
    <order-time>2014-01-31 08:17:23</order-time>
    <deliver-time>null</deliver-time>
    <order-list>
      <order-details>
        <pizza-name>Chicken Parmesan</pizza-name>
        <quantity>2</quantity>
        <total-price>50.00</total-price>
      </order-details>
      <order-details>
        <pizza-name>Spicy Italian</pizza-name>
        <quantity>4</quantity>
        <total-price>112.00</total-price>
      </order-details>
    </order-list>
  </order>
  <customer>
    <name>david</name>
    <email>david.yuan124@gmail.com</email>
  </customer>
  <pending-activity>
    <name>Billing fill in</name>
    <type>userTask</type>
    <assignee>4</assignee>
  </pending-activity>
</order-process>
2014-01-31 21:17:24,018 [ckOrderInbound]] INFO  output                         - Exchange[ExchangePattern: InOnly, BodyType: String, Body: <order-process>  <process-id>3</process-id>  <create-time>1970-01-01 09:17:23</create-time>  <complete-time>null</complete-time>  <operator>general</operator>  <order>    <address>25 mavon downs</address>    <quantity>6</quantity>    <total-price>162.00</total-price>    <status>pendingOnBilling</status>    <order-time>2014-01-31 08:17:23</order-time>    <deliver-time>null</deliver-time>    <order-list>      <order-details>        <pizza-name>Chicken Parmesan</pizza-name>        <quantity>2</quantity>        <total-price>50.00</total-price>      </order-details>      <order-details>        <pizza-name>Spicy Italian</pizza-name>        <quantity>4</quantity>        <total-price>112.00</total-price>      </order-details>    </order-list>  </order>  <customer>    <name>david</name>    <email>david.yuan124@gmail.com</email>  </customer>  <pending-activity>    <name>Billing fill in</name>    <type>userTask</type>    <assignee>4</assignee>  </pending-activity></order-process>]
2014-01-31 21:17:24,067 [ckOrderInbound]] INFO  orderProcessRoute              - Signalled to stop route
2014-01-31 21:18:35,328 [ckOrderInbound]] INFO  orderProcessRoute              - Received message 75541
Hibernate: 
    SELECT
        COUNT(*) 
    FROM
        T_ORDER_REQUEST_HISTORY 
    WHERE
        processor_name = ? 
        AND message_id = ?
Hibernate: 
    INSERT 
    INTO
        T_ORDER_REQUEST_HISTORY
        (processor_name, message_id, created_at) 
    VALUES
        (?, ?, ?)
2014-01-31 21:18:35,330 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlUnmarshal start:{} <order>
  <address>25 mavon downs</address>
  <order-list>
    <order-details>
      <pizza-name>Chicken Parmesan</pizza-name>
      <quantity>2</quantity>
    </order-details>
    <order-details>
      <pizza-name>Spicy Italian</pizza-name>
      <quantity>4</quantity>
    </order-details>
  </order-list>
  <customer>
    <name>david</name>
    <email>david.yuan124@gmail.com</email>
  </customer>
</order>
orderDetailsDto: co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:2, totalPrice:0)
orderDetailsDto: co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Spicy Italian, qty:4, totalPrice:0)
2014-01-31 21:18:35,333 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlUnmarshal end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:null, orderNo:null, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:david, customerEmail:david.yuan124@gmail.com, level:null), address:25 mavon downs, status:null, orderTime:null, deliverTime:null)
2014-01-31 21:18:35,333 [ckOrderInbound]] INFO  OrderRequestProcessor          - orderRequestProcessor start:{} 
2014-01-31 21:18:35,333 [ckOrderInbound]] INFO  OrderRequestProcessor          - order request:co.nz.pizzashack.data.dto.OrderDto(orderId:null, orderNo:null, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:david, customerEmail:david.yuan124@gmail.com, level:null), address:25 mavon downs, status:null, orderTime:null, deliverTime:null) 
2014-01-31 21:18:35,333 [ckOrderInbound]] INFO  OrderRequestProcessor          - messageId:75541 
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
2014-01-31 21:18:35,335 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@6e1003bb[userId=4,username=general,password=MTIzNDU2,createTime=21:13:27]
2014-01-31 21:18:35,335 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)
2014-01-31 21:18:35,335 [ckOrderInbound]] INFO  OrderRequestProcessor          - default operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27) 
2014-01-31 21:18:35,336 [ckOrderInbound]] INFO  OrderProcessDSImpl             - startOrderProcess start:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.process_definition_key=? 
        and workflowmo0_.category=? limit ?
Hibernate: 
    insert 
    into
        t_order
        (order_id, cust_id, deliver_time, order_no, order_time, payment_remarks, payment_status, quantity, ship_address, status, total_price) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-01-31 21:18:35,338 [ckOrderInbound]] INFO  ActivitiFacade                 - startProcessInstance start:{}
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
2014-01-31 21:18:35,345 [ckOrderInbound]] INFO  ActivitiFacade                 - startProcessInstance end:{}
Hibernate: 
    insert 
    into
        t_order_process
        (order_process_id, active_process_definition_id, active_process_instance_id, complete_time, create_time, execution_id, main_process_definition_id, main_process_instance_id, operator_id, order_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2014-01-31 21:18:35,346 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@9674103[orderProcessId=4,executionId=169,mainProcessInstanceId=169,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=169,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=Fri Jan 31 21:18:35 NZDT 2014,completeTime=<null>]
2014-01-31 21:18:35,347 [ckOrderInbound]] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@75697af0[orderId=4,orderNo=3bc0ef39-2766-406c-93c7-3e6849634a92,quantity=<null>,status=0,paymentStatus=0,deliverTime=<null>,totalPrice=<null>,orderTime=Fri Jan 31 21:18:35 NZDT 2014]
2014-01-31 21:18:35,348 [ckOrderInbound]] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:4, orderNo:3bc0ef39-2766-406c-93c7-3e6849634a92, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-01-31 08:18:35, deliverTime:null)
2014-01-31 21:18:35,348 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@b14d4b6[userId=4,username=general,password=MTIzNDU2,createTime=21:13:27]
2014-01-31 21:18:35,348 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)
2014-01-31 21:18:35,348 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:4, order:co.nz.pizzashack.data.dto.OrderDto(orderId:4, orderNo:3bc0ef39-2766-406c-93c7-3e6849634a92, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-01-31 08:18:35, deliverTime:null), mainProcessInstanceId:169, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:169, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-01-31 08:18:35, completeTime:null, executionId:169, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27))
2014-01-31 21:18:35,349 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:4, order:co.nz.pizzashack.data.dto.OrderDto(orderId:4, orderNo:3bc0ef39-2766-406c-93c7-3e6849634a92, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-01-31 08:18:35, deliverTime:null), mainProcessInstanceId:169, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:169, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-01-31 08:18:35, completeTime:null, executionId:169, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)) 
2014-01-31 21:18:35,349 [ckOrderInbound]] INFO  OrderProcessAccessor           - process pending 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
2014-01-31 21:18:35,351 [ckOrderInbound]] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-01-31 21:18:35,351 [ckOrderInbound]] INFO  ActivitiFacade                 - executionId: 169, processDefinitionId: orderlocalProcess:1:15
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-01-31 21:18:35,354 [ckOrderInbound]] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-01-31 21:18:35,355 [ckOrderInbound]] INFO  OrderProcessAccessor           - assign operator[4] to task[Data entry]
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    insert 
    into
        ACT_RU_IDENTITYLINK
        (ID_, REV_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_, PROC_DEF_ID_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_IDENTITYLINK
        (ID_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_)     
    values
        (?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_TASK      
    SET
        REV_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        PRIORITY_ = ?,
        CREATE_TIME_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        DELEGATION_ = ?,
        EXECUTION_ID_ = ?,
        PROC_DEF_ID_ = ?,
        DESCRIPTION_ = ?,
        DUE_DATE_ = ?,
        SUSPENSION_STATE_ = ?      
    where
        ID_= ?       
        and REV_ = ?
2014-01-31 21:18:35,363 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:4, order:co.nz.pizzashack.data.dto.OrderDto(orderId:4, orderNo:3bc0ef39-2766-406c-93c7-3e6849634a92, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-01-31 08:18:35, deliverTime:null), mainProcessInstanceId:169, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:169, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-01-31 08:18:35, completeTime:null, executionId:169, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)) 
2014-01-31 21:18:35,364 [ckOrderInbound]] INFO  OrderProcessDSImpl             - startOrderProcess end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:4, order:co.nz.pizzashack.data.dto.OrderDto(orderId:4, orderNo:3bc0ef39-2766-406c-93c7-3e6849634a92, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-01-31 08:18:35, deliverTime:null), mainProcessInstanceId:169, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:169, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-01-31 08:18:35, completeTime:null, executionId:169, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27))
2014-01-31 21:18:35,366 [ckOrderInbound]] INFO  OrderRequestProcessor          - after start process:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:4, order:co.nz.pizzashack.data.dto.OrderDto(orderId:4, orderNo:3bc0ef39-2766-406c-93c7-3e6849634a92, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-01-31 08:18:35, deliverTime:null), mainProcessInstanceId:169, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:169, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-01-31 08:18:35, completeTime:null, executionId:169, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)) 
2014-01-31 21:18:35,366 [ckOrderInbound]] INFO  OrderProcessDSImpl             - dataEntry start:3bc0ef39-2766-406c-93c7-3e6849634a92
2014-01-31 21:18:35,366 [ckOrderInbound]] INFO  OrderProcessDSImpl             - getOrderProcessByOrderNo start************************************
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-01-31 21:18:35,368 [ckOrderInbound]] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@a02b2de[orderProcessId=4,executionId=169,mainProcessInstanceId=169,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=169,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=21:18:35,completeTime=<null>] 
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_,
        customermo0_.address as address2_,
        customermo0_.credits as credits2_,
        customermo0_.customer_name as customer4_2_,
        customermo0_.email as email2_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.email=? limit ?
2014-01-31 21:18:35,369 [ckOrderInbound]] INFO  OrderProcessDSImpl             - orderDetailsSet size:2 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
2014-01-31 21:18:35,370 [ckOrderInbound]] INFO  OrderProcessDSImpl             - added orderPizzashackModel:co.nz.pizzashack.data.model.OrderPizzashackModel@4949fac4[orderPizzashackId=<null>,totalPrice=0,qty=2] 
Hibernate: 
    insert 
    into
        t_order_pizzashack
        (order_pizza_id, order_id, pizzashack_id, qty, total_price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
2014-01-31 21:18:35,371 [ckOrderInbound]] INFO  OrderProcessDSImpl             - added orderPizzashackModel:co.nz.pizzashack.data.model.OrderPizzashackModel@154b42e9[orderPizzashackId=<null>,totalPrice=0,qty=4] 
Hibernate: 
    insert 
    into
        t_order_pizzashack
        (order_pizza_id, order_id, pizzashack_id, qty, total_price) 
    values
        (null, ?, ?, ?, ?)
2014-01-31 21:18:35,372 [ckOrderInbound]] INFO  OrderProcessDSImpl             - after add detailsDto, size in model:2 
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        E.BUSINESS_KEY_ = ?                                                                                 
        and RES.PROC_DEF_ID_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                    
        and RES.ASSIGNEE_ = ?                                                                        
        and E.BUSINESS_KEY_ = ?
2014-01-31 21:18:35,375 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@a02b2de[orderProcessId=4,executionId=169,mainProcessInstanceId=169,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=169,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=21:18:35,completeTime=<null>]
2014-01-31 21:18:35,376 [ckOrderInbound]] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@244c9ef9[orderId=4,orderNo=3bc0ef39-2766-406c-93c7-3e6849634a92,quantity=0,status=0,paymentStatus=0,deliverTime=<null>,totalPrice=0,orderTime=2014-01-31 21:18:35.337]
2014-01-31 21:18:35,376 [ckOrderInbound]] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@6c33f924[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-01-31 21:18:35,377 [ckOrderInbound]] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-01-31 21:18:35,377 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@4949fac4[orderPizzashackId=7,totalPrice=0,qty=2]
2014-01-31 21:18:35,377 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:7, pizzaName:Chicken Parmesan, qty:2, totalPrice:0)
2014-01-31 21:18:35,377 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@154b42e9[orderPizzashackId=8,totalPrice=0,qty=4]
2014-01-31 21:18:35,377 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:8, pizzaName:Spicy Italian, qty:4, totalPrice:0)
2014-01-31 21:18:35,378 [ckOrderInbound]] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:4, orderNo:3bc0ef39-2766-406c-93c7-3e6849634a92, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:7, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:8, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-01-31 08:18:35, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-01-31 21:18:35,379 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@799987cd[userId=4,username=general,password=MTIzNDU2,createTime=21:13:27]
2014-01-31 21:18:35,380 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)
2014-01-31 21:18:35,380 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:4, order:co.nz.pizzashack.data.dto.OrderDto(orderId:4, orderNo:3bc0ef39-2766-406c-93c7-3e6849634a92, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:7, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:8, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-01-31 08:18:35, deliverTime:null), mainProcessInstanceId:169, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:169, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:18:35, completeTime:null, executionId:169, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27))
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        PARENT_TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE 
    where
        TASK_ID_ =     ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
2014-01-31 21:18:35,388 [ckOrderInbound]] INFO  ainTransitionExecutionListener - orderMainUserTaskExecutionListener start:{} 
2014-01-31 21:18:35,388 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity id:orderCoreCallactivity
2014-01-31 21:18:35,388 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity name:Core process
2014-01-31 21:18:35,388 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity type:callActivity
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
start calculate: co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:4, order:co.nz.pizzashack.data.dto.OrderDto(orderId:4, orderNo:3bc0ef39-2766-406c-93c7-3e6849634a92, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:7, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:8, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-01-31 08:18:35, deliverTime:null), mainProcessInstanceId:169, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:169, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:18:35, completeTime:null, executionId:169, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27))
2014-01-31 21:18:35,402 [ckOrderInbound]] INFO  PizzashackCaculator            - caculate start:co.nz.pizzashack.data.dto.OrderDto(orderId:4, orderNo:3bc0ef39-2766-406c-93c7-3e6849634a92, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:7, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:8, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-01-31 08:18:35, deliverTime:null) 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-01-31 21:18:35,405 [ckOrderInbound]] INFO  PizzashackCaculator            - caculate end:co.nz.pizzashack.data.dto.OrderDto(orderId:4, orderNo:3bc0ef39-2766-406c-93c7-3e6849634a92, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:7, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:8, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-01-31 08:18:35, deliverTime:null) 
after calculation: co.nz.pizzashack.data.dto.OrderDto(orderId:4, orderNo:3bc0ef39-2766-406c-93c7-3e6849634a92, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:7, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:8, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-01-31 08:18:35, deliverTime:null)
total qty: 6
after autoreview: 0
reviewTransBean: co.nz.pizzashack.data.dto.OrderReviewRecordDto(reviewRecordId:null, orderNo:3bc0ef39-2766-406c-93c7-3e6849634a92, content:null, reviewResult:accept, createTime:2014-01-31 08:18:35, reviewer:null)
Hibernate: 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = ?
Hibernate: 
    update
        ACT_GE_PROPERTY      
    SET
        REV_ = ?,
        VALUE_ = ?      
    where
        NAME_ = ?       
        and REV_ = ?
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RU_JOB J     
    where
        J.EXECUTION_ID_ = ?
Hibernate: 
    select
        *      
    from
        ACT_RU_EVENT_SUBSCR     
    where
        (
            EXECUTION_ID_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
2014-01-31 21:18:35,439 [ckOrderInbound]] INFO  OfCoreProcessExecutionListener - after core process, orderProcess:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:4, order:co.nz.pizzashack.data.dto.OrderDto(orderId:4, orderNo:3bc0ef39-2766-406c-93c7-3e6849634a92, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:7, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:8, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-01-31 08:18:35, deliverTime:null), mainProcessInstanceId:169, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:169, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:18:35, completeTime:null, executionId:169, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)) 
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-01-31 21:18:35,440 [ckOrderInbound]] INFO  ainTransitionExecutionListener - orderMainUserTaskExecutionListener start:{} 
2014-01-31 21:18:35,441 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity id:billingEntry
2014-01-31 21:18:35,441 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity name:Billing fill in
2014-01-31 21:18:35,441 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity type:userTask
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    update
        ACT_RU_EXECUTION 
    set
        REV_ = ?,
        BUSINESS_KEY_ = ?,
        PROC_DEF_ID_ = ?,
        ACT_ID_ = ?,
        IS_ACTIVE_ = ?,
        IS_CONCURRENT_ = ?,
        IS_SCOPE_ = ?,
        IS_EVENT_SCOPE_ = ?,
        PARENT_ID_ = ?,
        SUPER_EXEC_ = ?,
        SUSPENSION_STATE_ = ?,
        CACHED_ENT_STATE_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_TASK 
    where
        ID_ = ? 
        and REV_ = ?
2014-01-31 21:18:35,467 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:4, order:co.nz.pizzashack.data.dto.OrderDto(orderId:4, orderNo:3bc0ef39-2766-406c-93c7-3e6849634a92, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:7, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:8, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-01-31 08:18:35, deliverTime:null), mainProcessInstanceId:169, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:169, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:18:35, completeTime:null, executionId:169, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)) 
2014-01-31 21:18:35,467 [ckOrderInbound]] INFO  OrderProcessAccessor           - process pending 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-01-31 21:18:35,474 [ckOrderInbound]] INFO  OrderProcessAccessor           - get OrderProcessDto from flow:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:4, order:co.nz.pizzashack.data.dto.OrderDto(orderId:4, orderNo:3bc0ef39-2766-406c-93c7-3e6849634a92, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:7, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:8, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-01-31 08:18:35, deliverTime:null), mainProcessInstanceId:169, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:169, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:18:35, completeTime:null, executionId:169, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)) 
2014-01-31 21:18:35,474 [ckOrderInbound]] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-01-31 21:18:35,474 [ckOrderInbound]] INFO  ActivitiFacade                 - executionId: 169, processDefinitionId: orderlocalProcess:1:15
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-01-31 21:18:35,477 [ckOrderInbound]] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-01-31 21:18:35,480 [ckOrderInbound]] INFO  OrderProcessAccessor           - assign operator[4] to task[Billing fill in]
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_TASK      
    SET
        REV_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        PRIORITY_ = ?,
        CREATE_TIME_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        DELEGATION_ = ?,
        EXECUTION_ID_ = ?,
        PROC_DEF_ID_ = ?,
        DESCRIPTION_ = ?,
        DUE_DATE_ = ?,
        SUSPENSION_STATE_ = ?      
    where
        ID_= ?       
        and REV_ = ?
2014-01-31 21:18:35,487 [ckOrderInbound]] INFO  OrderProcessAccessor           - merge calculation result
2014-01-31 21:18:35,487 [ckOrderInbound]] INFO  OrderProcessAccessor           - total price:162.00 
2014-01-31 21:18:35,487 [ckOrderInbound]] INFO  OrderProcessAccessor           - qty:6 
2014-01-31 21:18:35,487 [ckOrderInbound]] INFO  OrderProcessAccessor           - orderDetailsSet.size():2
2014-01-31 21:18:35,487 [ckOrderInbound]] INFO  OrderProcessAccessor           - after merge orderProcessModel:co.nz.pizzashack.data.model.OrderProcessModel@a02b2de[orderProcessId=4,executionId=169,mainProcessInstanceId=169,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=169,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=21:18:35,completeTime=<null>] 
2014-01-31 21:18:35,488 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:4, order:co.nz.pizzashack.data.dto.OrderDto(orderId:4, orderNo:3bc0ef39-2766-406c-93c7-3e6849634a92, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:7, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:8, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-01-31 08:18:35, deliverTime:null), mainProcessInstanceId:169, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:169, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:18:35, completeTime:null, executionId:169, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)) 
2014-01-31 21:18:35,489 [ckOrderInbound]] INFO  OrderProcessDSImpl             - dataEntry end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:4, order:co.nz.pizzashack.data.dto.OrderDto(orderId:4, orderNo:3bc0ef39-2766-406c-93c7-3e6849634a92, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:7, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:8, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-01-31 08:18:35, deliverTime:null), mainProcessInstanceId:169, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:169, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:18:35, completeTime:null, executionId:169, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27))
Hibernate: 
    update
        t_order 
    set
        cust_id=?,
        deliver_time=?,
        order_no=?,
        order_time=?,
        payment_remarks=?,
        payment_status=?,
        quantity=?,
        ship_address=?,
        status=?,
        total_price=? 
    where
        order_id=?
Hibernate: 
    update
        t_order_pizzashack 
    set
        order_id=?,
        pizzashack_id=?,
        qty=?,
        total_price=? 
    where
        order_pizza_id=?
Hibernate: 
    update
        t_order_pizzashack 
    set
        order_id=?,
        pizzashack_id=?,
        qty=?,
        total_price=? 
    where
        order_pizza_id=?
2014-01-31 21:18:35,493 [ckOrderInbound]] INFO  OrderRequestProcessor          - after dataEntry:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:4, order:co.nz.pizzashack.data.dto.OrderDto(orderId:4, orderNo:3bc0ef39-2766-406c-93c7-3e6849634a92, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:7, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:8, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-01-31 08:18:35, deliverTime:null), mainProcessInstanceId:169, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:169, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:18:35, completeTime:null, executionId:169, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)) 
2014-01-31 21:18:35,493 [ckOrderInbound]] INFO  OrderConverter                 - toModel start:{} co.nz.pizzashack.data.dto.OrderDto(orderId:4, orderNo:3bc0ef39-2766-406c-93c7-3e6849634a92, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:7, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:8, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-01-31 08:18:35, deliverTime:null)
2014-01-31 21:18:35,493 [ckOrderInbound]] INFO  OrderConverter                 - toModel end:{} co.nz.pizzashack.data.model.OrderModel@3bca122e[orderId=<null>,orderNo=3bc0ef39-2766-406c-93c7-3e6849634a92,quantity=6,status=<null>,paymentStatus=0,deliverTime=<null>,totalPrice=162.00,orderTime=<null>]
Hibernate: 
    select
        orderreque0_.message_id as message1_0_0_,
        orderreque0_.created_at as created2_0_0_,
        orderreque0_.order_id as order4_0_0_,
        orderreque0_.processor_name as processor3_0_0_ 
    from
        t_order_request_history orderreque0_ 
    where
        orderreque0_.message_id=?
2014-01-31 21:18:35,494 [ckOrderInbound]] INFO  OrderRequestProcessor          - orderRequestProcessor end:{} 
2014-01-31 21:18:35,495 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlMarshal start:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:4, order:co.nz.pizzashack.data.dto.OrderDto(orderId:4, orderNo:3bc0ef39-2766-406c-93c7-3e6849634a92, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:7, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:8, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-01-31 08:18:35, deliverTime:null), mainProcessInstanceId:169, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:169, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:18:35, completeTime:null, executionId:169, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27))
2014-01-31 21:18:35,496 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - pendingActivity:{} co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
2014-01-31 21:18:35,496 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - customerDto:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-01-31 21:18:35,499 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlMarshal end:{} <order-process>
  <process-id>4</process-id>
  <create-time>1970-01-01 09:18:35</create-time>
  <complete-time>null</complete-time>
  <operator>general</operator>
  <order>
    <address>25 mavon downs</address>
    <quantity>6</quantity>
    <total-price>162.00</total-price>
    <status>pendingOnBilling</status>
    <order-time>2014-01-31 08:18:35</order-time>
    <deliver-time>null</deliver-time>
    <order-list>
      <order-details>
        <pizza-name>Chicken Parmesan</pizza-name>
        <quantity>2</quantity>
        <total-price>50.00</total-price>
      </order-details>
      <order-details>
        <pizza-name>Spicy Italian</pizza-name>
        <quantity>4</quantity>
        <total-price>112.00</total-price>
      </order-details>
    </order-list>
  </order>
  <customer>
    <name>david</name>
    <email>david.yuan124@gmail.com</email>
  </customer>
  <pending-activity>
    <name>Billing fill in</name>
    <type>userTask</type>
    <assignee>4</assignee>
  </pending-activity>
</order-process>
2014-01-31 21:18:35,499 [ckOrderInbound]] INFO  output                         - Exchange[ExchangePattern: InOnly, BodyType: String, Body: <order-process>  <process-id>4</process-id>  <create-time>1970-01-01 09:18:35</create-time>  <complete-time>null</complete-time>  <operator>general</operator>  <order>    <address>25 mavon downs</address>    <quantity>6</quantity>    <total-price>162.00</total-price>    <status>pendingOnBilling</status>    <order-time>2014-01-31 08:18:35</order-time>    <deliver-time>null</deliver-time>    <order-list>      <order-details>        <pizza-name>Chicken Parmesan</pizza-name>        <quantity>2</quantity>        <total-price>50.00</total-price>      </order-details>      <order-details>        <pizza-name>Spicy Italian</pizza-name>        <quantity>4</quantity>        <total-price>112.00</total-price>      </order-details>    </order-list>  </order>  <customer>    <name>david</name>    <email>david.yuan124@gmail.com</email>  </customer>  <pending-activity>    <name>Billing fill in</name>    <type>userTask</type>    <assignee>4</assignee>  </pending-activity></order-process>]
2014-01-31 21:18:35,523 [ckOrderInbound]] INFO  orderProcessRoute              - Signalled to stop route
2014-01-31 21:28:04,197 [ckOrderInbound]] INFO  orderProcessRoute              - Received message 82251
Hibernate: 
    SELECT
        COUNT(*) 
    FROM
        T_ORDER_REQUEST_HISTORY 
    WHERE
        processor_name = ? 
        AND message_id = ?
Hibernate: 
    INSERT 
    INTO
        T_ORDER_REQUEST_HISTORY
        (processor_name, message_id, created_at) 
    VALUES
        (?, ?, ?)
2014-01-31 21:28:04,199 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlUnmarshal start:{} <order>
  <address>25 mavon downs</address>
  <order-list>
    <order-details>
      <pizza-name>Chicken Parmesan</pizza-name>
      <quantity>2</quantity>
    </order-details>
    <order-details>
      <pizza-name>Spicy Italian</pizza-name>
      <quantity>4</quantity>
    </order-details>
  </order-list>
  <customer>
    <name>david</name>
    <email>david.yuan124@gmail.com</email>
  </customer>
</order>
orderDetailsDto: co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:2, totalPrice:0)
orderDetailsDto: co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Spicy Italian, qty:4, totalPrice:0)
2014-01-31 21:28:04,202 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlUnmarshal end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:null, orderNo:null, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:david, customerEmail:david.yuan124@gmail.com, level:null), address:25 mavon downs, status:null, orderTime:null, deliverTime:null)
2014-01-31 21:28:04,203 [ckOrderInbound]] INFO  OrderRequestProcessor          - orderRequestProcessor start:{} 
2014-01-31 21:28:04,203 [ckOrderInbound]] INFO  OrderRequestProcessor          - order request:co.nz.pizzashack.data.dto.OrderDto(orderId:null, orderNo:null, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:david, customerEmail:david.yuan124@gmail.com, level:null), address:25 mavon downs, status:null, orderTime:null, deliverTime:null) 
2014-01-31 21:28:04,203 [ckOrderInbound]] INFO  OrderRequestProcessor          - messageId:82251 
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
2014-01-31 21:28:04,205 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@434049b9[userId=4,username=general,password=MTIzNDU2,createTime=21:13:27]
2014-01-31 21:28:04,206 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)
2014-01-31 21:28:04,206 [ckOrderInbound]] INFO  OrderRequestProcessor          - default operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27) 
2014-01-31 21:28:04,206 [ckOrderInbound]] INFO  OrderProcessDSImpl             - startOrderProcess start:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.process_definition_key=? 
        and workflowmo0_.category=? limit ?
Hibernate: 
    insert 
    into
        t_order
        (order_id, cust_id, deliver_time, order_no, order_time, payment_remarks, payment_status, quantity, ship_address, status, total_price) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-01-31 21:28:04,210 [ckOrderInbound]] INFO  ActivitiFacade                 - startProcessInstance start:{}
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
2014-01-31 21:28:04,216 [ckOrderInbound]] INFO  ActivitiFacade                 - startProcessInstance end:{}
Hibernate: 
    insert 
    into
        t_order_process
        (order_process_id, active_process_definition_id, active_process_instance_id, complete_time, create_time, execution_id, main_process_definition_id, main_process_instance_id, operator_id, order_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2014-01-31 21:28:04,217 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@7f26df3a[orderProcessId=5,executionId=220,mainProcessInstanceId=220,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=220,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=Fri Jan 31 21:28:04 NZDT 2014,completeTime=<null>]
2014-01-31 21:28:04,218 [ckOrderInbound]] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@666e76ad[orderId=5,orderNo=4fa08ad7-5b30-4e40-843d-bebfab6c2118,quantity=<null>,status=0,paymentStatus=0,deliverTime=<null>,totalPrice=<null>,orderTime=Fri Jan 31 21:28:04 NZDT 2014]
2014-01-31 21:28:04,218 [ckOrderInbound]] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:5, orderNo:4fa08ad7-5b30-4e40-843d-bebfab6c2118, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-01-31 08:28:04, deliverTime:null)
2014-01-31 21:28:04,219 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@5cb805fd[userId=4,username=general,password=MTIzNDU2,createTime=21:13:27]
2014-01-31 21:28:04,219 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)
2014-01-31 21:28:04,219 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:5, order:co.nz.pizzashack.data.dto.OrderDto(orderId:5, orderNo:4fa08ad7-5b30-4e40-843d-bebfab6c2118, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-01-31 08:28:04, deliverTime:null), mainProcessInstanceId:220, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:220, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-01-31 08:28:04, completeTime:null, executionId:220, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27))
2014-01-31 21:28:04,219 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:5, order:co.nz.pizzashack.data.dto.OrderDto(orderId:5, orderNo:4fa08ad7-5b30-4e40-843d-bebfab6c2118, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-01-31 08:28:04, deliverTime:null), mainProcessInstanceId:220, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:220, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-01-31 08:28:04, completeTime:null, executionId:220, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)) 
2014-01-31 21:28:04,220 [ckOrderInbound]] INFO  OrderProcessAccessor           - process pending 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
2014-01-31 21:28:04,222 [ckOrderInbound]] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-01-31 21:28:04,222 [ckOrderInbound]] INFO  ActivitiFacade                 - executionId: 220, processDefinitionId: orderlocalProcess:1:15
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-01-31 21:28:04,224 [ckOrderInbound]] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-01-31 21:28:04,226 [ckOrderInbound]] INFO  OrderProcessAccessor           - assign operator[4] to task[Data entry]
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    insert 
    into
        ACT_RU_IDENTITYLINK
        (ID_, REV_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_, PROC_DEF_ID_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_IDENTITYLINK
        (ID_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_)     
    values
        (?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_TASK      
    SET
        REV_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        PRIORITY_ = ?,
        CREATE_TIME_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        DELEGATION_ = ?,
        EXECUTION_ID_ = ?,
        PROC_DEF_ID_ = ?,
        DESCRIPTION_ = ?,
        DUE_DATE_ = ?,
        SUSPENSION_STATE_ = ?      
    where
        ID_= ?       
        and REV_ = ?
2014-01-31 21:28:04,233 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:5, order:co.nz.pizzashack.data.dto.OrderDto(orderId:5, orderNo:4fa08ad7-5b30-4e40-843d-bebfab6c2118, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-01-31 08:28:04, deliverTime:null), mainProcessInstanceId:220, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:220, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-01-31 08:28:04, completeTime:null, executionId:220, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)) 
2014-01-31 21:28:04,234 [ckOrderInbound]] INFO  OrderProcessDSImpl             - startOrderProcess end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:5, order:co.nz.pizzashack.data.dto.OrderDto(orderId:5, orderNo:4fa08ad7-5b30-4e40-843d-bebfab6c2118, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-01-31 08:28:04, deliverTime:null), mainProcessInstanceId:220, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:220, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-01-31 08:28:04, completeTime:null, executionId:220, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27))
2014-01-31 21:28:04,236 [ckOrderInbound]] INFO  OrderRequestProcessor          - after start process:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:5, order:co.nz.pizzashack.data.dto.OrderDto(orderId:5, orderNo:4fa08ad7-5b30-4e40-843d-bebfab6c2118, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-01-31 08:28:04, deliverTime:null), mainProcessInstanceId:220, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:220, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-01-31 08:28:04, completeTime:null, executionId:220, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)) 
2014-01-31 21:28:04,236 [ckOrderInbound]] INFO  OrderProcessDSImpl             - dataEntry start:4fa08ad7-5b30-4e40-843d-bebfab6c2118
2014-01-31 21:28:04,236 [ckOrderInbound]] INFO  OrderProcessDSImpl             - getOrderProcessByOrderNo start************************************
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-01-31 21:28:04,238 [ckOrderInbound]] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@be8aaae[orderProcessId=5,executionId=220,mainProcessInstanceId=220,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=220,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=21:28:04,completeTime=<null>] 
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_,
        customermo0_.address as address2_,
        customermo0_.credits as credits2_,
        customermo0_.customer_name as customer4_2_,
        customermo0_.email as email2_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.email=? limit ?
2014-01-31 21:28:04,240 [ckOrderInbound]] INFO  OrderProcessDSImpl             - orderDetailsSet size:2 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
2014-01-31 21:28:04,241 [ckOrderInbound]] INFO  OrderProcessDSImpl             - added orderPizzashackModel:co.nz.pizzashack.data.model.OrderPizzashackModel@ce3130b[orderPizzashackId=<null>,totalPrice=0,qty=2] 
Hibernate: 
    insert 
    into
        t_order_pizzashack
        (order_pizza_id, order_id, pizzashack_id, qty, total_price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
2014-01-31 21:28:04,243 [ckOrderInbound]] INFO  OrderProcessDSImpl             - added orderPizzashackModel:co.nz.pizzashack.data.model.OrderPizzashackModel@294254f4[orderPizzashackId=<null>,totalPrice=0,qty=4] 
Hibernate: 
    insert 
    into
        t_order_pizzashack
        (order_pizza_id, order_id, pizzashack_id, qty, total_price) 
    values
        (null, ?, ?, ?, ?)
2014-01-31 21:28:04,243 [ckOrderInbound]] INFO  OrderProcessDSImpl             - after add detailsDto, size in model:2 
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        E.BUSINESS_KEY_ = ?                                                                                 
        and RES.PROC_DEF_ID_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                    
        and RES.ASSIGNEE_ = ?                                                                        
        and E.BUSINESS_KEY_ = ?
2014-01-31 21:28:04,246 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@be8aaae[orderProcessId=5,executionId=220,mainProcessInstanceId=220,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=220,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=21:28:04,completeTime=<null>]
2014-01-31 21:28:04,247 [ckOrderInbound]] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@4f1f331[orderId=5,orderNo=4fa08ad7-5b30-4e40-843d-bebfab6c2118,quantity=0,status=0,paymentStatus=0,deliverTime=<null>,totalPrice=0,orderTime=2014-01-31 21:28:04.208]
2014-01-31 21:28:04,247 [ckOrderInbound]] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@6128fbab[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-01-31 21:28:04,247 [ckOrderInbound]] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-01-31 21:28:04,248 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@ce3130b[orderPizzashackId=9,totalPrice=0,qty=2]
2014-01-31 21:28:04,248 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:9, pizzaName:Chicken Parmesan, qty:2, totalPrice:0)
2014-01-31 21:28:04,248 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@294254f4[orderPizzashackId=10,totalPrice=0,qty=4]
2014-01-31 21:28:04,248 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:10, pizzaName:Spicy Italian, qty:4, totalPrice:0)
2014-01-31 21:28:04,248 [ckOrderInbound]] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:5, orderNo:4fa08ad7-5b30-4e40-843d-bebfab6c2118, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:9, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:10, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-01-31 08:28:04, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-01-31 21:28:04,249 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@3df079fa[userId=4,username=general,password=MTIzNDU2,createTime=21:13:27]
2014-01-31 21:28:04,249 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)
2014-01-31 21:28:04,249 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:5, order:co.nz.pizzashack.data.dto.OrderDto(orderId:5, orderNo:4fa08ad7-5b30-4e40-843d-bebfab6c2118, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:9, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:10, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-01-31 08:28:04, deliverTime:null), mainProcessInstanceId:220, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:220, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:28:04, completeTime:null, executionId:220, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27))
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        PARENT_TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE 
    where
        TASK_ID_ =     ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
2014-01-31 21:28:04,256 [ckOrderInbound]] INFO  ainTransitionExecutionListener - orderMainUserTaskExecutionListener start:{} 
2014-01-31 21:28:04,256 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity id:orderCoreCallactivity
2014-01-31 21:28:04,256 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity name:Core process
2014-01-31 21:28:04,257 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity type:callActivity
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
start calculate: co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:5, order:co.nz.pizzashack.data.dto.OrderDto(orderId:5, orderNo:4fa08ad7-5b30-4e40-843d-bebfab6c2118, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:9, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:10, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-01-31 08:28:04, deliverTime:null), mainProcessInstanceId:220, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:220, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:28:04, completeTime:null, executionId:220, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27))
2014-01-31 21:28:04,271 [ckOrderInbound]] INFO  PizzashackCaculator            - caculate start:co.nz.pizzashack.data.dto.OrderDto(orderId:5, orderNo:4fa08ad7-5b30-4e40-843d-bebfab6c2118, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:9, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:10, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-01-31 08:28:04, deliverTime:null) 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-01-31 21:28:04,274 [ckOrderInbound]] INFO  PizzashackCaculator            - caculate end:co.nz.pizzashack.data.dto.OrderDto(orderId:5, orderNo:4fa08ad7-5b30-4e40-843d-bebfab6c2118, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:9, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:10, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-01-31 08:28:04, deliverTime:null) 
after calculation: co.nz.pizzashack.data.dto.OrderDto(orderId:5, orderNo:4fa08ad7-5b30-4e40-843d-bebfab6c2118, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:9, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:10, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-01-31 08:28:04, deliverTime:null)
total qty: 6
after autoreview: 0
reviewTransBean: co.nz.pizzashack.data.dto.OrderReviewRecordDto(reviewRecordId:null, orderNo:4fa08ad7-5b30-4e40-843d-bebfab6c2118, content:null, reviewResult:accept, createTime:2014-01-31 08:28:04, reviewer:null)
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RU_JOB J     
    where
        J.EXECUTION_ID_ = ?
Hibernate: 
    select
        *      
    from
        ACT_RU_EVENT_SUBSCR     
    where
        (
            EXECUTION_ID_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
2014-01-31 21:28:04,306 [ckOrderInbound]] INFO  OfCoreProcessExecutionListener - after core process, orderProcess:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:5, order:co.nz.pizzashack.data.dto.OrderDto(orderId:5, orderNo:4fa08ad7-5b30-4e40-843d-bebfab6c2118, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:9, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:10, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-01-31 08:28:04, deliverTime:null), mainProcessInstanceId:220, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:220, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:28:04, completeTime:null, executionId:220, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)) 
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-01-31 21:28:04,307 [ckOrderInbound]] INFO  ainTransitionExecutionListener - orderMainUserTaskExecutionListener start:{} 
2014-01-31 21:28:04,307 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity id:billingEntry
2014-01-31 21:28:04,307 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity name:Billing fill in
2014-01-31 21:28:04,307 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity type:userTask
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    update
        ACT_RU_EXECUTION 
    set
        REV_ = ?,
        BUSINESS_KEY_ = ?,
        PROC_DEF_ID_ = ?,
        ACT_ID_ = ?,
        IS_ACTIVE_ = ?,
        IS_CONCURRENT_ = ?,
        IS_SCOPE_ = ?,
        IS_EVENT_SCOPE_ = ?,
        PARENT_ID_ = ?,
        SUPER_EXEC_ = ?,
        SUSPENSION_STATE_ = ?,
        CACHED_ENT_STATE_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_TASK 
    where
        ID_ = ? 
        and REV_ = ?
2014-01-31 21:28:04,331 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:5, order:co.nz.pizzashack.data.dto.OrderDto(orderId:5, orderNo:4fa08ad7-5b30-4e40-843d-bebfab6c2118, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:9, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:10, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-01-31 08:28:04, deliverTime:null), mainProcessInstanceId:220, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:220, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:28:04, completeTime:null, executionId:220, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)) 
2014-01-31 21:28:04,331 [ckOrderInbound]] INFO  OrderProcessAccessor           - process pending 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-01-31 21:28:04,336 [ckOrderInbound]] INFO  OrderProcessAccessor           - get OrderProcessDto from flow:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:5, order:co.nz.pizzashack.data.dto.OrderDto(orderId:5, orderNo:4fa08ad7-5b30-4e40-843d-bebfab6c2118, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:9, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:10, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-01-31 08:28:04, deliverTime:null), mainProcessInstanceId:220, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:220, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:28:04, completeTime:null, executionId:220, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)) 
2014-01-31 21:28:04,336 [ckOrderInbound]] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-01-31 21:28:04,336 [ckOrderInbound]] INFO  ActivitiFacade                 - executionId: 220, processDefinitionId: orderlocalProcess:1:15
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-01-31 21:28:04,339 [ckOrderInbound]] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-01-31 21:28:04,341 [ckOrderInbound]] INFO  OrderProcessAccessor           - assign operator[4] to task[Billing fill in]
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_TASK      
    SET
        REV_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        PRIORITY_ = ?,
        CREATE_TIME_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        DELEGATION_ = ?,
        EXECUTION_ID_ = ?,
        PROC_DEF_ID_ = ?,
        DESCRIPTION_ = ?,
        DUE_DATE_ = ?,
        SUSPENSION_STATE_ = ?      
    where
        ID_= ?       
        and REV_ = ?
2014-01-31 21:28:04,347 [ckOrderInbound]] INFO  OrderProcessAccessor           - merge calculation result
2014-01-31 21:28:04,347 [ckOrderInbound]] INFO  OrderProcessAccessor           - total price:162.00 
2014-01-31 21:28:04,347 [ckOrderInbound]] INFO  OrderProcessAccessor           - qty:6 
2014-01-31 21:28:04,347 [ckOrderInbound]] INFO  OrderProcessAccessor           - orderDetailsSet.size():2
2014-01-31 21:28:04,347 [ckOrderInbound]] INFO  OrderProcessAccessor           - after merge orderProcessModel:co.nz.pizzashack.data.model.OrderProcessModel@be8aaae[orderProcessId=5,executionId=220,mainProcessInstanceId=220,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=220,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=21:28:04,completeTime=<null>] 
2014-01-31 21:28:04,348 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:5, order:co.nz.pizzashack.data.dto.OrderDto(orderId:5, orderNo:4fa08ad7-5b30-4e40-843d-bebfab6c2118, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:9, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:10, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-01-31 08:28:04, deliverTime:null), mainProcessInstanceId:220, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:220, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:28:04, completeTime:null, executionId:220, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)) 
2014-01-31 21:28:04,349 [ckOrderInbound]] INFO  OrderProcessDSImpl             - dataEntry end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:5, order:co.nz.pizzashack.data.dto.OrderDto(orderId:5, orderNo:4fa08ad7-5b30-4e40-843d-bebfab6c2118, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:9, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:10, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-01-31 08:28:04, deliverTime:null), mainProcessInstanceId:220, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:220, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:28:04, completeTime:null, executionId:220, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27))
Hibernate: 
    update
        t_order 
    set
        cust_id=?,
        deliver_time=?,
        order_no=?,
        order_time=?,
        payment_remarks=?,
        payment_status=?,
        quantity=?,
        ship_address=?,
        status=?,
        total_price=? 
    where
        order_id=?
Hibernate: 
    update
        t_order_pizzashack 
    set
        order_id=?,
        pizzashack_id=?,
        qty=?,
        total_price=? 
    where
        order_pizza_id=?
Hibernate: 
    update
        t_order_pizzashack 
    set
        order_id=?,
        pizzashack_id=?,
        qty=?,
        total_price=? 
    where
        order_pizza_id=?
2014-01-31 21:28:04,352 [ckOrderInbound]] INFO  OrderRequestProcessor          - after dataEntry:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:5, order:co.nz.pizzashack.data.dto.OrderDto(orderId:5, orderNo:4fa08ad7-5b30-4e40-843d-bebfab6c2118, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:9, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:10, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-01-31 08:28:04, deliverTime:null), mainProcessInstanceId:220, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:220, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:28:04, completeTime:null, executionId:220, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27)) 
2014-01-31 21:28:04,352 [ckOrderInbound]] INFO  OrderConverter                 - toModel start:{} co.nz.pizzashack.data.dto.OrderDto(orderId:5, orderNo:4fa08ad7-5b30-4e40-843d-bebfab6c2118, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:9, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:10, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-01-31 08:28:04, deliverTime:null)
2014-01-31 21:28:04,353 [ckOrderInbound]] INFO  OrderConverter                 - toModel end:{} co.nz.pizzashack.data.model.OrderModel@4da0c24[orderId=<null>,orderNo=4fa08ad7-5b30-4e40-843d-bebfab6c2118,quantity=6,status=<null>,paymentStatus=0,deliverTime=<null>,totalPrice=162.00,orderTime=<null>]
Hibernate: 
    select
        orderreque0_.message_id as message1_0_0_,
        orderreque0_.created_at as created2_0_0_,
        orderreque0_.order_id as order4_0_0_,
        orderreque0_.processor_name as processor3_0_0_ 
    from
        t_order_request_history orderreque0_ 
    where
        orderreque0_.message_id=?
2014-01-31 21:28:04,354 [ckOrderInbound]] INFO  OrderRequestProcessor          - orderRequestProcessor end:{} 
2014-01-31 21:28:04,356 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlMarshal start:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:5, order:co.nz.pizzashack.data.dto.OrderDto(orderId:5, orderNo:4fa08ad7-5b30-4e40-843d-bebfab6c2118, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:9, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:10, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-01-31 08:28:04, deliverTime:null), mainProcessInstanceId:220, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:220, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:28:04, completeTime:null, executionId:220, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:13:27))
2014-01-31 21:28:04,357 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - pendingActivity:{} co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
2014-01-31 21:28:04,357 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - customerDto:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-01-31 21:28:04,359 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlMarshal end:{} <order-process>
  <process-id>5</process-id>
  <create-time>1970-01-01 09:28:04</create-time>
  <complete-time>null</complete-time>
  <operator>general</operator>
  <order>
    <address>25 mavon downs</address>
    <quantity>6</quantity>
    <total-price>162.00</total-price>
    <status>pendingOnBilling</status>
    <order-time>2014-01-31 08:28:04</order-time>
    <deliver-time>null</deliver-time>
    <order-list>
      <order-details>
        <pizza-name>Chicken Parmesan</pizza-name>
        <quantity>2</quantity>
        <total-price>50.00</total-price>
      </order-details>
      <order-details>
        <pizza-name>Spicy Italian</pizza-name>
        <quantity>4</quantity>
        <total-price>112.00</total-price>
      </order-details>
    </order-list>
  </order>
  <customer>
    <name>david</name>
    <email>david.yuan124@gmail.com</email>
  </customer>
  <pending-activity>
    <name>Billing fill in</name>
    <type>userTask</type>
    <assignee>4</assignee>
  </pending-activity>
</order-process>
2014-01-31 21:28:04,360 [ckOrderInbound]] INFO  output                         - Exchange[ExchangePattern: InOnly, BodyType: String, Body: <order-process>  <process-id>5</process-id>  <create-time>1970-01-01 09:28:04</create-time>  <complete-time>null</complete-time>  <operator>general</operator>  <order>    <address>25 mavon downs</address>    <quantity>6</quantity>    <total-price>162.00</total-price>    <status>pendingOnBilling</status>    <order-time>2014-01-31 08:28:04</order-time>    <deliver-time>null</deliver-time>    <order-list>      <order-details>        <pizza-name>Chicken Parmesan</pizza-name>        <quantity>2</quantity>        <total-price>50.00</total-price>      </order-details>      <order-details>        <pizza-name>Spicy Italian</pizza-name>        <quantity>4</quantity>        <total-price>112.00</total-price>      </order-details>    </order-list>  </order>  <customer>    <name>david</name>    <email>david.yuan124@gmail.com</email>  </customer>  <pending-activity>    <name>Billing fill in</name>    <type>userTask</type>    <assignee>4</assignee>  </pending-activity></order-process>]
2014-01-31 21:28:04,399 [ckOrderInbound]] INFO  orderProcessRoute              - Signalled to stop route
^C2014-01-31 21:30:42.149:INFO:/:Destroying Spring FrameworkServlet 'dispatcher'
2014-01-31 21:30:42,149 [Thread-1       ] INFO  ionConfigWebApplicationContext - Closing Root WebApplicationContext: startup date [Fri Jan 31 21:13:20 NZDT 2014]; root of context hierarchy
2014-01-31 21:30:42,151 [Thread-1       ] INFO  DefaultListableBeanFactory     - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@5bec0168: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,applicationConfiguration,webMvcContextConfiguration,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,viewConfiguration,logoutController,loginController,indexController,userController,adminIndexController,departmentController,orderController,staffController,billingProcessRespTransformer,billingProcessReqTransformer,orderProcessFormatTransformer,billingVariableTransformer,billingResponseMergeProcessor,billingFormatTransformer,orderDuplicatedReqProcessor,orderRequestProcessor,billingProcessRoute,orderProcessRoute,sleepBean,pizzashackAPIImpl,camelSpringConfig,camelJdbcIdempotentConfig,orderProcessDSImpl,customerDSImpl,workflowDSImpl,pizzashackDSImpl,userDSImpl,orderProcessAccessor,orderProcessQueryDSImpl,staffDSImpl,orderDSImpl,departmentDSImpl,initialDataConfig,pizzashackCaculator,emailExecutionListener,endExecutionListener,orderMainTransitionExecutionListener,toManualReviewExecutionListener,outOfBillingProcessExecutionListener,outOfCoreProcessExecutionListener,billingRespExecutionListener,customerConverter,orderProcessConverter,staffConverter,userConverter,departmentConverter,workflowConverter,orderReviewRecordConverter,orderConverter,activityDiscountRateConverter,orderDetailConverter,pizzashackDataInitialConfiguration,pizzashackItemBuilder,infrastructureContextConfiguration,activitiFacade,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0,org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0,activityDiscountRateRepository,orderPizzashackRepository,departmentRepository,staffDepartmentRepository,userRepository,customerRepository,orderRepository,pizzashackRepository,orderReviewRecordRepository,orderRequestHistoryRepository,workflowRepository,orderProcessRepository,staffRepository,viewResolver,messageSource,activeMQConnectionFactory,pooledConnectionFactory,jmsComponent,jmsTransactionManager,camelBeanPostProcessor,camelContext,custThreadPoolProfile,sqlComponent,orderJdbcMessageIdRepository,setupWorkflowData,setupData,org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration,org.springframework.transaction.config.internalTransactionAdvisor,transactionAttributeSource,transactionInterceptor,dataSource,transactionManager,entityManagerFactory,placeholderConfig,processEngineConfiguration,processEngine,repositoryService,runtimeService,taskService,historyService,managementService,identityService,org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration,viewControllerHandlerMapping,beanNameHandlerMapping,resourceHandlerMapping,defaultServletHandlerMapping,requestMappingHandlerAdapter,mvcConversionService,mvcValidator,httpRequestHandlerAdapter,simpleControllerHandlerAdapter,requestMappingHandlerMapping,mvcContentNegotiationManager,handlerExceptionResolver,sessionAttributeProcessor,multipartResolver,localeChangeInterceptor,localeResolver,simpleMappingExceptionResolver]; root of factory hierarchy
2014-01-31 21:30:42,155 [Thread-1       ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) is shutting down
2014-01-31 21:30:42,156 [Thread-1       ] INFO  DefaultShutdownStrategy        - Starting to graceful shutdown 7 routes (timeout 300 seconds)
2014-01-31 21:30:42,160 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:orderRegularProcess shutdown complete, was consuming from: Endpoint[direct://orderRegularProcess]
2014-01-31 21:30:42,160 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:orderDuplicatedProcess shutdown complete, was consuming from: Endpoint[direct://orderDuplicatedProcess]
2014-01-31 21:30:42,539 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: orderProcessRoute shutdown complete, was consuming from: Endpoint[jms://queue:pizzashackOrderInbound]
2014-01-31 21:30:42,539 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: route1 shutdown complete, was consuming from: Endpoint[direct://doBillingIntegration]
2014-01-31 21:30:42,539 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:receiveBillingQueue shutdown complete, was consuming from: Endpoint[direct://receiveBillingQueue]
2014-01-31 21:30:42,539 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:billingIntegration shutdown complete, was consuming from: Endpoint[direct://billingIntegration]
2014-01-31 21:30:42,540 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: activitiBillingProcess shutdown complete, was consuming from: Endpoint[activiti://orderBillingProcess:billingIntegration?copyVariablesToBodyAsMap=true]
2014-01-31 21:30:42,540 [Thread-1       ] INFO  DefaultShutdownStrategy        - Graceful shutdown of 7 routes completed in 0 seconds
2014-01-31 21:30:42,556 [Thread-1       ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) uptime 17 minutes
2014-01-31 21:30:42,556 [Thread-1       ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) is shutdown in 0.401 seconds
2014-01-31 21:30:42,574 [Thread-1       ] INFO  tainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2014-01-31 21:30:42,575 [Thread-1       ] INFO  SchemaExport                   - HHH000227: Running hbm2ddl schema export
Hibernate: 
    alter table t_activity_discount_rate 
        drop constraint FKA400C193698FCC4
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE11193A98D65
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE111A27DDA4A
Hibernate: 
    alter table t_order 
        drop constraint FKA0C0C3C3E11F4FCB
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB0883698FCC4
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB088BBCB676E
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F33E99148D
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F3BBCB676E
Hibernate: 
    alter table t_order_request_history 
        drop constraint FK5A6B268BBCB676E
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CA6130105
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CBBCB676E
Hibernate: 
    alter table t_staff 
        drop constraint FKA0F9FF552DC32C06
Hibernate: 
    drop table t_activity_discount_rate if exists
Hibernate: 
    drop table t_customer if exists
Hibernate: 
    drop table t_dept if exists
Hibernate: 
    drop table t_dept_staff if exists
Hibernate: 
    drop table t_order if exists
Hibernate: 
    drop table t_order_pizzashack if exists
Hibernate: 
    drop table t_order_process if exists
Hibernate: 
    drop table t_order_request_history if exists
Hibernate: 
    drop table t_order_review_record if exists
Hibernate: 
    drop table t_pizzashack if exists
Hibernate: 
    drop table t_staff if exists
Hibernate: 
    drop table t_user if exists
Hibernate: 
    drop table t_workflow if exists
2014-01-31 21:30:42,586 [Thread-1       ] INFO  SchemaExport                   - HHH000230: Schema export complete
2014-01-31 21:30:42.617:INFO:/:Closing Spring root WebApplicationContext
2014-01-31 21:30:42.620:INFO:oejsl.ELContextCleaner:javax.el.BeanELResolver purged
2014-01-31 21:30:42.620:INFO:oejsh.ContextHandler:stopped o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
[INFO] Jetty server exiting.
2014-01-31 21:30:42.673:INFO:oejut.ShutdownThread:shutdown already commenced
]0;david@david: ~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-webdavid@david:~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web$ cd ..
]0;david@david: ~/study/activiti5/code/github/pizzashack-order/pizzashack-distributordavid@david:~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor$ cd ..
]0;david@david: ~/study/activiti5/code/github/pizzashack-orderdavid@david:~/study/activiti5/code/github/pizzashack-order$ ls
[0m[01;34mpizzashack-billing[0m  [01;34mpizzashack-client[0m  [01;34mpizzashack-distributor[0m
]0;david@david: ~/study/activiti5/code/github/pizzashack-orderdavid@david:~/study/activiti5/code/github/pizzashack-order$ git add --all
]0;david@david: ~/study/activiti5/code/github/pizzashack-orderdavid@david:~/study/activiti5/code/github/pizzashack-order$ git commit -m ""i"m"p"o"r"t" "[1P"[1P"[1P"[1P"[1P"[1P"m"p"o"r"t" "[1P"[1P"[1P"[1P"[1P"[1P"[1P"f"i"x" "x"m"l" "m"a"r"s"h"a"l" "f"o"r" "o"r"d"e"r" "r"e"q"u"e"s"t"[C
[master 6b65e2c] fix xml marshal for order request
 13 files changed, 8614 insertions(+), 31 deletions(-)
 delete mode 100644 pizzashack-billing/pizzashack-billing-web/tmlog.lck
 create mode 100644 pizzashack-client/pizzashack-client-ds/src/test/java/co/nz/pizzashack/client/test/OrderProcessXmlFormatTest.java
 delete mode 100644 pizzashack-distributor/pizzashack-distributor-integration/192.168.1.68.tm0.epoch
 rename pizzashack-distributor/pizzashack-distributor-integration/src/main/resources/{activitymq-config.properties => mq-config.properties} (100%)
 create mode 100644 pizzashack-distributor/pizzashack-distributor-integration/src/test/java/co/nz/pizzashack/test/OrderXmlFormatTransformerTest.java
 delete mode 100644 pizzashack-distributor/pizzashack-distributor-integration/tmlog0.log
 create mode 100644 pizzashack-distributor/pizzashack-distributor-web/screen.log
]0;david@david: ~/study/activiti5/code/github/pizzashack-orderdavid@david:~/study/activiti5/code/github/pizzashack-order$ git push -u origin master
Username for 'https://github.com': davidy104
Password for 'https://davidy104@github.com': 
remote: Invalid username or password.
fatal: Authentication failed for 'https://github.com/davidy104/pizzashack-order.git/'
]0;david@david: ~/study/activiti5/code/github/pizzashack-orderdavid@david:~/study/activiti5/code/github/pizzashack-order$ git push -u origin master
Username for 'https://github.com': DAVI    davidy104
Password for 'https://davidy104@github.com': 
Counting objects: 86, done.
Delta compression using up to 4 threads.
Compressing objects:   3% (1/33)   Compressing objects:   6% (2/33)   Compressing objects:   9% (3/33)   Compressing objects:  12% (4/33)   Compressing objects:  15% (5/33)   Compressing objects:  18% (6/33)   Compressing objects:  21% (7/33)   Compressing objects:  24% (8/33)   Compressing objects:  27% (9/33)   Compressing objects:  30% (10/33)   Compressing objects:  33% (11/33)   Compressing objects:  36% (12/33)   Compressing objects:  39% (13/33)   Compressing objects:  42% (14/33)   Compressing objects:  45% (15/33)   Compressing objects:  48% (16/33)   Compressing objects:  51% (17/33)   Compressing objects:  54% (18/33)   Compressing objects:  57% (19/33)   Compressing objects:  60% (20/33)   Compressing objects:  63% (21/33)   Compressing objects:  66% (22/33)   Compressing objects:  69% (23/33)   Compressing objects:  72% (24/33)   Compressing objects:  75% (25/33)   Compressing objects:  78% (26/33)   Compressing objects:  81% (27/33)   Compressing objects:  84% (28/33)   Compressing objects:  87% (29/33)   Compressing objects:  90% (30/33)   Compressing objects:  93% (31/33)   Compressing objects:  96% (32/33)   Compressing objects: 100% (33/33)   Compressing objects: 100% (33/33), done.
Writing objects:   1% (1/51)   Writing objects:   3% (2/51)   Writing objects:   5% (3/51)   Writing objects:   7% (4/51)   Writing objects:   9% (5/51)   Writing objects:  11% (6/51)   Writing objects:  13% (7/51)   Writing objects:  15% (8/51)   Writing objects:  17% (9/51)   Writing objects:  19% (10/51)   Writing objects:  21% (11/51)   Writing objects:  23% (12/51)   Writing objects:  25% (13/51)   Writing objects:  27% (14/51)   Writing objects:  29% (15/51)   Writing objects:  31% (16/51)   Writing objects:  33% (17/51)   Writing objects:  35% (18/51)   Writing objects:  37% (19/51)   Writing objects:  39% (20/51)   Writing objects:  41% (21/51)   Writing objects:  43% (22/51)   Writing objects:  45% (23/51)   Writing objects:  47% (24/51)   Writing objects:  49% (25/51)   Writing objects:  50% (26/51)   Writing objects:  52% (27/51)   Writing objects:  54% (28/51)   Writing objects:  56% (29/51)   Writing objects:  58% (30/51)   Writing objects:  60% (31/51)   Writing objects:  62% (32/51)   Writing objects:  64% (33/51)   Writing objects:  66% (34/51)   Writing objects:  68% (35/51)   Writing objects:  70% (36/51)   Writing objects:  72% (37/51)   Writing objects:  74% (38/51)   Writing objects:  76% (39/51)   Writing objects:  78% (40/51)   Writing objects:  80% (41/51)   Writing objects:  82% (42/51)   Writing objects:  84% (43/51)   Writing objects:  86% (44/51)   Writing objects:  88% (45/51)   Writing objects:  90% (46/51)   Writing objects:  92% (47/51)   Writing objects:  94% (48/51)   Writing objects:  96% (49/51)   Writing objects:  98% (50/51)   Writing objects: 100% (51/51)   Writing objects: 100% (51/51), 52.24 KiB | 0 bytes/s, done.
Total 51 (delta 15), reused 0 (delta 0)
To https://github.com/davidy104/pizzashack-order.git
   c07a0fa..6b65e2c  master -> master
Branch master set up to track remote branch master from origin.
]0;david@david: ~/study/activiti5/code/github/pizzashack-orderdavid@david:~/study/activiti5/code/github/pizzashack-order$ ls
[0m[01;34mpizzashack-billing[0m  [01;34mpizzashack-client[0m  [01;34mpizzashack-distributor[0m
]0;david@david: ~/study/activiti5/code/github/pizzashack-orderdavid@david:~/study/activiti5/code/github/pizzashack-order$ cd pizzashack-distributor/
]0;david@david: ~/study/activiti5/code/github/pizzashack-order/pizzashack-distributordavid@david:~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor$ mvn clean install
[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Build Order:
[INFO] 
[INFO] pizzashack-distributor
[INFO] pizzashack-distributor-shared
[INFO] pizzashack-distributor-repository
[INFO] pizzashack-distributor-ds
[INFO] pizzashack-distributor-integration
[INFO] pizzashack-distributor-web Maven Webapp
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building pizzashack-distributor 1.0.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:2.4.1:clean (default-clean) @ pizzashack-distributor ---
[INFO] 
[INFO] --- maven-install-plugin:2.3.1:install (default-install) @ pizzashack-distributor ---
[INFO] Installing /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pom.xml to /home/david/.m2/repository/co/nz/pizzashack/pizzashack-distributor/1.0.0-SNAPSHOT/pizzashack-distributor-1.0.0-SNAPSHOT.pom
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building pizzashack-distributor-shared 1.0.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[WARNING] The artifact jdom:jdom:jar:1.1 has been relocated to org.jdom:jdom:jar:1.1
[WARNING] The artifact commons-email:commons-email:jar:1.1 has been relocated to org.apache.commons:commons-email:jar:1.1
[INFO] 
[INFO] --- maven-clean-plugin:2.4.1:clean (default-clean) @ pizzashack-distributor-shared ---
[INFO] Deleting /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-shared/target
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ pizzashack-distributor-shared ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] Copying 4 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ pizzashack-distributor-shared ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ pizzashack-distributor-shared ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-shared/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ pizzashack-distributor-shared ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-surefire-plugin:2.5:test (default-test) @ pizzashack-distributor-shared ---
[INFO] No tests to run.
[INFO] 
[INFO] --- maven-jar-plugin:2.2:jar (default-jar) @ pizzashack-distributor-shared ---
[INFO] Building jar: /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-shared/target/pizzashack-distributor-shared-1.0.0-SNAPSHOT.jar
[INFO] 
[INFO] --- maven-install-plugin:2.3.1:install (default-install) @ pizzashack-distributor-shared ---
[INFO] Installing /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-shared/target/pizzashack-distributor-shared-1.0.0-SNAPSHOT.jar to /home/david/.m2/repository/co/nz/pizzashack/pizzashack-distributor-shared/1.0.0-SNAPSHOT/pizzashack-distributor-shared-1.0.0-SNAPSHOT.jar
[INFO] Installing /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-shared/pom.xml to /home/david/.m2/repository/co/nz/pizzashack/pizzashack-distributor-shared/1.0.0-SNAPSHOT/pizzashack-distributor-shared-1.0.0-SNAPSHOT.pom
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building pizzashack-distributor-repository 1.0.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:2.4.1:clean (default-clean) @ pizzashack-distributor-repository ---
[INFO] Deleting /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-repository/target
[INFO] 
[INFO] --- maven-apt-plugin:1.0.4:process (default) @ pizzashack-distributor-repository ---
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ pizzashack-distributor-repository ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-repository/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ pizzashack-distributor-repository ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ pizzashack-distributor-repository ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-repository/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ pizzashack-distributor-repository ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-surefire-plugin:2.5:test (default-test) @ pizzashack-distributor-repository ---
[INFO] No tests to run.
[INFO] 
[INFO] --- maven-jar-plugin:2.2:jar (default-jar) @ pizzashack-distributor-repository ---
[INFO] Building jar: /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-repository/target/pizzashack-distributor-repository-1.0.0-SNAPSHOT.jar
[INFO] 
[INFO] --- maven-install-plugin:2.3.1:install (default-install) @ pizzashack-distributor-repository ---
[INFO] Installing /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-repository/target/pizzashack-distributor-repository-1.0.0-SNAPSHOT.jar to /home/david/.m2/repository/co/nz/pizzashack/pizzashack-distributor-repository/1.0.0-SNAPSHOT/pizzashack-distributor-repository-1.0.0-SNAPSHOT.jar
[INFO] Installing /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-repository/pom.xml to /home/david/.m2/repository/co/nz/pizzashack/pizzashack-distributor-repository/1.0.0-SNAPSHOT/pizzashack-distributor-repository-1.0.0-SNAPSHOT.pom
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building pizzashack-distributor-ds 1.0.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:2.4.1:clean (default-clean) @ pizzashack-distributor-ds ---
[INFO] Deleting /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-ds/target
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ pizzashack-distributor-ds ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] Copying 11 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ pizzashack-distributor-ds ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ pizzashack-distributor-ds ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-ds/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ pizzashack-distributor-ds ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] --- maven-surefire-plugin:2.5:test (default-test) @ pizzashack-distributor-ds ---
[INFO] Surefire report directory: /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-ds/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running co.nz.pizzashack.test.CollectionTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.041 sec

Results :

Tests run: 1, Failures: 0, Errors: 0, Skipped: 1

[INFO] 
[INFO] --- maven-jar-plugin:2.2:jar (default-jar) @ pizzashack-distributor-ds ---
[INFO] Building jar: /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-ds/target/pizzashack-distributor-ds-1.0.0-SNAPSHOT.jar
[INFO] 
[INFO] --- maven-install-plugin:2.3.1:install (default-install) @ pizzashack-distributor-ds ---
[INFO] Installing /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-ds/target/pizzashack-distributor-ds-1.0.0-SNAPSHOT.jar to /home/david/.m2/repository/co/nz/pizzashack/pizzashack-distributor-ds/1.0.0-SNAPSHOT/pizzashack-distributor-ds-1.0.0-SNAPSHOT.jar
[INFO] Installing /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-ds/pom.xml to /home/david/.m2/repository/co/nz/pizzashack/pizzashack-distributor-ds/1.0.0-SNAPSHOT/pizzashack-distributor-ds-1.0.0-SNAPSHOT.pom
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building pizzashack-distributor-integration 1.0.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:2.4.1:clean (default-clean) @ pizzashack-distributor-integration ---
[INFO] Deleting /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-integration/target
[INFO] 
[INFO] --- maven-jaxb2-plugin:0.8.2:generate (generate) @ pizzashack-distributor-integration ---
[INFO] Skipped XJC execution. No schemas to compile.
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ pizzashack-distributor-integration ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] Copying 2 resources
[INFO] skip non existing resourceDirectory /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-integration/target/generated-sources/xjc
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ pizzashack-distributor-integration ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ pizzashack-distributor-integration ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-integration/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ pizzashack-distributor-integration ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] --- maven-surefire-plugin:2.5:test (default-test) @ pizzashack-distributor-integration ---
[INFO] Surefire report directory: /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-integration/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running co.nz.pizzashack.test.BillingSimpleTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.056 sec
Running co.nz.pizzashack.test.BillingActivitiTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.01 sec
Running co.nz.pizzashack.test.OrderXmlFormatTransformerTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.008 sec

Results :

Tests run: 3, Failures: 0, Errors: 0, Skipped: 3

[INFO] 
[INFO] --- maven-jar-plugin:2.2:jar (default-jar) @ pizzashack-distributor-integration ---
[INFO] Building jar: /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-integration/target/pizzashack-distributor-integration-1.0.0-SNAPSHOT.jar
[INFO] 
[INFO] --- maven-install-plugin:2.3.1:install (default-install) @ pizzashack-distributor-integration ---
[INFO] Installing /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-integration/target/pizzashack-distributor-integration-1.0.0-SNAPSHOT.jar to /home/david/.m2/repository/co/nz/pizzashack/pizzashack-distributor-integration/1.0.0-SNAPSHOT/pizzashack-distributor-integration-1.0.0-SNAPSHOT.jar
[INFO] Installing /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-integration/pom.xml to /home/david/.m2/repository/co/nz/pizzashack/pizzashack-distributor-integration/1.0.0-SNAPSHOT/pizzashack-distributor-integration-1.0.0-SNAPSHOT.pom
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building pizzashack-distributor-web Maven Webapp 1.0.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:2.4.1:clean (default-clean) @ pizzashack-distributor-web ---
[INFO] Deleting /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/target
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ pizzashack-distributor-web ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 31 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ pizzashack-distributor-web ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ pizzashack-distributor-web ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ pizzashack-distributor-web ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] --- maven-surefire-plugin:2.5:test (default-test) @ pizzashack-distributor-web ---
[INFO] Surefire report directory: /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running co.nz.pizzashack.test.OrderProcessTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.064 sec

Results :

Tests run: 1, Failures: 0, Errors: 0, Skipped: 1

[INFO] 
[INFO] --- maven-war-plugin:2.1.1:war (default-war) @ pizzashack-distributor-web ---
[INFO] Packaging webapp
[INFO] Assembling webapp [pizzashack-distributor-web] in [/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/target/pizzashack-distributor-web]
[INFO] Processing war project
[INFO] Copying webapp resources [/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp]
[INFO] Webapp assembled in [223 msecs]
[INFO] Building war: /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/target/pizzashack-distributor-web.war
[INFO] 
[INFO] --- maven-install-plugin:2.3.1:install (default-install) @ pizzashack-distributor-web ---
[INFO] Installing /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/target/pizzashack-distributor-web.war to /home/david/.m2/repository/co/nz/pizzashack/pizzashack-distributor-web/1.0.0-SNAPSHOT/pizzashack-distributor-web-1.0.0-SNAPSHOT.war
[INFO] Installing /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/pom.xml to /home/david/.m2/repository/co/nz/pizzashack/pizzashack-distributor-web/1.0.0-SNAPSHOT/pizzashack-distributor-web-1.0.0-SNAPSHOT.pom
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary:
[INFO] 
[INFO] pizzashack-distributor ............................ SUCCESS [0.222s]
[INFO] pizzashack-distributor-shared ..................... SUCCESS [3.254s]
[INFO] pizzashack-distributor-repository ................. SUCCESS [1.635s]
[INFO] pizzashack-distributor-ds ......................... SUCCESS [1.099s]
[INFO] pizzashack-distributor-integration ................ SUCCESS [1.549s]
[INFO] pizzashack-distributor-web Maven Webapp ........... SUCCESS [5.336s]
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 13.275s
[INFO] Finished at: Fri Jan 31 21:32:32 NZDT 2014
[INFO] Final Memory: 46M/643M
[INFO] ------------------------------------------------------------------------
]0;david@david: ~/study/activiti5/code/github/pizzashack-order/pizzashack-distributordavid@david:~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor$ ls
[0m[01;34mpizzashack-distributor-ds[0m  [01;34mpizzashack-distributor-integration[0m  [01;34mpizzashack-distributor-repository[0m  [01;34mpizzashack-distributor-shared[0m  [01;34mpizzashack-distributor-web[0m  pom.xml
]0;david@david: ~/study/activiti5/code/github/pizzashack-order/pizzashack-distributordavid@david:~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor$ cd pizzashack-distributor-web/
]0;david@david: ~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-webdavid@david:~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web$ mvn jetty:run
[INFO] Scanning for projects...
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building pizzashack-distributor-web Maven Webapp 1.0.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] >>> jetty-maven-plugin:8.1.5.v20120716:run (default-cli) @ pizzashack-distributor-web >>>
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ pizzashack-distributor-web ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 31 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ pizzashack-distributor-web ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ pizzashack-distributor-web ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ pizzashack-distributor-web ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] <<< jetty-maven-plugin:8.1.5.v20120716:run (default-cli) @ pizzashack-distributor-web <<<
[INFO] 
[INFO] --- jetty-maven-plugin:8.1.5.v20120716:run (default-cli) @ pizzashack-distributor-web ---
[INFO] Configuring Jetty for project: pizzashack-distributor-web Maven Webapp
[INFO] webAppSourceDirectory /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp does not exist. Defaulting to /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp
[INFO] Reload Mechanic: automatic
[INFO] Classes = /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/target/classes
[INFO] Context path = /
[INFO] Tmp directory = /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/target/tmp
[INFO] Web defaults = org/eclipse/jetty/webapp/webdefault.xml
[INFO] Web overrides =  none
[INFO] web.xml file = null
[INFO] Webapp directory = /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp
2014-01-31 21:32:53.344:INFO:oejs.Server:jetty-8.1.5.v20120716
2014-01-31 21:32:55.754:INFO:oejpw.PlusConfiguration:No Transaction manager found - if your webapp requires one, please configure one.
2014-01-31 21:33:28.647:INFO:/:Spring WebApplicationInitializers detected on classpath: [co.nz.pizzashack.config.PizzashackDistributorWebInitializer@3708400a]
2014-01-31 21:33:28.990:INFO:oejsh.ContextHandler:started o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
2014-01-31 21:33:28.990:INFO:oejsh.ContextHandler:started o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
2014-01-31 21:33:28.990:INFO:oejsh.ContextHandler:started o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
2014-01-31 21:33:28.990:INFO:/:Initializing Spring root WebApplicationContext
2014-01-31 21:33:28,991 [main           ] INFO  ContextLoader                  - Root WebApplicationContext: initialization started
2014-01-31 21:33:28,993 [main           ] INFO  ionConfigWebApplicationContext - Refreshing Root WebApplicationContext: startup date [Fri Jan 31 21:33:28 NZDT 2014]; root of context hierarchy
2014-01-31 21:33:29,046 [main           ] INFO  ClassPathBeanDefinitionScanner - JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2014-01-31 21:33:29,047 [main           ] INFO  ClassPathBeanDefinitionScanner - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2014-01-31 21:33:29,047 [main           ] INFO  ionConfigWebApplicationContext - Registering annotated classes: [class co.nz.pizzashack.config.ApplicationConfiguration,class co.nz.pizzashack.config.WebMvcContextConfiguration]
2014-01-31 21:33:29,095 [main           ] INFO  ClassPathBeanDefinitionScanner - JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2014-01-31 21:33:29,095 [main           ] INFO  ClassPathBeanDefinitionScanner - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2014-01-31 21:33:30,127 [main           ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [activitiAppContext.xml]
2014-01-31 21:33:30,470 [main           ] INFO  PropertyPlaceholderConfigurer  - Loading properties file from class path resource [activiti.properties]
2014-01-31 21:33:30,485 [main           ] INFO  redAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2014-01-31 21:33:30,532 [main           ] INFO  ionConfigWebApplicationContext - Bean 'infrastructureContextConfiguration' of type [class co.nz.pizzashack.config.InfrastructureContextConfiguration$$EnhancerByCGLIB$$e55468f9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:30,557 [main           ] INFO  MLog                           - MLog clients using log4j logging.
2014-01-31 21:33:30,603 [main           ] INFO  C3P0Registry                   - Initializing c3p0-0.9.1.2 [built 21-May-2007 15:04:56; debug? true; trace: 10]
2014-01-31 21:33:30,644 [main           ] INFO  ionConfigWebApplicationContext - Bean 'dataSource' of type [class com.mchange.v2.c3p0.ComboPooledDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:30,724 [main           ] INFO  tainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default'
2014-01-31 21:33:30,800 [main           ] INFO  Version                        - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2014-01-31 21:33:30,805 [main           ] INFO  Version                        - HHH000412: Hibernate Core {4.1.4.Final}
2014-01-31 21:33:30,807 [main           ] INFO  Environment                    - HHH000206: hibernate.properties not found
2014-01-31 21:33:30,808 [main           ] INFO  Environment                    - HHH000021: Bytecode provider name : javassist
2014-01-31 21:33:30,822 [main           ] INFO  Ejb3Configuration              - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2014-01-31 21:33:31,050 [main           ] INFO  ConnectionProviderInitiator    - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2014-01-31 21:33:31,100 [main           ] INFO  AbstractPoolBackedDataSource   - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge1508z1s7pbke1f843nb|48ac52ae, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.h2.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge1508z1s7pbke1f843nb|48ac52ae, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:h2:mem:pizzashackdistributor;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 600, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 2, numHelperThreads -> 3, numThreadsAwaitingCheckoutDefaultUser -> 0, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2014-01-31 21:33:31,222 [main           ] INFO  Dialect                        - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2014-01-31 21:33:31,228 [main           ] INFO  LobCreatorBuilder              - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2014-01-31 21:33:31,240 [main           ] INFO  TransactionFactoryInitiator    - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2014-01-31 21:33:31,242 [main           ] INFO  ASTQueryTranslatorFactory      - HHH000397: Using ASTQueryTranslatorFactory
2014-01-31 21:33:31,267 [main           ] INFO  Version                        - Hibernate Validator 4.2.0.Final
2014-01-31 21:33:31,492 [main           ] INFO  SchemaExport                   - HHH000227: Running hbm2ddl schema export
Hibernate: 
    alter table t_activity_discount_rate 
        drop constraint FKA400C193698FCC4
2014-01-31 21:33:31,502 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_activity_discount_rate drop constraint FKA400C193698FCC4
2014-01-31 21:33:31,502 [main           ] ERROR SchemaExport                   - Table "T_ACTIVITY_DISCOUNT_RATE" not found; SQL statement:

    alter table t_activity_discount_rate 
        drop constraint FKA400C193698FCC4 [42102-160]
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE11193A98D65
2014-01-31 21:33:31,503 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_dept_staff drop constraint FKBC8AE11193A98D65
2014-01-31 21:33:31,503 [main           ] ERROR SchemaExport                   - Table "T_DEPT_STAFF" not found; SQL statement:

    alter table t_dept_staff 
        drop constraint FKBC8AE11193A98D65 [42102-160]
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE111A27DDA4A
2014-01-31 21:33:31,503 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_dept_staff drop constraint FKBC8AE111A27DDA4A
2014-01-31 21:33:31,503 [main           ] ERROR SchemaExport                   - Table "T_DEPT_STAFF" not found; SQL statement:

    alter table t_dept_staff 
        drop constraint FKBC8AE111A27DDA4A [42102-160]
Hibernate: 
    alter table t_order 
        drop constraint FKA0C0C3C3E11F4FCB
2014-01-31 21:33:31,504 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order drop constraint FKA0C0C3C3E11F4FCB
2014-01-31 21:33:31,504 [main           ] ERROR SchemaExport                   - Table "T_ORDER" not found; SQL statement:

    alter table t_order 
        drop constraint FKA0C0C3C3E11F4FCB [42102-160]
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB0883698FCC4
2014-01-31 21:33:31,505 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_pizzashack drop constraint FKE8ACB0883698FCC4
2014-01-31 21:33:31,505 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PIZZASHACK" not found; SQL statement:

    alter table t_order_pizzashack 
        drop constraint FKE8ACB0883698FCC4 [42102-160]
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB088BBCB676E
2014-01-31 21:33:31,506 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_pizzashack drop constraint FKE8ACB088BBCB676E
2014-01-31 21:33:31,506 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PIZZASHACK" not found; SQL statement:

    alter table t_order_pizzashack 
        drop constraint FKE8ACB088BBCB676E [42102-160]
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F33E99148D
2014-01-31 21:33:31,507 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_process drop constraint FK6B8B15F33E99148D
2014-01-31 21:33:31,507 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PROCESS" not found; SQL statement:

    alter table t_order_process 
        drop constraint FK6B8B15F33E99148D [42102-160]
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F3BBCB676E
2014-01-31 21:33:31,508 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_process drop constraint FK6B8B15F3BBCB676E
2014-01-31 21:33:31,508 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PROCESS" not found; SQL statement:

    alter table t_order_process 
        drop constraint FK6B8B15F3BBCB676E [42102-160]
Hibernate: 
    alter table t_order_request_history 
        drop constraint FK5A6B268BBCB676E
2014-01-31 21:33:31,508 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_request_history drop constraint FK5A6B268BBCB676E
2014-01-31 21:33:31,508 [main           ] ERROR SchemaExport                   - Table "T_ORDER_REQUEST_HISTORY" not found; SQL statement:

    alter table t_order_request_history 
        drop constraint FK5A6B268BBCB676E [42102-160]
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CA6130105
2014-01-31 21:33:31,509 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_review_record drop constraint FKFB7A439CA6130105
2014-01-31 21:33:31,509 [main           ] ERROR SchemaExport                   - Table "T_ORDER_REVIEW_RECORD" not found; SQL statement:

    alter table t_order_review_record 
        drop constraint FKFB7A439CA6130105 [42102-160]
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CBBCB676E
2014-01-31 21:33:31,510 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_review_record drop constraint FKFB7A439CBBCB676E
2014-01-31 21:33:31,510 [main           ] ERROR SchemaExport                   - Table "T_ORDER_REVIEW_RECORD" not found; SQL statement:

    alter table t_order_review_record 
        drop constraint FKFB7A439CBBCB676E [42102-160]
Hibernate: 
    alter table t_staff 
        drop constraint FKA0F9FF552DC32C06
2014-01-31 21:33:31,511 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_staff drop constraint FKA0F9FF552DC32C06
2014-01-31 21:33:31,511 [main           ] ERROR SchemaExport                   - Table "T_STAFF" not found; SQL statement:

    alter table t_staff 
        drop constraint FKA0F9FF552DC32C06 [42102-160]
Hibernate: 
    drop table t_activity_discount_rate if exists
Hibernate: 
    drop table t_customer if exists
Hibernate: 
    drop table t_dept if exists
Hibernate: 
    drop table t_dept_staff if exists
Hibernate: 
    drop table t_order if exists
Hibernate: 
    drop table t_order_pizzashack if exists
Hibernate: 
    drop table t_order_process if exists
Hibernate: 
    drop table t_order_request_history if exists
Hibernate: 
    drop table t_order_review_record if exists
Hibernate: 
    drop table t_pizzashack if exists
Hibernate: 
    drop table t_staff if exists
Hibernate: 
    drop table t_user if exists
Hibernate: 
    drop table t_workflow if exists
Hibernate: 
    create table t_activity_discount_rate (
        activity_rate_id bigint generated by default as identity,
        code varchar(255),
        description varchar(255),
        effective_time timestamp,
        expire_time timestamp,
        rate decimal(19,2),
        pizzashack_id bigint,
        primary key (activity_rate_id)
    )
Hibernate: 
    create table t_customer (
        cust_id bigint generated by default as identity,
        address varchar(255),
        credits integer,
        customer_name varchar(255),
        email varchar(255),
        primary key (cust_id)
    )
Hibernate: 
    create table t_dept (
        dept_id bigint generated by default as identity,
        create_date date,
        dept_name varchar(255),
        primary key (dept_id)
    )
Hibernate: 
    create table t_dept_staff (
        staff_dept_id bigint generated by default as identity,
        join_date date,
        dept_id bigint,
        staff_id bigint,
        primary key (staff_dept_id)
    )
Hibernate: 
    create table t_order (
        order_id bigint generated by default as identity,
        deliver_time timestamp,
        order_no varchar(255),
        order_time timestamp,
        payment_remarks varchar(255),
        payment_status integer,
        quantity integer,
        ship_address varchar(255),
        status integer,
        total_price decimal(19,2),
        cust_id bigint,
        primary key (order_id)
    )
Hibernate: 
    create table t_order_pizzashack (
        order_pizza_id bigint generated by default as identity,
        qty integer,
        total_price decimal(19,2),
        order_id bigint,
        pizzashack_id bigint,
        primary key (order_pizza_id)
    )
Hibernate: 
    create table t_order_process (
        order_process_id bigint generated by default as identity,
        active_process_definition_id varchar(255),
        active_process_instance_id varchar(255),
        complete_time time,
        create_time time,
        execution_id varchar(255),
        main_process_definition_id varchar(255),
        main_process_instance_id varchar(255),
        operator_id bigint,
        order_id bigint,
        primary key (order_process_id)
    )
Hibernate: 
    create table t_order_request_history (
        message_id varchar(255) generated by default as identity,
        created_at time,
        processor_name varchar(255),
        order_id bigint,
        primary key (message_id)
    )
Hibernate: 
    create table t_order_review_record (
        review_record_id bigint generated by default as identity,
        content varchar(255),
        create_time time,
        review_status integer,
        order_id bigint,
        reviewer_id bigint,
        primary key (review_record_id)
    )
Hibernate: 
    create table t_pizzashack (
        pizzashack_id bigint generated by default as identity,
        description varchar(255),
        icon varchar(255),
        name varchar(255),
        price decimal(19,2),
        primary key (pizzashack_id)
    )
Hibernate: 
    create table t_staff (
        staff_id bigint generated by default as identity,
        create_date date,
        email varchar(255),
        first_name varchar(255),
        identity varchar(255),
        last_name varchar(255),
        level integer,
        role integer,
        user_id bigint,
        primary key (staff_id)
    )
Hibernate: 
    create table t_user (
        user_id bigint generated by default as identity,
        create_time time,
        password varchar(255),
        user_name varchar(255),
        primary key (user_id)
    )
Hibernate: 
    create table t_workflow (
        workflow_id bigint generated by default as identity,
        category varchar(255),
        create_time time,
        deploy_id varchar(255),
        workflow_name varchar(255),
        process_definition_id varchar(255),
        process_definition_key varchar(255),
        primary key (workflow_id)
    )
Hibernate: 
    alter table t_activity_discount_rate 
        add constraint FKA400C193698FCC4 
        foreign key (pizzashack_id) 
        references t_pizzashack
Hibernate: 
    alter table t_dept_staff 
        add constraint FKBC8AE11193A98D65 
        foreign key (dept_id) 
        references t_dept
Hibernate: 
    alter table t_dept_staff 
        add constraint FKBC8AE111A27DDA4A 
        foreign key (staff_id) 
        references t_staff
Hibernate: 
    alter table t_order 
        add constraint FKA0C0C3C3E11F4FCB 
        foreign key (cust_id) 
        references t_customer
Hibernate: 
    alter table t_order_pizzashack 
        add constraint FKE8ACB0883698FCC4 
        foreign key (pizzashack_id) 
        references t_pizzashack
Hibernate: 
    alter table t_order_pizzashack 
        add constraint FKE8ACB088BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_process 
        add constraint FK6B8B15F33E99148D 
        foreign key (operator_id) 
        references t_user
Hibernate: 
    alter table t_order_process 
        add constraint FK6B8B15F3BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_request_history 
        add constraint FK5A6B268BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_review_record 
        add constraint FKFB7A439CA6130105 
        foreign key (reviewer_id) 
        references t_staff
Hibernate: 
    alter table t_order_review_record 
        add constraint FKFB7A439CBBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_staff 
        add constraint FKA0F9FF552DC32C06 
        foreign key (user_id) 
        references t_user
2014-01-31 21:33:31,544 [main           ] INFO  SchemaExport                   - HHH000230: Schema export complete
2014-01-31 21:33:31,583 [main           ] INFO  ionConfigWebApplicationContext - Bean 'entityManagerFactory' of type [class org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:31,600 [main           ] INFO  ionConfigWebApplicationContext - Bean 'entityManagerFactory' of type [class com.sun.proxy.$Proxy56] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:31,635 [main           ] INFO  ionConfigWebApplicationContext - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerByCGLIB$$679ba3a0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:31,652 [main           ] INFO  ionConfigWebApplicationContext - Bean 'transactionAttributeSource' of type [class org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:31,659 [main           ] INFO  ionConfigWebApplicationContext - Bean 'transactionInterceptor' of type [class org.springframework.transaction.interceptor.TransactionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:31,665 [main           ] INFO  ionConfigWebApplicationContext - Bean 'org.springframework.transaction.config.internalTransactionAdvisor' of type [class org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:31,676 [main           ] INFO  ionConfigWebApplicationContext - Bean 'transactionManager' of type [class org.springframework.orm.jpa.JpaTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:31,677 [main           ] INFO  ionConfigWebApplicationContext - Bean 'camelJdbcIdempotentConfig' of type [class co.nz.pizzashack.config.CamelJdbcIdempotentConfig$$EnhancerByCGLIB$$4c254f27] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:31,694 [main           ] INFO  ionConfigWebApplicationContext - Bean 'sqlComponent' of type [class org.apache.camel.component.sql.SqlComponent] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:31,718 [main           ] INFO  ionConfigWebApplicationContext - Bean 'billingVariableTransformer' of type [class co.nz.pizzashack.integration.mapping.BillingVariableTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:31,891 [main           ] INFO  ionConfigWebApplicationContext - Bean 'billingFormatTransformer' of type [class co.nz.pizzashack.integration.mapping.BillingFormatTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:31,894 [main           ] INFO  ionConfigWebApplicationContext - Bean 'billingResponseMergeProcessor' of type [class co.nz.pizzashack.integration.mapping.BillingResponseMergeProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:31,898 [main           ] INFO  ionConfigWebApplicationContext - Bean 'sleepBean' of type [class co.nz.pizzashack.integration.utils.SleepBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:31,898 [main           ] INFO  ionConfigWebApplicationContext - Bean 'billingProcessRoute' of type [class co.nz.pizzashack.integration.route.BillingProcessRoute] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:31,922 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderJdbcMessageIdRepository' of type [class org.apache.camel.processor.idempotent.jdbc.JdbcMessageIdRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:31,931 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessFormatTransformer' of type [class co.nz.pizzashack.integration.mapping.OrderProcessFormatTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:32,014 [main           ] INFO  ionConfigWebApplicationContext - Bean 'org.activiti.engine.impl.rules.RulesDeployer#6f9b9904' of type [class org.activiti.engine.impl.rules.RulesDeployer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:32,015 [main           ] INFO  ionConfigWebApplicationContext - Bean 'processEngineConfiguration' of type [class org.activiti.spring.SpringProcessEngineConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:32,019 [main           ] INFO  ionConfigWebApplicationContext - Bean 'processEngine' of type [class org.activiti.spring.ProcessEngineFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:32,726 [main           ] INFO  DbSqlSession                   - performing create on engine with resource org/activiti/db/create/activiti.h2.create.engine.sql
2014-01-31 21:33:32,744 [main           ] INFO  DbSqlSession                   - performing create on history with resource org/activiti/db/create/activiti.h2.create.history.sql
2014-01-31 21:33:32,750 [main           ] INFO  DbSqlSession                   - performing create on identity with resource org/activiti/db/create/activiti.h2.create.identity.sql
2014-01-31 21:33:32,753 [main           ] INFO  ProcessEngineImpl              - ProcessEngine default created
2014-01-31 21:33:32,754 [main           ] INFO  ionConfigWebApplicationContext - Bean 'processEngine' of type [class org.activiti.engine.impl.ProcessEngineImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:32,761 [main           ] INFO  ionConfigWebApplicationContext - Bean 'runtimeService' of type [class org.activiti.engine.impl.RuntimeServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:32,767 [main           ] INFO  ionConfigWebApplicationContext - Bean 'taskService' of type [class org.activiti.engine.impl.TaskServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:32,773 [main           ] INFO  ionConfigWebApplicationContext - Bean 'historyService' of type [class org.activiti.engine.impl.HistoryServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:32,780 [main           ] INFO  ionConfigWebApplicationContext - Bean 'repositoryService' of type [class org.activiti.engine.impl.RepositoryServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:32,785 [main           ] INFO  ionConfigWebApplicationContext - Bean 'managementService' of type [class org.activiti.engine.impl.ManagementServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:32,790 [main           ] INFO  ionConfigWebApplicationContext - Bean 'identityService' of type [class org.activiti.engine.impl.IdentityServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:32,791 [main           ] INFO  ionConfigWebApplicationContext - Bean 'activitiFacade' of type [class co.nz.pizzashack.wf.ActivitiFacade] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:32,798 [main           ] INFO  ionConfigWebApplicationContext - Bean 'userConverter' of type [class co.nz.pizzashack.data.converter.UserConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:32,818 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:32,819 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:32,824 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:32,837 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#1' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:32,901 [main           ] INFO  ionConfigWebApplicationContext - Bean 'workflowRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:32,937 [main           ] INFO  ionConfigWebApplicationContext - Bean 'workflowRepository' of type [class com.sun.proxy.$Proxy65] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:32,941 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#2' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:32,941 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#2' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:32,942 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#2' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:32,942 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#3' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:32,951 [main           ] INFO  ionConfigWebApplicationContext - Bean 'pizzashackRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:32,961 [main           ] INFO  ionConfigWebApplicationContext - Bean 'pizzashackRepository' of type [class com.sun.proxy.$Proxy68] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:32,964 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#4' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:32,964 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#4' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:32,964 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#4' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:32,965 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#5' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:32,973 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:32,978 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessRepository' of type [class com.sun.proxy.$Proxy69] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:32,981 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#6' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:32,981 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#6' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:32,981 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#6' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:32,981 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#7' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:32,990 [main           ] INFO  ionConfigWebApplicationContext - Bean 'userRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:32,994 [main           ] INFO  ionConfigWebApplicationContext - Bean 'userRepository' of type [class com.sun.proxy.$Proxy70] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:32,997 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#8' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:32,997 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#8' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:32,997 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#8' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:32,997 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#9' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,006 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,010 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderRepository' of type [class com.sun.proxy.$Proxy71] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,042 [main           ] INFO  ionConfigWebApplicationContext - Bean 'customerConverter' of type [class co.nz.pizzashack.data.converter.CustomerConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,049 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderDetailConverter' of type [class co.nz.pizzashack.data.converter.OrderDetailConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,049 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderConverter' of type [class co.nz.pizzashack.data.converter.OrderConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,049 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessConverter' of type [class co.nz.pizzashack.data.converter.OrderProcessConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,055 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#10' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,055 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#10' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,055 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#10' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,056 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#11' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,064 [main           ] INFO  ionConfigWebApplicationContext - Bean 'departmentRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,069 [main           ] INFO  ionConfigWebApplicationContext - Bean 'departmentRepository' of type [class com.sun.proxy.$Proxy72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,070 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessAccessor' of type [class co.nz.pizzashack.ds.OrderProcessAccessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,076 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderReviewRecordConverter' of type [class co.nz.pizzashack.data.converter.OrderReviewRecordConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,077 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#12' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,077 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#12' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,078 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#12' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,078 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#13' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,086 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderReviewRecordRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,091 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderReviewRecordRepository' of type [class com.sun.proxy.$Proxy73] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,093 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#14' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,094 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#14' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,094 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#14' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,095 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#15' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,102 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderPizzashackRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,106 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderPizzashackRepository' of type [class com.sun.proxy.$Proxy74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,108 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#16' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,109 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#16' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,109 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#16' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,109 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#17' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,117 [main           ] INFO  ionConfigWebApplicationContext - Bean 'customerRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,120 [main           ] INFO  ionConfigWebApplicationContext - Bean 'customerRepository' of type [class com.sun.proxy.$Proxy75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,122 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessDSImpl' of type [class co.nz.pizzashack.ds.OrderProcessDSImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,129 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#18' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,129 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#18' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,129 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#18' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,130 [main           ] INFO  ionConfigWebApplicationContext - Bean '(inner bean)#19' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,137 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderRequestHistoryRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,141 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderRequestHistoryRepository' of type [class com.sun.proxy.$Proxy78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,143 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderRequestProcessor' of type [class co.nz.pizzashack.integration.processor.OrderRequestProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,146 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderDuplicatedReqProcessor' of type [class co.nz.pizzashack.integration.processor.OrderDuplicatedReqProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,146 [main           ] INFO  ionConfigWebApplicationContext - Bean 'orderProcessRoute' of type [class co.nz.pizzashack.integration.route.OrderProcessRoute] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,193 [main           ] INFO  ionConfigWebApplicationContext - Bean 'activeMQConnectionFactory' of type [class org.apache.activemq.ActiveMQConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,343 [main           ] INFO  ionConfigWebApplicationContext - Bean 'pooledConnectionFactory' of type [class org.apache.activemq.pool.PooledConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,362 [main           ] INFO  ionConfigWebApplicationContext - Bean 'jmsTransactionManager' of type [class org.springframework.jms.connection.JmsTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,374 [main           ] INFO  ionConfigWebApplicationContext - Bean 'jmsComponent' of type [class org.apache.camel.component.jms.JmsComponent] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,380 [main           ] INFO  ionConfigWebApplicationContext - Bean 'camelSpringConfig' of type [class co.nz.pizzashack.config.CamelSpringConfig$$EnhancerByCGLIB$$b5ad5ce0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-01-31 21:33:33,421 [main           ] INFO  DefaultListableBeanFactory     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6100fb45: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,applicationConfiguration,webMvcContextConfiguration,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,viewConfiguration,logoutController,loginController,indexController,userController,adminIndexController,departmentController,orderController,staffController,billingProcessRespTransformer,billingProcessReqTransformer,orderProcessFormatTransformer,billingVariableTransformer,billingResponseMergeProcessor,billingFormatTransformer,orderDuplicatedReqProcessor,orderRequestProcessor,billingProcessRoute,orderProcessRoute,sleepBean,pizzashackAPIImpl,camelSpringConfig,camelJdbcIdempotentConfig,orderProcessDSImpl,customerDSImpl,workflowDSImpl,pizzashackDSImpl,userDSImpl,orderProcessAccessor,orderProcessQueryDSImpl,staffDSImpl,orderDSImpl,departmentDSImpl,initialDataConfig,pizzashackCaculator,emailExecutionListener,endExecutionListener,orderMainTransitionExecutionListener,toManualReviewExecutionListener,outOfBillingProcessExecutionListener,outOfCoreProcessExecutionListener,billingRespExecutionListener,customerConverter,orderProcessConverter,staffConverter,userConverter,departmentConverter,workflowConverter,orderReviewRecordConverter,orderConverter,activityDiscountRateConverter,orderDetailConverter,pizzashackDataInitialConfiguration,pizzashackItemBuilder,infrastructureContextConfiguration,activitiFacade,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0,org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0,orderReviewRecordRepository,orderProcessRepository,orderRepository,workflowRepository,userRepository,orderPizzashackRepository,customerRepository,staffRepository,activityDiscountRateRepository,orderRequestHistoryRepository,staffDepartmentRepository,departmentRepository,pizzashackRepository,viewResolver,messageSource,activeMQConnectionFactory,pooledConnectionFactory,jmsComponent,jmsTransactionManager,camelBeanPostProcessor,camelContext,custThreadPoolProfile,sqlComponent,orderJdbcMessageIdRepository,setupWorkflowData,setupData,org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration,org.springframework.transaction.config.internalTransactionAdvisor,transactionAttributeSource,transactionInterceptor,dataSource,transactionManager,entityManagerFactory,placeholderConfig,processEngineConfiguration,processEngine,repositoryService,runtimeService,taskService,historyService,managementService,identityService,org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration,handlerExceptionResolver,requestMappingHandlerMapping,mvcContentNegotiationManager,viewControllerHandlerMapping,beanNameHandlerMapping,resourceHandlerMapping,defaultServletHandlerMapping,requestMappingHandlerAdapter,mvcConversionService,mvcValidator,httpRequestHandlerAdapter,simpleControllerHandlerAdapter,localeChangeInterceptor,localeResolver,simpleMappingExceptionResolver,multipartResolver,sessionAttributeProcessor]; root of factory hierarchy
2014-01-31 21:33:33,844 [main           ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) is starting
2014-01-31 21:33:33,845 [main           ] INFO  ManagedManagementStrategy      - JMX is enabled
2014-01-31 21:33:33,933 [main           ] INFO  DefaultTypeConverter           - Loaded 194 type converters
Hibernate: 
    SELECT
        1 
    FROM
        T_ORDER_REQUEST_HISTORY 
    WHERE
        1 = 0
2014-01-31 21:33:34,263 [main           ] INFO  SpringCamelContext             - StreamCaching is not in use. If using streams then its recommended to enable stream caching. See more details at http://camel.apache.org/stream-caching.html
2014-01-31 21:33:34,739 [main           ] INFO  SpringCamelContext             - Route: activitiBillingProcess started and consuming from: Endpoint[activiti://orderBillingProcess:billingIntegration?copyVariablesToBodyAsMap=true]
2014-01-31 21:33:34,741 [main           ] INFO  SpringCamelContext             - Route: direct:billingIntegration started and consuming from: Endpoint[direct://billingIntegration]
2014-01-31 21:33:34,743 [main           ] INFO  SpringCamelContext             - Route: direct:receiveBillingQueue started and consuming from: Endpoint[direct://receiveBillingQueue]
2014-01-31 21:33:34,745 [main           ] INFO  SpringCamelContext             - Route: route1 started and consuming from: Endpoint[direct://doBillingIntegration]
2014-01-31 21:33:34,757 [main           ] INFO  SpringCamelContext             - Route: orderProcessRoute started and consuming from: Endpoint[jms://queue:pizzashackOrderInbound]
2014-01-31 21:33:34,760 [main           ] INFO  SpringCamelContext             - Route: direct:orderDuplicatedProcess started and consuming from: Endpoint[direct://orderDuplicatedProcess]
2014-01-31 21:33:34,762 [main           ] INFO  SpringCamelContext             - Route: direct:orderRegularProcess started and consuming from: Endpoint[direct://orderRegularProcess]
2014-01-31 21:33:34,783 [main           ] INFO  SpringCamelContext             - Total 7 routes, of which 7 is started.
2014-01-31 21:33:34,784 [main           ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) started in 0.940 seconds
2014-01-31 21:33:34,791 [main           ] INFO  WorkflowInitialDataSetup       - initialize start:{}
2014-01-31 21:33:34,798 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-01-31 21:33:34,798 [main           ] INFO  UserDSImpl                     - usernamedavid
2014-01-31 21:33:34,798 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-01-31 21:33:34,974 [main           ] INFO  UserDSImpl                     - userId:1 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-01-31 21:33:35,026 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@2aa114a7[userId=1,username=david,password=MTIzNDU2,createTime=Fri Jan 31 21:33:34 NZDT 2014]
2014-01-31 21:33:35,074 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-01-31 08:33:34)
2014-01-31 21:33:35,074 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-01-31 08:33:34)
2014-01-31 21:33:35,076 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-01-31 21:33:35,076 [main           ] INFO  UserDSImpl                     - usernamebrad
2014-01-31 21:33:35,076 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-01-31 21:33:35,079 [main           ] INFO  UserDSImpl                     - userId:2 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-01-31 21:33:35,081 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@2cfb0dd6[userId=2,username=brad,password=MTIzNDU2,createTime=Fri Jan 31 21:33:35 NZDT 2014]
2014-01-31 21:33:35,081 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-01-31 08:33:35)
2014-01-31 21:33:35,081 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-01-31 08:33:35)
2014-01-31 21:33:35,081 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-01-31 21:33:35,082 [main           ] INFO  UserDSImpl                     - usernamejohn
2014-01-31 21:33:35,082 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-01-31 21:33:35,084 [main           ] INFO  UserDSImpl                     - userId:3 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-01-31 21:33:35,085 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@3908415d[userId=3,username=john,password=MTIzNDU2,createTime=Fri Jan 31 21:33:35 NZDT 2014]
2014-01-31 21:33:35,086 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-01-31 08:33:35)
2014-01-31 21:33:35,086 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-01-31 08:33:35)
2014-01-31 21:33:35,086 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-01-31 21:33:35,086 [main           ] INFO  UserDSImpl                     - usernamegeneral
2014-01-31 21:33:35,086 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-01-31 21:33:35,089 [main           ] INFO  UserDSImpl                     - userId:4 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-01-31 21:33:35,091 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@3ebee16e[userId=4,username=general,password=MTIzNDU2,createTime=Fri Jan 31 21:33:35 NZDT 2014]
2014-01-31 21:33:35,091 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:2014-01-31 08:33:35)
2014-01-31 21:33:35,091 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:2014-01-31 08:33:35)
2014-01-31 21:33:35,104 [main           ] INFO  DepartmentDSImpl               - createDepartment start:co.nz.pizzashack.data.dto.DepartmentDto(deptId:null, deptName:Order manager, createDate:null) 
Hibernate: 
    select
        department0_.dept_id as dept1_8_,
        department0_.create_date as create2_8_,
        department0_.dept_name as dept3_8_ 
    from
        t_dept department0_ 
    where
        department0_.dept_name=? limit ?
2014-01-31 21:33:35,110 [main           ] INFO  DepartmentConverter            - toModel start:{} co.nz.pizzashack.data.dto.DepartmentDto(deptId:null, deptName:Order manager, createDate:null)
2014-01-31 21:33:35,115 [main           ] INFO  DepartmentConverter            - toModel end:{} co.nz.pizzashack.data.model.DepartmentModel@1f6a56f[deptId=<null>,deptName=Order manager,createDate=<null>,staffDepartments=<null>]
Hibernate: 
    insert 
    into
        t_dept
        (dept_id, create_date, dept_name) 
    values
        (null, ?, ?)
Hibernate: 
    insert 
    into
        ACT_ID_GROUP
        (ID_, REV_, NAME_, TYPE_)     
    values
        (       ?,       1,        ?,       ?     )
2014-01-31 21:33:35,123 [main           ] INFO  DepartmentConverter            - toDto start:{} co.nz.pizzashack.data.model.DepartmentModel@1f6a56f[deptId=1,deptName=Order manager,createDate=Fri Jan 31 21:33:35 NZDT 2014,staffDepartments=<null>]
2014-01-31 21:33:35,124 [main           ] INFO  DepartmentConverter            - toDto end:{} co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-01-31)
2014-01-31 21:33:35,124 [main           ] INFO  DepartmentDSImpl               - createDepartment end:co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-01-31) 
2014-01-31 21:33:35,125 [main           ] INFO  WorkflowInitialDataSetup       - department:co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-01-31) 
2014-01-31 21:33:35,146 [main           ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:null, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-01-31 08:33:34)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-01-31 21:33:35,153 [main           ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:null, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-01-31 08:33:34))
2014-01-31 21:33:35,174 [main           ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@5ddaeb0[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@1cf7a7d2[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-01-31 21:33:35,221 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@5ddaeb0[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@1cf7a7d2[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=Fri Jan 31 21:33:35 NZDT 2014] 
2014-01-31 21:33:35,221 [main           ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = ?
Hibernate: 
    update
        ACT_GE_PROPERTY      
    SET
        REV_ = ?,
        VALUE_ = ?      
    where
        NAME_ = ?       
        and REV_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-01-31 21:33:35,240 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-01-31 21:33:35,248 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@5ddaeb0[staffId=1,individual=co.nz.pizzashack.data.model.IndividualModel@1cf7a7d2[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=Fri Jan 31 21:33:35 NZDT 2014]
2014-01-31 21:33:35,255 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:1, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:2014-01-31, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-01-31 21:33:35,255 [main           ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:1, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:2014-01-31, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-01-31 21:33:35,259 [main           ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:null, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-01-31 08:33:35)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-01-31 21:33:35,261 [main           ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:null, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-01-31 08:33:35))
2014-01-31 21:33:35,262 [main           ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@4996e74c[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@522b5452[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-01-31 21:33:35,271 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@4996e74c[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@522b5452[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=Fri Jan 31 21:33:35 NZDT 2014] 
2014-01-31 21:33:35,271 [main           ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-01-31 21:33:35,275 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-01-31 21:33:35,279 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@4996e74c[staffId=2,individual=co.nz.pizzashack.data.model.IndividualModel@522b5452[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=Fri Jan 31 21:33:35 NZDT 2014]
2014-01-31 21:33:35,280 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:2, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:2014-01-31, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-01-31 21:33:35,280 [main           ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:2, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:2014-01-31, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-01-31 21:33:35,281 [main           ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:null, departments:null, role:manager, level:junior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-01-31 08:33:35)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-01-31 21:33:35,283 [main           ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:null, departments:null, role:manager, level:junior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-01-31 08:33:35))
2014-01-31 21:33:35,284 [main           ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@2bb7509[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@6100a345[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-01-31 21:33:35,290 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@2bb7509[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@6100a345[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=Fri Jan 31 21:33:35 NZDT 2014] 
2014-01-31 21:33:35,290 [main           ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-01-31 21:33:35,295 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-01-31 21:33:35,298 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@2bb7509[staffId=3,individual=co.nz.pizzashack.data.model.IndividualModel@6100a345[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=Fri Jan 31 21:33:35 NZDT 2014]
2014-01-31 21:33:35,299 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:3, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:2014-01-31, departments:null, role:manager, level:null, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-01-31 21:33:35,299 [main           ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:3, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:2014-01-31, departments:null, role:manager, level:null, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-01-31 21:33:35,300 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-01-31 21:33:35,309 [main           ] INFO  BpmnDeployer                   - Processing resource bpmn/OrderBillingProcess.bpmn20.xml
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 117: Having multiple <family> in <alias> isn't supported and may not work as expected
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-01-31 21:33:35,945 [main           ] INFO  RulesDeployer                  - Processing resource bpmn/OrderBillingProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-01-31 21:33:35,958 [main           ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderBillingProcess:1:7]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-01-31 21:33:35,982 [main           ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@35907cd8[wfId=1,name=orderBillingProcess,deployId=4,processDefinitionKey=orderBillingProcess,processDefinitionId=orderBillingProcess:1:7,createTime=Fri Jan 31 21:33:35 NZDT 2014]
2014-01-31 21:33:35,997 [main           ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-01-31 08:33:35)
2014-01-31 21:33:35,997 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-01-31 08:33:35)
2014-01-31 21:33:35,997 [main           ] INFO  WorkflowInitialDataSetup       - deploy billing process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-01-31 08:33:35) 
2014-01-31 21:33:35,997 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-01-31 21:33:36,000 [main           ] INFO  BpmnDeployer                   - Processing resource bpmn/OrdercoreProcess.bpmn20.xml
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-01-31 21:33:36,173 [main           ] INFO  RulesDeployer                  - Processing resource bpmn/OrdercoreProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-01-31 21:33:36,181 [main           ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderCoreProcess:1:11]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-01-31 21:33:36,182 [main           ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@1de4308c[wfId=2,name=orderCoreProcess,deployId=8,processDefinitionKey=orderCoreProcess,processDefinitionId=orderCoreProcess:1:11,createTime=Fri Jan 31 21:33:35 NZDT 2014]
2014-01-31 21:33:36,183 [main           ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-01-31 08:33:35)
2014-01-31 21:33:36,183 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-01-31 08:33:35)
2014-01-31 21:33:36,183 [main           ] INFO  WorkflowInitialDataSetup       - deploy core process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-01-31 08:33:35) 
2014-01-31 21:33:36,183 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-01-31 21:33:36,186 [main           ] INFO  BpmnDeployer                   - Processing resource bpmn/OrderlocalProcess.bpmn20.xml
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-01-31 21:33:36,460 [main           ] INFO  RulesDeployer                  - Processing resource bpmn/OrderlocalProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-01-31 21:33:36,470 [main           ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderlocalProcess:1:15]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-01-31 21:33:36,471 [main           ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@75380893[wfId=3,name=orderlocalProcess,deployId=12,processDefinitionKey=orderlocalProcess,processDefinitionId=orderlocalProcess:1:15,createTime=Fri Jan 31 21:33:36 NZDT 2014]
2014-01-31 21:33:36,471 [main           ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-01-31 08:33:36)
2014-01-31 21:33:36,472 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-01-31 08:33:36)
2014-01-31 21:33:36,472 [main           ] INFO  WorkflowInitialDataSetup       - deploy local main process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-01-31 08:33:36) 
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
2014-01-31 21:33:36,606 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/logout],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LogoutController.logout(javax.servlet.http.HttpSession)
2014-01-31 21:33:36,607 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/login],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LoginController.handleLogin(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws co.nz.pizzashack.AuthenticationException
2014-01-31 21:33:36,607 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/login],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LoginController.showLoginPage(org.springframework.ui.Model)
2014-01-31 21:33:36,607 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/index],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.IndexController.index(org.springframework.ui.Model,co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-01-31 21:33:36,609 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-01-31 21:33:36,609 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/update/{userId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-01-31 21:33:36,610 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/{userId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.deleteUser(java.lang.Long) throws java.lang.Exception
2014-01-31 21:33:36,610 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/check/{userName}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.checkUser(java.lang.String) throws java.lang.Exception
2014-01-31 21:33:36,610 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/{userId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-01-31 21:33:36,610 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/createUser],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public co.nz.pizzashack.data.dto.UserDto co.nz.pizzashack.controller.UserController.createUser(co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-01-31 21:33:36,610 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-01-31 21:33:36,610 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/search],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.search(co.nz.pizzashack.data.dto.UserDto,org.springframework.ui.Model) throws java.lang.Exception
2014-01-31 21:33:36,611 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.create(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-01-31 21:33:36,611 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.update(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-01-31 21:33:36,611 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/adminIndex],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.AdminIndexController.index(org.springframework.ui.Model,co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-01-31 21:33:36,613 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-01-31 21:33:36,613 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/update/{deptId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-01-31 21:33:36,613 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/{deptId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-01-31 21:33:36,613 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/selectdepts],methods=[GET],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.util.Set<co.nz.pizzashack.data.dto.DepartmentDto> co.nz.pizzashack.controller.DepartmentController.select() throws java.lang.Exception
2014-01-31 21:33:36,613 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-01-31 21:33:36,614 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/{deptId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.delete(java.lang.Long) throws java.lang.Exception
2014-01-31 21:33:36,614 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/search],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.search(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.ui.Model) throws java.lang.Exception
2014-01-31 21:33:36,614 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.create(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-01-31 21:33:36,614 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.update(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-01-31 21:33:36,615 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/{orderProcessId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.showOrderProcess(java.lang.Long,org.springframework.ui.Model,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-01-31 21:33:36,615 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/claimReview/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.claimReviewTask(java.lang.String,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-01-31 21:33:36,615 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/review],methods=[POST],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.reviewOrder(co.nz.pizzashack.data.dto.OrderReviewRecordDto,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-01-31 21:33:36,616 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-01-31 21:33:36,617 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/update/{staffId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-01-31 21:33:36,617 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/{staffId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-01-31 21:33:36,617 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-01-31 21:33:36,617 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/{staffId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.delete(java.lang.Long) throws java.lang.Exception
2014-01-31 21:33:36,617 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.create(co.nz.pizzashack.data.dto.StaffDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-01-31 21:33:36,617 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.update(co.nz.pizzashack.data.dto.StaffDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-01-31 21:33:36,654 [main           ] INFO  SimpleUrlHandlerMapping        - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2014-01-31 21:33:36,657 [main           ] INFO  SimpleUrlHandlerMapping        - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler]
2014-01-31 21:33:36,908 [main           ] INFO  ContextLoader                  - Root WebApplicationContext: initialization completed in 7917 ms
2014-01-31 21:33:36.908:INFO:oejsh.ContextHandler:started o.m.j.p.JettyWebAppContext{/,file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/},file:/home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/main/webapp/
Jan 31, 2014 9:33:36 PM com.sun.jersey.api.core.PackagesResourceConfig init
INFO: Scanning for root resource and provider classes in the packages:
  co.nz.pizzashack.integration.api
Jan 31, 2014 9:33:36 PM com.sun.jersey.api.core.ScanningResourceConfig logClasses
INFO: Root resource classes found:
  class co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl
Jan 31, 2014 9:33:36 PM com.sun.jersey.api.core.ScanningResourceConfig init
INFO: No provider classes found.
Jan 31, 2014 9:33:37 PM com.sun.jersey.spi.spring.container.servlet.SpringServlet getContext
INFO: Using default applicationContext
Jan 31, 2014 9:33:37 PM com.sun.jersey.spi.spring.container.SpringComponentProviderFactory registerSpringBeans
INFO: Registering Spring bean, pizzashackAPIImpl, of type co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl as a root resource class
Jan 31, 2014 9:33:37 PM com.sun.jersey.server.impl.application.WebApplicationImpl _initiate
INFO: Initiating Jersey application, version 'Jersey: 1.17.1 02/28/2013 12:47 PM'
Jan 31, 2014 9:33:37 PM com.sun.jersey.spi.inject.Errors processErrorMessages
WARNING: The following warnings have been detected with resource and/or provider classes:
  WARNING: A HTTP GET method, public javax.ws.rs.core.Response co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl.getOrderProcessByOrderNo(java.lang.String), should not consume any entity.
Jan 31, 2014 9:33:37 PM com.sun.jersey.spi.spring.container.servlet.SpringServlet getContext
INFO: Using default applicationContext
Jan 31, 2014 9:33:37 PM com.sun.jersey.spi.spring.container.SpringComponentProviderFactory registerSpringBeans
INFO: Registering Spring bean, pizzashackAPIImpl, of type co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl as a root resource class
Jan 31, 2014 9:33:37 PM com.sun.jersey.server.impl.application.WebApplicationImpl _initiate
INFO: Initiating Jersey application, version 'Jersey: 1.17.1 02/28/2013 12:47 PM'
Jan 31, 2014 9:33:37 PM com.sun.jersey.spi.inject.Errors processErrorMessages
WARNING: The following warnings have been detected with resource and/or provider classes:
  WARNING: A HTTP GET method, public javax.ws.rs.core.Response co.nz.pizzashack.integration.api.impl.PizzashackAPIImpl.getOrderProcessByOrderNo(java.lang.String), should not consume any entity.
2014-01-31 21:33:37.979:INFO:/:Initializing Spring FrameworkServlet 'dispatcher'
2014-01-31 21:33:37,979 [main           ] INFO  DispatcherServlet              - FrameworkServlet 'dispatcher': initialization started
2014-01-31 21:33:38,000 [main           ] INFO  DispatcherServlet              - FrameworkServlet 'dispatcher': initialization completed in 21 ms
2014-01-31 21:33:38.016:INFO:oejs.AbstractConnector:Started SelectChannelConnector@0.0.0.0:8111
[INFO] Started Jetty Server
[INFO] Starting scanner at interval of 10 seconds.
2014-01-31 21:33:45,243 [ckOrderInbound]] INFO  orderProcessRoute              - Received message 35213
Hibernate: 
    SELECT
        COUNT(*) 
    FROM
        T_ORDER_REQUEST_HISTORY 
    WHERE
        processor_name = ? 
        AND message_id = ?
Hibernate: 
    INSERT 
    INTO
        T_ORDER_REQUEST_HISTORY
        (processor_name, message_id, created_at) 
    VALUES
        (?, ?, ?)
2014-01-31 21:33:45,260 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlUnmarshal start:{} <order>
  <address>25 mavon downs</address>
  <order-list>
    <order-details>
      <pizza-name>Chicken Parmesan</pizza-name>
      <quantity>2</quantity>
    </order-details>
    <order-details>
      <pizza-name>Spicy Italian</pizza-name>
      <quantity>4</quantity>
    </order-details>
  </order-list>
  <customer>
    <name>david</name>
    <email>david.yuan124@gmail.com</email>
  </customer>
</order>
orderDetailsDto: co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:2, totalPrice:0)
orderDetailsDto: co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Spicy Italian, qty:4, totalPrice:0)
2014-01-31 21:33:45,337 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlUnmarshal end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:null, orderNo:null, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:david, customerEmail:david.yuan124@gmail.com, level:null), address:25 mavon downs, status:null, orderTime:null, deliverTime:null)
2014-01-31 21:33:45,337 [ckOrderInbound]] INFO  OrderRequestProcessor          - orderRequestProcessor start:{} 
2014-01-31 21:33:45,338 [ckOrderInbound]] INFO  OrderRequestProcessor          - order request:co.nz.pizzashack.data.dto.OrderDto(orderId:null, orderNo:null, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:null, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:david, customerEmail:david.yuan124@gmail.com, level:null), address:25 mavon downs, status:null, orderTime:null, deliverTime:null) 
2014-01-31 21:33:45,338 [ckOrderInbound]] INFO  OrderRequestProcessor          - messageId:35213 
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
2014-01-31 21:33:45,341 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@17e36248[userId=4,username=general,password=MTIzNDU2,createTime=21:33:35]
2014-01-31 21:33:45,346 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:33:35)
2014-01-31 21:33:45,346 [ckOrderInbound]] INFO  OrderRequestProcessor          - default operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:33:35) 
2014-01-31 21:33:45,347 [ckOrderInbound]] INFO  OrderProcessDSImpl             - startOrderProcess start:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:33:35)
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.process_definition_key=? 
        and workflowmo0_.category=? limit ?
Hibernate: 
    insert 
    into
        t_order
        (order_id, cust_id, deliver_time, order_no, order_time, payment_remarks, payment_status, quantity, ship_address, status, total_price) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-01-31 21:33:45,360 [ckOrderInbound]] INFO  ActivitiFacade                 - startProcessInstance start:{}
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
2014-01-31 21:33:45,377 [ckOrderInbound]] INFO  ActivitiFacade                 - startProcessInstance end:{}
Hibernate: 
    insert 
    into
        t_order_process
        (order_process_id, active_process_definition_id, active_process_instance_id, complete_time, create_time, execution_id, main_process_definition_id, main_process_instance_id, operator_id, order_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2014-01-31 21:33:45,383 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@507e3f39[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=Fri Jan 31 21:33:45 NZDT 2014,completeTime=<null>]
2014-01-31 21:33:45,400 [ckOrderInbound]] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@3688e21a[orderId=1,orderNo=cb9dc9fd-07b0-47f9-8d43-bca718201f3a,quantity=<null>,status=0,paymentStatus=0,deliverTime=<null>,totalPrice=<null>,orderTime=Fri Jan 31 21:33:45 NZDT 2014]
2014-01-31 21:33:45,402 [ckOrderInbound]] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:cb9dc9fd-07b0-47f9-8d43-bca718201f3a, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-01-31 08:33:45, deliverTime:null)
2014-01-31 21:33:45,402 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@4aa5695f[userId=4,username=general,password=MTIzNDU2,createTime=21:33:35]
2014-01-31 21:33:45,402 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:33:35)
2014-01-31 21:33:45,409 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:cb9dc9fd-07b0-47f9-8d43-bca718201f3a, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-01-31 08:33:45, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-01-31 08:33:45, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:33:35))
2014-01-31 21:33:45,410 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:cb9dc9fd-07b0-47f9-8d43-bca718201f3a, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-01-31 08:33:45, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-01-31 08:33:45, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:33:35)) 
2014-01-31 21:33:45,410 [ckOrderInbound]] INFO  OrderProcessAccessor           - process pending 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
2014-01-31 21:33:45,421 [ckOrderInbound]] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-01-31 21:33:45,421 [ckOrderInbound]] INFO  ActivitiFacade                 - executionId: 16, processDefinitionId: orderlocalProcess:1:15
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-01-31 21:33:45,451 [ckOrderInbound]] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-01-31 21:33:45,458 [ckOrderInbound]] INFO  OrderProcessAccessor           - assign operator[4] to task[Data entry]
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    insert 
    into
        ACT_RU_IDENTITYLINK
        (ID_, REV_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_, PROC_DEF_ID_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_IDENTITYLINK
        (ID_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_)     
    values
        (?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_TASK      
    SET
        REV_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        PRIORITY_ = ?,
        CREATE_TIME_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        DELEGATION_ = ?,
        EXECUTION_ID_ = ?,
        PROC_DEF_ID_ = ?,
        DESCRIPTION_ = ?,
        DUE_DATE_ = ?,
        SUSPENSION_STATE_ = ?      
    where
        ID_= ?       
        and REV_ = ?
2014-01-31 21:33:45,475 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:cb9dc9fd-07b0-47f9-8d43-bca718201f3a, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-01-31 08:33:45, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-01-31 08:33:45, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:33:35)) 
2014-01-31 21:33:45,476 [ckOrderInbound]] INFO  OrderProcessDSImpl             - startOrderProcess end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:cb9dc9fd-07b0-47f9-8d43-bca718201f3a, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-01-31 08:33:45, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-01-31 08:33:45, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:33:35))
2014-01-31 21:33:45,478 [ckOrderInbound]] INFO  OrderRequestProcessor          - after start process:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:cb9dc9fd-07b0-47f9-8d43-bca718201f3a, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-01-31 08:33:45, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-01-31 08:33:45, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:33:35)) 
2014-01-31 21:33:45,479 [ckOrderInbound]] INFO  OrderProcessDSImpl             - dataEntry start:cb9dc9fd-07b0-47f9-8d43-bca718201f3a
2014-01-31 21:33:45,479 [ckOrderInbound]] INFO  OrderProcessDSImpl             - getOrderProcessByOrderNo start************************************
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-01-31 21:33:45,490 [ckOrderInbound]] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@7c74797f[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=21:33:45,completeTime=<null>] 
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_,
        customermo0_.address as address2_,
        customermo0_.credits as credits2_,
        customermo0_.customer_name as customer4_2_,
        customermo0_.email as email2_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.email=? limit ?
2014-01-31 21:33:45,496 [ckOrderInbound]] INFO  CustomerConverter              - toModel start:{} co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:david, customerEmail:david.yuan124@gmail.com, level:null)
2014-01-31 21:33:45,499 [ckOrderInbound]] INFO  CustomerConverter              - toModel end:{} co.nz.pizzashack.data.model.CustomerModel@45c2f339[custId=<null>,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
Hibernate: 
    insert 
    into
        t_customer
        (cust_id, address, credits, customer_name, email) 
    values
        (null, ?, ?, ?, ?)
2014-01-31 21:33:45,502 [ckOrderInbound]] INFO  OrderProcessDSImpl             - orderDetailsSet size:2 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
2014-01-31 21:33:45,510 [ckOrderInbound]] INFO  OrderProcessDSImpl             - added orderPizzashackModel:co.nz.pizzashack.data.model.OrderPizzashackModel@124d84a1[orderPizzashackId=<null>,totalPrice=0,qty=2] 
Hibernate: 
    insert 
    into
        t_order_pizzashack
        (order_pizza_id, order_id, pizzashack_id, qty, total_price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
2014-01-31 21:33:45,524 [ckOrderInbound]] INFO  OrderProcessDSImpl             - added orderPizzashackModel:co.nz.pizzashack.data.model.OrderPizzashackModel@3059308d[orderPizzashackId=<null>,totalPrice=0,qty=4] 
Hibernate: 
    insert 
    into
        t_order_pizzashack
        (order_pizza_id, order_id, pizzashack_id, qty, total_price) 
    values
        (null, ?, ?, ?, ?)
2014-01-31 21:33:45,529 [ckOrderInbound]] INFO  OrderProcessDSImpl             - after add detailsDto, size in model:2 
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        E.BUSINESS_KEY_ = ?                                                                                 
        and RES.PROC_DEF_ID_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                    
        and RES.ASSIGNEE_ = ?                                                                        
        and E.BUSINESS_KEY_ = ?
2014-01-31 21:33:45,537 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@7c74797f[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=21:33:45,completeTime=<null>]
2014-01-31 21:33:45,543 [ckOrderInbound]] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@45e6ff2[orderId=1,orderNo=cb9dc9fd-07b0-47f9-8d43-bca718201f3a,quantity=0,status=0,paymentStatus=0,deliverTime=<null>,totalPrice=0,orderTime=2014-01-31 21:33:45.353]
2014-01-31 21:33:45,548 [ckOrderInbound]] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@45c2f339[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-01-31 21:33:45,561 [ckOrderInbound]] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-01-31 21:33:45,566 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@124d84a1[orderPizzashackId=1,totalPrice=0,qty=2]
2014-01-31 21:33:45,573 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Chicken Parmesan, qty:2, totalPrice:0)
2014-01-31 21:33:45,573 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@3059308d[orderPizzashackId=2,totalPrice=0,qty=4]
2014-01-31 21:33:45,573 [ckOrderInbound]] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Spicy Italian, qty:4, totalPrice:0)
2014-01-31 21:33:45,574 [ckOrderInbound]] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:cb9dc9fd-07b0-47f9-8d43-bca718201f3a, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-01-31 08:33:45, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-01-31 21:33:45,579 [ckOrderInbound]] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@7d790961[userId=4,username=general,password=MTIzNDU2,createTime=21:33:35]
2014-01-31 21:33:45,580 [ckOrderInbound]] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:33:35)
2014-01-31 21:33:45,581 [ckOrderInbound]] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:cb9dc9fd-07b0-47f9-8d43-bca718201f3a, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-01-31 08:33:45, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:33:45, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:33:35))
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        PARENT_TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE 
    where
        TASK_ID_ =     ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
2014-01-31 21:33:45,622 [ckOrderInbound]] INFO  ainTransitionExecutionListener - orderMainUserTaskExecutionListener start:{} 
2014-01-31 21:33:45,622 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity id:orderCoreCallactivity
2014-01-31 21:33:45,622 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity name:Core process
2014-01-31 21:33:45,622 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity type:callActivity
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
start calculate: co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:cb9dc9fd-07b0-47f9-8d43-bca718201f3a, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-01-31 08:33:45, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:33:45, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:33:35))
2014-01-31 21:33:45,828 [ckOrderInbound]] INFO  PizzashackCaculator            - caculate start:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:cb9dc9fd-07b0-47f9-8d43-bca718201f3a, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Chicken Parmesan, qty:2, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Spicy Italian, qty:4, totalPrice:0)], qty:0, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-01-31 08:33:45, deliverTime:null) 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-01-31 21:33:45,837 [ckOrderInbound]] INFO  PizzashackCaculator            - caculate end:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:cb9dc9fd-07b0-47f9-8d43-bca718201f3a, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-01-31 08:33:45, deliverTime:null) 
after calculation: co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:cb9dc9fd-07b0-47f9-8d43-bca718201f3a, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-01-31 08:33:45, deliverTime:null)
total qty: 6
after autoreview: 0
reviewTransBean: co.nz.pizzashack.data.dto.OrderReviewRecordDto(reviewRecordId:null, orderNo:cb9dc9fd-07b0-47f9-8d43-bca718201f3a, content:null, reviewResult:accept, createTime:2014-01-31 08:33:45, reviewer:null)
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RU_JOB J     
    where
        J.EXECUTION_ID_ = ?
Hibernate: 
    select
        *      
    from
        ACT_RU_EVENT_SUBSCR     
    where
        (
            EXECUTION_ID_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
2014-01-31 21:33:45,907 [ckOrderInbound]] INFO  OfCoreProcessExecutionListener - after core process, orderProcess:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:cb9dc9fd-07b0-47f9-8d43-bca718201f3a, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-01-31 08:33:45, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:33:45, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:33:35)) 
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-01-31 21:33:45,909 [ckOrderInbound]] INFO  ainTransitionExecutionListener - orderMainUserTaskExecutionListener start:{} 
2014-01-31 21:33:45,909 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity id:billingEntry
2014-01-31 21:33:45,909 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity name:Billing fill in
2014-01-31 21:33:45,909 [ckOrderInbound]] INFO  ainTransitionExecutionListener - nextActivity type:userTask
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_EXECUTION 
    set
        REV_ = ?,
        BUSINESS_KEY_ = ?,
        PROC_DEF_ID_ = ?,
        ACT_ID_ = ?,
        IS_ACTIVE_ = ?,
        IS_CONCURRENT_ = ?,
        IS_SCOPE_ = ?,
        IS_EVENT_SCOPE_ = ?,
        PARENT_ID_ = ?,
        SUPER_EXEC_ = ?,
        SUSPENSION_STATE_ = ?,
        CACHED_ENT_STATE_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_TASK 
    where
        ID_ = ? 
        and REV_ = ?
2014-01-31 21:33:45,951 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:cb9dc9fd-07b0-47f9-8d43-bca718201f3a, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-01-31 08:33:45, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:33:45, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:33:35)) 
2014-01-31 21:33:45,951 [ckOrderInbound]] INFO  OrderProcessAccessor           - process pending 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-01-31 21:33:45,962 [ckOrderInbound]] INFO  OrderProcessAccessor           - get OrderProcessDto from flow:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:cb9dc9fd-07b0-47f9-8d43-bca718201f3a, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-01-31 08:33:45, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:33:45, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:33:35)) 
2014-01-31 21:33:45,962 [ckOrderInbound]] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-01-31 21:33:45,962 [ckOrderInbound]] INFO  ActivitiFacade                 - executionId: 16, processDefinitionId: orderlocalProcess:1:15
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-01-31 21:33:45,966 [ckOrderInbound]] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-01-31 21:33:45,969 [ckOrderInbound]] INFO  OrderProcessAccessor           - assign operator[4] to task[Billing fill in]
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_TASK      
    SET
        REV_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        PRIORITY_ = ?,
        CREATE_TIME_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        DELEGATION_ = ?,
        EXECUTION_ID_ = ?,
        PROC_DEF_ID_ = ?,
        DESCRIPTION_ = ?,
        DUE_DATE_ = ?,
        SUSPENSION_STATE_ = ?      
    where
        ID_= ?       
        and REV_ = ?
2014-01-31 21:33:45,978 [ckOrderInbound]] INFO  OrderProcessAccessor           - merge calculation result
2014-01-31 21:33:45,978 [ckOrderInbound]] INFO  OrderProcessAccessor           - total price:162.00 
2014-01-31 21:33:45,979 [ckOrderInbound]] INFO  OrderProcessAccessor           - qty:6 
2014-01-31 21:33:45,979 [ckOrderInbound]] INFO  OrderProcessAccessor           - orderDetailsSet.size():2
2014-01-31 21:33:45,979 [ckOrderInbound]] INFO  OrderProcessAccessor           - after merge orderProcessModel:co.nz.pizzashack.data.model.OrderProcessModel@7c74797f[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=21:33:45,completeTime=<null>] 
2014-01-31 21:33:45,980 [ckOrderInbound]] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:cb9dc9fd-07b0-47f9-8d43-bca718201f3a, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-01-31 08:33:45, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:33:45, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:33:35)) 
2014-01-31 21:33:45,982 [ckOrderInbound]] INFO  OrderProcessDSImpl             - dataEntry end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:cb9dc9fd-07b0-47f9-8d43-bca718201f3a, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-01-31 08:33:45, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:33:45, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:33:35))
Hibernate: 
    update
        t_order 
    set
        cust_id=?,
        deliver_time=?,
        order_no=?,
        order_time=?,
        payment_remarks=?,
        payment_status=?,
        quantity=?,
        ship_address=?,
        status=?,
        total_price=? 
    where
        order_id=?
Hibernate: 
    update
        t_order_pizzashack 
    set
        order_id=?,
        pizzashack_id=?,
        qty=?,
        total_price=? 
    where
        order_pizza_id=?
Hibernate: 
    update
        t_order_pizzashack 
    set
        order_id=?,
        pizzashack_id=?,
        qty=?,
        total_price=? 
    where
        order_pizza_id=?
2014-01-31 21:33:45,993 [ckOrderInbound]] INFO  OrderRequestProcessor          - after dataEntry:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:cb9dc9fd-07b0-47f9-8d43-bca718201f3a, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-01-31 08:33:45, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:33:45, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:33:35)) 
2014-01-31 21:33:45,993 [ckOrderInbound]] INFO  OrderConverter                 - toModel start:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:cb9dc9fd-07b0-47f9-8d43-bca718201f3a, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-01-31 08:33:45, deliverTime:null)
2014-01-31 21:33:45,994 [ckOrderInbound]] INFO  OrderConverter                 - toModel end:{} co.nz.pizzashack.data.model.OrderModel@3a896511[orderId=<null>,orderNo=cb9dc9fd-07b0-47f9-8d43-bca718201f3a,quantity=6,status=<null>,paymentStatus=0,deliverTime=<null>,totalPrice=162.00,orderTime=<null>]
Hibernate: 
    select
        orderreque0_.message_id as message1_0_0_,
        orderreque0_.created_at as created2_0_0_,
        orderreque0_.order_id as order4_0_0_,
        orderreque0_.processor_name as processor3_0_0_ 
    from
        t_order_request_history orderreque0_ 
    where
        orderreque0_.message_id=?
2014-01-31 21:33:45,995 [ckOrderInbound]] INFO  OrderRequestProcessor          - orderRequestProcessor end:{} 
2014-01-31 21:33:45,997 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlMarshal start:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:cb9dc9fd-07b0-47f9-8d43-bca718201f3a, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Chicken Parmesan, qty:2, totalPrice:50.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Spicy Italian, qty:4, totalPrice:112.00)], qty:6, totalPrice:162.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-01-31 08:33:45, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:33:45, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:33:35))
2014-01-31 21:33:46,006 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - pendingActivity:{} co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:4, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
2014-01-31 21:33:46,006 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - customerDto:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-01-31 21:33:46,035 [ckOrderInbound]] INFO  OrderProcessFormatTransformer  - orderReqXmlMarshal end:{} <order-process>
  <process-id>1</process-id>
  <create-time>1970-01-01 09:33:45</create-time>
  <complete-time>null</complete-time>
  <operator>general</operator>
  <order>
    <order-no>cb9dc9fd-07b0-47f9-8d43-bca718201f3a</order-no>
    <address>25 mavon downs</address>
    <quantity>6</quantity>
    <total-price>162.00</total-price>
    <status>pendingOnBilling</status>
    <order-time>2014-01-31 08:33:45</order-time>
    <deliver-time>null</deliver-time>
    <order-list>
      <order-details>
        <pizza-name>Chicken Parmesan</pizza-name>
        <quantity>2</quantity>
        <total-price>50.00</total-price>
      </order-details>
      <order-details>
        <pizza-name>Spicy Italian</pizza-name>
        <quantity>4</quantity>
        <total-price>112.00</total-price>
      </order-details>
    </order-list>
  </order>
  <customer>
    <name>david</name>
    <email>david.yuan124@gmail.com</email>
  </customer>
  <pending-activity>
    <name>Billing fill in</name>
    <type>userTask</type>
    <assignee>4</assignee>
  </pending-activity>
</order-process>
2014-01-31 21:33:46,036 [ckOrderInbound]] INFO  output                         - Exchange[ExchangePattern: InOnly, BodyType: String, Body: <order-process>  <process-id>1</process-id>  <create-time>1970-01-01 09:33:45</create-time>  <complete-time>null</complete-time>  <operator>general</operator>  <order>    <order-no>cb9dc9fd-07b0-47f9-8d43-bca718201f3a</order-no>    <address>25 mavon downs</address>    <quantity>6</quantity>    <total-price>162.00</total-price>    <status>pendingOnBilling</status>    <order-time>2014-01-31 08:33:45</order-time>    <deliver-time>null</deliver-time>    <order-list>      <order-details>        <pizza-name>Chicken Parmesan</pizza-name>        <quantity>2</quantity>        <total-price>50.00</total-price>      </order-details>      <order-details>        <pizza-name>Spicy Italian</pizza-name>        <quantity>4</quantity>        <total-price>112.00</total-price>      </order-details>    </order-list>  </order>  <customer>    <name>david</name>    <email>david.yuan124@gmail.com</email>  </customer>  <pending-activity>    <name>Billing fill in</name>    <type>userTask</type>    <assignee>4</assignee>  </pending-activity></order-process>]
2014-01-31 21:33:46,080 [ckOrderInbound]] INFO  orderProcessRoute              - Signalled to stop route

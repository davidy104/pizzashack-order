Script started on Sun 02 Feb 2014 21:14:21 NZDT
]0;david@david: ~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-webdavid@david:~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web$ mvn jetty:runcd pizzashack-distributor-web/[13Pmvn clean install[K[K[K[K[K[K[K[K[K[K[K[K[Ktest
[INFO] Scanning for projects...
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building pizzashack-distributor-web Maven Webapp 1.0.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ pizzashack-distributor-web ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 32 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ pizzashack-distributor-web ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ pizzashack-distributor-web ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ pizzashack-distributor-web ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] --- maven-surefire-plugin:2.5:test (default-test) @ pizzashack-distributor-web ---
[INFO] Surefire report directory: /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running co.nz.pizzashack.test.OrderProcessTest
2014-02-02 21:14:32,965 [main           ] INFO  GenericWebApplicationContext   - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@7f500082: startup date [Sun Feb 02 21:14:32 NZDT 2014]; root of context hierarchy
2014-02-02 21:14:33,020 [main           ] INFO  ClassPathBeanDefinitionScanner - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2014-02-02 21:14:34,416 [main           ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [META-INF/cxf/cxf.xml]
2014-02-02 21:14:34,652 [main           ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [META-INF/cxf/cxf-extension-soap.xml]
2014-02-02 21:14:34,676 [main           ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [META-INF/cxf/cxf-servlet.xml]
2014-02-02 21:14:34,697 [main           ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [activitiAppContext.xml]
2014-02-02 21:14:34,917 [main           ] INFO  PropertyPlaceholderConfigurer  - Loading properties file from class path resource [activiti.properties]
2014-02-02 21:14:35,002 [main           ] INFO  redAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2014-02-02 21:14:35,049 [main           ] INFO  GenericWebApplicationContext   - Bean 'infrastructureContextConfiguration' of type [class co.nz.pizzashack.config.InfrastructureContextConfiguration$$EnhancerByCGLIB$$fef3303b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:35,077 [main           ] INFO  MLog                           - MLog clients using log4j logging.
2014-02-02 21:14:35,129 [main           ] INFO  C3P0Registry                   - Initializing c3p0-0.9.1.2 [built 21-May-2007 15:04:56; debug? true; trace: 10]
2014-02-02 21:14:35,173 [main           ] INFO  GenericWebApplicationContext   - Bean 'dataSource' of type [class com.mchange.v2.c3p0.ComboPooledDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:35,264 [main           ] INFO  tainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default'
2014-02-02 21:14:35,348 [main           ] INFO  Version                        - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2014-02-02 21:14:35,352 [main           ] INFO  Version                        - HHH000412: Hibernate Core {4.1.4.Final}
2014-02-02 21:14:35,353 [main           ] INFO  Environment                    - HHH000206: hibernate.properties not found
2014-02-02 21:14:35,354 [main           ] INFO  Environment                    - HHH000021: Bytecode provider name : javassist
2014-02-02 21:14:35,370 [main           ] INFO  Ejb3Configuration              - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2014-02-02 21:14:35,611 [main           ] INFO  ConnectionProviderInitiator    - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2014-02-02 21:14:35,654 [main           ] INFO  AbstractPoolBackedDataSource   - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge1508z1v1word1dff2e4|60074234, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.h2.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge1508z1v1word1dff2e4|60074234, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:h2:mem:pizzashackdistributor;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 600, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 2, numHelperThreads -> 3, numThreadsAwaitingCheckoutDefaultUser -> 0, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2014-02-02 21:14:35,795 [main           ] INFO  Dialect                        - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2014-02-02 21:14:35,801 [main           ] INFO  LobCreatorBuilder              - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2014-02-02 21:14:35,809 [main           ] INFO  TransactionFactoryInitiator    - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2014-02-02 21:14:35,811 [main           ] INFO  ASTQueryTranslatorFactory      - HHH000397: Using ASTQueryTranslatorFactory
2014-02-02 21:14:35,836 [main           ] INFO  Version                        - Hibernate Validator 4.2.0.Final
2014-02-02 21:14:36,049 [main           ] INFO  SchemaExport                   - HHH000227: Running hbm2ddl schema export
Hibernate: 
    alter table t_activity_discount_rate 
        drop constraint FKA400C193698FCC4
2014-02-02 21:14:36,059 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_activity_discount_rate drop constraint FKA400C193698FCC4
2014-02-02 21:14:36,060 [main           ] ERROR SchemaExport                   - Table "T_ACTIVITY_DISCOUNT_RATE" not found; SQL statement:

    alter table t_activity_discount_rate 
        drop constraint FKA400C193698FCC4 [42102-160]
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE11193A98D65
2014-02-02 21:14:36,060 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_dept_staff drop constraint FKBC8AE11193A98D65
2014-02-02 21:14:36,060 [main           ] ERROR SchemaExport                   - Table "T_DEPT_STAFF" not found; SQL statement:

    alter table t_dept_staff 
        drop constraint FKBC8AE11193A98D65 [42102-160]
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE111A27DDA4A
2014-02-02 21:14:36,061 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_dept_staff drop constraint FKBC8AE111A27DDA4A
2014-02-02 21:14:36,061 [main           ] ERROR SchemaExport                   - Table "T_DEPT_STAFF" not found; SQL statement:

    alter table t_dept_staff 
        drop constraint FKBC8AE111A27DDA4A [42102-160]
Hibernate: 
    alter table t_order 
        drop constraint FKA0C0C3C3E11F4FCB
2014-02-02 21:14:36,062 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order drop constraint FKA0C0C3C3E11F4FCB
2014-02-02 21:14:36,062 [main           ] ERROR SchemaExport                   - Table "T_ORDER" not found; SQL statement:

    alter table t_order 
        drop constraint FKA0C0C3C3E11F4FCB [42102-160]
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB0883698FCC4
2014-02-02 21:14:36,063 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_pizzashack drop constraint FKE8ACB0883698FCC4
2014-02-02 21:14:36,063 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PIZZASHACK" not found; SQL statement:

    alter table t_order_pizzashack 
        drop constraint FKE8ACB0883698FCC4 [42102-160]
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB088BBCB676E
2014-02-02 21:14:36,064 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_pizzashack drop constraint FKE8ACB088BBCB676E
2014-02-02 21:14:36,064 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PIZZASHACK" not found; SQL statement:

    alter table t_order_pizzashack 
        drop constraint FKE8ACB088BBCB676E [42102-160]
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F33E99148D
2014-02-02 21:14:36,065 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_process drop constraint FK6B8B15F33E99148D
2014-02-02 21:14:36,065 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PROCESS" not found; SQL statement:

    alter table t_order_process 
        drop constraint FK6B8B15F33E99148D [42102-160]
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F3BBCB676E
2014-02-02 21:14:36,066 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_process drop constraint FK6B8B15F3BBCB676E
2014-02-02 21:14:36,066 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PROCESS" not found; SQL statement:

    alter table t_order_process 
        drop constraint FK6B8B15F3BBCB676E [42102-160]
Hibernate: 
    alter table t_order_request_history 
        drop constraint FK5A6B268BBCB676E
2014-02-02 21:14:36,067 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_request_history drop constraint FK5A6B268BBCB676E
2014-02-02 21:14:36,067 [main           ] ERROR SchemaExport                   - Table "T_ORDER_REQUEST_HISTORY" not found; SQL statement:

    alter table t_order_request_history 
        drop constraint FK5A6B268BBCB676E [42102-160]
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CA6130105
2014-02-02 21:14:36,067 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_review_record drop constraint FKFB7A439CA6130105
2014-02-02 21:14:36,067 [main           ] ERROR SchemaExport                   - Table "T_ORDER_REVIEW_RECORD" not found; SQL statement:

    alter table t_order_review_record 
        drop constraint FKFB7A439CA6130105 [42102-160]
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CBBCB676E
2014-02-02 21:14:36,068 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_review_record drop constraint FKFB7A439CBBCB676E
2014-02-02 21:14:36,068 [main           ] ERROR SchemaExport                   - Table "T_ORDER_REVIEW_RECORD" not found; SQL statement:

    alter table t_order_review_record 
        drop constraint FKFB7A439CBBCB676E [42102-160]
Hibernate: 
    alter table t_staff 
        drop constraint FKA0F9FF552DC32C06
2014-02-02 21:14:36,069 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_staff drop constraint FKA0F9FF552DC32C06
2014-02-02 21:14:36,069 [main           ] ERROR SchemaExport                   - Table "T_STAFF" not found; SQL statement:

    alter table t_staff 
        drop constraint FKA0F9FF552DC32C06 [42102-160]
Hibernate: 
    drop table t_activity_discount_rate if exists
Hibernate: 
    drop table t_customer if exists
Hibernate: 
    drop table t_dept if exists
Hibernate: 
    drop table t_dept_staff if exists
Hibernate: 
    drop table t_order if exists
Hibernate: 
    drop table t_order_pizzashack if exists
Hibernate: 
    drop table t_order_process if exists
Hibernate: 
    drop table t_order_request_history if exists
Hibernate: 
    drop table t_order_review_record if exists
Hibernate: 
    drop table t_pizzashack if exists
Hibernate: 
    drop table t_staff if exists
Hibernate: 
    drop table t_user if exists
Hibernate: 
    drop table t_workflow if exists
Hibernate: 
    create table t_activity_discount_rate (
        activity_rate_id bigint generated by default as identity,
        code varchar(255),
        description varchar(255),
        effective_time timestamp,
        expire_time timestamp,
        rate decimal(19,2),
        pizzashack_id bigint,
        primary key (activity_rate_id)
    )
Hibernate: 
    create table t_customer (
        cust_id bigint generated by default as identity,
        address varchar(255),
        credits integer,
        customer_name varchar(255),
        email varchar(255),
        primary key (cust_id)
    )
Hibernate: 
    create table t_dept (
        dept_id bigint generated by default as identity,
        create_date date,
        dept_name varchar(255),
        primary key (dept_id)
    )
Hibernate: 
    create table t_dept_staff (
        staff_dept_id bigint generated by default as identity,
        join_date date,
        dept_id bigint,
        staff_id bigint,
        primary key (staff_dept_id)
    )
Hibernate: 
    create table t_order (
        order_id bigint generated by default as identity,
        deliver_time timestamp,
        order_no varchar(255),
        order_time timestamp,
        payment_remarks varchar(255),
        payment_status integer,
        quantity integer,
        ship_address varchar(255),
        status integer,
        total_price decimal(19,2),
        cust_id bigint,
        primary key (order_id)
    )
Hibernate: 
    create table t_order_pizzashack (
        order_pizza_id bigint generated by default as identity,
        qty integer,
        total_price decimal(19,2),
        order_id bigint,
        pizzashack_id bigint,
        primary key (order_pizza_id)
    )
Hibernate: 
    create table t_order_process (
        order_process_id bigint generated by default as identity,
        active_process_definition_id varchar(255),
        active_process_instance_id varchar(255),
        complete_time time,
        create_time time,
        execution_id varchar(255),
        main_process_definition_id varchar(255),
        main_process_instance_id varchar(255),
        operator_id bigint,
        order_id bigint,
        primary key (order_process_id)
    )
Hibernate: 
    create table t_order_request_history (
        message_id varchar(255) generated by default as identity,
        created_at time,
        processor_name varchar(255),
        order_id bigint,
        primary key (message_id)
    )
Hibernate: 
    create table t_order_review_record (
        review_record_id bigint generated by default as identity,
        content varchar(255),
        create_time time,
        review_status integer,
        order_id bigint,
        reviewer_id bigint,
        primary key (review_record_id)
    )
Hibernate: 
    create table t_pizzashack (
        pizzashack_id bigint generated by default as identity,
        description varchar(255),
        icon varchar(255),
        name varchar(255),
        price decimal(19,2),
        primary key (pizzashack_id)
    )
Hibernate: 
    create table t_staff (
        staff_id bigint generated by default as identity,
        create_date date,
        email varchar(255),
        first_name varchar(255),
        identity varchar(255),
        last_name varchar(255),
        level integer,
        role integer,
        user_id bigint,
        primary key (staff_id)
    )
Hibernate: 
    create table t_user (
        user_id bigint generated by default as identity,
        create_time time,
        password varchar(255),
        user_name varchar(255),
        primary key (user_id)
    )
Hibernate: 
    create table t_workflow (
        workflow_id bigint generated by default as identity,
        category varchar(255),
        create_time time,
        deploy_id varchar(255),
        workflow_name varchar(255),
        process_definition_id varchar(255),
        process_definition_key varchar(255),
        primary key (workflow_id)
    )
Hibernate: 
    alter table t_activity_discount_rate 
        add constraint FKA400C193698FCC4 
        foreign key (pizzashack_id) 
        references t_pizzashack
Hibernate: 
    alter table t_dept_staff 
        add constraint FKBC8AE11193A98D65 
        foreign key (dept_id) 
        references t_dept
Hibernate: 
    alter table t_dept_staff 
        add constraint FKBC8AE111A27DDA4A 
        foreign key (staff_id) 
        references t_staff
Hibernate: 
    alter table t_order 
        add constraint FKA0C0C3C3E11F4FCB 
        foreign key (cust_id) 
        references t_customer
Hibernate: 
    alter table t_order_pizzashack 
        add constraint FKE8ACB0883698FCC4 
        foreign key (pizzashack_id) 
        references t_pizzashack
Hibernate: 
    alter table t_order_pizzashack 
        add constraint FKE8ACB088BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_process 
        add constraint FK6B8B15F33E99148D 
        foreign key (operator_id) 
        references t_user
Hibernate: 
    alter table t_order_process 
        add constraint FK6B8B15F3BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_request_history 
        add constraint FK5A6B268BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_review_record 
        add constraint FKFB7A439CA6130105 
        foreign key (reviewer_id) 
        references t_staff
Hibernate: 
    alter table t_order_review_record 
        add constraint FKFB7A439CBBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_staff 
        add constraint FKA0F9FF552DC32C06 
        foreign key (user_id) 
        references t_user
2014-02-02 21:14:36,525 [main           ] INFO  SchemaExport                   - HHH000230: Schema export complete
2014-02-02 21:14:36,561 [main           ] INFO  GenericWebApplicationContext   - Bean 'entityManagerFactory' of type [class org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:36,594 [main           ] INFO  GenericWebApplicationContext   - Bean 'entityManagerFactory' of type [class com.sun.proxy.$Proxy44] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:36,810 [main           ] INFO  GenericWebApplicationContext   - Bean 'cxf' of type [class org.apache.cxf.bus.spring.SpringBus] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:36,815 [main           ] WARN  OldSpringSupport               - Import of META-INF/cxf/cxf-extension-soap.xml has been deprecated and is unnecessary.
2014-02-02 21:14:36,820 [main           ] INFO  GenericWebApplicationContext   - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerByCGLIB$$813a6ae2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:36,832 [main           ] INFO  GenericWebApplicationContext   - Bean 'transactionAttributeSource' of type [class org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:36,840 [main           ] INFO  GenericWebApplicationContext   - Bean 'transactionInterceptor' of type [class org.springframework.transaction.interceptor.TransactionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:36,845 [main           ] INFO  GenericWebApplicationContext   - Bean 'org.springframework.transaction.config.internalTransactionAdvisor' of type [class org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:36,857 [main           ] INFO  GenericWebApplicationContext   - Bean 'transactionManager' of type [class org.springframework.orm.jpa.JpaTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:36,858 [main           ] INFO  GenericWebApplicationContext   - Bean 'camelJdbcIdempotentConfig' of type [class co.nz.pizzashack.config.CamelJdbcIdempotentConfig$$EnhancerByCGLIB$$65c41669] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:36,874 [main           ] INFO  GenericWebApplicationContext   - Bean 'sqlComponent' of type [class org.apache.camel.component.sql.SqlComponent] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:36,880 [main           ] INFO  GenericWebApplicationContext   - Bean 'camelCxfConfig' of type [class co.nz.pizzashack.config.CamelCxfConfig$$EnhancerByCGLIB$$8fcc2d8e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:36,909 [main           ] INFO  GenericWebApplicationContext   - Bean 'billingInboundEndpoint' of type [class org.apache.camel.component.cxf.CxfEndpoint] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:36,933 [main           ] INFO  GenericWebApplicationContext   - Bean 'billingVariableTransformer' of type [class co.nz.pizzashack.integration.mapping.BillingVariableTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:37,139 [main           ] INFO  GenericWebApplicationContext   - Bean 'billingFormatTransformer' of type [class co.nz.pizzashack.integration.mapping.BillingFormatTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:37,142 [main           ] INFO  GenericWebApplicationContext   - Bean 'billingResponseMergeProcessor' of type [class co.nz.pizzashack.integration.mapping.BillingResponseMergeProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:37,144 [main           ] INFO  GenericWebApplicationContext   - Bean 'sleepBean' of type [class co.nz.pizzashack.integration.utils.SleepBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:37,144 [main           ] INFO  GenericWebApplicationContext   - Bean 'billingProcessRoute' of type [class co.nz.pizzashack.integration.route.BillingProcessRoute] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:37,254 [main           ] INFO  GenericWebApplicationContext   - Bean 'org.activiti.engine.impl.rules.RulesDeployer#39a83e27' of type [class org.activiti.engine.impl.rules.RulesDeployer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:37,256 [main           ] INFO  GenericWebApplicationContext   - Bean 'processEngineConfiguration' of type [class org.activiti.spring.SpringProcessEngineConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:37,259 [main           ] INFO  GenericWebApplicationContext   - Bean 'processEngine' of type [class org.activiti.spring.ProcessEngineFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,333 [main           ] INFO  DbSqlSession                   - performing create on engine with resource org/activiti/db/create/activiti.h2.create.engine.sql
2014-02-02 21:14:38,351 [main           ] INFO  DbSqlSession                   - performing create on history with resource org/activiti/db/create/activiti.h2.create.history.sql
2014-02-02 21:14:38,357 [main           ] INFO  DbSqlSession                   - performing create on identity with resource org/activiti/db/create/activiti.h2.create.identity.sql
2014-02-02 21:14:38,360 [main           ] INFO  ProcessEngineImpl              - ProcessEngine default created
2014-02-02 21:14:38,361 [main           ] INFO  GenericWebApplicationContext   - Bean 'processEngine' of type [class org.activiti.engine.impl.ProcessEngineImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,365 [main           ] INFO  GenericWebApplicationContext   - Bean 'runtimeService' of type [class org.activiti.engine.impl.RuntimeServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,370 [main           ] INFO  GenericWebApplicationContext   - Bean 'taskService' of type [class org.activiti.engine.impl.TaskServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,374 [main           ] INFO  GenericWebApplicationContext   - Bean 'historyService' of type [class org.activiti.engine.impl.HistoryServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,378 [main           ] INFO  GenericWebApplicationContext   - Bean 'repositoryService' of type [class org.activiti.engine.impl.RepositoryServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,382 [main           ] INFO  GenericWebApplicationContext   - Bean 'managementService' of type [class org.activiti.engine.impl.ManagementServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,385 [main           ] INFO  GenericWebApplicationContext   - Bean 'identityService' of type [class org.activiti.engine.impl.IdentityServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,385 [main           ] INFO  GenericWebApplicationContext   - Bean 'activitiFacade' of type [class co.nz.pizzashack.wf.ActivitiFacade] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,390 [main           ] INFO  GenericWebApplicationContext   - Bean 'userConverter' of type [class co.nz.pizzashack.data.converter.UserConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,404 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,405 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,407 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,417 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#1' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,470 [main           ] INFO  GenericWebApplicationContext   - Bean 'workflowRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,508 [main           ] INFO  GenericWebApplicationContext   - Bean 'workflowRepository' of type [class com.sun.proxy.$Proxy55] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,512 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#2' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,512 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#2' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,512 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#2' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,513 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#3' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,521 [main           ] INFO  GenericWebApplicationContext   - Bean 'pizzashackRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,533 [main           ] INFO  GenericWebApplicationContext   - Bean 'pizzashackRepository' of type [class com.sun.proxy.$Proxy58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,536 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#4' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,536 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#4' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,536 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#4' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,536 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#5' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,545 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderProcessRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,550 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderProcessRepository' of type [class com.sun.proxy.$Proxy59] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,552 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#6' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,552 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#6' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,552 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#6' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,553 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#7' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,561 [main           ] INFO  GenericWebApplicationContext   - Bean 'userRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,565 [main           ] INFO  GenericWebApplicationContext   - Bean 'userRepository' of type [class com.sun.proxy.$Proxy60] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,567 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#8' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,567 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#8' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,568 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#8' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,568 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#9' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,576 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,580 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderRepository' of type [class com.sun.proxy.$Proxy61] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,608 [main           ] INFO  GenericWebApplicationContext   - Bean 'customerConverter' of type [class co.nz.pizzashack.data.converter.CustomerConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,613 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderDetailConverter' of type [class co.nz.pizzashack.data.converter.OrderDetailConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,614 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderConverter' of type [class co.nz.pizzashack.data.converter.OrderConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,614 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderProcessConverter' of type [class co.nz.pizzashack.data.converter.OrderProcessConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,619 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#10' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,619 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#10' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,619 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#10' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,620 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#11' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,628 [main           ] INFO  GenericWebApplicationContext   - Bean 'departmentRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,633 [main           ] INFO  GenericWebApplicationContext   - Bean 'departmentRepository' of type [class com.sun.proxy.$Proxy62] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,634 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderProcessAccessor' of type [class co.nz.pizzashack.ds.OrderProcessAccessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,638 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderReviewRecordConverter' of type [class co.nz.pizzashack.data.converter.OrderReviewRecordConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,640 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#12' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,640 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#12' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,640 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#12' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,641 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#13' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,648 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderReviewRecordRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,653 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderReviewRecordRepository' of type [class com.sun.proxy.$Proxy63] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,655 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#14' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,655 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#14' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,656 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#14' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,656 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#15' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,664 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderPizzashackRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,668 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderPizzashackRepository' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,670 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#16' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,670 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#16' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,671 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#16' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,671 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#17' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,678 [main           ] INFO  GenericWebApplicationContext   - Bean 'customerRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,682 [main           ] INFO  GenericWebApplicationContext   - Bean 'customerRepository' of type [class com.sun.proxy.$Proxy65] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,683 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderProcessDSImpl' of type [class co.nz.pizzashack.ds.OrderProcessDSImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,689 [main           ] INFO  GenericWebApplicationContext   - Bean 'billingInboundProcessor' of type [class co.nz.pizzashack.integration.processor.BillingInboundProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,689 [main           ] INFO  GenericWebApplicationContext   - Bean 'billingInboundWsRoute' of type [class co.nz.pizzashack.integration.route.BillingInboundWsRoute] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,708 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderJdbcMessageIdRepository' of type [class org.apache.camel.processor.idempotent.jdbc.JdbcMessageIdRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,714 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderProcessFormatTransformer' of type [class co.nz.pizzashack.integration.mapping.OrderProcessFormatTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,722 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#18' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,722 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#18' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,723 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#18' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,723 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#19' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,729 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderRequestHistoryRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,734 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderRequestHistoryRepository' of type [class com.sun.proxy.$Proxy70] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,735 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderRequestProcessor' of type [class co.nz.pizzashack.integration.processor.OrderRequestProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,737 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderDuplicatedReqProcessor' of type [class co.nz.pizzashack.integration.processor.OrderDuplicatedReqProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,738 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderProcessRoute' of type [class co.nz.pizzashack.integration.route.OrderProcessRoute] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,783 [main           ] INFO  GenericWebApplicationContext   - Bean 'activeMQConnectionFactory' of type [class org.apache.activemq.ActiveMQConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,935 [main           ] INFO  GenericWebApplicationContext   - Bean 'pooledConnectionFactory' of type [class org.apache.activemq.pool.PooledConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,954 [main           ] INFO  GenericWebApplicationContext   - Bean 'jmsTransactionManager' of type [class org.springframework.jms.connection.JmsTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,963 [main           ] INFO  GenericWebApplicationContext   - Bean 'jmsComponent' of type [class org.apache.camel.component.jms.JmsComponent] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,968 [main           ] INFO  GenericWebApplicationContext   - Bean 'camelSpringConfig' of type [class co.nz.pizzashack.config.CamelSpringConfig$$EnhancerByCGLIB$$cf4c2422] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:39,004 [main           ] INFO  DefaultListableBeanFactory     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6c2d4e47: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,applicationConfiguration,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,viewConfiguration,webMvcContextConfiguration,logoutController,loginController,indexController,userController,adminIndexController,departmentController,orderController,orderQueryController,staffController,billingProcessRespTransformer,billingProcessReqTransformer,orderProcessFormatTransformer,billingVariableTransformer,billingResponseMergeProcessor,billingFormatTransformer,billingInboundProcessor,orderDuplicatedReqProcessor,orderRequestProcessor,billingProcessRoute,billingInboundWsRoute,orderProcessRoute,sleepBean,pizzashackAPIImpl,camelSpringConfig,camelJdbcIdempotentConfig,camelCxfConfig,orderProcessDSImpl,customerDSImpl,workflowDSImpl,pizzashackDSImpl,userDSImpl,orderProcessAccessor,orderProcessQueryDSImpl,staffDSImpl,orderDSImpl,departmentDSImpl,initialDataConfig,pizzashackCaculator,emailExecutionListener,endExecutionListener,caculationMergeExecutionListener,orderMainTransitionExecutionListener,toManualReviewExecutionListener,outOfBillingProcessExecutionListener,outOfCoreProcessExecutionListener,billingRespExecutionListener,customerConverter,orderProcessConverter,staffConverter,userConverter,departmentConverter,workflowConverter,orderReviewRecordConverter,orderConverter,activityDiscountRateConverter,orderDetailConverter,pizzashackDataInitialConfiguration,pizzashackItemBuilder,infrastructureContextConfiguration,activitiFacade,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0,org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0,staffRepository,orderPizzashackRepository,userRepository,staffDepartmentRepository,departmentRepository,customerRepository,orderReviewRecordRepository,orderRepository,orderRequestHistoryRepository,pizzashackRepository,activityDiscountRateRepository,orderProcessRepository,workflowRepository,viewResolver,messageSource,org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration,requestMappingHandlerMapping,mvcContentNegotiationManager,viewControllerHandlerMapping,beanNameHandlerMapping,resourceHandlerMapping,defaultServletHandlerMapping,requestMappingHandlerAdapter,mvcConversionService,mvcValidator,httpRequestHandlerAdapter,simpleControllerHandlerAdapter,handlerExceptionResolver,sessionAttributeProcessor,localeChangeInterceptor,localeResolver,simpleMappingExceptionResolver,multipartResolver,activeMQConnectionFactory,pooledConnectionFactory,jmsComponent,jmsTransactionManager,camelBeanPostProcessor,camelContext,custThreadPoolProfile,sqlComponent,orderJdbcMessageIdRepository,billingInboundEndpoint,loggingOutInterceptor,cxf,org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor,org.apache.cxf.bus.spring.Jsr250BeanPostProcessor,org.apache.cxf.bus.spring.BusExtensionPostProcessor,org.apache.cxf.binding.soap.SoapBindingFactory,org.apache.cxf.binding.soap.SoapTransportFactory,org.apache.cxf.binding.soap.customEditorConfigurer,setupWorkflowData,setupData,org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration,org.springframework.transaction.config.internalTransactionAdvisor,transactionAttributeSource,transactionInterceptor,dataSource,transactionManager,entityManagerFactory,placeholderConfig,processEngineConfiguration,processEngine,repositoryService,runtimeService,taskService,historyService,managementService,identityService]; root of factory hierarchy
2014-02-02 21:14:39,280 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/logout],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LogoutController.logout(javax.servlet.http.HttpSession)
2014-02-02 21:14:39,281 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/login],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LoginController.handleLogin(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws co.nz.pizzashack.AuthenticationException
2014-02-02 21:14:39,281 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/login],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LoginController.showLoginPage(org.springframework.ui.Model)
2014-02-02 21:14:39,281 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/index],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.IndexController.index(org.springframework.ui.Model,co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-02-02 21:14:39,283 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/createUser],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public co.nz.pizzashack.data.dto.UserDto co.nz.pizzashack.controller.UserController.createUser(co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-02-02 21:14:39,283 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/{userId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.deleteUser(java.lang.Long) throws java.lang.Exception
2014-02-02 21:14:39,283 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-02-02 21:14:39,283 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/{userId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-02 21:14:39,284 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/update/{userId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-02 21:14:39,284 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/check/{userName}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.checkUser(java.lang.String) throws java.lang.Exception
2014-02-02 21:14:39,284 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-02 21:14:39,284 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/search],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.search(co.nz.pizzashack.data.dto.UserDto,org.springframework.ui.Model) throws java.lang.Exception
2014-02-02 21:14:39,284 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.create(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-02 21:14:39,284 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.update(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-02 21:14:39,285 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/adminIndex],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.AdminIndexController.index(org.springframework.ui.Model,co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-02-02 21:14:39,286 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-02-02 21:14:39,286 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/{deptId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-02 21:14:39,286 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/update/{deptId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-02 21:14:39,287 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/selectdepts],methods=[GET],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.util.Set<co.nz.pizzashack.data.dto.DepartmentDto> co.nz.pizzashack.controller.DepartmentController.select() throws java.lang.Exception
2014-02-02 21:14:39,287 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-02 21:14:39,287 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/{deptId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.delete(java.lang.Long) throws java.lang.Exception
2014-02-02 21:14:39,287 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/search],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.search(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.ui.Model) throws java.lang.Exception
2014-02-02 21:14:39,287 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.create(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-02 21:14:39,288 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.update(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-02 21:14:39,288 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/{orderProcessId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.showOrderProcess(java.lang.Long,org.springframework.ui.Model,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-02-02 21:14:39,288 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/claimReview/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.claimReviewTask(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-02-02 21:14:39,289 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/review],methods=[POST],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.reviewOrder(co.nz.pizzashack.data.dto.OrderReviewRecordDto,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-02-02 21:14:39,289 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderQuery/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderQueryController.show(java.lang.String,org.springframework.ui.Model) throws java.lang.Exception
2014-02-02 21:14:39,290 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderQuery/showHistory/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.util.Set<co.nz.pizzashack.data.dto.ProcessActivityDto> co.nz.pizzashack.controller.OrderQueryController.showHistory(java.lang.String) throws java.lang.Exception
2014-02-02 21:14:39,290 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderQuery/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderQueryController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-02 21:14:39,291 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-02-02 21:14:39,291 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/{staffId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-02 21:14:39,291 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/update/{staffId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-02 21:14:39,291 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-02 21:14:39,292 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/{staffId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.delete(java.lang.Long) throws java.lang.Exception
2014-02-02 21:14:39,292 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.create(co.nz.pizzashack.data.dto.StaffDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-02 21:14:39,292 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.update(co.nz.pizzashack.data.dto.StaffDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-02 21:14:39,324 [main           ] INFO  SimpleUrlHandlerMapping        - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2014-02-02 21:14:39,327 [main           ] INFO  SimpleUrlHandlerMapping        - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler]
2014-02-02 21:14:39,887 [main           ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) is starting
2014-02-02 21:14:39,888 [main           ] INFO  ManagedManagementStrategy      - JMX is enabled
2014-02-02 21:14:40,007 [main           ] INFO  DefaultTypeConverter           - Loaded 194 type converters
Hibernate: 
    SELECT
        1 
    FROM
        T_ORDER_REQUEST_HISTORY 
    WHERE
        1 = 0
2014-02-02 21:14:40,306 [main           ] INFO  SpringCamelContext             - StreamCaching is not in use. If using streams then its recommended to enable stream caching. See more details at http://camel.apache.org/stream-caching.html
2014-02-02 21:14:40,623 [main           ] INFO  BusApplicationContext          - Refreshing org.apache.cxf.bus.spring.BusApplicationContext@34f63ef5: startup date [Sun Feb 02 21:14:40 NZDT 2014]; parent: org.springframework.web.context.support.GenericWebApplicationContext@7f500082
2014-02-02 21:14:40,645 [main           ] INFO  DefaultListableBeanFactory     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@284dab12: defining beans []; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@6c2d4e47
2014-02-02 21:14:40,657 [main           ] INFO  ReflectionServiceFactoryBean   - Creating Service {http://ws.integration.pizzashack.nz.co/}BillingProcessWebServicesService from class co.nz.pizzashack.integration.ws.BillingProcessWebServices
2014-02-02 21:14:41,040 [main           ] INFO  ServerImpl                     - Setting the server's publish address to be /billingWs
2014-02-02 21:14:41,072 [main           ] INFO  SpringCamelContext             - Route: activitiBillingProcess started and consuming from: Endpoint[activiti://orderBillingProcess:billingIntegration?copyVariablesToBodyAsMap=true]
2014-02-02 21:14:41,075 [main           ] INFO  SpringCamelContext             - Route: direct:billingIntegration started and consuming from: Endpoint[direct://billingIntegration]
2014-02-02 21:14:41,077 [main           ] INFO  SpringCamelContext             - Route: direct:receiveBillingQueue started and consuming from: Endpoint[direct://receiveBillingQueue]
2014-02-02 21:14:41,080 [main           ] INFO  SpringCamelContext             - Route: route1 started and consuming from: Endpoint[direct://doBillingIntegration]
2014-02-02 21:14:41,090 [main           ] INFO  SpringCamelContext             - Route: orderProcessRoute started and consuming from: Endpoint[jms://queue:pizzashackOrderInbound]
2014-02-02 21:14:41,095 [main           ] INFO  SpringCamelContext             - Route: direct:orderDuplicatedProcess started and consuming from: Endpoint[direct://orderDuplicatedProcess]
2014-02-02 21:14:41,098 [main           ] INFO  SpringCamelContext             - Route: direct:orderRegularProcess started and consuming from: Endpoint[direct://orderRegularProcess]
2014-02-02 21:14:41,105 [main           ] INFO  SpringCamelContext             - Route: cxf:bean:billingInboundEndpoint started and consuming from: Endpoint[cxf://bean:billingInboundEndpoint]
2014-02-02 21:14:41,113 [main           ] INFO  SpringCamelContext             - Total 8 routes, of which 8 is started.
2014-02-02 21:14:41,114 [main           ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) started in 1.227 seconds
2014-02-02 21:14:41,130 [main           ] INFO  WorkflowInitialDataSetup       - initialize start:{}
2014-02-02 21:14:41,137 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-02-02 21:14:41,138 [main           ] INFO  UserDSImpl                     - usernamedavid
2014-02-02 21:14:41,138 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-02 21:14:41,349 [main           ] INFO  UserDSImpl                     - userId:1 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-02 21:14:41,397 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@2e94127b[userId=1,username=david,password=MTIzNDU2,createTime=Sun Feb 02 21:14:41 NZDT 2014]
2014-02-02 21:14:41,437 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-02 08:14:41)
2014-02-02 21:14:41,437 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-02 08:14:41)
2014-02-02 21:14:41,439 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-02-02 21:14:41,439 [main           ] INFO  UserDSImpl                     - usernamebrad
2014-02-02 21:14:41,439 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-02 21:14:41,442 [main           ] INFO  UserDSImpl                     - userId:2 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-02 21:14:41,444 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@e60939a[userId=2,username=brad,password=MTIzNDU2,createTime=Sun Feb 02 21:14:41 NZDT 2014]
2014-02-02 21:14:41,444 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-02 08:14:41)
2014-02-02 21:14:41,444 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-02 08:14:41)
2014-02-02 21:14:41,445 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-02-02 21:14:41,445 [main           ] INFO  UserDSImpl                     - usernamejohn
2014-02-02 21:14:41,445 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-02 21:14:41,448 [main           ] INFO  UserDSImpl                     - userId:3 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-02 21:14:41,449 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@72295d21[userId=3,username=john,password=MTIzNDU2,createTime=Sun Feb 02 21:14:41 NZDT 2014]
2014-02-02 21:14:41,449 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-02 08:14:41)
2014-02-02 21:14:41,449 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-02 08:14:41)
2014-02-02 21:14:41,450 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-02-02 21:14:41,450 [main           ] INFO  UserDSImpl                     - usernamegeneral
2014-02-02 21:14:41,450 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-02 21:14:41,453 [main           ] INFO  UserDSImpl                     - userId:4 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-02 21:14:41,455 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@791074ef[userId=4,username=general,password=MTIzNDU2,createTime=Sun Feb 02 21:14:41 NZDT 2014]
2014-02-02 21:14:41,456 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:2014-02-02 08:14:41)
2014-02-02 21:14:41,456 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:2014-02-02 08:14:41)
2014-02-02 21:14:41,466 [main           ] INFO  DepartmentDSImpl               - createDepartment start:co.nz.pizzashack.data.dto.DepartmentDto(deptId:null, deptName:Order manager, createDate:null) 
Hibernate: 
    select
        department0_.dept_id as dept1_8_,
        department0_.create_date as create2_8_,
        department0_.dept_name as dept3_8_ 
    from
        t_dept department0_ 
    where
        department0_.dept_name=? limit ?
2014-02-02 21:14:41,472 [main           ] INFO  DepartmentConverter            - toModel start:{} co.nz.pizzashack.data.dto.DepartmentDto(deptId:null, deptName:Order manager, createDate:null)
2014-02-02 21:14:41,475 [main           ] INFO  DepartmentConverter            - toModel end:{} co.nz.pizzashack.data.model.DepartmentModel@3048d071[deptId=<null>,deptName=Order manager,createDate=<null>,staffDepartments=<null>]
Hibernate: 
    insert 
    into
        t_dept
        (dept_id, create_date, dept_name) 
    values
        (null, ?, ?)
Hibernate: 
    insert 
    into
        ACT_ID_GROUP
        (ID_, REV_, NAME_, TYPE_)     
    values
        (       ?,       1,        ?,       ?     )
2014-02-02 21:14:41,483 [main           ] INFO  DepartmentConverter            - toDto start:{} co.nz.pizzashack.data.model.DepartmentModel@3048d071[deptId=1,deptName=Order manager,createDate=Sun Feb 02 21:14:41 NZDT 2014,staffDepartments=<null>]
2014-02-02 21:14:41,484 [main           ] INFO  DepartmentConverter            - toDto end:{} co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02)
2014-02-02 21:14:41,484 [main           ] INFO  DepartmentDSImpl               - createDepartment end:co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02) 
2014-02-02 21:14:41,485 [main           ] INFO  WorkflowInitialDataSetup       - department:co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02) 
2014-02-02 21:14:41,503 [main           ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:null, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-02 08:14:41)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-02-02 21:14:41,510 [main           ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:null, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-02 08:14:41))
2014-02-02 21:14:41,525 [main           ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@23615d73[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@4d3e3b2a[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-02-02 21:14:41,572 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@23615d73[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@4d3e3b2a[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=Sun Feb 02 21:14:41 NZDT 2014] 
2014-02-02 21:14:41,572 [main           ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = ?
Hibernate: 
    update
        ACT_GE_PROPERTY      
    SET
        REV_ = ?,
        VALUE_ = ?      
    where
        NAME_ = ?       
        and REV_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-02-02 21:14:41,591 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-02-02 21:14:41,599 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@23615d73[staffId=1,individual=co.nz.pizzashack.data.model.IndividualModel@4d3e3b2a[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=Sun Feb 02 21:14:41 NZDT 2014]
2014-02-02 21:14:41,606 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:1, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-02-02 21:14:41,606 [main           ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:1, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-02-02 21:14:41,610 [main           ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:null, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-02 08:14:41)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-02-02 21:14:41,612 [main           ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:null, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-02 08:14:41))
2014-02-02 21:14:41,613 [main           ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@569df499[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@1c25953c[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-02-02 21:14:41,621 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@569df499[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@1c25953c[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=Sun Feb 02 21:14:41 NZDT 2014] 
2014-02-02 21:14:41,621 [main           ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-02-02 21:14:41,626 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-02-02 21:14:41,629 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@569df499[staffId=2,individual=co.nz.pizzashack.data.model.IndividualModel@1c25953c[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=Sun Feb 02 21:14:41 NZDT 2014]
2014-02-02 21:14:41,630 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:2, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-02-02 21:14:41,631 [main           ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:2, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-02-02 21:14:41,632 [main           ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:null, departments:null, role:manager, level:junior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-02 08:14:41)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-02-02 21:14:41,634 [main           ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:null, departments:null, role:manager, level:junior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-02 08:14:41))
2014-02-02 21:14:41,634 [main           ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@740259cc[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@46559b94[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-02-02 21:14:41,641 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@740259cc[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@46559b94[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=Sun Feb 02 21:14:41 NZDT 2014] 
2014-02-02 21:14:41,641 [main           ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-02-02 21:14:41,645 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-02-02 21:14:41,648 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@740259cc[staffId=3,individual=co.nz.pizzashack.data.model.IndividualModel@46559b94[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=Sun Feb 02 21:14:41 NZDT 2014]
2014-02-02 21:14:41,649 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:3, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:null, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-02-02 21:14:41,649 [main           ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:3, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:null, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-02-02 21:14:41,650 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-02-02 21:14:41,659 [main           ] INFO  BpmnDeployer                   - Processing resource bpmn/OrderBillingProcess.bpmn20.xml
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 117: Having multiple <family> in <alias> isn't supported and may not work as expected
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-02-02 21:14:42,333 [main           ] INFO  RulesDeployer                  - Processing resource bpmn/OrderBillingProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-02 21:14:42,347 [main           ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderBillingProcess:1:7]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-02-02 21:14:42,354 [main           ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@11a864ff[wfId=1,name=orderBillingProcess,deployId=4,processDefinitionKey=orderBillingProcess,processDefinitionId=orderBillingProcess:1:7,createTime=Sun Feb 02 21:14:41 NZDT 2014]
2014-02-02 21:14:42,367 [main           ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-02-02 08:14:41)
2014-02-02 21:14:42,367 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-02-02 08:14:41)
2014-02-02 21:14:42,368 [main           ] INFO  WorkflowInitialDataSetup       - deploy billing process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-02-02 08:14:41) 
2014-02-02 21:14:42,368 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-02-02 21:14:42,371 [main           ] INFO  BpmnDeployer                   - Processing resource bpmn/OrdercoreProcess.bpmn20.xml
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-02-02 21:14:42,542 [main           ] INFO  RulesDeployer                  - Processing resource bpmn/OrdercoreProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-02 21:14:42,551 [main           ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderCoreProcess:1:11]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-02-02 21:14:42,553 [main           ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@2553ef85[wfId=2,name=orderCoreProcess,deployId=8,processDefinitionKey=orderCoreProcess,processDefinitionId=orderCoreProcess:1:11,createTime=Sun Feb 02 21:14:42 NZDT 2014]
2014-02-02 21:14:42,554 [main           ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-02-02 08:14:42)
2014-02-02 21:14:42,554 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-02-02 08:14:42)
2014-02-02 21:14:42,554 [main           ] INFO  WorkflowInitialDataSetup       - deploy core process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-02-02 08:14:42) 
2014-02-02 21:14:42,555 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-02-02 21:14:42,557 [main           ] INFO  BpmnDeployer                   - Processing resource bpmn/OrderlocalProcess.bpmn20.xml
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-02-02 21:14:42,825 [main           ] INFO  RulesDeployer                  - Processing resource bpmn/OrderlocalProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-02 21:14:42,839 [main           ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderlocalProcess:1:15]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-02-02 21:14:42,841 [main           ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@284ca035[wfId=3,name=orderlocalProcess,deployId=12,processDefinitionKey=orderlocalProcess,processDefinitionId=orderlocalProcess:1:15,createTime=Sun Feb 02 21:14:42 NZDT 2014]
2014-02-02 21:14:42,841 [main           ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 08:14:42)
2014-02-02 21:14:42,841 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 08:14:42)
2014-02-02 21:14:42,842 [main           ] INFO  WorkflowInitialDataSetup       - deploy local main process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 08:14:42) 
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
2014-02-02 21:14:42,893 [main           ] INFO  StaffDSImpl                    - getStaffsByName start:David
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.first_name=? 
        and staffmodel0_.last_name=?
2014-02-02 21:14:42,907 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@349d18dd[staffId=1,individual=co.nz.pizzashack.data.model.IndividualModel@402ee3b9[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=2014-02-02]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-02 21:14:42,919 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@2768700f[userId=1,username=david,password=MTIzNDU2,createTime=21:14:41]
2014-02-02 21:14:42,923 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:1970-01-01 09:14:41)
Hibernate: 
    select
        staffdepar0_.staff_id as staff4_12_1_,
        staffdepar0_.staff_dept_id as staff1_1_,
        staffdepar0_.staff_dept_id as staff1_1_0_,
        staffdepar0_.join_date as join2_1_0_,
        staffdepar0_.dept_id as dept3_1_0_,
        staffdepar0_.staff_id as staff4_1_0_ 
    from
        t_dept_staff staffdepar0_ 
    where
        staffdepar0_.staff_id=?
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        staffdepar0_.dept_id as dept3_8_1_,
        staffdepar0_.staff_dept_id as staff1_1_,
        staffdepar0_.staff_dept_id as staff1_1_0_,
        staffdepar0_.join_date as join2_1_0_,
        staffdepar0_.dept_id as dept3_1_0_,
        staffdepar0_.staff_id as staff4_1_0_ 
    from
        t_dept_staff staffdepar0_ 
    where
        staffdepar0_.dept_id=?
2014-02-02 21:14:42,947 [main           ] INFO  DepartmentConverter            - toDto start:{} co.nz.pizzashack.data.model.DepartmentModel@6ea937ab[deptId=1,deptName=Order manager,createDate=2014-02-02,staffDepartments=[co.nz.pizzashack.data.model.StaffDepartmentModel@e98d197[staffDeptId=1,joinDate=2014-02-02], co.nz.pizzashack.data.model.StaffDepartmentModel@1bfee644[staffDeptId=2,joinDate=2014-02-02], co.nz.pizzashack.data.model.StaffDepartmentModel@2d8a3892[staffDeptId=3,joinDate=2014-02-02]]]
2014-02-02 21:14:42,952 [main           ] INFO  DepartmentConverter            - toDto end:{} co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-01)
2014-02-02 21:14:42,961 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:1, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:2014-02-01, departments:[co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-01)], role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:1970-01-01 09:14:41))
2014-02-02 21:14:42,961 [main           ] INFO  StaffDSImpl                    - getStaffsByName end:{}
2014-02-02 21:14:42,962 [main           ] INFO  StaffDSImpl                    - getStaffsByName start:Brad
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.first_name=? 
        and staffmodel0_.last_name=?
2014-02-02 21:14:42,965 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@504dfa53[staffId=2,individual=co.nz.pizzashack.data.model.IndividualModel@440ae0f1[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=2014-02-02]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-02 21:14:42,967 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@7fdbf03e[userId=2,username=brad,password=MTIzNDU2,createTime=21:14:41]
2014-02-02 21:14:42,967 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:1970-01-01 09:14:41)
Hibernate: 
    select
        staffdepar0_.staff_id as staff4_12_1_,
        staffdepar0_.staff_dept_id as staff1_1_,
        staffdepar0_.staff_dept_id as staff1_1_0_,
        staffdepar0_.join_date as join2_1_0_,
        staffdepar0_.dept_id as dept3_1_0_,
        staffdepar0_.staff_id as staff4_1_0_ 
    from
        t_dept_staff staffdepar0_ 
    where
        staffdepar0_.staff_id=?
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        staffdepar0_.dept_id as dept3_8_1_,
        staffdepar0_.staff_dept_id as staff1_1_,
        staffdepar0_.staff_dept_id as staff1_1_0_,
        staffdepar0_.join_date as join2_1_0_,
        staffdepar0_.dept_id as dept3_1_0_,
        staffdepar0_.staff_id as staff4_1_0_ 
    from
        t_dept_staff staffdepar0_ 
    where
        staffdepar0_.dept_id=?
2014-02-02 21:14:42,973 [main           ] INFO  DepartmentConverter            - toDto start:{} co.nz.pizzashack.data.model.DepartmentModel@194068c6[deptId=1,deptName=Order manager,createDate=2014-02-02,staffDepartments=[co.nz.pizzashack.data.model.StaffDepartmentModel@783105d0[staffDeptId=1,joinDate=2014-02-02], co.nz.pizzashack.data.model.StaffDepartmentModel@16228a18[staffDeptId=2,joinDate=2014-02-02], co.nz.pizzashack.data.model.StaffDepartmentModel@5a74d855[staffDeptId=3,joinDate=2014-02-02]]]
2014-02-02 21:14:42,973 [main           ] INFO  DepartmentConverter            - toDto end:{} co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-01)
2014-02-02 21:14:42,974 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:2, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:2014-02-01, departments:[co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-01)], role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:1970-01-01 09:14:41))
2014-02-02 21:14:42,974 [main           ] INFO  StaffDSImpl                    - getStaffsByName end:{}
2014-02-02 21:14:42,974 [main           ] INFO  UserDSImpl                     - getUserByName start:general
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
2014-02-02 21:14:42,977 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@4da7cb99[userId=4,username=general,password=MTIzNDU2,createTime=21:14:41]
2014-02-02 21:14:42,977 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)
2014-02-02 21:14:42,977 [main           ] INFO  UserDSImpl                     - getUserByName end:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)
2014-02-02 21:14:42,977 [main           ] INFO  OrderProcessTest               - department:co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-01) 
2014-02-02 21:14:42,978 [main           ] INFO  OrderProcessDSImpl             - startOrderProcess start:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.process_definition_key=? 
        and workflowmo0_.category=? limit ?
Hibernate: 
    insert 
    into
        t_order
        (order_id, cust_id, deliver_time, order_no, order_time, payment_remarks, payment_status, quantity, ship_address, status, total_price) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-02 21:14:42,993 [main           ] INFO  ActivitiFacade                 - startProcessInstance start:{}
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
2014-02-02 21:14:43,017 [main           ] INFO  ActivitiFacade                 - startProcessInstance end:{}
Hibernate: 
    insert 
    into
        t_order_process
        (order_process_id, active_process_definition_id, active_process_instance_id, complete_time, create_time, execution_id, main_process_definition_id, main_process_instance_id, operator_id, order_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2014-02-02 21:14:43,023 [main           ] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@3a02ec79[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=Sun Feb 02 21:14:43 NZDT 2014,completeTime=<null>]
2014-02-02 21:14:43,051 [main           ] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@ac20be7[orderId=1,orderNo=9512f4c4-cebe-4e8d-b899-2365531e6ebb,quantity=<null>,status=0,paymentStatus=0,deliverTime=<null>,totalPrice=<null>,orderTime=Sun Feb 02 21:14:42 NZDT 2014]
2014-02-02 21:14:43,060 [main           ] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 08:14:42, deliverTime:null)
2014-02-02 21:14:43,060 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@166c369f[userId=4,username=general,password=MTIzNDU2,createTime=21:14:41]
2014-02-02 21:14:43,061 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)
2014-02-02 21:14:43,067 [main           ] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 08:14:43, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41))
2014-02-02 21:14:43,068 [main           ] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 08:14:43, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
2014-02-02 21:14:43,082 [main           ] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-02 21:14:43,082 [main           ] INFO  ActivitiFacade                 - executionId: 16, processDefinitionId: orderlocalProcess:1:15
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-02 21:14:43,113 [main           ] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-02 21:14:43,120 [main           ] INFO  OrderProcessAccessor           - assign operator[4] to task[Data entry]
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    insert 
    into
        ACT_RU_IDENTITYLINK
        (ID_, REV_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_, PROC_DEF_ID_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_IDENTITYLINK
        (ID_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_)     
    values
        (?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_TASK      
    SET
        REV_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        PRIORITY_ = ?,
        CREATE_TIME_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        DELEGATION_ = ?,
        EXECUTION_ID_ = ?,
        PROC_DEF_ID_ = ?,
        DESCRIPTION_ = ?,
        DUE_DATE_ = ?,
        SUSPENSION_STATE_ = ?      
    where
        ID_= ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
2014-02-02 21:14:43,146 [main           ] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 08:14:43, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)) 
2014-02-02 21:14:43,147 [main           ] INFO  OrderProcessDSImpl             - startOrderProcess end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 08:14:43, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41))
2014-02-02 21:14:43,149 [main           ] INFO  OrderProcessTest               - after start instance:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 08:14:43, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)) 
2014-02-02 21:14:43,155 [main           ] INFO  OrderProcessTest               - order pazza type size:2 
2014-02-02 21:14:43,156 [main           ] INFO  OrderProcessDSImpl             - dataEntry start:9512f4c4-cebe-4e8d-b899-2365531e6ebb
2014-02-02 21:14:43,156 [main           ] INFO  OrderProcessDSImpl             - getOrderProcessByOrderNo start************************************
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-02 21:14:43,167 [main           ] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@6e7c6c3f[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=21:14:43,completeTime=<null>] 
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_,
        customermo0_.address as address2_,
        customermo0_.credits as credits2_,
        customermo0_.customer_name as customer4_2_,
        customermo0_.email as email2_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.email=? limit ?
2014-02-02 21:14:43,174 [main           ] INFO  CustomerConverter              - toModel start:{} co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:david, customerEmail:david.yuan124@gmail.com, level:null)
2014-02-02 21:14:43,176 [main           ] INFO  CustomerConverter              - toModel end:{} co.nz.pizzashack.data.model.CustomerModel@68f5012e[custId=<null>,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
Hibernate: 
    insert 
    into
        t_customer
        (cust_id, address, credits, customer_name, email) 
    values
        (null, ?, ?, ?, ?)
2014-02-02 21:14:43,180 [main           ] INFO  OrderProcessDSImpl             - orderDetailsSet size:2 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
2014-02-02 21:14:43,188 [main           ] INFO  OrderProcessDSImpl             - added orderPizzashackModel:co.nz.pizzashack.data.model.OrderPizzashackModel@b1a8744[orderPizzashackId=<null>,totalPrice=0,qty=4] 
Hibernate: 
    insert 
    into
        t_order_pizzashack
        (order_pizza_id, order_id, pizzashack_id, qty, total_price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
2014-02-02 21:14:43,196 [main           ] INFO  OrderProcessDSImpl             - added orderPizzashackModel:co.nz.pizzashack.data.model.OrderPizzashackModel@14cf43b9[orderPizzashackId=<null>,totalPrice=0,qty=10] 
Hibernate: 
    insert 
    into
        t_order_pizzashack
        (order_pizza_id, order_id, pizzashack_id, qty, total_price) 
    values
        (null, ?, ?, ?, ?)
2014-02-02 21:14:43,198 [main           ] INFO  OrderProcessDSImpl             - after add detailsDto, size in model:2 
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        E.BUSINESS_KEY_ = ?                                                                                 
        and RES.PROC_DEF_ID_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                    
        and RES.ASSIGNEE_ = ?                                                                        
        and E.BUSINESS_KEY_ = ?
2014-02-02 21:14:43,204 [main           ] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@6e7c6c3f[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=21:14:43,completeTime=<null>]
2014-02-02 21:14:43,208 [main           ] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@5973e863[orderId=1,orderNo=9512f4c4-cebe-4e8d-b899-2365531e6ebb,quantity=14,status=0,paymentStatus=0,deliverTime=<null>,totalPrice=0,orderTime=2014-02-02 21:14:42.985]
2014-02-02 21:14:43,211 [main           ] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@68f5012e[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-02 21:14:43,219 [main           ] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-02-02 21:14:43,224 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@b1a8744[orderPizzashackId=1,totalPrice=0,qty=4]
2014-02-02 21:14:43,231 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0)
2014-02-02 21:14:43,231 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@14cf43b9[orderPizzashackId=2,totalPrice=0,qty=10]
2014-02-02 21:14:43,231 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)
2014-02-02 21:14:43,232 [main           ] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:14, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 08:14:42, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-02 21:14:43,234 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@76b21698[userId=4,username=general,password=MTIzNDU2,createTime=21:14:41]
2014-02-02 21:14:43,234 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)
2014-02-02 21:14:43,234 [main           ] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:14, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:14:43, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41))
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        PARENT_TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE 
    where
        TASK_ID_ =     ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
2014-02-02 21:14:43,266 [main           ] INFO  ainTransitionExecutionListener - orderMainUserTaskExecutionListener start:{} 
2014-02-02 21:14:43,266 [main           ] INFO  ainTransitionExecutionListener - nextActivity id:orderCoreCallactivity
2014-02-02 21:14:43,266 [main           ] INFO  ainTransitionExecutionListener - nextActivity name:Core process
2014-02-02 21:14:43,266 [main           ] INFO  ainTransitionExecutionListener - nextActivity type:callActivity
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
start calculate: co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:14, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:14:43, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41))
2014-02-02 21:14:43,488 [main           ] INFO  PizzashackCaculator            - caculate start:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:14, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 08:14:42, deliverTime:null) 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-02 21:14:43,497 [main           ] INFO  PizzashackCaculator            - caculate end:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 08:14:42, deliverTime:null) 
after calculation: co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 08:14:42, deliverTime:null)
2014-02-02 21:14:43,498 [main           ] INFO  culationMergeExecutionListener - CaculationMergeExecutionListener start
2014-02-02 21:14:43,499 [main           ] INFO  culationMergeExecutionListener - after calculation, orderProcess:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:14:43, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)) 
2014-02-02 21:14:43,499 [main           ] INFO  OrderProcessAccessor           - merge calculation result
2014-02-02 21:14:43,499 [main           ] INFO  OrderProcessAccessor           - total price:390.00 
2014-02-02 21:14:43,499 [main           ] INFO  OrderProcessAccessor           - qty:14 
2014-02-02 21:14:43,500 [main           ] INFO  OrderProcessAccessor           - orderDetailsSet.size():2
2014-02-02 21:14:43,500 [main           ] INFO  culationMergeExecutionListener - CaculationMergeExecutionListener end
total qty: 14
after autoreview: 2
reviewTransBean: co.nz.pizzashack.data.dto.OrderReviewRecordDto(reviewRecordId:null, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, content:order number is more than 10 but less than 30, reviewResult:pending, createTime:2014-02-02 08:14:43, reviewer:null)
2014-02-02 21:14:43,560 [main           ] INFO  oManualReviewExecutionListener - ToManualReviewExecutionListener start:{} 
2014-02-02 21:14:43,560 [main           ] INFO  oManualReviewExecutionListener - eventName:take 
2014-02-02 21:14:43,560 [main           ] INFO  oManualReviewExecutionListener - activitiProcessDefinitionId:orderCoreProcess:1:11
2014-02-02 21:14:43,560 [main           ] INFO  oManualReviewExecutionListener - activitiProcesssInstanceId:30
2014-02-02 21:14:43,560 [main           ] INFO  oManualReviewExecutionListener - get orderReviewRecord:co.nz.pizzashack.data.dto.OrderReviewRecordDto(reviewRecordId:null, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, content:order number is more than 10 but less than 30, reviewResult:pending, createTime:2014-02-02 08:14:43, reviewer:null) 
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_IDENTITYLINK
        (ID_, REV_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_, PROC_DEF_ID_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_IDENTITYLINK
        (ID_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_)     
    values
        (?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_EXECUTION 
    set
        REV_ = ?,
        BUSINESS_KEY_ = ?,
        PROC_DEF_ID_ = ?,
        ACT_ID_ = ?,
        IS_ACTIVE_ = ?,
        IS_CONCURRENT_ = ?,
        IS_SCOPE_ = ?,
        IS_EVENT_SCOPE_ = ?,
        PARENT_ID_ = ?,
        SUPER_EXEC_ = ?,
        SUSPENSION_STATE_ = ?,
        CACHED_ENT_STATE_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_TASK 
    where
        ID_ = ? 
        and REV_ = ?
2014-02-02 21:14:43,663 [main           ] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 09:14:43, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-02-02 21:14:43,678 [main           ] INFO  OrderProcessAccessor           - get OrderProcessDto from flow:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 09:14:43, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)) 
2014-02-02 21:14:43,678 [main           ] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-02 21:14:43,678 [main           ] INFO  ActivitiFacade                 - executionId: 30, processDefinitionId: orderCoreProcess:1:11
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-02 21:14:43,684 [main           ] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-02 21:14:43,688 [main           ] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo start:{}
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-02 21:14:43,690 [main           ] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo end:{}
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
2014-02-02 21:14:43,692 [main           ] INFO  OrderProcessAccessor           - after merge orderProcessModel:co.nz.pizzashack.data.model.OrderProcessModel@6e7c6c3f[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=21:14:43,completeTime=<null>] 
2014-02-02 21:14:43,693 [main           ] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 09:14:43, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)) 
2014-02-02 21:14:43,694 [main           ] INFO  OrderProcessDSImpl             - dataEntry end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 09:14:43, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41))
Hibernate: 
    update
        t_order_process 
    set
        active_process_definition_id=?,
        active_process_instance_id=?,
        complete_time=?,
        create_time=?,
        execution_id=?,
        main_process_definition_id=?,
        main_process_instance_id=?,
        operator_id=?,
        order_id=? 
    where
        order_process_id=?
Hibernate: 
    update
        t_order 
    set
        cust_id=?,
        deliver_time=?,
        order_no=?,
        order_time=?,
        payment_remarks=?,
        payment_status=?,
        quantity=?,
        ship_address=?,
        status=?,
        total_price=? 
    where
        order_id=?
Hibernate: 
    update
        t_order_pizzashack 
    set
        order_id=?,
        pizzashack_id=?,
        qty=?,
        total_price=? 
    where
        order_pizza_id=?
Hibernate: 
    update
        t_order_pizzashack 
    set
        order_id=?,
        pizzashack_id=?,
        qty=?,
        total_price=? 
    where
        order_pizza_id=?
2014-02-02 21:14:43,710 [main           ] INFO  OrderProcessTest               - **************************after dataentry:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 09:14:43, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)) 
2014-02-02 21:14:43,710 [main           ] INFO  OrderProcessQueryDSImpl        - getOrderProcessDtoById start:1 
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_0_,
        orderproce0_.active_process_definition_id as active2_10_0_,
        orderproce0_.active_process_instance_id as active3_10_0_,
        orderproce0_.complete_time as complete4_10_0_,
        orderproce0_.create_time as create5_10_0_,
        orderproce0_.execution_id as execution6_10_0_,
        orderproce0_.main_process_definition_id as main7_10_0_,
        orderproce0_.main_process_instance_id as main8_10_0_,
        orderproce0_.operator_id as operator9_10_0_,
        orderproce0_.order_id as order10_10_0_ 
    from
        t_order_process orderproce0_ 
    where
        orderproce0_.order_process_id=?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-02 21:14:43,714 [main           ] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@6e867e05[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=21:14:43,completeTime=<null>]
2014-02-02 21:14:43,715 [main           ] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@74ad34b8[orderId=1,orderNo=9512f4c4-cebe-4e8d-b899-2365531e6ebb,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-02 21:14:42.985]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-02 21:14:43,723 [main           ] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@463c76f[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-02 21:14:43,724 [main           ] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-02 21:14:43,726 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@1312f417[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-02 21:14:43,731 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-02 21:14:43,731 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@41571bc9[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-02 21:14:43,733 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-02 21:14:43,733 [main           ] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-02 21:14:43,735 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@42d6a92d[userId=4,username=general,password=MTIzNDU2,createTime=21:14:41]
2014-02-02 21:14:43,735 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)
2014-02-02 21:14:43,736 [main           ] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 09:14:43, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41))
2014-02-02 21:14:43,736 [main           ] INFO  OrderProcessQueryDSImpl        - buildPendingActivity start:{}
2014-02-02 21:14:43,736 [main           ] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-02 21:14:43,736 [main           ] INFO  ActivitiFacade                 - executionId: 30, processDefinitionId: orderCoreProcess:1:11
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-02 21:14:43,744 [main           ] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo start:{}
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-02 21:14:43,746 [main           ] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo end:{}
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
2014-02-02 21:14:43,748 [main           ] INFO  OrderProcessQueryDSImpl        - buildPendingActivity end:{}
2014-02-02 21:14:43,749 [main           ] INFO  OrderProcessQueryDSImpl        - getOrderProcessDtoById end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 09:14:43, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:null), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)) 
2014-02-02 21:14:43,750 [main           ] INFO  OrderProcessTest               - -------------------------------ProcessActivityDto:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:null)
2014-02-02 21:14:43,750 [main           ] INFO  OrderDSImpl                    - getOrderByOrderNo start:9512f4c4-cebe-4e8d-b899-2365531e6ebb 
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_,
        ordermodel0_.cust_id as cust11_4_,
        ordermodel0_.deliver_time as deliver2_4_,
        ordermodel0_.order_no as order3_4_,
        ordermodel0_.order_time as order4_4_,
        ordermodel0_.payment_remarks as payment5_4_,
        ordermodel0_.payment_status as payment6_4_,
        ordermodel0_.quantity as quantity4_,
        ordermodel0_.ship_address as ship8_4_,
        ordermodel0_.status as status4_,
        ordermodel0_.total_price as total10_4_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_no=? limit ?
2014-02-02 21:14:43,756 [main           ] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@70cb13ed[orderId=1,orderNo=9512f4c4-cebe-4e8d-b899-2365531e6ebb,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-02 21:14:42.985]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-02 21:14:43,758 [main           ] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@4ac45fa9[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-02 21:14:43,759 [main           ] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-02 21:14:43,761 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@652a0ce9[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-02 21:14:43,763 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-02 21:14:43,763 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@2bb5c8e2[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-02 21:14:43,765 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-02 21:14:43,766 [main           ] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null)
2014-02-02 21:14:43,766 [main           ] INFO  OrderDSImpl                    - getOrderByOrderNo end:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null) 
2014-02-02 21:14:43,766 [main           ] INFO  OrderProcessTest               - after dataentry latest order from db:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null) 
2014-02-02 21:14:43,767 [main           ] INFO  OrderProcessDSImpl             - claimOrderReviewTask start:9512f4c4-cebe-4e8d-b899-2365531e6ebb
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-02 21:14:43,772 [main           ] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@4c0b788[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=21:14:43,completeTime=<null>] 
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        E.BUSINESS_KEY_ = ?                                                                                 
        and RES.PROC_DEF_ID_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-02 21:14:43,775 [main           ] INFO  OrderProcessDSImpl             - taskId:57
2014-02-02 21:14:43,775 [main           ] INFO  OrderProcessDSImpl             - taskName:Manual underwriting
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                    
        and RES.ASSIGNEE_ = ?                                                                        
        and E.BUSINESS_KEY_ = ?
Hibernate: 
    select
        g.*     
    from
        ACT_ID_GROUP g,
        ACT_ID_MEMBERSHIP membership     
    where
        g.ID_ = membership.GROUP_ID_       
        and membership.USER_ID_ = ?
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                   
    inner join
        ACT_RU_IDENTITYLINK I 
            on I.TASK_ID_ = RES.ID_                                 
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                                                                                                                                                              
        and RES.ASSIGNEE_ is null         
        and I.TYPE_ = 'candidate'         
        and          (
            I.USER_ID_ = ?                                             
            or                                   I.GROUP_ID_ IN             (
                ?             
            )                    
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    insert 
    into
        ACT_RU_IDENTITYLINK
        (ID_, REV_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_, PROC_DEF_ID_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_IDENTITYLINK
        (ID_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_)     
    values
        (?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_COMMENT
        (ID_, TYPE_, TIME_, USER_ID_, TASK_ID_, PROC_INST_ID_, ACTION_, MESSAGE_, FULL_MSG_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_TASK      
    SET
        REV_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        PRIORITY_ = ?,
        CREATE_TIME_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        DELEGATION_ = ?,
        EXECUTION_ID_ = ?,
        PROC_DEF_ID_ = ?,
        DESCRIPTION_ = ?,
        DUE_DATE_ = ?,
        SUSPENSION_STATE_ = ?      
    where
        ID_= ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
2014-02-02 21:14:43,816 [main           ] INFO  OrderProcessDSImpl             - claimOrderReviewTask end:{}
2014-02-02 21:14:43,817 [main           ] INFO  OrderProcessTest               - after david claim task:{} 
2014-02-02 21:14:43,817 [main           ] INFO  OrderProcessQueryDSImpl        - getOrderProcessDtoById start:1 
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_0_,
        orderproce0_.active_process_definition_id as active2_10_0_,
        orderproce0_.active_process_instance_id as active3_10_0_,
        orderproce0_.complete_time as complete4_10_0_,
        orderproce0_.create_time as create5_10_0_,
        orderproce0_.execution_id as execution6_10_0_,
        orderproce0_.main_process_definition_id as main7_10_0_,
        orderproce0_.main_process_instance_id as main8_10_0_,
        orderproce0_.operator_id as operator9_10_0_,
        orderproce0_.order_id as order10_10_0_ 
    from
        t_order_process orderproce0_ 
    where
        orderproce0_.order_process_id=?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-02 21:14:43,820 [main           ] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@103b33ad[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=21:14:43,completeTime=<null>]
2014-02-02 21:14:43,821 [main           ] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@19c20ad1[orderId=1,orderNo=9512f4c4-cebe-4e8d-b899-2365531e6ebb,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-02 21:14:42.985]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-02 21:14:43,823 [main           ] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@747fec66[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-02 21:14:43,823 [main           ] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-02 21:14:43,825 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@71d6e165[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-02 21:14:43,827 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-02 21:14:43,827 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@33cc6e99[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-02 21:14:43,828 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-02 21:14:43,828 [main           ] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-02 21:14:43,829 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@5dadd175[userId=4,username=general,password=MTIzNDU2,createTime=21:14:41]
2014-02-02 21:14:43,830 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)
2014-02-02 21:14:43,831 [main           ] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 09:14:43, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41))
2014-02-02 21:14:43,831 [main           ] INFO  OrderProcessQueryDSImpl        - buildPendingActivity start:{}
2014-02-02 21:14:43,831 [main           ] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-02 21:14:43,831 [main           ] INFO  ActivitiFacade                 - executionId: 30, processDefinitionId: orderCoreProcess:1:11
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-02 21:14:43,839 [main           ] INFO  OrderProcessQueryDSImpl        - buildPendingActivity end:{}
2014-02-02 21:14:43,840 [main           ] INFO  OrderProcessQueryDSImpl        - getOrderProcessDtoById end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 09:14:43, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:david, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:null), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)) 
2014-02-02 21:14:43,841 [main           ] INFO  OrderProcessTest               - -------------------------------ProcessActivityDto:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:david, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:null)
2014-02-02 21:14:43,842 [main           ] INFO  OrderProcessDSImpl             - manualOrderReview start:co.nz.pizzashack.data.dto.OrderReviewRecordDto(reviewRecordId:null, orderNo:null, content:review passed, reviewResult:accept, createTime:null, reviewer:co.nz.pizzashack.data.dto.StaffDto(staffId:1, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:2014-02-01, departments:[co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-01)], role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:1970-01-01 09:14:41))) 
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-02 21:14:43,846 [main           ] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@c75e921[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=21:14:43,completeTime=<null>] 
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-02 21:14:43,847 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@6ce2dfc2[userId=4,username=general,password=MTIzNDU2,createTime=21:14:41]
2014-02-02 21:14:43,847 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)
2014-02-02 21:14:43,847 [main           ] INFO  OrderProcessDSImpl             - doManualOrderReview start:{} 
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        E.BUSINESS_KEY_ = ?                                                                                 
        and RES.PROC_DEF_ID_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                    
        and RES.ASSIGNEE_ = ?                                                                        
        and E.BUSINESS_KEY_ = ?
2014-02-02 21:14:43,854 [main           ] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@c75e921[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=21:14:43,completeTime=<null>]
2014-02-02 21:14:43,855 [main           ] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@3f081348[orderId=1,orderNo=9512f4c4-cebe-4e8d-b899-2365531e6ebb,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-02 21:14:42.985]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-02 21:14:43,857 [main           ] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@3de8970a[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-02 21:14:43,858 [main           ] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-02 21:14:43,859 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@4c264183[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-02 21:14:43,861 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-02 21:14:43,861 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@63972683[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-02 21:14:43,862 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-02 21:14:43,862 [main           ] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null)
2014-02-02 21:14:43,862 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@6ce2dfc2[userId=4,username=general,password=MTIzNDU2,createTime=21:14:41]
2014-02-02 21:14:43,863 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)
2014-02-02 21:14:43,863 [main           ] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 09:14:43, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41))
2014-02-02 21:14:43,864 [main           ] INFO  OrderProcessDSImpl             - before manual review flow:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 09:14:43, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41))
2014-02-02 21:14:43,864 [main           ] INFO  OrderProcessDSImpl             - reviewResult:accept 
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        PARENT_TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE 
    where
        TASK_ID_ =     ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_PROCINST 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RU_JOB J     
    where
        J.EXECUTION_ID_ = ?
Hibernate: 
    select
        *      
    from
        ACT_RU_EVENT_SUBSCR     
    where
        (
            EXECUTION_ID_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
2014-02-02 21:14:43,918 [main           ] INFO  OfCoreProcessExecutionListener - after core process, orderProcess:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 09:14:43, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)) 
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-02-02 21:14:43,924 [main           ] INFO  ainTransitionExecutionListener - orderMainUserTaskExecutionListener start:{} 
2014-02-02 21:14:43,924 [main           ] INFO  ainTransitionExecutionListener - nextActivity id:billingEntry
2014-02-02 21:14:43,924 [main           ] INFO  ainTransitionExecutionListener - nextActivity name:Billing fill in
2014-02-02 21:14:43,924 [main           ] INFO  ainTransitionExecutionListener - nextActivity type:userTask
2014-02-02 21:14:43,924 [main           ] INFO  ainTransitionExecutionListener - order status:pendingOnBilling 
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    update
        ACT_HI_PROCINST 
    set
        PROC_DEF_ID_ = ?,
        BUSINESS_KEY_ = ?,
        START_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        END_ACT_ID_ = ?,
        DELETE_REASON_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_EXECUTION 
    set
        REV_ = ?,
        BUSINESS_KEY_ = ?,
        PROC_DEF_ID_ = ?,
        ACT_ID_ = ?,
        IS_ACTIVE_ = ?,
        IS_CONCURRENT_ = ?,
        IS_SCOPE_ = ?,
        IS_EVENT_SCOPE_ = ?,
        PARENT_ID_ = ?,
        SUPER_EXEC_ = ?,
        SUSPENSION_STATE_ = ?,
        CACHED_ENT_STATE_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_VARINST 
    set
        REV_ = ?,
        BYTEARRAY_ID_ = ?,
        DOUBLE_ = ?,
        LONG_ = ?,
        TEXT_ = ?,
        TEXT2_ = ?,
        VAR_TYPE_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_IDENTITYLINK 
    where
        ID_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_TASK 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_IDENTITYLINK 
    where
        ID_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ? 
        and REV_ = ?
2014-02-02 21:14:43,980 [main           ] INFO  OrderProcessDSImpl             - doManualOrderReview end:{} 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-02 21:14:43,983 [main           ] INFO  OrderProcessDSImpl             - process pending, build pending Activity:{} 
2014-02-02 21:14:43,983 [main           ] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:14:43, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-02-02 21:14:43,993 [main           ] INFO  OrderProcessAccessor           - get OrderProcessDto from flow:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:14:43, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)) 
2014-02-02 21:14:43,993 [main           ] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-02 21:14:43,993 [main           ] INFO  ActivitiFacade                 - executionId: 16, processDefinitionId: orderlocalProcess:1:15
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-02 21:14:43,999 [main           ] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-02 21:14:44,002 [main           ] INFO  OrderProcessAccessor           - assign operator[4] to task[Billing fill in]
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_TASK      
    SET
        REV_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        PRIORITY_ = ?,
        CREATE_TIME_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        DELEGATION_ = ?,
        EXECUTION_ID_ = ?,
        PROC_DEF_ID_ = ?,
        DESCRIPTION_ = ?,
        DUE_DATE_ = ?,
        SUSPENSION_STATE_ = ?      
    where
        ID_= ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
2014-02-02 21:14:44,018 [main           ] INFO  OrderProcessAccessor           - after merge orderProcessModel:co.nz.pizzashack.data.model.OrderProcessModel@c75e921[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=21:14:43,completeTime=<null>] 
2014-02-02 21:14:44,020 [main           ] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:14:43, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)) 
2014-02-02 21:14:44,021 [main           ] INFO  OrderProcessDSImpl             - manualOrderReview end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:14:43, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)) 
Hibernate: 
    update
        t_order_process 
    set
        active_process_definition_id=?,
        active_process_instance_id=?,
        complete_time=?,
        create_time=?,
        execution_id=?,
        main_process_definition_id=?,
        main_process_instance_id=?,
        operator_id=?,
        order_id=? 
    where
        order_process_id=?
2014-02-02 21:14:44,024 [main           ] INFO  OrderProcessTest               - after manul underwriting pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]) 
2014-02-02 21:14:44,025 [main           ] INFO  OrderDSImpl                    - getOrderByOrderNo start:9512f4c4-cebe-4e8d-b899-2365531e6ebb 
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_,
        ordermodel0_.cust_id as cust11_4_,
        ordermodel0_.deliver_time as deliver2_4_,
        ordermodel0_.order_no as order3_4_,
        ordermodel0_.order_time as order4_4_,
        ordermodel0_.payment_remarks as payment5_4_,
        ordermodel0_.payment_status as payment6_4_,
        ordermodel0_.quantity as quantity4_,
        ordermodel0_.ship_address as ship8_4_,
        ordermodel0_.status as status4_,
        ordermodel0_.total_price as total10_4_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_no=? limit ?
2014-02-02 21:14:44,027 [main           ] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@1ab641a4[orderId=1,orderNo=9512f4c4-cebe-4e8d-b899-2365531e6ebb,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-02 21:14:42.985]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-02 21:14:44,029 [main           ] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@4afa24f9[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-02 21:14:44,029 [main           ] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-02 21:14:44,031 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@7d8ae793[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-02 21:14:44,032 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-02 21:14:44,032 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@2a69a449[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-02 21:14:44,033 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-02 21:14:44,033 [main           ] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null)
2014-02-02 21:14:44,034 [main           ] INFO  OrderDSImpl                    - getOrderByOrderNo end:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null) 
2014-02-02 21:14:44,034 [main           ] INFO  OrderProcessTest               - ********************after review:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null) 
Tests run: 4, Failures: 0, Errors: 0, Skipped: 3, Time elapsed: 11.37 sec

Results :

Tests run: 4, Failures: 0, Errors: 0, Skipped: 3

2014-02-02 21:14:44,050 [Thread-8       ] INFO  GenericWebApplicationContext   - Closing org.springframework.web.context.support.GenericWebApplicationContext@7f500082: startup date [Sun Feb 02 21:14:32 NZDT 2014]; root of context hierarchy
2014-02-02 21:14:44,051 [Thread-8       ] INFO  BusApplicationContext          - Closing org.apache.cxf.bus.spring.BusApplicationContext@34f63ef5: startup date [Sun Feb 02 21:14:40 NZDT 2014]; parent: org.springframework.web.context.support.GenericWebApplicationContext@7f500082
2014-02-02 21:14:44,051 [Thread-8       ] INFO  DefaultListableBeanFactory     - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@284dab12: defining beans []; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@6c2d4e47
2014-02-02 21:14:44,052 [Thread-8       ] INFO  DefaultListableBeanFactory     - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6c2d4e47: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,applicationConfiguration,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,viewConfiguration,webMvcContextConfiguration,logoutController,loginController,indexController,userController,adminIndexController,departmentController,orderController,orderQueryController,staffController,billingProcessRespTransformer,billingProcessReqTransformer,orderProcessFormatTransformer,billingVariableTransformer,billingResponseMergeProcessor,billingFormatTransformer,billingInboundProcessor,orderDuplicatedReqProcessor,orderRequestProcessor,billingProcessRoute,billingInboundWsRoute,orderProcessRoute,sleepBean,pizzashackAPIImpl,camelSpringConfig,camelJdbcIdempotentConfig,camelCxfConfig,orderProcessDSImpl,customerDSImpl,workflowDSImpl,pizzashackDSImpl,userDSImpl,orderProcessAccessor,orderProcessQueryDSImpl,staffDSImpl,orderDSImpl,departmentDSImpl,initialDataConfig,pizzashackCaculator,emailExecutionListener,endExecutionListener,caculationMergeExecutionListener,orderMainTransitionExecutionListener,toManualReviewExecutionListener,outOfBillingProcessExecutionListener,outOfCoreProcessExecutionListener,billingRespExecutionListener,customerConverter,orderProcessConverter,staffConverter,userConverter,departmentConverter,workflowConverter,orderReviewRecordConverter,orderConverter,activityDiscountRateConverter,orderDetailConverter,pizzashackDataInitialConfiguration,pizzashackItemBuilder,infrastructureContextConfiguration,activitiFacade,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0,org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0,staffRepository,orderPizzashackRepository,userRepository,staffDepartmentRepository,departmentRepository,customerRepository,orderReviewRecordRepository,orderRepository,orderRequestHistoryRepository,pizzashackRepository,activityDiscountRateRepository,orderProcessRepository,workflowRepository,viewResolver,messageSource,org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration,requestMappingHandlerMapping,mvcContentNegotiationManager,viewControllerHandlerMapping,beanNameHandlerMapping,resourceHandlerMapping,defaultServletHandlerMapping,requestMappingHandlerAdapter,mvcConversionService,mvcValidator,httpRequestHandlerAdapter,simpleControllerHandlerAdapter,handlerExceptionResolver,sessionAttributeProcessor,localeChangeInterceptor,localeResolver,simpleMappingExceptionResolver,multipartResolver,activeMQConnectionFactory,pooledConnectionFactory,jmsComponent,jmsTransactionManager,camelBeanPostProcessor,camelContext,custThreadPoolProfile,sqlComponent,orderJdbcMessageIdRepository,billingInboundEndpoint,loggingOutInterceptor,cxf,org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor,org.apache.cxf.bus.spring.Jsr250BeanPostProcessor,org.apache.cxf.bus.spring.BusExtensionPostProcessor,org.apache.cxf.binding.soap.SoapBindingFactory,org.apache.cxf.binding.soap.SoapTransportFactory,org.apache.cxf.binding.soap.customEditorConfigurer,setupWorkflowData,setupData,org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration,org.springframework.transaction.config.internalTransactionAdvisor,transactionAttributeSource,transactionInterceptor,dataSource,transactionManager,entityManagerFactory,placeholderConfig,processEngineConfiguration,processEngine,repositoryService,runtimeService,taskService,historyService,managementService,identityService]; root of factory hierarchy
2014-02-02 21:14:44,052 [Thread-8       ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) is shutting down
2014-02-02 21:14:44,053 [Thread-8       ] INFO  DefaultShutdownStrategy        - Starting to graceful shutdown 8 routes (timeout 300 seconds)
2014-02-02 21:14:44,056 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: cxf:bean:billingInboundEndpoint shutdown complete, was consuming from: Endpoint[cxf://bean:billingInboundEndpoint]
2014-02-02 21:14:44,056 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:orderRegularProcess shutdown complete, was consuming from: Endpoint[direct://orderRegularProcess]
2014-02-02 21:14:44,056 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:orderDuplicatedProcess shutdown complete, was consuming from: Endpoint[direct://orderDuplicatedProcess]
2014-02-02 21:14:44,151 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: orderProcessRoute shutdown complete, was consuming from: Endpoint[jms://queue:pizzashackOrderInbound]
2014-02-02 21:14:44,151 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: route1 shutdown complete, was consuming from: Endpoint[direct://doBillingIntegration]
2014-02-02 21:14:44,152 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:receiveBillingQueue shutdown complete, was consuming from: Endpoint[direct://receiveBillingQueue]
2014-02-02 21:14:44,152 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:billingIntegration shutdown complete, was consuming from: Endpoint[direct://billingIntegration]
2014-02-02 21:14:44,152 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: activitiBillingProcess shutdown complete, was consuming from: Endpoint[activiti://orderBillingProcess:billingIntegration?copyVariablesToBodyAsMap=true]
2014-02-02 21:14:44,152 [Thread-8       ] INFO  DefaultShutdownStrategy        - Graceful shutdown of 8 routes completed in 0 seconds
2014-02-02 21:14:44,154 [Thread-8       ] INFO  CxfEndpoint                    - shutdown the bus ... org.apache.cxf.bus.spring.SpringBus@152bce71
2014-02-02 21:14:44,163 [Thread-8       ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) uptime 4.277 seconds
2014-02-02 21:14:44,163 [Thread-8       ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) is shutdown in 0.111 seconds
2014-02-02 21:14:44,203 [Thread-8       ] INFO  tainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2014-02-02 21:14:44,204 [Thread-8       ] INFO  SchemaExport                   - HHH000227: Running hbm2ddl schema export
Hibernate: 
    alter table t_activity_discount_rate 
        drop constraint FKA400C193698FCC4
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE11193A98D65
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE111A27DDA4A
Hibernate: 
    alter table t_order 
        drop constraint FKA0C0C3C3E11F4FCB
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB0883698FCC4
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB088BBCB676E
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F33E99148D
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F3BBCB676E
Hibernate: 
    alter table t_order_request_history 
        drop constraint FK5A6B268BBCB676E
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CA6130105
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CBBCB676E
Hibernate: 
    alter table t_staff 
        drop constraint FKA0F9FF552DC32C06
Hibernate: 
    drop table t_activity_discount_rate if exists
Hibernate: 
    drop table t_customer if exists
Hibernate: 
    drop table t_dept if exists
Hibernate: 
    drop table t_dept_staff if exists
Hibernate: 
    drop table t_order if exists
Hibernate: 
    drop table t_order_pizzashack if exists
Hibernate: 
    drop table t_order_process if exists
Hibernate: 
    drop table t_order_request_history if exists
Hibernate: 
    drop table t_order_review_record if exists
Hibernate: 
    drop table t_pizzashack if exists
Hibernate: 
    drop table t_staff if exists
Hibernate: 
    drop table t_user if exists
Hibernate: 
    drop table t_workflow if exists
2014-02-02 21:14:44,226 [Thread-8       ] INFO  SchemaExport                   - HHH000230: Schema export complete
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 14.922s
[INFO] Finished at: Sun Feb 02 21:14:44 NZDT 2014
[INFO] Final Memory: 25M/620M
[INFO] ------------------------------------------------------------------------
]0;david@david: ~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-webdavid@david:~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web$                                                                                                          Script started, file is screen.log
]0;david@david: ~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-webdavid@david:~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web$ mvn jetty:runcd pizzashack-distributor-web/[13Pmvn clean install[K[K[K[K[K[K[K[K[K[K[K[K[Ktest
[INFO] Scanning for projects...
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building pizzashack-distributor-web Maven Webapp 1.0.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ pizzashack-distributor-web ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 32 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ pizzashack-distributor-web ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ pizzashack-distributor-web ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ pizzashack-distributor-web ---
[INFO] Changes detected - recompiling the module!
[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!
[INFO] Using Groovy-Eclipse compiler to compile both Java and Groovy files
[INFO] 
[INFO] --- maven-surefire-plugin:2.5:test (default-test) @ pizzashack-distributor-web ---
[INFO] Surefire report directory: /home/david/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running co.nz.pizzashack.test.OrderProcessTest
2014-02-02 21:14:32,965 [main           ] INFO  GenericWebApplicationContext   - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@7f500082: startup date [Sun Feb 02 21:14:32 NZDT 2014]; root of context hierarchy
2014-02-02 21:14:33,020 [main           ] INFO  ClassPathBeanDefinitionScanner - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2014-02-02 21:14:34,416 [main           ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [META-INF/cxf/cxf.xml]
2014-02-02 21:14:34,652 [main           ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [META-INF/cxf/cxf-extension-soap.xml]
2014-02-02 21:14:34,676 [main           ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [META-INF/cxf/cxf-servlet.xml]
2014-02-02 21:14:34,697 [main           ] INFO  XmlBeanDefinitionReader        - Loading XML bean definitions from class path resource [activitiAppContext.xml]
2014-02-02 21:14:34,917 [main           ] INFO  PropertyPlaceholderConfigurer  - Loading properties file from class path resource [activiti.properties]
2014-02-02 21:14:35,002 [main           ] INFO  redAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2014-02-02 21:14:35,049 [main           ] INFO  GenericWebApplicationContext   - Bean 'infrastructureContextConfiguration' of type [class co.nz.pizzashack.config.InfrastructureContextConfiguration$$EnhancerByCGLIB$$fef3303b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:35,077 [main           ] INFO  MLog                           - MLog clients using log4j logging.
2014-02-02 21:14:35,129 [main           ] INFO  C3P0Registry                   - Initializing c3p0-0.9.1.2 [built 21-May-2007 15:04:56; debug? true; trace: 10]
2014-02-02 21:14:35,173 [main           ] INFO  GenericWebApplicationContext   - Bean 'dataSource' of type [class com.mchange.v2.c3p0.ComboPooledDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:35,264 [main           ] INFO  tainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default'
2014-02-02 21:14:35,348 [main           ] INFO  Version                        - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2014-02-02 21:14:35,352 [main           ] INFO  Version                        - HHH000412: Hibernate Core {4.1.4.Final}
2014-02-02 21:14:35,353 [main           ] INFO  Environment                    - HHH000206: hibernate.properties not found
2014-02-02 21:14:35,354 [main           ] INFO  Environment                    - HHH000021: Bytecode provider name : javassist
2014-02-02 21:14:35,370 [main           ] INFO  Ejb3Configuration              - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2014-02-02 21:14:35,611 [main           ] INFO  ConnectionProviderInitiator    - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2014-02-02 21:14:35,654 [main           ] INFO  AbstractPoolBackedDataSource   - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge1508z1v1word1dff2e4|60074234, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.h2.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge1508z1v1word1dff2e4|60074234, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:h2:mem:pizzashackdistributor;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 600, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 2, numHelperThreads -> 3, numThreadsAwaitingCheckoutDefaultUser -> 0, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2014-02-02 21:14:35,795 [main           ] INFO  Dialect                        - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2014-02-02 21:14:35,801 [main           ] INFO  LobCreatorBuilder              - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2014-02-02 21:14:35,809 [main           ] INFO  TransactionFactoryInitiator    - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2014-02-02 21:14:35,811 [main           ] INFO  ASTQueryTranslatorFactory      - HHH000397: Using ASTQueryTranslatorFactory
2014-02-02 21:14:35,836 [main           ] INFO  Version                        - Hibernate Validator 4.2.0.Final
2014-02-02 21:14:36,049 [main           ] INFO  SchemaExport                   - HHH000227: Running hbm2ddl schema export
Hibernate: 
    alter table t_activity_discount_rate 
        drop constraint FKA400C193698FCC4
2014-02-02 21:14:36,059 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_activity_discount_rate drop constraint FKA400C193698FCC4
2014-02-02 21:14:36,060 [main           ] ERROR SchemaExport                   - Table "T_ACTIVITY_DISCOUNT_RATE" not found; SQL statement:

    alter table t_activity_discount_rate 
        drop constraint FKA400C193698FCC4 [42102-160]
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE11193A98D65
2014-02-02 21:14:36,060 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_dept_staff drop constraint FKBC8AE11193A98D65
2014-02-02 21:14:36,060 [main           ] ERROR SchemaExport                   - Table "T_DEPT_STAFF" not found; SQL statement:

    alter table t_dept_staff 
        drop constraint FKBC8AE11193A98D65 [42102-160]
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE111A27DDA4A
2014-02-02 21:14:36,061 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_dept_staff drop constraint FKBC8AE111A27DDA4A
2014-02-02 21:14:36,061 [main           ] ERROR SchemaExport                   - Table "T_DEPT_STAFF" not found; SQL statement:

    alter table t_dept_staff 
        drop constraint FKBC8AE111A27DDA4A [42102-160]
Hibernate: 
    alter table t_order 
        drop constraint FKA0C0C3C3E11F4FCB
2014-02-02 21:14:36,062 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order drop constraint FKA0C0C3C3E11F4FCB
2014-02-02 21:14:36,062 [main           ] ERROR SchemaExport                   - Table "T_ORDER" not found; SQL statement:

    alter table t_order 
        drop constraint FKA0C0C3C3E11F4FCB [42102-160]
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB0883698FCC4
2014-02-02 21:14:36,063 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_pizzashack drop constraint FKE8ACB0883698FCC4
2014-02-02 21:14:36,063 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PIZZASHACK" not found; SQL statement:

    alter table t_order_pizzashack 
        drop constraint FKE8ACB0883698FCC4 [42102-160]
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB088BBCB676E
2014-02-02 21:14:36,064 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_pizzashack drop constraint FKE8ACB088BBCB676E
2014-02-02 21:14:36,064 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PIZZASHACK" not found; SQL statement:

    alter table t_order_pizzashack 
        drop constraint FKE8ACB088BBCB676E [42102-160]
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F33E99148D
2014-02-02 21:14:36,065 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_process drop constraint FK6B8B15F33E99148D
2014-02-02 21:14:36,065 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PROCESS" not found; SQL statement:

    alter table t_order_process 
        drop constraint FK6B8B15F33E99148D [42102-160]
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F3BBCB676E
2014-02-02 21:14:36,066 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_process drop constraint FK6B8B15F3BBCB676E
2014-02-02 21:14:36,066 [main           ] ERROR SchemaExport                   - Table "T_ORDER_PROCESS" not found; SQL statement:

    alter table t_order_process 
        drop constraint FK6B8B15F3BBCB676E [42102-160]
Hibernate: 
    alter table t_order_request_history 
        drop constraint FK5A6B268BBCB676E
2014-02-02 21:14:36,067 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_request_history drop constraint FK5A6B268BBCB676E
2014-02-02 21:14:36,067 [main           ] ERROR SchemaExport                   - Table "T_ORDER_REQUEST_HISTORY" not found; SQL statement:

    alter table t_order_request_history 
        drop constraint FK5A6B268BBCB676E [42102-160]
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CA6130105
2014-02-02 21:14:36,067 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_review_record drop constraint FKFB7A439CA6130105
2014-02-02 21:14:36,067 [main           ] ERROR SchemaExport                   - Table "T_ORDER_REVIEW_RECORD" not found; SQL statement:

    alter table t_order_review_record 
        drop constraint FKFB7A439CA6130105 [42102-160]
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CBBCB676E
2014-02-02 21:14:36,068 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_order_review_record drop constraint FKFB7A439CBBCB676E
2014-02-02 21:14:36,068 [main           ] ERROR SchemaExport                   - Table "T_ORDER_REVIEW_RECORD" not found; SQL statement:

    alter table t_order_review_record 
        drop constraint FKFB7A439CBBCB676E [42102-160]
Hibernate: 
    alter table t_staff 
        drop constraint FKA0F9FF552DC32C06
2014-02-02 21:14:36,069 [main           ] ERROR SchemaExport                   - HHH000389: Unsuccessful: alter table t_staff drop constraint FKA0F9FF552DC32C06
2014-02-02 21:14:36,069 [main           ] ERROR SchemaExport                   - Table "T_STAFF" not found; SQL statement:

    alter table t_staff 
        drop constraint FKA0F9FF552DC32C06 [42102-160]
Hibernate: 
    drop table t_activity_discount_rate if exists
Hibernate: 
    drop table t_customer if exists
Hibernate: 
    drop table t_dept if exists
Hibernate: 
    drop table t_dept_staff if exists
Hibernate: 
    drop table t_order if exists
Hibernate: 
    drop table t_order_pizzashack if exists
Hibernate: 
    drop table t_order_process if exists
Hibernate: 
    drop table t_order_request_history if exists
Hibernate: 
    drop table t_order_review_record if exists
Hibernate: 
    drop table t_pizzashack if exists
Hibernate: 
    drop table t_staff if exists
Hibernate: 
    drop table t_user if exists
Hibernate: 
    drop table t_workflow if exists
Hibernate: 
    create table t_activity_discount_rate (
        activity_rate_id bigint generated by default as identity,
        code varchar(255),
        description varchar(255),
        effective_time timestamp,
        expire_time timestamp,
        rate decimal(19,2),
        pizzashack_id bigint,
        primary key (activity_rate_id)
    )
Hibernate: 
    create table t_customer (
        cust_id bigint generated by default as identity,
        address varchar(255),
        credits integer,
        customer_name varchar(255),
        email varchar(255),
        primary key (cust_id)
    )
Hibernate: 
    create table t_dept (
        dept_id bigint generated by default as identity,
        create_date date,
        dept_name varchar(255),
        primary key (dept_id)
    )
Hibernate: 
    create table t_dept_staff (
        staff_dept_id bigint generated by default as identity,
        join_date date,
        dept_id bigint,
        staff_id bigint,
        primary key (staff_dept_id)
    )
Hibernate: 
    create table t_order (
        order_id bigint generated by default as identity,
        deliver_time timestamp,
        order_no varchar(255),
        order_time timestamp,
        payment_remarks varchar(255),
        payment_status integer,
        quantity integer,
        ship_address varchar(255),
        status integer,
        total_price decimal(19,2),
        cust_id bigint,
        primary key (order_id)
    )
Hibernate: 
    create table t_order_pizzashack (
        order_pizza_id bigint generated by default as identity,
        qty integer,
        total_price decimal(19,2),
        order_id bigint,
        pizzashack_id bigint,
        primary key (order_pizza_id)
    )
Hibernate: 
    create table t_order_process (
        order_process_id bigint generated by default as identity,
        active_process_definition_id varchar(255),
        active_process_instance_id varchar(255),
        complete_time time,
        create_time time,
        execution_id varchar(255),
        main_process_definition_id varchar(255),
        main_process_instance_id varchar(255),
        operator_id bigint,
        order_id bigint,
        primary key (order_process_id)
    )
Hibernate: 
    create table t_order_request_history (
        message_id varchar(255) generated by default as identity,
        created_at time,
        processor_name varchar(255),
        order_id bigint,
        primary key (message_id)
    )
Hibernate: 
    create table t_order_review_record (
        review_record_id bigint generated by default as identity,
        content varchar(255),
        create_time time,
        review_status integer,
        order_id bigint,
        reviewer_id bigint,
        primary key (review_record_id)
    )
Hibernate: 
    create table t_pizzashack (
        pizzashack_id bigint generated by default as identity,
        description varchar(255),
        icon varchar(255),
        name varchar(255),
        price decimal(19,2),
        primary key (pizzashack_id)
    )
Hibernate: 
    create table t_staff (
        staff_id bigint generated by default as identity,
        create_date date,
        email varchar(255),
        first_name varchar(255),
        identity varchar(255),
        last_name varchar(255),
        level integer,
        role integer,
        user_id bigint,
        primary key (staff_id)
    )
Hibernate: 
    create table t_user (
        user_id bigint generated by default as identity,
        create_time time,
        password varchar(255),
        user_name varchar(255),
        primary key (user_id)
    )
Hibernate: 
    create table t_workflow (
        workflow_id bigint generated by default as identity,
        category varchar(255),
        create_time time,
        deploy_id varchar(255),
        workflow_name varchar(255),
        process_definition_id varchar(255),
        process_definition_key varchar(255),
        primary key (workflow_id)
    )
Hibernate: 
    alter table t_activity_discount_rate 
        add constraint FKA400C193698FCC4 
        foreign key (pizzashack_id) 
        references t_pizzashack
Hibernate: 
    alter table t_dept_staff 
        add constraint FKBC8AE11193A98D65 
        foreign key (dept_id) 
        references t_dept
Hibernate: 
    alter table t_dept_staff 
        add constraint FKBC8AE111A27DDA4A 
        foreign key (staff_id) 
        references t_staff
Hibernate: 
    alter table t_order 
        add constraint FKA0C0C3C3E11F4FCB 
        foreign key (cust_id) 
        references t_customer
Hibernate: 
    alter table t_order_pizzashack 
        add constraint FKE8ACB0883698FCC4 
        foreign key (pizzashack_id) 
        references t_pizzashack
Hibernate: 
    alter table t_order_pizzashack 
        add constraint FKE8ACB088BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_process 
        add constraint FK6B8B15F33E99148D 
        foreign key (operator_id) 
        references t_user
Hibernate: 
    alter table t_order_process 
        add constraint FK6B8B15F3BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_request_history 
        add constraint FK5A6B268BBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_order_review_record 
        add constraint FKFB7A439CA6130105 
        foreign key (reviewer_id) 
        references t_staff
Hibernate: 
    alter table t_order_review_record 
        add constraint FKFB7A439CBBCB676E 
        foreign key (order_id) 
        references t_order
Hibernate: 
    alter table t_staff 
        add constraint FKA0F9FF552DC32C06 
        foreign key (user_id) 
        references t_user
2014-02-02 21:14:36,525 [main           ] INFO  SchemaExport                   - HHH000230: Schema export complete
2014-02-02 21:14:36,561 [main           ] INFO  GenericWebApplicationContext   - Bean 'entityManagerFactory' of type [class org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:36,594 [main           ] INFO  GenericWebApplicationContext   - Bean 'entityManagerFactory' of type [class com.sun.proxy.$Proxy44] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:36,810 [main           ] INFO  GenericWebApplicationContext   - Bean 'cxf' of type [class org.apache.cxf.bus.spring.SpringBus] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:36,815 [main           ] WARN  OldSpringSupport               - Import of META-INF/cxf/cxf-extension-soap.xml has been deprecated and is unnecessary.
2014-02-02 21:14:36,820 [main           ] INFO  GenericWebApplicationContext   - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerByCGLIB$$813a6ae2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:36,832 [main           ] INFO  GenericWebApplicationContext   - Bean 'transactionAttributeSource' of type [class org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:36,840 [main           ] INFO  GenericWebApplicationContext   - Bean 'transactionInterceptor' of type [class org.springframework.transaction.interceptor.TransactionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:36,845 [main           ] INFO  GenericWebApplicationContext   - Bean 'org.springframework.transaction.config.internalTransactionAdvisor' of type [class org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:36,857 [main           ] INFO  GenericWebApplicationContext   - Bean 'transactionManager' of type [class org.springframework.orm.jpa.JpaTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:36,858 [main           ] INFO  GenericWebApplicationContext   - Bean 'camelJdbcIdempotentConfig' of type [class co.nz.pizzashack.config.CamelJdbcIdempotentConfig$$EnhancerByCGLIB$$65c41669] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:36,874 [main           ] INFO  GenericWebApplicationContext   - Bean 'sqlComponent' of type [class org.apache.camel.component.sql.SqlComponent] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:36,880 [main           ] INFO  GenericWebApplicationContext   - Bean 'camelCxfConfig' of type [class co.nz.pizzashack.config.CamelCxfConfig$$EnhancerByCGLIB$$8fcc2d8e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:36,909 [main           ] INFO  GenericWebApplicationContext   - Bean 'billingInboundEndpoint' of type [class org.apache.camel.component.cxf.CxfEndpoint] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:36,933 [main           ] INFO  GenericWebApplicationContext   - Bean 'billingVariableTransformer' of type [class co.nz.pizzashack.integration.mapping.BillingVariableTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:37,139 [main           ] INFO  GenericWebApplicationContext   - Bean 'billingFormatTransformer' of type [class co.nz.pizzashack.integration.mapping.BillingFormatTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:37,142 [main           ] INFO  GenericWebApplicationContext   - Bean 'billingResponseMergeProcessor' of type [class co.nz.pizzashack.integration.mapping.BillingResponseMergeProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:37,144 [main           ] INFO  GenericWebApplicationContext   - Bean 'sleepBean' of type [class co.nz.pizzashack.integration.utils.SleepBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:37,144 [main           ] INFO  GenericWebApplicationContext   - Bean 'billingProcessRoute' of type [class co.nz.pizzashack.integration.route.BillingProcessRoute] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:37,254 [main           ] INFO  GenericWebApplicationContext   - Bean 'org.activiti.engine.impl.rules.RulesDeployer#39a83e27' of type [class org.activiti.engine.impl.rules.RulesDeployer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:37,256 [main           ] INFO  GenericWebApplicationContext   - Bean 'processEngineConfiguration' of type [class org.activiti.spring.SpringProcessEngineConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:37,259 [main           ] INFO  GenericWebApplicationContext   - Bean 'processEngine' of type [class org.activiti.spring.ProcessEngineFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,333 [main           ] INFO  DbSqlSession                   - performing create on engine with resource org/activiti/db/create/activiti.h2.create.engine.sql
2014-02-02 21:14:38,351 [main           ] INFO  DbSqlSession                   - performing create on history with resource org/activiti/db/create/activiti.h2.create.history.sql
2014-02-02 21:14:38,357 [main           ] INFO  DbSqlSession                   - performing create on identity with resource org/activiti/db/create/activiti.h2.create.identity.sql
2014-02-02 21:14:38,360 [main           ] INFO  ProcessEngineImpl              - ProcessEngine default created
2014-02-02 21:14:38,361 [main           ] INFO  GenericWebApplicationContext   - Bean 'processEngine' of type [class org.activiti.engine.impl.ProcessEngineImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,365 [main           ] INFO  GenericWebApplicationContext   - Bean 'runtimeService' of type [class org.activiti.engine.impl.RuntimeServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,370 [main           ] INFO  GenericWebApplicationContext   - Bean 'taskService' of type [class org.activiti.engine.impl.TaskServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,374 [main           ] INFO  GenericWebApplicationContext   - Bean 'historyService' of type [class org.activiti.engine.impl.HistoryServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,378 [main           ] INFO  GenericWebApplicationContext   - Bean 'repositoryService' of type [class org.activiti.engine.impl.RepositoryServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,382 [main           ] INFO  GenericWebApplicationContext   - Bean 'managementService' of type [class org.activiti.engine.impl.ManagementServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,385 [main           ] INFO  GenericWebApplicationContext   - Bean 'identityService' of type [class org.activiti.engine.impl.IdentityServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,385 [main           ] INFO  GenericWebApplicationContext   - Bean 'activitiFacade' of type [class co.nz.pizzashack.wf.ActivitiFacade] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,390 [main           ] INFO  GenericWebApplicationContext   - Bean 'userConverter' of type [class co.nz.pizzashack.data.converter.UserConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,404 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,405 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,407 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,417 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#1' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,470 [main           ] INFO  GenericWebApplicationContext   - Bean 'workflowRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,508 [main           ] INFO  GenericWebApplicationContext   - Bean 'workflowRepository' of type [class com.sun.proxy.$Proxy55] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,512 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#2' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,512 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#2' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,512 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#2' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,513 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#3' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,521 [main           ] INFO  GenericWebApplicationContext   - Bean 'pizzashackRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,533 [main           ] INFO  GenericWebApplicationContext   - Bean 'pizzashackRepository' of type [class com.sun.proxy.$Proxy58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,536 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#4' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,536 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#4' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,536 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#4' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,536 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#5' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,545 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderProcessRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,550 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderProcessRepository' of type [class com.sun.proxy.$Proxy59] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,552 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#6' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,552 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#6' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,552 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#6' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,553 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#7' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,561 [main           ] INFO  GenericWebApplicationContext   - Bean 'userRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,565 [main           ] INFO  GenericWebApplicationContext   - Bean 'userRepository' of type [class com.sun.proxy.$Proxy60] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,567 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#8' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,567 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#8' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,568 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#8' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,568 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#9' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,576 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,580 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderRepository' of type [class com.sun.proxy.$Proxy61] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,608 [main           ] INFO  GenericWebApplicationContext   - Bean 'customerConverter' of type [class co.nz.pizzashack.data.converter.CustomerConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,613 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderDetailConverter' of type [class co.nz.pizzashack.data.converter.OrderDetailConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,614 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderConverter' of type [class co.nz.pizzashack.data.converter.OrderConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,614 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderProcessConverter' of type [class co.nz.pizzashack.data.converter.OrderProcessConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,619 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#10' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,619 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#10' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,619 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#10' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,620 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#11' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,628 [main           ] INFO  GenericWebApplicationContext   - Bean 'departmentRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,633 [main           ] INFO  GenericWebApplicationContext   - Bean 'departmentRepository' of type [class com.sun.proxy.$Proxy62] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,634 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderProcessAccessor' of type [class co.nz.pizzashack.ds.OrderProcessAccessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,638 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderReviewRecordConverter' of type [class co.nz.pizzashack.data.converter.OrderReviewRecordConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,640 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#12' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,640 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#12' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,640 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#12' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,641 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#13' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,648 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderReviewRecordRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,653 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderReviewRecordRepository' of type [class com.sun.proxy.$Proxy63] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,655 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#14' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,655 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#14' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,656 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#14' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,656 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#15' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,664 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderPizzashackRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,668 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderPizzashackRepository' of type [class com.sun.proxy.$Proxy64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,670 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#16' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,670 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#16' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,671 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#16' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,671 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#17' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,678 [main           ] INFO  GenericWebApplicationContext   - Bean 'customerRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,682 [main           ] INFO  GenericWebApplicationContext   - Bean 'customerRepository' of type [class com.sun.proxy.$Proxy65] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,683 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderProcessDSImpl' of type [class co.nz.pizzashack.ds.OrderProcessDSImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,689 [main           ] INFO  GenericWebApplicationContext   - Bean 'billingInboundProcessor' of type [class co.nz.pizzashack.integration.processor.BillingInboundProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,689 [main           ] INFO  GenericWebApplicationContext   - Bean 'billingInboundWsRoute' of type [class co.nz.pizzashack.integration.route.BillingInboundWsRoute] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,708 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderJdbcMessageIdRepository' of type [class org.apache.camel.processor.idempotent.jdbc.JdbcMessageIdRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,714 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderProcessFormatTransformer' of type [class co.nz.pizzashack.integration.mapping.OrderProcessFormatTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,722 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#18' of type [class org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,722 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#18' of type [class java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,723 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#18' of type [class org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,723 [main           ] INFO  GenericWebApplicationContext   - Bean '(inner bean)#19' of type [class com.sun.proxy.$Proxy54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,729 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderRequestHistoryRepository' of type [class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,734 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderRequestHistoryRepository' of type [class com.sun.proxy.$Proxy70] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,735 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderRequestProcessor' of type [class co.nz.pizzashack.integration.processor.OrderRequestProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,737 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderDuplicatedReqProcessor' of type [class co.nz.pizzashack.integration.processor.OrderDuplicatedReqProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,738 [main           ] INFO  GenericWebApplicationContext   - Bean 'orderProcessRoute' of type [class co.nz.pizzashack.integration.route.OrderProcessRoute] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,783 [main           ] INFO  GenericWebApplicationContext   - Bean 'activeMQConnectionFactory' of type [class org.apache.activemq.ActiveMQConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,935 [main           ] INFO  GenericWebApplicationContext   - Bean 'pooledConnectionFactory' of type [class org.apache.activemq.pool.PooledConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,954 [main           ] INFO  GenericWebApplicationContext   - Bean 'jmsTransactionManager' of type [class org.springframework.jms.connection.JmsTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,963 [main           ] INFO  GenericWebApplicationContext   - Bean 'jmsComponent' of type [class org.apache.camel.component.jms.JmsComponent] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:38,968 [main           ] INFO  GenericWebApplicationContext   - Bean 'camelSpringConfig' of type [class co.nz.pizzashack.config.CamelSpringConfig$$EnhancerByCGLIB$$cf4c2422] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2014-02-02 21:14:39,004 [main           ] INFO  DefaultListableBeanFactory     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6c2d4e47: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,applicationConfiguration,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,viewConfiguration,webMvcContextConfiguration,logoutController,loginController,indexController,userController,adminIndexController,departmentController,orderController,orderQueryController,staffController,billingProcessRespTransformer,billingProcessReqTransformer,orderProcessFormatTransformer,billingVariableTransformer,billingResponseMergeProcessor,billingFormatTransformer,billingInboundProcessor,orderDuplicatedReqProcessor,orderRequestProcessor,billingProcessRoute,billingInboundWsRoute,orderProcessRoute,sleepBean,pizzashackAPIImpl,camelSpringConfig,camelJdbcIdempotentConfig,camelCxfConfig,orderProcessDSImpl,customerDSImpl,workflowDSImpl,pizzashackDSImpl,userDSImpl,orderProcessAccessor,orderProcessQueryDSImpl,staffDSImpl,orderDSImpl,departmentDSImpl,initialDataConfig,pizzashackCaculator,emailExecutionListener,endExecutionListener,caculationMergeExecutionListener,orderMainTransitionExecutionListener,toManualReviewExecutionListener,outOfBillingProcessExecutionListener,outOfCoreProcessExecutionListener,billingRespExecutionListener,customerConverter,orderProcessConverter,staffConverter,userConverter,departmentConverter,workflowConverter,orderReviewRecordConverter,orderConverter,activityDiscountRateConverter,orderDetailConverter,pizzashackDataInitialConfiguration,pizzashackItemBuilder,infrastructureContextConfiguration,activitiFacade,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0,org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0,staffRepository,orderPizzashackRepository,userRepository,staffDepartmentRepository,departmentRepository,customerRepository,orderReviewRecordRepository,orderRepository,orderRequestHistoryRepository,pizzashackRepository,activityDiscountRateRepository,orderProcessRepository,workflowRepository,viewResolver,messageSource,org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration,requestMappingHandlerMapping,mvcContentNegotiationManager,viewControllerHandlerMapping,beanNameHandlerMapping,resourceHandlerMapping,defaultServletHandlerMapping,requestMappingHandlerAdapter,mvcConversionService,mvcValidator,httpRequestHandlerAdapter,simpleControllerHandlerAdapter,handlerExceptionResolver,sessionAttributeProcessor,localeChangeInterceptor,localeResolver,simpleMappingExceptionResolver,multipartResolver,activeMQConnectionFactory,pooledConnectionFactory,jmsComponent,jmsTransactionManager,camelBeanPostProcessor,camelContext,custThreadPoolProfile,sqlComponent,orderJdbcMessageIdRepository,billingInboundEndpoint,loggingOutInterceptor,cxf,org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor,org.apache.cxf.bus.spring.Jsr250BeanPostProcessor,org.apache.cxf.bus.spring.BusExtensionPostProcessor,org.apache.cxf.binding.soap.SoapBindingFactory,org.apache.cxf.binding.soap.SoapTransportFactory,org.apache.cxf.binding.soap.customEditorConfigurer,setupWorkflowData,setupData,org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration,org.springframework.transaction.config.internalTransactionAdvisor,transactionAttributeSource,transactionInterceptor,dataSource,transactionManager,entityManagerFactory,placeholderConfig,processEngineConfiguration,processEngine,repositoryService,runtimeService,taskService,historyService,managementService,identityService]; root of factory hierarchy
2014-02-02 21:14:39,280 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/logout],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LogoutController.logout(javax.servlet.http.HttpSession)
2014-02-02 21:14:39,281 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/login],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LoginController.handleLogin(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws co.nz.pizzashack.AuthenticationException
2014-02-02 21:14:39,281 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/login],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.LoginController.showLoginPage(org.springframework.ui.Model)
2014-02-02 21:14:39,281 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/index],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.IndexController.index(org.springframework.ui.Model,co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-02-02 21:14:39,283 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/createUser],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public co.nz.pizzashack.data.dto.UserDto co.nz.pizzashack.controller.UserController.createUser(co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-02-02 21:14:39,283 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/{userId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.deleteUser(java.lang.Long) throws java.lang.Exception
2014-02-02 21:14:39,283 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-02-02 21:14:39,283 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/{userId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-02 21:14:39,284 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/update/{userId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-02 21:14:39,284 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/check/{userName}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.checkUser(java.lang.String) throws java.lang.Exception
2014-02-02 21:14:39,284 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-02 21:14:39,284 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/search],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.search(co.nz.pizzashack.data.dto.UserDto,org.springframework.ui.Model) throws java.lang.Exception
2014-02-02 21:14:39,284 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.create(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-02 21:14:39,284 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/user/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.UserController.update(co.nz.pizzashack.data.dto.UserDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-02 21:14:39,285 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/adminIndex],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.AdminIndexController.index(org.springframework.ui.Model,co.nz.pizzashack.data.dto.UserDto) throws java.lang.Exception
2014-02-02 21:14:39,286 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-02-02 21:14:39,286 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/{deptId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-02 21:14:39,286 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/update/{deptId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-02 21:14:39,287 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/selectdepts],methods=[GET],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.util.Set<co.nz.pizzashack.data.dto.DepartmentDto> co.nz.pizzashack.controller.DepartmentController.select() throws java.lang.Exception
2014-02-02 21:14:39,287 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-02 21:14:39,287 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/{deptId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.delete(java.lang.Long) throws java.lang.Exception
2014-02-02 21:14:39,287 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/search],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.search(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.ui.Model) throws java.lang.Exception
2014-02-02 21:14:39,287 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.create(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-02 21:14:39,288 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/department/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.DepartmentController.update(co.nz.pizzashack.data.dto.DepartmentDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-02 21:14:39,288 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/{orderProcessId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.showOrderProcess(java.lang.Long,org.springframework.ui.Model,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-02-02 21:14:39,288 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/claimReview/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.claimReviewTask(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-02-02 21:14:39,289 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderProcess/review],methods=[POST],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderController.reviewOrder(co.nz.pizzashack.data.dto.OrderReviewRecordDto,org.springframework.web.servlet.mvc.support.RedirectAttributes,javax.servlet.http.HttpSession) throws java.lang.Exception
2014-02-02 21:14:39,289 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderQuery/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderQueryController.show(java.lang.String,org.springframework.ui.Model) throws java.lang.Exception
2014-02-02 21:14:39,290 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderQuery/showHistory/{orderNo}],methods=[GET],params=[],headers=[],consumes=[],produces=[application/json],custom=[]}" onto public java.util.Set<co.nz.pizzashack.data.dto.ProcessActivityDto> co.nz.pizzashack.controller.OrderQueryController.showHistory(java.lang.String) throws java.lang.Exception
2014-02-02 21:14:39,290 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/orderQuery/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.OrderQueryController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-02 21:14:39,291 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/create],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.showCreate(org.springframework.ui.Model) throws java.lang.Exception
2014-02-02 21:14:39,291 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/{staffId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.show(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-02 21:14:39,291 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/update/{staffId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.showUpdate(java.lang.Long,org.springframework.ui.Model) throws java.lang.Exception
2014-02-02 21:14:39,291 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/list],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.index(org.springframework.ui.Model) throws java.lang.Exception
2014-02-02 21:14:39,292 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/{staffId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.delete(java.lang.Long) throws java.lang.Exception
2014-02-02 21:14:39,292 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/create],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.create(co.nz.pizzashack.data.dto.StaffDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-02 21:14:39,292 [main           ] INFO  RequestMappingHandlerMapping   - Mapped "{[/staff/update],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String co.nz.pizzashack.controller.StaffController.update(co.nz.pizzashack.data.dto.StaffDto,org.springframework.validation.BindingResult,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.lang.Exception
2014-02-02 21:14:39,324 [main           ] INFO  SimpleUrlHandlerMapping        - Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2014-02-02 21:14:39,327 [main           ] INFO  SimpleUrlHandlerMapping        - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler]
2014-02-02 21:14:39,887 [main           ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) is starting
2014-02-02 21:14:39,888 [main           ] INFO  ManagedManagementStrategy      - JMX is enabled
2014-02-02 21:14:40,007 [main           ] INFO  DefaultTypeConverter           - Loaded 194 type converters
Hibernate: 
    SELECT
        1 
    FROM
        T_ORDER_REQUEST_HISTORY 
    WHERE
        1 = 0
2014-02-02 21:14:40,306 [main           ] INFO  SpringCamelContext             - StreamCaching is not in use. If using streams then its recommended to enable stream caching. See more details at http://camel.apache.org/stream-caching.html
2014-02-02 21:14:40,623 [main           ] INFO  BusApplicationContext          - Refreshing org.apache.cxf.bus.spring.BusApplicationContext@34f63ef5: startup date [Sun Feb 02 21:14:40 NZDT 2014]; parent: org.springframework.web.context.support.GenericWebApplicationContext@7f500082
2014-02-02 21:14:40,645 [main           ] INFO  DefaultListableBeanFactory     - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@284dab12: defining beans []; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@6c2d4e47
2014-02-02 21:14:40,657 [main           ] INFO  ReflectionServiceFactoryBean   - Creating Service {http://ws.integration.pizzashack.nz.co/}BillingProcessWebServicesService from class co.nz.pizzashack.integration.ws.BillingProcessWebServices
2014-02-02 21:14:41,040 [main           ] INFO  ServerImpl                     - Setting the server's publish address to be /billingWs
2014-02-02 21:14:41,072 [main           ] INFO  SpringCamelContext             - Route: activitiBillingProcess started and consuming from: Endpoint[activiti://orderBillingProcess:billingIntegration?copyVariablesToBodyAsMap=true]
2014-02-02 21:14:41,075 [main           ] INFO  SpringCamelContext             - Route: direct:billingIntegration started and consuming from: Endpoint[direct://billingIntegration]
2014-02-02 21:14:41,077 [main           ] INFO  SpringCamelContext             - Route: direct:receiveBillingQueue started and consuming from: Endpoint[direct://receiveBillingQueue]
2014-02-02 21:14:41,080 [main           ] INFO  SpringCamelContext             - Route: route1 started and consuming from: Endpoint[direct://doBillingIntegration]
2014-02-02 21:14:41,090 [main           ] INFO  SpringCamelContext             - Route: orderProcessRoute started and consuming from: Endpoint[jms://queue:pizzashackOrderInbound]
2014-02-02 21:14:41,095 [main           ] INFO  SpringCamelContext             - Route: direct:orderDuplicatedProcess started and consuming from: Endpoint[direct://orderDuplicatedProcess]
2014-02-02 21:14:41,098 [main           ] INFO  SpringCamelContext             - Route: direct:orderRegularProcess started and consuming from: Endpoint[direct://orderRegularProcess]
2014-02-02 21:14:41,105 [main           ] INFO  SpringCamelContext             - Route: cxf:bean:billingInboundEndpoint started and consuming from: Endpoint[cxf://bean:billingInboundEndpoint]
2014-02-02 21:14:41,113 [main           ] INFO  SpringCamelContext             - Total 8 routes, of which 8 is started.
2014-02-02 21:14:41,114 [main           ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) started in 1.227 seconds
2014-02-02 21:14:41,130 [main           ] INFO  WorkflowInitialDataSetup       - initialize start:{}
2014-02-02 21:14:41,137 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-02-02 21:14:41,138 [main           ] INFO  UserDSImpl                     - usernamedavid
2014-02-02 21:14:41,138 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-02 21:14:41,349 [main           ] INFO  UserDSImpl                     - userId:1 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-02 21:14:41,397 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@2e94127b[userId=1,username=david,password=MTIzNDU2,createTime=Sun Feb 02 21:14:41 NZDT 2014]
2014-02-02 21:14:41,437 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-02 08:14:41)
2014-02-02 21:14:41,437 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-02 08:14:41)
2014-02-02 21:14:41,439 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-02-02 21:14:41,439 [main           ] INFO  UserDSImpl                     - usernamebrad
2014-02-02 21:14:41,439 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-02 21:14:41,442 [main           ] INFO  UserDSImpl                     - userId:2 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-02 21:14:41,444 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@e60939a[userId=2,username=brad,password=MTIzNDU2,createTime=Sun Feb 02 21:14:41 NZDT 2014]
2014-02-02 21:14:41,444 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-02 08:14:41)
2014-02-02 21:14:41,444 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-02 08:14:41)
2014-02-02 21:14:41,445 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-02-02 21:14:41,445 [main           ] INFO  UserDSImpl                     - usernamejohn
2014-02-02 21:14:41,445 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-02 21:14:41,448 [main           ] INFO  UserDSImpl                     - userId:3 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-02 21:14:41,449 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@72295d21[userId=3,username=john,password=MTIzNDU2,createTime=Sun Feb 02 21:14:41 NZDT 2014]
2014-02-02 21:14:41,449 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-02 08:14:41)
2014-02-02 21:14:41,449 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-02 08:14:41)
2014-02-02 21:14:41,450 [main           ] INFO  UserDSImpl                     - createUser start:{}
2014-02-02 21:14:41,450 [main           ] INFO  UserDSImpl                     - usernamegeneral
2014-02-02 21:14:41,450 [main           ] INFO  UserDSImpl                     - password:123456
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
Hibernate: 
    insert 
    into
        t_user
        (user_id, create_time, password, user_name) 
    values
        (null, ?, ?, ?)
2014-02-02 21:14:41,453 [main           ] INFO  UserDSImpl                     - userId:4 
Hibernate: 
    insert 
    into
        ACT_ID_USER
        (ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?     )
2014-02-02 21:14:41,455 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@791074ef[userId=4,username=general,password=MTIzNDU2,createTime=Sun Feb 02 21:14:41 NZDT 2014]
2014-02-02 21:14:41,456 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:2014-02-02 08:14:41)
2014-02-02 21:14:41,456 [main           ] INFO  UserDSImpl                     - createUser end:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:2014-02-02 08:14:41)
2014-02-02 21:14:41,466 [main           ] INFO  DepartmentDSImpl               - createDepartment start:co.nz.pizzashack.data.dto.DepartmentDto(deptId:null, deptName:Order manager, createDate:null) 
Hibernate: 
    select
        department0_.dept_id as dept1_8_,
        department0_.create_date as create2_8_,
        department0_.dept_name as dept3_8_ 
    from
        t_dept department0_ 
    where
        department0_.dept_name=? limit ?
2014-02-02 21:14:41,472 [main           ] INFO  DepartmentConverter            - toModel start:{} co.nz.pizzashack.data.dto.DepartmentDto(deptId:null, deptName:Order manager, createDate:null)
2014-02-02 21:14:41,475 [main           ] INFO  DepartmentConverter            - toModel end:{} co.nz.pizzashack.data.model.DepartmentModel@3048d071[deptId=<null>,deptName=Order manager,createDate=<null>,staffDepartments=<null>]
Hibernate: 
    insert 
    into
        t_dept
        (dept_id, create_date, dept_name) 
    values
        (null, ?, ?)
Hibernate: 
    insert 
    into
        ACT_ID_GROUP
        (ID_, REV_, NAME_, TYPE_)     
    values
        (       ?,       1,        ?,       ?     )
2014-02-02 21:14:41,483 [main           ] INFO  DepartmentConverter            - toDto start:{} co.nz.pizzashack.data.model.DepartmentModel@3048d071[deptId=1,deptName=Order manager,createDate=Sun Feb 02 21:14:41 NZDT 2014,staffDepartments=<null>]
2014-02-02 21:14:41,484 [main           ] INFO  DepartmentConverter            - toDto end:{} co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02)
2014-02-02 21:14:41,484 [main           ] INFO  DepartmentDSImpl               - createDepartment end:co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02) 
2014-02-02 21:14:41,485 [main           ] INFO  WorkflowInitialDataSetup       - department:co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-02) 
2014-02-02 21:14:41,503 [main           ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:null, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-02 08:14:41)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-02-02 21:14:41,510 [main           ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:null, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:2014-02-02 08:14:41))
2014-02-02 21:14:41,525 [main           ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@23615d73[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@4d3e3b2a[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-02-02 21:14:41,572 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@23615d73[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@4d3e3b2a[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=Sun Feb 02 21:14:41 NZDT 2014] 
2014-02-02 21:14:41,572 [main           ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_PROPERTY 
    where
        NAME_ = ?
Hibernate: 
    update
        ACT_GE_PROPERTY      
    SET
        REV_ = ?,
        VALUE_ = ?      
    where
        NAME_ = ?       
        and REV_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-02-02 21:14:41,591 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-02-02 21:14:41,599 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@23615d73[staffId=1,individual=co.nz.pizzashack.data.model.IndividualModel@4d3e3b2a[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=Sun Feb 02 21:14:41 NZDT 2014]
2014-02-02 21:14:41,606 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:1, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-02-02 21:14:41,606 [main           ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:1, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-02-02 21:14:41,610 [main           ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:null, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-02 08:14:41)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-02-02 21:14:41,612 [main           ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:null, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:2014-02-02 08:14:41))
2014-02-02 21:14:41,613 [main           ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@569df499[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@1c25953c[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-02-02 21:14:41,621 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@569df499[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@1c25953c[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=Sun Feb 02 21:14:41 NZDT 2014] 
2014-02-02 21:14:41,621 [main           ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-02-02 21:14:41,626 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-02-02 21:14:41,629 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@569df499[staffId=2,individual=co.nz.pizzashack.data.model.IndividualModel@1c25953c[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=Sun Feb 02 21:14:41 NZDT 2014]
2014-02-02 21:14:41,630 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:2, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-02-02 21:14:41,631 [main           ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:2, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-02-02 21:14:41,632 [main           ] INFO  StaffDSImpl                    - createStaff start:co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:null, departments:null, role:manager, level:junior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-02 08:14:41)) 
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.identity=? limit ?
2014-02-02 21:14:41,634 [main           ] INFO  StaffConverter                 - toModel start:{} co.nz.pizzashack.data.dto.StaffDto(staffId:null, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:null, departments:null, role:manager, level:junior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:3, username:john, password:MTIzNDU2, createTime:2014-02-02 08:14:41))
2014-02-02 21:14:41,634 [main           ] INFO  StaffConverter                 - toModel end:{} co.nz.pizzashack.data.model.StaffModel@740259cc[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@46559b94[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=<null>]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
Hibernate: 
    select
        RES.*            
    from
        ACT_ID_USER RES             
    WHERE
        RES.ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_ID_USER 
    set
        REV_ = ?,
        FIRST_ = ?,
        LAST_ = ?,
        EMAIL_ = ?,
        PWD_ = ?,
        PICTURE_ID_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
2014-02-02 21:14:41,641 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment start:co.nz.pizzashack.data.model.StaffModel@740259cc[staffId=<null>,individual=co.nz.pizzashack.data.model.IndividualModel@46559b94[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=Sun Feb 02 21:14:41 NZDT 2014] 
2014-02-02 21:14:41,641 [main           ] INFO  StaffDSImpl                    - assign new membership:1 
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        count(RES.ID_)           
    from
        ACT_ID_GROUP RES            
    WHERE
        RES.ID_ = ?
Hibernate: 
    insert 
    into
        ACT_ID_MEMBERSHIP
        (USER_ID_, GROUP_ID_)     
    values
        (       ?,       ?     )
2014-02-02 21:14:41,645 [main           ] INFO  StaffDSImpl                    - assignMembershipOfDepartment end:{} 
Hibernate: 
    insert 
    into
        t_staff
        (staff_id, create_date, email, first_name, identity, last_name, level, role, user_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_dept_staff
        (staff_dept_id, join_date, dept_id, staff_id) 
    values
        (null, ?, ?, ?)
2014-02-02 21:14:41,648 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@740259cc[staffId=3,individual=co.nz.pizzashack.data.model.IndividualModel@46559b94[firstName=John,lastName=Ni,identity=190390293293,email=john.ni@gmail.com],role=1,level=0,createDate=Sun Feb 02 21:14:41 NZDT 2014]
2014-02-02 21:14:41,649 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:3, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:null, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null))
2014-02-02 21:14:41,649 [main           ] INFO  StaffDSImpl                    - createStaff end:co.nz.pizzashack.data.dto.StaffDto(staffId:3, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:John, lastName:Ni, identity:190390293293, email:john.ni@gmail.com), createDate:2014-02-02, departments:null, role:manager, level:null, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:null, username:null, password:null, createTime:null)) 
2014-02-02 21:14:41,650 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-02-02 21:14:41,659 [main           ] INFO  BpmnDeployer                   - Processing resource bpmn/OrderBillingProcess.bpmn20.xml
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 90: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 106: Having multiple <family> in <alias> isn't supported and may not work as expected
Fontconfig warning: "/etc/fonts/conf.d/51-local.conf", line 117: Having multiple <family> in <alias> isn't supported and may not work as expected
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-02-02 21:14:42,333 [main           ] INFO  RulesDeployer                  - Processing resource bpmn/OrderBillingProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-02 21:14:42,347 [main           ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderBillingProcess:1:7]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-02-02 21:14:42,354 [main           ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@11a864ff[wfId=1,name=orderBillingProcess,deployId=4,processDefinitionKey=orderBillingProcess,processDefinitionId=orderBillingProcess:1:7,createTime=Sun Feb 02 21:14:41 NZDT 2014]
2014-02-02 21:14:42,367 [main           ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-02-02 08:14:41)
2014-02-02 21:14:42,367 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-02-02 08:14:41)
2014-02-02 21:14:42,368 [main           ] INFO  WorkflowInitialDataSetup       - deploy billing process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:1, name:orderBillingProcess, category:order, deployId:4, processDefinitionKey:orderBillingProcess, processDefinitionId:orderBillingProcess:1:7, createTime:2014-02-02 08:14:41) 
2014-02-02 21:14:42,368 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-02-02 21:14:42,371 [main           ] INFO  BpmnDeployer                   - Processing resource bpmn/OrdercoreProcess.bpmn20.xml
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-02-02 21:14:42,542 [main           ] INFO  RulesDeployer                  - Processing resource bpmn/OrdercoreProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-02 21:14:42,551 [main           ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderCoreProcess:1:11]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-02-02 21:14:42,553 [main           ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@2553ef85[wfId=2,name=orderCoreProcess,deployId=8,processDefinitionKey=orderCoreProcess,processDefinitionId=orderCoreProcess:1:11,createTime=Sun Feb 02 21:14:42 NZDT 2014]
2014-02-02 21:14:42,554 [main           ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-02-02 08:14:42)
2014-02-02 21:14:42,554 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-02-02 08:14:42)
2014-02-02 21:14:42,554 [main           ] INFO  WorkflowInitialDataSetup       - deploy core process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:2, name:orderCoreProcess, category:order, deployId:8, processDefinitionKey:orderCoreProcess, processDefinitionId:orderCoreProcess:1:11, createTime:2014-02-02 08:14:42) 
2014-02-02 21:14:42,555 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow start:{}
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.workflow_name=? 
        and workflowmo0_.category=? limit ?
2014-02-02 21:14:42,557 [main           ] INFO  BpmnDeployer                   - Processing resource bpmn/OrderlocalProcess.bpmn20.xml
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_JOB       
    where
        HANDLER_TYPE_ = ?       
        and HANDLER_CFG_ =  ?
2014-02-02 21:14:42,825 [main           ] INFO  RulesDeployer                  - Processing resource bpmn/OrderlocalProcess.bpmn20.xml
Hibernate: 
    insert 
    into
        ACT_RE_DEPLOYMENT
        (ID_, NAME_, CATEGORY_, DEPLOY_TIME_)     
    values
        (?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_, GENERATED_)     
    values
        (?, 1, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ACT_RE_PROCDEF
        (ID_, REV_, CATEGORY_, NAME_, KEY_, VERSION_, DEPLOYMENT_ID_, RESOURCE_NAME_, DGRM_RESOURCE_NAME_, DESCRIPTION_, HAS_START_FORM_KEY_, SUSPENSION_STATE_)     
    values
        (?,       1,             ?,             ?,             ?,              ?,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    select
        RES.*              
    from
        ACT_RE_PROCDEF RES            
    WHERE
        RES.DEPLOYMENT_ID_ = ?           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-02 21:14:42,839 [main           ] INFO  WorkflowDSImpl                 - processDefinition:ProcessDefinitionEntity[orderlocalProcess:1:15]
Hibernate: 
    insert 
    into
        t_workflow
        (workflow_id, category, create_time, deploy_id, workflow_name, process_definition_id, process_definition_key) 
    values
        (null, ?, ?, ?, ?, ?, ?)
2014-02-02 21:14:42,841 [main           ] INFO  WorkflowConverter              - toDto start:{} co.nz.pizzashack.data.model.WorkflowModel@284ca035[wfId=3,name=orderlocalProcess,deployId=12,processDefinitionKey=orderlocalProcess,processDefinitionId=orderlocalProcess:1:15,createTime=Sun Feb 02 21:14:42 NZDT 2014]
2014-02-02 21:14:42,841 [main           ] INFO  WorkflowConverter              - toDto end:{} co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 08:14:42)
2014-02-02 21:14:42,841 [main           ] INFO  WorkflowDSImpl                 - deployWorkflow end:co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 08:14:42)
2014-02-02 21:14:42,842 [main           ] INFO  WorkflowInitialDataSetup       - deploy local main process, workflow:co.nz.pizzashack.data.dto.WorkflowDto(wfId:3, name:orderlocalProcess, category:order, deployId:12, processDefinitionKey:orderlocalProcess, processDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 08:14:42) 
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        t_pizzashack
        (pizzashack_id, description, icon, name, price) 
    values
        (null, ?, ?, ?, ?)
2014-02-02 21:14:42,893 [main           ] INFO  StaffDSImpl                    - getStaffsByName start:David
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.first_name=? 
        and staffmodel0_.last_name=?
2014-02-02 21:14:42,907 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@349d18dd[staffId=1,individual=co.nz.pizzashack.data.model.IndividualModel@402ee3b9[firstName=David,lastName=Yuan,identity=8934892894,email=david.yuan@gmail.com],role=1,level=2,createDate=2014-02-02]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-02 21:14:42,919 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@2768700f[userId=1,username=david,password=MTIzNDU2,createTime=21:14:41]
2014-02-02 21:14:42,923 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:1970-01-01 09:14:41)
Hibernate: 
    select
        staffdepar0_.staff_id as staff4_12_1_,
        staffdepar0_.staff_dept_id as staff1_1_,
        staffdepar0_.staff_dept_id as staff1_1_0_,
        staffdepar0_.join_date as join2_1_0_,
        staffdepar0_.dept_id as dept3_1_0_,
        staffdepar0_.staff_id as staff4_1_0_ 
    from
        t_dept_staff staffdepar0_ 
    where
        staffdepar0_.staff_id=?
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        staffdepar0_.dept_id as dept3_8_1_,
        staffdepar0_.staff_dept_id as staff1_1_,
        staffdepar0_.staff_dept_id as staff1_1_0_,
        staffdepar0_.join_date as join2_1_0_,
        staffdepar0_.dept_id as dept3_1_0_,
        staffdepar0_.staff_id as staff4_1_0_ 
    from
        t_dept_staff staffdepar0_ 
    where
        staffdepar0_.dept_id=?
2014-02-02 21:14:42,947 [main           ] INFO  DepartmentConverter            - toDto start:{} co.nz.pizzashack.data.model.DepartmentModel@6ea937ab[deptId=1,deptName=Order manager,createDate=2014-02-02,staffDepartments=[co.nz.pizzashack.data.model.StaffDepartmentModel@e98d197[staffDeptId=1,joinDate=2014-02-02], co.nz.pizzashack.data.model.StaffDepartmentModel@1bfee644[staffDeptId=2,joinDate=2014-02-02], co.nz.pizzashack.data.model.StaffDepartmentModel@2d8a3892[staffDeptId=3,joinDate=2014-02-02]]]
2014-02-02 21:14:42,952 [main           ] INFO  DepartmentConverter            - toDto end:{} co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-01)
2014-02-02 21:14:42,961 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:1, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:2014-02-01, departments:[co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-01)], role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:1970-01-01 09:14:41))
2014-02-02 21:14:42,961 [main           ] INFO  StaffDSImpl                    - getStaffsByName end:{}
2014-02-02 21:14:42,962 [main           ] INFO  StaffDSImpl                    - getStaffsByName start:Brad
Hibernate: 
    select
        staffmodel0_.staff_id as staff1_12_,
        staffmodel0_.create_date as create2_12_,
        staffmodel0_.email as email12_,
        staffmodel0_.first_name as first4_12_,
        staffmodel0_.identity as identity12_,
        staffmodel0_.last_name as last6_12_,
        staffmodel0_.level as level12_,
        staffmodel0_.role as role12_,
        staffmodel0_.user_id as user9_12_ 
    from
        t_staff staffmodel0_ 
    where
        staffmodel0_.first_name=? 
        and staffmodel0_.last_name=?
2014-02-02 21:14:42,965 [main           ] INFO  StaffConverter                 - toDto start:{} co.nz.pizzashack.data.model.StaffModel@504dfa53[staffId=2,individual=co.nz.pizzashack.data.model.IndividualModel@440ae0f1[firstName=Brad,lastName=Wu,identity=2938298398,email=brad.wu@gmail.com],role=1,level=1,createDate=2014-02-02]
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-02 21:14:42,967 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@7fdbf03e[userId=2,username=brad,password=MTIzNDU2,createTime=21:14:41]
2014-02-02 21:14:42,967 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:1970-01-01 09:14:41)
Hibernate: 
    select
        staffdepar0_.staff_id as staff4_12_1_,
        staffdepar0_.staff_dept_id as staff1_1_,
        staffdepar0_.staff_dept_id as staff1_1_0_,
        staffdepar0_.join_date as join2_1_0_,
        staffdepar0_.dept_id as dept3_1_0_,
        staffdepar0_.staff_id as staff4_1_0_ 
    from
        t_dept_staff staffdepar0_ 
    where
        staffdepar0_.staff_id=?
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
Hibernate: 
    select
        staffdepar0_.dept_id as dept3_8_1_,
        staffdepar0_.staff_dept_id as staff1_1_,
        staffdepar0_.staff_dept_id as staff1_1_0_,
        staffdepar0_.join_date as join2_1_0_,
        staffdepar0_.dept_id as dept3_1_0_,
        staffdepar0_.staff_id as staff4_1_0_ 
    from
        t_dept_staff staffdepar0_ 
    where
        staffdepar0_.dept_id=?
2014-02-02 21:14:42,973 [main           ] INFO  DepartmentConverter            - toDto start:{} co.nz.pizzashack.data.model.DepartmentModel@194068c6[deptId=1,deptName=Order manager,createDate=2014-02-02,staffDepartments=[co.nz.pizzashack.data.model.StaffDepartmentModel@783105d0[staffDeptId=1,joinDate=2014-02-02], co.nz.pizzashack.data.model.StaffDepartmentModel@16228a18[staffDeptId=2,joinDate=2014-02-02], co.nz.pizzashack.data.model.StaffDepartmentModel@5a74d855[staffDeptId=3,joinDate=2014-02-02]]]
2014-02-02 21:14:42,973 [main           ] INFO  DepartmentConverter            - toDto end:{} co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-01)
2014-02-02 21:14:42,974 [main           ] INFO  StaffConverter                 - toDto end:{} co.nz.pizzashack.data.dto.StaffDto(staffId:2, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:Brad, lastName:Wu, identity:2938298398, email:brad.wu@gmail.com), createDate:2014-02-01, departments:[co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-01)], role:manager, level:intermedior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:2, username:brad, password:MTIzNDU2, createTime:1970-01-01 09:14:41))
2014-02-02 21:14:42,974 [main           ] INFO  StaffDSImpl                    - getStaffsByName end:{}
2014-02-02 21:14:42,974 [main           ] INFO  UserDSImpl                     - getUserByName start:general
Hibernate: 
    select
        usermodel0_.user_id as user1_7_,
        usermodel0_.create_time as create2_7_,
        usermodel0_.password as password7_,
        usermodel0_.user_name as user4_7_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_name=? limit ?
2014-02-02 21:14:42,977 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@4da7cb99[userId=4,username=general,password=MTIzNDU2,createTime=21:14:41]
2014-02-02 21:14:42,977 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)
2014-02-02 21:14:42,977 [main           ] INFO  UserDSImpl                     - getUserByName end:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)
2014-02-02 21:14:42,977 [main           ] INFO  OrderProcessTest               - department:co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-01) 
2014-02-02 21:14:42,978 [main           ] INFO  OrderProcessDSImpl             - startOrderProcess start:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)
Hibernate: 
    select
        workflowmo0_.workflow_id as workflow1_3_,
        workflowmo0_.category as category3_,
        workflowmo0_.create_time as create3_3_,
        workflowmo0_.deploy_id as deploy4_3_,
        workflowmo0_.workflow_name as workflow5_3_,
        workflowmo0_.process_definition_id as process6_3_,
        workflowmo0_.process_definition_key as process7_3_ 
    from
        t_workflow workflowmo0_ 
    where
        workflowmo0_.process_definition_key=? 
        and workflowmo0_.category=? limit ?
Hibernate: 
    insert 
    into
        t_order
        (order_id, cust_id, deliver_time, order_no, order_time, payment_remarks, payment_status, quantity, ship_address, status, total_price) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-02 21:14:42,993 [main           ] INFO  ActivitiFacade                 - startProcessInstance start:{}
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
2014-02-02 21:14:43,017 [main           ] INFO  ActivitiFacade                 - startProcessInstance end:{}
Hibernate: 
    insert 
    into
        t_order_process
        (order_process_id, active_process_definition_id, active_process_instance_id, complete_time, create_time, execution_id, main_process_definition_id, main_process_instance_id, operator_id, order_id) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2014-02-02 21:14:43,023 [main           ] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@3a02ec79[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=Sun Feb 02 21:14:43 NZDT 2014,completeTime=<null>]
2014-02-02 21:14:43,051 [main           ] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@ac20be7[orderId=1,orderNo=9512f4c4-cebe-4e8d-b899-2365531e6ebb,quantity=<null>,status=0,paymentStatus=0,deliverTime=<null>,totalPrice=<null>,orderTime=Sun Feb 02 21:14:42 NZDT 2014]
2014-02-02 21:14:43,060 [main           ] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 08:14:42, deliverTime:null)
2014-02-02 21:14:43,060 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@166c369f[userId=4,username=general,password=MTIzNDU2,createTime=21:14:41]
2014-02-02 21:14:43,061 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)
2014-02-02 21:14:43,067 [main           ] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 08:14:43, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41))
2014-02-02 21:14:43,068 [main           ] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 08:14:43, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
2014-02-02 21:14:43,082 [main           ] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-02 21:14:43,082 [main           ] INFO  ActivitiFacade                 - executionId: 16, processDefinitionId: orderlocalProcess:1:15
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-02 21:14:43,113 [main           ] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-02 21:14:43,120 [main           ] INFO  OrderProcessAccessor           - assign operator[4] to task[Data entry]
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    insert 
    into
        ACT_RU_IDENTITYLINK
        (ID_, REV_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_, PROC_DEF_ID_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_IDENTITYLINK
        (ID_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_)     
    values
        (?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_TASK      
    SET
        REV_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        PRIORITY_ = ?,
        CREATE_TIME_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        DELEGATION_ = ?,
        EXECUTION_ID_ = ?,
        PROC_DEF_ID_ = ?,
        DESCRIPTION_ = ?,
        DUE_DATE_ = ?,
        SUSPENSION_STATE_ = ?      
    where
        ID_= ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
2014-02-02 21:14:43,146 [main           ] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 08:14:43, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)) 
2014-02-02 21:14:43,147 [main           ] INFO  OrderProcessDSImpl             - startOrderProcess end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 08:14:43, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41))
2014-02-02 21:14:43,149 [main           ] INFO  OrderProcessTest               - after start instance:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:null, qty:null, totalPrice:null, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:null, customerEmail:null, level:null), address:null, status:null, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:2014-02-02 08:14:43, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:orderCoreCallactivity, name:Core process, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow1:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow10:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:dataEntry, name:Data entry, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)) 
2014-02-02 21:14:43,155 [main           ] INFO  OrderProcessTest               - order pazza type size:2 
2014-02-02 21:14:43,156 [main           ] INFO  OrderProcessDSImpl             - dataEntry start:9512f4c4-cebe-4e8d-b899-2365531e6ebb
2014-02-02 21:14:43,156 [main           ] INFO  OrderProcessDSImpl             - getOrderProcessByOrderNo start************************************
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-02 21:14:43,167 [main           ] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@6e7c6c3f[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=21:14:43,completeTime=<null>] 
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_,
        customermo0_.address as address2_,
        customermo0_.credits as credits2_,
        customermo0_.customer_name as customer4_2_,
        customermo0_.email as email2_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.email=? limit ?
2014-02-02 21:14:43,174 [main           ] INFO  CustomerConverter              - toModel start:{} co.nz.pizzashack.data.dto.CustomerDto(custId:null, customerName:david, customerEmail:david.yuan124@gmail.com, level:null)
2014-02-02 21:14:43,176 [main           ] INFO  CustomerConverter              - toModel end:{} co.nz.pizzashack.data.model.CustomerModel@68f5012e[custId=<null>,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
Hibernate: 
    insert 
    into
        t_customer
        (cust_id, address, credits, customer_name, email) 
    values
        (null, ?, ?, ?, ?)
2014-02-02 21:14:43,180 [main           ] INFO  OrderProcessDSImpl             - orderDetailsSet size:2 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
2014-02-02 21:14:43,188 [main           ] INFO  OrderProcessDSImpl             - added orderPizzashackModel:co.nz.pizzashack.data.model.OrderPizzashackModel@b1a8744[orderPizzashackId=<null>,totalPrice=0,qty=4] 
Hibernate: 
    insert 
    into
        t_order_pizzashack
        (order_pizza_id, order_id, pizzashack_id, qty, total_price) 
    values
        (null, ?, ?, ?, ?)
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
2014-02-02 21:14:43,196 [main           ] INFO  OrderProcessDSImpl             - added orderPizzashackModel:co.nz.pizzashack.data.model.OrderPizzashackModel@14cf43b9[orderPizzashackId=<null>,totalPrice=0,qty=10] 
Hibernate: 
    insert 
    into
        t_order_pizzashack
        (order_pizza_id, order_id, pizzashack_id, qty, total_price) 
    values
        (null, ?, ?, ?, ?)
2014-02-02 21:14:43,198 [main           ] INFO  OrderProcessDSImpl             - after add detailsDto, size in model:2 
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        E.BUSINESS_KEY_ = ?                                                                                 
        and RES.PROC_DEF_ID_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                    
        and RES.ASSIGNEE_ = ?                                                                        
        and E.BUSINESS_KEY_ = ?
2014-02-02 21:14:43,204 [main           ] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@6e7c6c3f[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=21:14:43,completeTime=<null>]
2014-02-02 21:14:43,208 [main           ] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@5973e863[orderId=1,orderNo=9512f4c4-cebe-4e8d-b899-2365531e6ebb,quantity=14,status=0,paymentStatus=0,deliverTime=<null>,totalPrice=0,orderTime=2014-02-02 21:14:42.985]
2014-02-02 21:14:43,211 [main           ] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@68f5012e[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-02 21:14:43,219 [main           ] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
2014-02-02 21:14:43,224 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@b1a8744[orderPizzashackId=1,totalPrice=0,qty=4]
2014-02-02 21:14:43,231 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0)
2014-02-02 21:14:43,231 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@14cf43b9[orderPizzashackId=2,totalPrice=0,qty=10]
2014-02-02 21:14:43,231 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)
2014-02-02 21:14:43,232 [main           ] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:14, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 08:14:42, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-02 21:14:43,234 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@76b21698[userId=4,username=general,password=MTIzNDU2,createTime=21:14:41]
2014-02-02 21:14:43,234 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)
2014-02-02 21:14:43,234 [main           ] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:14, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:14:43, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41))
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        PARENT_TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE 
    where
        TASK_ID_ =     ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
2014-02-02 21:14:43,266 [main           ] INFO  ainTransitionExecutionListener - orderMainUserTaskExecutionListener start:{} 
2014-02-02 21:14:43,266 [main           ] INFO  ainTransitionExecutionListener - nextActivity id:orderCoreCallactivity
2014-02-02 21:14:43,266 [main           ] INFO  ainTransitionExecutionListener - nextActivity name:Core process
2014-02-02 21:14:43,266 [main           ] INFO  ainTransitionExecutionListener - nextActivity type:callActivity
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RE_PROCDEF      
    where
        KEY_ = ? 
        and           VERSION_ = (
            select
                max(VERSION_) 
            from
                ACT_RE_PROCDEF 
            where
                KEY_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
start calculate: co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:14, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:14:43, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41))
2014-02-02 21:14:43,488 [main           ] INFO  PizzashackCaculator            - caculate start:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:0), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:0)], qty:14, totalPrice:0, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 08:14:42, deliverTime:null) 
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_,
        pizzashack0_.description as descript2_5_,
        pizzashack0_.icon as icon5_,
        pizzashack0_.name as name5_,
        pizzashack0_.price as price5_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.name=? limit ?
Hibernate: 
    select
        activitydi0_.pizzashack_id as pizzashack7_5_1_,
        activitydi0_.activity_rate_id as activity1_1_,
        activitydi0_.activity_rate_id as activity1_9_0_,
        activitydi0_.code as code9_0_,
        activitydi0_.description as descript3_9_0_,
        activitydi0_.effective_time as effective4_9_0_,
        activitydi0_.expire_time as expire5_9_0_,
        activitydi0_.pizzashack_id as pizzashack7_9_0_,
        activitydi0_.rate as rate9_0_ 
    from
        t_activity_discount_rate activitydi0_ 
    where
        activitydi0_.pizzashack_id=?
2014-02-02 21:14:43,497 [main           ] INFO  PizzashackCaculator            - caculate end:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 08:14:42, deliverTime:null) 
after calculation: co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 08:14:42, deliverTime:null)
2014-02-02 21:14:43,498 [main           ] INFO  culationMergeExecutionListener - CaculationMergeExecutionListener start
2014-02-02 21:14:43,499 [main           ] INFO  culationMergeExecutionListener - after calculation, orderProcess:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:null, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:14:43, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)) 
2014-02-02 21:14:43,499 [main           ] INFO  OrderProcessAccessor           - merge calculation result
2014-02-02 21:14:43,499 [main           ] INFO  OrderProcessAccessor           - total price:390.00 
2014-02-02 21:14:43,499 [main           ] INFO  OrderProcessAccessor           - qty:14 
2014-02-02 21:14:43,500 [main           ] INFO  OrderProcessAccessor           - orderDetailsSet.size():2
2014-02-02 21:14:43,500 [main           ] INFO  culationMergeExecutionListener - CaculationMergeExecutionListener end
total qty: 14
after autoreview: 2
reviewTransBean: co.nz.pizzashack.data.dto.OrderReviewRecordDto(reviewRecordId:null, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, content:order number is more than 10 but less than 30, reviewResult:pending, createTime:2014-02-02 08:14:43, reviewer:null)
2014-02-02 21:14:43,560 [main           ] INFO  oManualReviewExecutionListener - ToManualReviewExecutionListener start:{} 
2014-02-02 21:14:43,560 [main           ] INFO  oManualReviewExecutionListener - eventName:take 
2014-02-02 21:14:43,560 [main           ] INFO  oManualReviewExecutionListener - activitiProcessDefinitionId:orderCoreProcess:1:11
2014-02-02 21:14:43,560 [main           ] INFO  oManualReviewExecutionListener - activitiProcesssInstanceId:30
2014-02-02 21:14:43,560 [main           ] INFO  oManualReviewExecutionListener - get orderReviewRecord:co.nz.pizzashack.data.dto.OrderReviewRecordDto(reviewRecordId:null, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, content:order number is more than 10 but less than 30, reviewResult:pending, createTime:2014-02-02 08:14:43, reviewer:null) 
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_EXECUTION
        (ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PROC_DEF_ID_, ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_,IS_EVENT_SCOPE_, PARENT_ID_, SUPER_EXEC_, SUSPENSION_STATE_, CACHED_ENT_STATE_)     
    values
        (       ?,       1,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_PROCINST
        (         ID_,         PROC_INST_ID_,         BUSINESS_KEY_,         PROC_DEF_ID_,         START_TIME_,         END_TIME_,         DURATION_,         START_USER_ID_,         START_ACT_ID_,         END_ACT_ID_,         SUPER_PROCESS_INSTANCE_ID_,         DELETE_REASON_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_IDENTITYLINK
        (ID_, REV_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_, PROC_DEF_ID_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_IDENTITYLINK
        (ID_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_)     
    values
        (?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_EXECUTION 
    set
        REV_ = ?,
        BUSINESS_KEY_ = ?,
        PROC_DEF_ID_ = ?,
        ACT_ID_ = ?,
        IS_ACTIVE_ = ?,
        IS_CONCURRENT_ = ?,
        IS_SCOPE_ = ?,
        IS_EVENT_SCOPE_ = ?,
        PARENT_ID_ = ?,
        SUPER_EXEC_ = ?,
        SUSPENSION_STATE_ = ?,
        CACHED_ENT_STATE_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_TASK 
    where
        ID_ = ? 
        and REV_ = ?
2014-02-02 21:14:43,663 [main           ] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 09:14:43, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-02-02 21:14:43,678 [main           ] INFO  OrderProcessAccessor           - get OrderProcessDto from flow:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 09:14:43, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)) 
2014-02-02 21:14:43,678 [main           ] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-02 21:14:43,678 [main           ] INFO  ActivitiFacade                 - executionId: 30, processDefinitionId: orderCoreProcess:1:11
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-02 21:14:43,684 [main           ] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-02 21:14:43,688 [main           ] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo start:{}
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-02 21:14:43,690 [main           ] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo end:{}
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
2014-02-02 21:14:43,692 [main           ] INFO  OrderProcessAccessor           - after merge orderProcessModel:co.nz.pizzashack.data.model.OrderProcessModel@6e7c6c3f[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=21:14:43,completeTime=<null>] 
2014-02-02 21:14:43,693 [main           ] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 09:14:43, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)) 
2014-02-02 21:14:43,694 [main           ] INFO  OrderProcessDSImpl             - dataEntry end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 09:14:43, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41))
Hibernate: 
    update
        t_order_process 
    set
        active_process_definition_id=?,
        active_process_instance_id=?,
        complete_time=?,
        create_time=?,
        execution_id=?,
        main_process_definition_id=?,
        main_process_instance_id=?,
        operator_id=?,
        order_id=? 
    where
        order_process_id=?
Hibernate: 
    update
        t_order 
    set
        cust_id=?,
        deliver_time=?,
        order_no=?,
        order_time=?,
        payment_remarks=?,
        payment_status=?,
        quantity=?,
        ship_address=?,
        status=?,
        total_price=? 
    where
        order_id=?
Hibernate: 
    update
        t_order_pizzashack 
    set
        order_id=?,
        pizzashack_id=?,
        qty=?,
        total_price=? 
    where
        order_pizza_id=?
Hibernate: 
    update
        t_order_pizzashack 
    set
        order_id=?,
        pizzashack_id=?,
        qty=?,
        total_price=? 
    where
        order_pizza_id=?
2014-02-02 21:14:43,710 [main           ] INFO  OrderProcessTest               - **************************after dataentry:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 09:14:43, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)) 
2014-02-02 21:14:43,710 [main           ] INFO  OrderProcessQueryDSImpl        - getOrderProcessDtoById start:1 
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_0_,
        orderproce0_.active_process_definition_id as active2_10_0_,
        orderproce0_.active_process_instance_id as active3_10_0_,
        orderproce0_.complete_time as complete4_10_0_,
        orderproce0_.create_time as create5_10_0_,
        orderproce0_.execution_id as execution6_10_0_,
        orderproce0_.main_process_definition_id as main7_10_0_,
        orderproce0_.main_process_instance_id as main8_10_0_,
        orderproce0_.operator_id as operator9_10_0_,
        orderproce0_.order_id as order10_10_0_ 
    from
        t_order_process orderproce0_ 
    where
        orderproce0_.order_process_id=?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-02 21:14:43,714 [main           ] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@6e867e05[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=21:14:43,completeTime=<null>]
2014-02-02 21:14:43,715 [main           ] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@74ad34b8[orderId=1,orderNo=9512f4c4-cebe-4e8d-b899-2365531e6ebb,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-02 21:14:42.985]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-02 21:14:43,723 [main           ] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@463c76f[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-02 21:14:43,724 [main           ] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-02 21:14:43,726 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@1312f417[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-02 21:14:43,731 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-02 21:14:43,731 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@41571bc9[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-02 21:14:43,733 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-02 21:14:43,733 [main           ] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-02 21:14:43,735 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@42d6a92d[userId=4,username=general,password=MTIzNDU2,createTime=21:14:41]
2014-02-02 21:14:43,735 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)
2014-02-02 21:14:43,736 [main           ] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 09:14:43, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41))
2014-02-02 21:14:43,736 [main           ] INFO  OrderProcessQueryDSImpl        - buildPendingActivity start:{}
2014-02-02 21:14:43,736 [main           ] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-02 21:14:43,736 [main           ] INFO  ActivitiFacade                 - executionId: 30, processDefinitionId: orderCoreProcess:1:11
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-02 21:14:43,744 [main           ] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo start:{}
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-02 21:14:43,746 [main           ] INFO  ActivitiFacade                 - getActiviteTaskCandidateAssignmentInfo end:{}
Hibernate: 
    select
        department0_.dept_id as dept1_8_0_,
        department0_.create_date as create2_8_0_,
        department0_.dept_name as dept3_8_0_ 
    from
        t_dept department0_ 
    where
        department0_.dept_id=?
2014-02-02 21:14:43,748 [main           ] INFO  OrderProcessQueryDSImpl        - buildPendingActivity end:{}
2014-02-02 21:14:43,749 [main           ] INFO  OrderProcessQueryDSImpl        - getOrderProcessDtoById end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 09:14:43, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:null), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)) 
2014-02-02 21:14:43,750 [main           ] INFO  OrderProcessTest               - -------------------------------ProcessActivityDto:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:null, candidateUsers:null, candidateGroups:[Order manager], duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:null)
2014-02-02 21:14:43,750 [main           ] INFO  OrderDSImpl                    - getOrderByOrderNo start:9512f4c4-cebe-4e8d-b899-2365531e6ebb 
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_,
        ordermodel0_.cust_id as cust11_4_,
        ordermodel0_.deliver_time as deliver2_4_,
        ordermodel0_.order_no as order3_4_,
        ordermodel0_.order_time as order4_4_,
        ordermodel0_.payment_remarks as payment5_4_,
        ordermodel0_.payment_status as payment6_4_,
        ordermodel0_.quantity as quantity4_,
        ordermodel0_.ship_address as ship8_4_,
        ordermodel0_.status as status4_,
        ordermodel0_.total_price as total10_4_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_no=? limit ?
2014-02-02 21:14:43,756 [main           ] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@70cb13ed[orderId=1,orderNo=9512f4c4-cebe-4e8d-b899-2365531e6ebb,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-02 21:14:42.985]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-02 21:14:43,758 [main           ] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@4ac45fa9[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-02 21:14:43,759 [main           ] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-02 21:14:43,761 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@652a0ce9[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-02 21:14:43,763 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-02 21:14:43,763 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@2bb5c8e2[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-02 21:14:43,765 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-02 21:14:43,766 [main           ] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null)
2014-02-02 21:14:43,766 [main           ] INFO  OrderDSImpl                    - getOrderByOrderNo end:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null) 
2014-02-02 21:14:43,766 [main           ] INFO  OrderProcessTest               - after dataentry latest order from db:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null) 
2014-02-02 21:14:43,767 [main           ] INFO  OrderProcessDSImpl             - claimOrderReviewTask start:9512f4c4-cebe-4e8d-b899-2365531e6ebb
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-02 21:14:43,772 [main           ] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@4c0b788[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=21:14:43,completeTime=<null>] 
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        E.BUSINESS_KEY_ = ?                                                                                 
        and RES.PROC_DEF_ID_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-02 21:14:43,775 [main           ] INFO  OrderProcessDSImpl             - taskId:57
2014-02-02 21:14:43,775 [main           ] INFO  OrderProcessDSImpl             - taskName:Manual underwriting
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                    
        and RES.ASSIGNEE_ = ?                                                                        
        and E.BUSINESS_KEY_ = ?
Hibernate: 
    select
        g.*     
    from
        ACT_ID_GROUP g,
        ACT_ID_MEMBERSHIP membership     
    where
        g.ID_ = membership.GROUP_ID_       
        and membership.USER_ID_ = ?
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                   
    inner join
        ACT_RU_IDENTITYLINK I 
            on I.TASK_ID_ = RES.ID_                                 
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                                                                                                                                                              
        and RES.ASSIGNEE_ is null         
        and I.TYPE_ = 'candidate'         
        and          (
            I.USER_ID_ = ?                                             
            or                                   I.GROUP_ID_ IN             (
                ?             
            )                    
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    insert 
    into
        ACT_RU_IDENTITYLINK
        (ID_, REV_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_, PROC_DEF_ID_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_IDENTITYLINK
        (ID_, TYPE_, USER_ID_, GROUP_ID_, TASK_ID_, PROC_INST_ID_)     
    values
        (?,             ?,             ?,             ?,             ?,             ?)
Hibernate: 
    insert 
    into
        ACT_HI_COMMENT
        (ID_, TYPE_, TIME_, USER_ID_, TASK_ID_, PROC_INST_ID_, ACTION_, MESSAGE_, FULL_MSG_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_TASK      
    SET
        REV_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        PRIORITY_ = ?,
        CREATE_TIME_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        DELEGATION_ = ?,
        EXECUTION_ID_ = ?,
        PROC_DEF_ID_ = ?,
        DESCRIPTION_ = ?,
        DUE_DATE_ = ?,
        SUSPENSION_STATE_ = ?      
    where
        ID_= ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
2014-02-02 21:14:43,816 [main           ] INFO  OrderProcessDSImpl             - claimOrderReviewTask end:{}
2014-02-02 21:14:43,817 [main           ] INFO  OrderProcessTest               - after david claim task:{} 
2014-02-02 21:14:43,817 [main           ] INFO  OrderProcessQueryDSImpl        - getOrderProcessDtoById start:1 
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_0_,
        orderproce0_.active_process_definition_id as active2_10_0_,
        orderproce0_.active_process_instance_id as active3_10_0_,
        orderproce0_.complete_time as complete4_10_0_,
        orderproce0_.create_time as create5_10_0_,
        orderproce0_.execution_id as execution6_10_0_,
        orderproce0_.main_process_definition_id as main7_10_0_,
        orderproce0_.main_process_instance_id as main8_10_0_,
        orderproce0_.operator_id as operator9_10_0_,
        orderproce0_.order_id as order10_10_0_ 
    from
        t_order_process orderproce0_ 
    where
        orderproce0_.order_process_id=?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-02 21:14:43,820 [main           ] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@103b33ad[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=21:14:43,completeTime=<null>]
2014-02-02 21:14:43,821 [main           ] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@19c20ad1[orderId=1,orderNo=9512f4c4-cebe-4e8d-b899-2365531e6ebb,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-02 21:14:42.985]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-02 21:14:43,823 [main           ] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@747fec66[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-02 21:14:43,823 [main           ] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-02 21:14:43,825 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@71d6e165[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-02 21:14:43,827 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-02 21:14:43,827 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@33cc6e99[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-02 21:14:43,828 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-02 21:14:43,828 [main           ] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null)
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-02 21:14:43,829 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@5dadd175[userId=4,username=general,password=MTIzNDU2,createTime=21:14:41]
2014-02-02 21:14:43,830 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)
2014-02-02 21:14:43,831 [main           ] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 09:14:43, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41))
2014-02-02 21:14:43,831 [main           ] INFO  OrderProcessQueryDSImpl        - buildPendingActivity start:{}
2014-02-02 21:14:43,831 [main           ] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-02 21:14:43,831 [main           ] INFO  ActivitiFacade                 - executionId: 30, processDefinitionId: orderCoreProcess:1:11
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-02 21:14:43,839 [main           ] INFO  OrderProcessQueryDSImpl        - buildPendingActivity end:{}
2014-02-02 21:14:43,840 [main           ] INFO  OrderProcessQueryDSImpl        - getOrderProcessDtoById end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 09:14:43, completeTime:null, executionId:30, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:david, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:null), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)) 
2014-02-02 21:14:43,841 [main           ] INFO  OrderProcessTest               - -------------------------------ProcessActivityDto:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:manualunderwriting, name:Manual underwriting, type:userTask, assignee:david, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow5:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:exclusivegateway2, name:Exclusive Gateway, type:exclusiveGateway, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:null)
2014-02-02 21:14:43,842 [main           ] INFO  OrderProcessDSImpl             - manualOrderReview start:co.nz.pizzashack.data.dto.OrderReviewRecordDto(reviewRecordId:null, orderNo:null, content:review passed, reviewResult:accept, createTime:null, reviewer:co.nz.pizzashack.data.dto.StaffDto(staffId:1, individual:co.nz.pizzashack.data.dto.IndividualDto(firstName:David, lastName:Yuan, identity:8934892894, email:david.yuan@gmail.com), createDate:2014-02-01, departments:[co.nz.pizzashack.data.dto.DepartmentDto(deptId:1, deptName:Order manager, createDate:2014-02-01)], role:manager, level:senior, selectedDeptIdsStr:null, selectedDeptNamesStr:null, user:co.nz.pizzashack.data.dto.UserDto(userId:1, username:david, password:MTIzNDU2, createTime:1970-01-01 09:14:41))) 
Hibernate: 
    select
        orderproce0_.order_process_id as order1_10_,
        orderproce0_.active_process_definition_id as active2_10_,
        orderproce0_.active_process_instance_id as active3_10_,
        orderproce0_.complete_time as complete4_10_,
        orderproce0_.create_time as create5_10_,
        orderproce0_.execution_id as execution6_10_,
        orderproce0_.main_process_definition_id as main7_10_,
        orderproce0_.main_process_instance_id as main8_10_,
        orderproce0_.operator_id as operator9_10_,
        orderproce0_.order_id as order10_10_ 
    from
        t_order_process orderproce0_ cross 
    join
        t_order ordermodel1_ 
    where
        orderproce0_.order_id=ordermodel1_.order_id 
        and ordermodel1_.order_no=? limit ?
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_0_,
        ordermodel0_.cust_id as cust11_4_0_,
        ordermodel0_.deliver_time as deliver2_4_0_,
        ordermodel0_.order_no as order3_4_0_,
        ordermodel0_.order_time as order4_4_0_,
        ordermodel0_.payment_remarks as payment5_4_0_,
        ordermodel0_.payment_status as payment6_4_0_,
        ordermodel0_.quantity as quantity4_0_,
        ordermodel0_.ship_address as ship8_4_0_,
        ordermodel0_.status as status4_0_,
        ordermodel0_.total_price as total10_4_0_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_id=?
2014-02-02 21:14:43,846 [main           ] INFO  OrderProcessAccessor           - get OrderProcess from db:co.nz.pizzashack.data.model.OrderProcessModel@c75e921[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=21:14:43,completeTime=<null>] 
Hibernate: 
    select
        usermodel0_.user_id as user1_7_0_,
        usermodel0_.create_time as create2_7_0_,
        usermodel0_.password as password7_0_,
        usermodel0_.user_name as user4_7_0_ 
    from
        t_user usermodel0_ 
    where
        usermodel0_.user_id=?
2014-02-02 21:14:43,847 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@6ce2dfc2[userId=4,username=general,password=MTIzNDU2,createTime=21:14:41]
2014-02-02 21:14:43,847 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)
2014-02-02 21:14:43,847 [main           ] INFO  OrderProcessDSImpl             - doManualOrderReview start:{} 
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        E.BUSINESS_KEY_ = ?                                                                                 
        and RES.PROC_DEF_ID_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        count(distinct RES.ID_)             
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                    
        and RES.ASSIGNEE_ = ?                                                                        
        and E.BUSINESS_KEY_ = ?
2014-02-02 21:14:43,854 [main           ] INFO  OrderProcessConverter          - toDto start:{} co.nz.pizzashack.data.model.OrderProcessModel@c75e921[orderProcessId=1,executionId=30,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=30,activeProcessDefinitionId=orderCoreProcess:1:11,createTime=21:14:43,completeTime=<null>]
2014-02-02 21:14:43,855 [main           ] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@3f081348[orderId=1,orderNo=9512f4c4-cebe-4e8d-b899-2365531e6ebb,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-02 21:14:42.985]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-02 21:14:43,857 [main           ] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@3de8970a[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-02 21:14:43,858 [main           ] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-02 21:14:43,859 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@4c264183[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-02 21:14:43,861 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-02 21:14:43,861 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@63972683[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-02 21:14:43,862 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-02 21:14:43,862 [main           ] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null)
2014-02-02 21:14:43,862 [main           ] INFO  UserConverter                  - toDto start:{} co.nz.pizzashack.data.model.UserModel@6ce2dfc2[userId=4,username=general,password=MTIzNDU2,createTime=21:14:41]
2014-02-02 21:14:43,863 [main           ] INFO  UserConverter                  - toDto end:{} co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)
2014-02-02 21:14:43,863 [main           ] INFO  OrderProcessConverter          - toDto end:{} co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 09:14:43, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41))
2014-02-02 21:14:43,864 [main           ] INFO  OrderProcessDSImpl             - before manual review flow:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 09:14:43, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41))
2014-02-02 21:14:43,864 [main           ] INFO  OrderProcessDSImpl             - reviewResult:accept 
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        PARENT_TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        TASK_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE 
    where
        TASK_ID_ =     ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        distinct T.*     
    from
        ACT_RU_TASK T     
    where
        T.EXECUTION_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_PROCINST 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        *     
    from
        ACT_RU_JOB J     
    where
        J.EXECUTION_ID_ = ?
Hibernate: 
    select
        *      
    from
        ACT_RU_EVENT_SUBSCR     
    where
        (
            EXECUTION_ID_ = ?
        )
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION     
    where
        PARENT_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
2014-02-02 21:14:43,918 [main           ] INFO  OfCoreProcessExecutionListener - after core process, orderProcess:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:30, activeProcessDefinitionId:orderCoreProcess:1:11, createTime:1970-01-01 09:14:43, completeTime:null, executionId:30, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)) 
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_HI_VARINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-02-02 21:14:43,924 [main           ] INFO  ainTransitionExecutionListener - orderMainUserTaskExecutionListener start:{} 
2014-02-02 21:14:43,924 [main           ] INFO  ainTransitionExecutionListener - nextActivity id:billingEntry
2014-02-02 21:14:43,924 [main           ] INFO  ainTransitionExecutionListener - nextActivity name:Billing fill in
2014-02-02 21:14:43,924 [main           ] INFO  ainTransitionExecutionListener - nextActivity type:userTask
2014-02-02 21:14:43,924 [main           ] INFO  ainTransitionExecutionListener - order status:pendingOnBilling 
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_RU_VARIABLE
        (ID_, REV_,     TYPE_, NAME_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, BYTEARRAY_ID_,     DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (     ?,     1,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_VARINST
        (ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_GE_BYTEARRAY
        (ID_, REV_, NAME_, BYTES_, DEPLOYMENT_ID_)     
    values
        (       ?,       1,        ?,        ?,        ?     )
Hibernate: 
    insert 
    into
        ACT_HI_DETAIL
        (ID_, TYPE_, PROC_INST_ID_, EXECUTION_ID_, ACT_INST_ID_, TASK_ID_, NAME_, REV_, VAR_TYPE_, TIME_, BYTEARRAY_ID_, DOUBLE_, LONG_ , TEXT_, TEXT2_)     
    values
        (       ?,       'VariableUpdate',       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?     )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_HI_ACTINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         ACT_ID_,         TASK_ID_,         CALL_PROC_INST_ID_,         ACT_NAME_,         ACT_TYPE_,         ASSIGNEE_,         START_TIME_,         END_TIME_,         DURATION_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    insert 
    into
        ACT_RU_TASK
        (ID_, REV_, NAME_, PARENT_TASK_ID_, DESCRIPTION_, PRIORITY_, CREATE_TIME_, OWNER_,                       ASSIGNEE_, DELEGATION_, EXECUTION_ID_, PROC_INST_ID_, PROC_DEF_ID_, TASK_DEF_KEY_, DUE_DATE_, SUSPENSION_STATE_)     
    values
        (?,             1,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?,             ?            )
Hibernate: 
    insert 
    into
        ACT_HI_TASKINST
        (         ID_,         PROC_DEF_ID_,         PROC_INST_ID_,         EXECUTION_ID_,         NAME_,         PARENT_TASK_ID_,         DESCRIPTION_,         OWNER_,         ASSIGNEE_,         START_TIME_,         CLAIM_TIME_,         END_TIME_,         DURATION_,         DELETE_REASON_,         TASK_DEF_KEY_,         FORM_KEY_,         PRIORITY_,         DUE_DATE_       ) 
    values
        (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?       )
Hibernate: 
    update
        ACT_HI_PROCINST 
    set
        PROC_DEF_ID_ = ?,
        BUSINESS_KEY_ = ?,
        START_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        END_ACT_ID_ = ?,
        DELETE_REASON_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_EXECUTION 
    set
        REV_ = ?,
        BUSINESS_KEY_ = ?,
        PROC_DEF_ID_ = ?,
        ACT_ID_ = ?,
        IS_ACTIVE_ = ?,
        IS_CONCURRENT_ = ?,
        IS_SCOPE_ = ?,
        IS_EVENT_SCOPE_ = ?,
        PARENT_ID_ = ?,
        SUPER_EXEC_ = ?,
        SUSPENSION_STATE_ = ?,
        CACHED_ENT_STATE_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_GE_BYTEARRAY      
    set
        REV_ = ?,
        BYTES_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_VARINST 
    set
        REV_ = ?,
        BYTEARRAY_ID_ = ?,
        DOUBLE_ = ?,
        LONG_ = ?,
        TEXT_ = ?,
        TEXT2_ = ?,
        VAR_TYPE_ = ?     
    where
        ID_ = ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_IDENTITYLINK 
    where
        ID_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_TASK 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_VARIABLE 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_IDENTITYLINK 
    where
        ID_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ? 
        and REV_ = ?
Hibernate: 
    delete 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ? 
        and REV_ = ?
2014-02-02 21:14:43,980 [main           ] INFO  OrderProcessDSImpl             - doManualOrderReview end:{} 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-02 21:14:43,983 [main           ] INFO  OrderProcessDSImpl             - process pending, build pending Activity:{} 
2014-02-02 21:14:43,983 [main           ] INFO  OrderProcessAccessor           - postProcessForFlow start:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnBilling, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:14:43, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)) 
Hibernate: 
    select
        RES.*              
    from
        ACT_HI_PROCINST RES                            
    WHERE
        RES.PROC_DEF_ID_ = ?                              
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_VARIABLE     
    where
        EXECUTION_ID_ = ?     
        and TASK_ID_ is null
Hibernate: 
    select
        * 
    from
        ACT_GE_BYTEARRAY 
    where
        ID_ = ?
2014-02-02 21:14:43,993 [main           ] INFO  OrderProcessAccessor           - get OrderProcessDto from flow:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:14:43, completeTime:null, executionId:16, pendingActivity:null, operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)) 
2014-02-02 21:14:43,993 [main           ] INFO  ActivitiFacade                 - checkExecutionActivity start:{}
2014-02-02 21:14:43,993 [main           ] INFO  ActivitiFacade                 - executionId: 16, processDefinitionId: orderlocalProcess:1:15
Hibernate: 
    select
        distinct RES.* ,
        P.KEY_ as ProcessDefinitionKey,
        P.ID_ as ProcessDefinitionId             
    from
        ACT_RU_EXECUTION RES     
    inner join
        ACT_RE_PROCDEF P 
            on RES.PROC_DEF_ID_ = P.ID_                              
    WHERE
        RES.ID_ = ?                                     
        and RES.BUSINESS_KEY_ = ?               
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
2014-02-02 21:14:43,999 [main           ] INFO  OrderProcessAccessor           - pending activity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)])
Hibernate: 
    select
        distinct RES.*              
    from
        ACT_RU_TASK RES                                       
    inner join
        ACT_RU_EXECUTION E 
            on RES.PROC_INST_ID_ = E.ID_            
    WHERE
        RES.NAME_ = ?                                                                                                                            
        and E.BUSINESS_KEY_ = ?                
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
2014-02-02 21:14:44,002 [main           ] INFO  OrderProcessAccessor           - assign operator[4] to task[Billing fill in]
Hibernate: 
    select
        * 
    from
        ACT_RU_TASK 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_HI_TASKINST 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_EXECUTION 
    where
        ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RU_IDENTITYLINK 
    where
        PROC_INST_ID_ = ?
Hibernate: 
    select
        * 
    from
        ACT_RE_PROCDEF 
    where
        ID_ = ?
Hibernate: 
    select
        RES.*            
    from
        ACT_HI_ACTINST RES      
    WHERE
        RES.EXECUTION_ID_ = ?                              
        and RES.ACT_ID_ = ?                                            
        and RES.END_TIME_ is null           
    order by
        RES.ID_ asc      LIMIT ? OFFSET ?
Hibernate: 
    update
        ACT_HI_ACTINST 
    set
        EXECUTION_ID_ = ?,
        ASSIGNEE_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?     
    where
        ID_ = ?
Hibernate: 
    update
        ACT_RU_TASK      
    SET
        REV_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        PRIORITY_ = ?,
        CREATE_TIME_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        DELEGATION_ = ?,
        EXECUTION_ID_ = ?,
        PROC_DEF_ID_ = ?,
        DESCRIPTION_ = ?,
        DUE_DATE_ = ?,
        SUSPENSION_STATE_ = ?      
    where
        ID_= ?       
        and REV_ = ?
Hibernate: 
    update
        ACT_HI_TASKINST 
    set
        EXECUTION_ID_ = ?,
        NAME_ = ?,
        PARENT_TASK_ID_ = ?,
        DESCRIPTION_ = ?,
        OWNER_ = ?,
        ASSIGNEE_ = ?,
        CLAIM_TIME_ = ?,
        END_TIME_ = ?,
        DURATION_ = ?,
        DELETE_REASON_ = ?,
        TASK_DEF_KEY_ = ?,
        FORM_KEY_ = ?,
        PRIORITY_ = ?,
        DUE_DATE_ = ?     
    where
        ID_ = ?
2014-02-02 21:14:44,018 [main           ] INFO  OrderProcessAccessor           - after merge orderProcessModel:co.nz.pizzashack.data.model.OrderProcessModel@c75e921[orderProcessId=1,executionId=16,mainProcessInstanceId=16,mainProcessDefinitionId=orderlocalProcess:1:15,activeProcesssInstanceId=16,activeProcessDefinitionId=orderlocalProcess:1:15,createTime=21:14:43,completeTime=<null>] 
2014-02-02 21:14:44,020 [main           ] INFO  OrderProcessAccessor           - postProcessForFlow end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:14:43, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)) 
2014-02-02 21:14:44,021 [main           ] INFO  OrderProcessDSImpl             - manualOrderReview end:co.nz.pizzashack.data.dto.OrderProcessDto(orderProcessId:1, order:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null), mainProcessInstanceId:16, mainProcessDefinitionId:orderlocalProcess:1:15, activeProcesssInstanceId:16, activeProcessDefinitionId:orderlocalProcess:1:15, createTime:1970-01-01 09:14:43, completeTime:null, executionId:16, pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]), operator:co.nz.pizzashack.data.dto.UserDto(userId:4, username:general, password:MTIzNDU2, createTime:1970-01-01 09:14:41)) 
Hibernate: 
    update
        t_order_process 
    set
        active_process_definition_id=?,
        active_process_instance_id=?,
        complete_time=?,
        create_time=?,
        execution_id=?,
        main_process_definition_id=?,
        main_process_instance_id=?,
        operator_id=?,
        order_id=? 
    where
        order_process_id=?
2014-02-02 21:14:44,024 [main           ] INFO  OrderProcessTest               - after manul underwriting pendingActivity:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:general, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:[flow11:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingCallactivity, name:Billing, type:callActivity, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)], incomeActivityMap:[flow4:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow15:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null), flow16:co.nz.pizzashack.data.dto.ProcessActivityDto(activityId:billingEntry, name:Billing fill in, type:userTask, assignee:null, candidateUsers:null, candidateGroups:null, duration:null, startTime:null, endTime:null, outgoingActivityMap:null, incomeActivityMap:null)]) 
2014-02-02 21:14:44,025 [main           ] INFO  OrderDSImpl                    - getOrderByOrderNo start:9512f4c4-cebe-4e8d-b899-2365531e6ebb 
Hibernate: 
    select
        ordermodel0_.order_id as order1_4_,
        ordermodel0_.cust_id as cust11_4_,
        ordermodel0_.deliver_time as deliver2_4_,
        ordermodel0_.order_no as order3_4_,
        ordermodel0_.order_time as order4_4_,
        ordermodel0_.payment_remarks as payment5_4_,
        ordermodel0_.payment_status as payment6_4_,
        ordermodel0_.quantity as quantity4_,
        ordermodel0_.ship_address as ship8_4_,
        ordermodel0_.status as status4_,
        ordermodel0_.total_price as total10_4_ 
    from
        t_order ordermodel0_ 
    where
        ordermodel0_.order_no=? limit ?
2014-02-02 21:14:44,027 [main           ] INFO  OrderConverter                 - toDto start:{} co.nz.pizzashack.data.model.OrderModel@1ab641a4[orderId=1,orderNo=9512f4c4-cebe-4e8d-b899-2365531e6ebb,quantity=14,status=3,paymentStatus=0,deliverTime=<null>,totalPrice=390.00,orderTime=2014-02-02 21:14:42.985]
Hibernate: 
    select
        customermo0_.cust_id as cust1_2_0_,
        customermo0_.address as address2_0_,
        customermo0_.credits as credits2_0_,
        customermo0_.customer_name as customer4_2_0_,
        customermo0_.email as email2_0_ 
    from
        t_customer customermo0_ 
    where
        customermo0_.cust_id=?
2014-02-02 21:14:44,029 [main           ] INFO  CustomerConverter              - toDto start:{} co.nz.pizzashack.data.model.CustomerModel@4afa24f9[custId=1,customerName=david,email=david.yuan124@gmail.com,credits=<null>,address=<null>]
2014-02-02 21:14:44,029 [main           ] INFO  CustomerConverter              - toDto end:{} co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze)
Hibernate: 
    select
        orderpizza0_.order_id as order4_4_1_,
        orderpizza0_.order_pizza_id as order1_1_,
        orderpizza0_.order_pizza_id as order1_11_0_,
        orderpizza0_.order_id as order4_11_0_,
        orderpizza0_.pizzashack_id as pizzashack5_11_0_,
        orderpizza0_.qty as qty11_0_,
        orderpizza0_.total_price as total3_11_0_ 
    from
        t_order_pizzashack orderpizza0_ 
    where
        orderpizza0_.order_id=?
2014-02-02 21:14:44,031 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@7d8ae793[orderPizzashackId=1,totalPrice=140.00,qty=4]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-02 21:14:44,032 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00)
2014-02-02 21:14:44,032 [main           ] INFO  OrderDetailConverter           - toDto start:{} co.nz.pizzashack.data.model.OrderPizzashackModel@2a69a449[orderPizzashackId=2,totalPrice=250.00,qty=10]
Hibernate: 
    select
        pizzashack0_.pizzashack_id as pizzashack1_5_0_,
        pizzashack0_.description as descript2_5_0_,
        pizzashack0_.icon as icon5_0_,
        pizzashack0_.name as name5_0_,
        pizzashack0_.price as price5_0_ 
    from
        t_pizzashack pizzashack0_ 
    where
        pizzashack0_.pizzashack_id=?
2014-02-02 21:14:44,033 [main           ] INFO  OrderDetailConverter           - toDto end:{} co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)
2014-02-02 21:14:44,033 [main           ] INFO  OrderConverter                 - toDto end:{} co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null)
2014-02-02 21:14:44,034 [main           ] INFO  OrderDSImpl                    - getOrderByOrderNo end:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null) 
2014-02-02 21:14:44,034 [main           ] INFO  OrderProcessTest               - ********************after review:co.nz.pizzashack.data.dto.OrderDto(orderId:1, orderNo:9512f4c4-cebe-4e8d-b899-2365531e6ebb, orderDetailsSet:[co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:1, pizzaName:Garden Fresh, qty:4, totalPrice:140.00), co.nz.pizzashack.data.dto.OrderDetailsDto(orderDetailId:2, pizzaName:Chicken Parmesan, qty:10, totalPrice:250.00)], qty:14, totalPrice:390.00, customer:co.nz.pizzashack.data.dto.CustomerDto(custId:1, customerName:david, customerEmail:david.yuan124@gmail.com, level:bronze), address:25 mavon downs, status:pendingOnReview, orderTime:2014-02-02 08:14:42, deliverTime:null) 
Tests run: 4, Failures: 0, Errors: 0, Skipped: 3, Time elapsed: 11.37 sec

Results :

Tests run: 4, Failures: 0, Errors: 0, Skipped: 3

2014-02-02 21:14:44,050 [Thread-8       ] INFO  GenericWebApplicationContext   - Closing org.springframework.web.context.support.GenericWebApplicationContext@7f500082: startup date [Sun Feb 02 21:14:32 NZDT 2014]; root of context hierarchy
2014-02-02 21:14:44,051 [Thread-8       ] INFO  BusApplicationContext          - Closing org.apache.cxf.bus.spring.BusApplicationContext@34f63ef5: startup date [Sun Feb 02 21:14:40 NZDT 2014]; parent: org.springframework.web.context.support.GenericWebApplicationContext@7f500082
2014-02-02 21:14:44,051 [Thread-8       ] INFO  DefaultListableBeanFactory     - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@284dab12: defining beans []; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@6c2d4e47
2014-02-02 21:14:44,052 [Thread-8       ] INFO  DefaultListableBeanFactory     - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6c2d4e47: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,applicationConfiguration,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,viewConfiguration,webMvcContextConfiguration,logoutController,loginController,indexController,userController,adminIndexController,departmentController,orderController,orderQueryController,staffController,billingProcessRespTransformer,billingProcessReqTransformer,orderProcessFormatTransformer,billingVariableTransformer,billingResponseMergeProcessor,billingFormatTransformer,billingInboundProcessor,orderDuplicatedReqProcessor,orderRequestProcessor,billingProcessRoute,billingInboundWsRoute,orderProcessRoute,sleepBean,pizzashackAPIImpl,camelSpringConfig,camelJdbcIdempotentConfig,camelCxfConfig,orderProcessDSImpl,customerDSImpl,workflowDSImpl,pizzashackDSImpl,userDSImpl,orderProcessAccessor,orderProcessQueryDSImpl,staffDSImpl,orderDSImpl,departmentDSImpl,initialDataConfig,pizzashackCaculator,emailExecutionListener,endExecutionListener,caculationMergeExecutionListener,orderMainTransitionExecutionListener,toManualReviewExecutionListener,outOfBillingProcessExecutionListener,outOfCoreProcessExecutionListener,billingRespExecutionListener,customerConverter,orderProcessConverter,staffConverter,userConverter,departmentConverter,workflowConverter,orderReviewRecordConverter,orderConverter,activityDiscountRateConverter,orderDetailConverter,pizzashackDataInitialConfiguration,pizzashackItemBuilder,infrastructureContextConfiguration,activitiFacade,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0,org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0,staffRepository,orderPizzashackRepository,userRepository,staffDepartmentRepository,departmentRepository,customerRepository,orderReviewRecordRepository,orderRepository,orderRequestHistoryRepository,pizzashackRepository,activityDiscountRateRepository,orderProcessRepository,workflowRepository,viewResolver,messageSource,org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration,requestMappingHandlerMapping,mvcContentNegotiationManager,viewControllerHandlerMapping,beanNameHandlerMapping,resourceHandlerMapping,defaultServletHandlerMapping,requestMappingHandlerAdapter,mvcConversionService,mvcValidator,httpRequestHandlerAdapter,simpleControllerHandlerAdapter,handlerExceptionResolver,sessionAttributeProcessor,localeChangeInterceptor,localeResolver,simpleMappingExceptionResolver,multipartResolver,activeMQConnectionFactory,pooledConnectionFactory,jmsComponent,jmsTransactionManager,camelBeanPostProcessor,camelContext,custThreadPoolProfile,sqlComponent,orderJdbcMessageIdRepository,billingInboundEndpoint,loggingOutInterceptor,cxf,org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor,org.apache.cxf.bus.spring.Jsr250BeanPostProcessor,org.apache.cxf.bus.spring.BusExtensionPostProcessor,org.apache.cxf.binding.soap.SoapBindingFactory,org.apache.cxf.binding.soap.SoapTransportFactory,org.apache.cxf.binding.soap.customEditorConfigurer,setupWorkflowData,setupData,org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration,org.springframework.transaction.config.internalTransactionAdvisor,transactionAttributeSource,transactionInterceptor,dataSource,transactionManager,entityManagerFactory,placeholderConfig,processEngineConfiguration,processEngine,repositoryService,runtimeService,taskService,historyService,managementService,identityService]; root of factory hierarchy
2014-02-02 21:14:44,052 [Thread-8       ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) is shutting down
2014-02-02 21:14:44,053 [Thread-8       ] INFO  DefaultShutdownStrategy        - Starting to graceful shutdown 8 routes (timeout 300 seconds)
2014-02-02 21:14:44,056 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: cxf:bean:billingInboundEndpoint shutdown complete, was consuming from: Endpoint[cxf://bean:billingInboundEndpoint]
2014-02-02 21:14:44,056 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:orderRegularProcess shutdown complete, was consuming from: Endpoint[direct://orderRegularProcess]
2014-02-02 21:14:44,056 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:orderDuplicatedProcess shutdown complete, was consuming from: Endpoint[direct://orderDuplicatedProcess]
2014-02-02 21:14:44,151 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: orderProcessRoute shutdown complete, was consuming from: Endpoint[jms://queue:pizzashackOrderInbound]
2014-02-02 21:14:44,151 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: route1 shutdown complete, was consuming from: Endpoint[direct://doBillingIntegration]
2014-02-02 21:14:44,152 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:receiveBillingQueue shutdown complete, was consuming from: Endpoint[direct://receiveBillingQueue]
2014-02-02 21:14:44,152 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: direct:billingIntegration shutdown complete, was consuming from: Endpoint[direct://billingIntegration]
2014-02-02 21:14:44,152 [ - ShutdownTask] INFO  DefaultShutdownStrategy        - Route: activitiBillingProcess shutdown complete, was consuming from: Endpoint[activiti://orderBillingProcess:billingIntegration?copyVariablesToBodyAsMap=true]
2014-02-02 21:14:44,152 [Thread-8       ] INFO  DefaultShutdownStrategy        - Graceful shutdown of 8 routes completed in 0 seconds
2014-02-02 21:14:44,154 [Thread-8       ] INFO  CxfEndpoint                    - shutdown the bus ... org.apache.cxf.bus.spring.SpringBus@152bce71
2014-02-02 21:14:44,163 [Thread-8       ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) uptime 4.277 seconds
2014-02-02 21:14:44,163 [Thread-8       ] INFO  SpringCamelContext             - Apache Camel 2.12.2 (CamelContext: camel-1) is shutdown in 0.111 seconds
2014-02-02 21:14:44,203 [Thread-8       ] INFO  tainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2014-02-02 21:14:44,204 [Thread-8       ] INFO  SchemaExport                   - HHH000227: Running hbm2ddl schema export
Hibernate: 
    alter table t_activity_discount_rate 
        drop constraint FKA400C193698FCC4
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE11193A98D65
Hibernate: 
    alter table t_dept_staff 
        drop constraint FKBC8AE111A27DDA4A
Hibernate: 
    alter table t_order 
        drop constraint FKA0C0C3C3E11F4FCB
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB0883698FCC4
Hibernate: 
    alter table t_order_pizzashack 
        drop constraint FKE8ACB088BBCB676E
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F33E99148D
Hibernate: 
    alter table t_order_process 
        drop constraint FK6B8B15F3BBCB676E
Hibernate: 
    alter table t_order_request_history 
        drop constraint FK5A6B268BBCB676E
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CA6130105
Hibernate: 
    alter table t_order_review_record 
        drop constraint FKFB7A439CBBCB676E
Hibernate: 
    alter table t_staff 
        drop constraint FKA0F9FF552DC32C06
Hibernate: 
    drop table t_activity_discount_rate if exists
Hibernate: 
    drop table t_customer if exists
Hibernate: 
    drop table t_dept if exists
Hibernate: 
    drop table t_dept_staff if exists
Hibernate: 
    drop table t_order if exists
Hibernate: 
    drop table t_order_pizzashack if exists
Hibernate: 
    drop table t_order_process if exists
Hibernate: 
    drop table t_order_request_history if exists
Hibernate: 
    drop table t_order_review_record if exists
Hibernate: 
    drop table t_pizzashack if exists
Hibernate: 
    drop table t_staff if exists
Hibernate: 
    drop table t_user if exists
Hibernate: 
    drop table t_workflow if exists
2014-02-02 21:14:44,226 [Thread-8       ] INFO  SchemaExport                   - HHH000230: Schema export complete
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 14.922s
[INFO] Finished at: Sun Feb 02 21:14:44 NZDT 2014
[INFO] Final Memory: 25M/620M
[INFO] ------------------------------------------------------------------------
]0;david@david: ~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-webdavid@david:~/study/activiti5/code/github/pizzashack-order/pizzashack-distributor/pizzashack-distributor-web$ 